
PlaterDB = {
	["profileKeys"] = {
		["–ì–∞—Ä–æ—Ç—ã—á - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Huntard",
		["–ü–∞–∫–æ—Å—Ç–Ω–∏–∫ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ù–∞—Ä–∫–æ–≤–µ–¥ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–°—Ç–µ–ø–∞–Ω–æ–≤–∏—á - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ö–æ—Å—Ç–µ—Ç—Ä—è—Å - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–í–æ–ª—è–∞–Ω—Ä–æ–ª - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ö–∞—Å–∫–∞–¥—ë—Ä - –Ø—Å–µ–Ω–µ–≤—ã–π –ª–µ—Å"] = "Default",
		["Biglilpump - Argent Dawn"] = "Default",
		["–°–∏—Å—è–Ω—ã—á - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ú—Ä–∞—á–Ω—ã–π–æ–∫—É–Ω—å - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–ú–¥–º—â–∏–∫ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–í–æ—Ä–±–µ–ª—å—è - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–°—Ç–∞—Ä–∞—è—Å–∞—Å–∞–ª–∫ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–≠–ª—è–º - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "pltr",
		["–ù–∞—Ç–∞–Ω–∫–µ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "pltr",
		["–õ–∏–Ω—É–∫—Å–æ–∏–¥ - –Ø—Å–µ–Ω–µ–≤—ã–π –ª–µ—Å"] = "Default",
		["–î—ç–Ω–∏—ç–ª—å - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–°–∏–Ω–∏–π–¥–∏–ø–ª–æ–º - –ì–æ—Ä–¥—É–Ω–Ω–∏"] = "Default",
		["–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "pltr",
		["–ê–±–¥—É–ª–æ–≤–µ—Ä–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "pltr",
		["–¢–µ—Å—Ç–≥–µ–π–º–ø–∞–¥–∞ - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Default",
		["–û—Ç–∂–∏–≥–∞–π - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = "Feral",
	},
	["profiles"] = {
		["HUNTER"] = {
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Hide Neutral Units"] = 1,
				["Jaina Encounter"] = 6,
				["Aura Reorder"] = 2,
				["Cast Bar Icon Config"] = 1,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Attacking Specific Unit"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Blockade Encounter"] = 1,
			},
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 135996,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 399,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 391,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["ScriptType"] = 2,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["ScriptType"] = 2,
					["Icon"] = 2175503,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 574,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["ScriptType"] = 2,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 376,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["ScriptType"] = 2,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 106,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["PlaterCore"] = 1,
					["Name"] = "Color Change [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 135024,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Border Color [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 133006,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["PlaterCore"] = 1,
					["Name"] = "UnitPower [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 136048,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["ScriptType"] = 2,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["ScriptType"] = 1,
					["Icon"] = 1029718,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["ScriptType"] = 3,
					["Icon"] = 841383,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [15]
			},
			["aura2_x_offset"] = 0,
			["update_throttle"] = 0.2499999850988388,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["Time"] = 1554138845,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["Name"] = "Stormwall Encounter [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Name"] = "Jaina Encounter [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2446016,
					["Name"] = "M+ Bwonsamdi Reaping",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["Time"] = 1596670932,
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["semver"] = "",
				}, -- [15]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["resources"] = {
				["scale"] = 0.7999999523162842,
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["captured_spells"] = {
				[281209] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß–µ–ª—é—Å—Ç–µ–ª–æ–º–∫–∞",
					["npcID"] = 0,
				},
				[260072] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[268954] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[210320] = {
					["source"] = "–ó–∞—Ñ—Ä–æ–¥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272733] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[268955] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[268956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–Ω–µ–≤–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[20473] = {
					["source"] = "–ó–∞—Ñ—Ä–æ–¥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303344] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–Ω–µ–∑–∏—Å–º—Ä—Ä",
					["npcID"] = 0,
				},
				[287280] = {
					["source"] = "–ó–∞—Ñ—Ä–æ–¥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Å—Ç—Ä–µ–±–ª—è–ª–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[62574] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—é—é—É—Ä–∏",
					["npcID"] = 0,
				},
				[288613] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[251836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ü–ø–Ω–µ–∞–¥–µ–∫–≤–∞—Ç",
					["npcID"] = 0,
				},
				[298837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—ç—Ä–¥–∂–∏—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[267331] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô—ç–Ω–Ω–∏—Ñ—ã—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–Ω—Ç–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[269279] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[56641] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[257044] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[280170] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[317065] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–ª–ª—É–∏–Ω—ç–ª—å",
					["npcID"] = 0,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∏—Ä–∏–Ω–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[781] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ª–∫–æ–±–æ—Ä–æ–≤-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[118922] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–æ–±–æ—Ä–æ–≤-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[225787] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317859] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–±–ª–µ—Ä—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–æ–ª–∞–Ω–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[315161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[274447] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[267330] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[190784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∏–Ω–µ–∑–∏—Å–º—Ä—Ä",
					["npcID"] = 0,
				},
				[235313] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–¥–µ—Å–Ω–∏–∫–∞–±—Ü-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[271711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[216413] = {
					["source"] = "–ó–∞—Ñ—Ä–æ–¥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ä–∫–≤–∞—Ä—Ä–∏–æ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—ç—Ä–¥–∂–∏—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∏–º—Å—Ç—Ä–∞–π–∫-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[186401] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[292463] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[287790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–æ—Ä–∏–Ω—ç—è",
					["npcID"] = 0,
				},
				[268905] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®—ç—Ä–∏–ª–ª",
					["npcID"] = 0,
				},
				[297162] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[280653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[299664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∏–∫—Ç–∏–≤–Ω—ã–π",
					["npcID"] = 0,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Å—Ç—Ä–µ–±–ª—è–ª–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[256778] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—Ä–∏–ª–ª–∏–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[280654] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–±–ª–µ—Ä—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268907] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–∏–∫—Ç–∏–≤–Ω—ã–π",
					["npcID"] = 0,
				},
				[195457] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®—ç—Ä–∏–ª–ª",
					["npcID"] = 0,
				},
				[257620] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[267327] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[221886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–Ω–µ–∑–∏—Å–º—Ä—Ä",
					["npcID"] = 0,
				},
				[318216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[297039] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304056] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–æ–ª–∞–Ω–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[269576] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[185358] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[85222] = {
					["source"] = "–ó–∞—Ñ—Ä–æ–¥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[319237] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–Ω–µ–∑–∏—Å–º—Ä—Ä",
					["npcID"] = 0,
				},
				[264878] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[297168] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[267329] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–ª–ª—É–∏–Ω—ç–ª—å",
					["npcID"] = 0,
				},
				[318219] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[257622] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[192106] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ü–ø–Ω–µ–∞–¥–µ–∫–≤–∞—Ç",
					["npcID"] = 0,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–Ω–Ω–µ–≤–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[257415] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ü–ø–Ω–µ–∞–¥–µ–∫–≤–∞—Ç",
					["npcID"] = 0,
				},
				[267325] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[260242] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[209261] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–µ—Ä–¥–∏—Å—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[308188] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ—á–∏–∫–ø–æ—Ç–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[267326] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[295842] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Å—Ç—Ä–µ–±–ª—è–ª–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1459] = {
					["source"] = "–õ–∏–ª–∫–∏—Ä–∏–ª–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—É—Ä–∏–∫–∞—Ç–∏–∫-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[270661] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19434] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[285720] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–ª—Ç–∞—Ä–∏–æ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—É—Ä–∂–º–∞–Ω—å—è–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[164273] = {
					["source"] = "–í–æ–≤–∞–º–±—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260069] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ì–æ–Ω–∫–∞",
					["npcID"] = 131809,
				},
				[315176] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[3408] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—É—Ä–∏–∫–∞—Ç–∏–∫-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[297412] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ—É–ª–∏—à–∏—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–æ—Ä–∏–Ω—ç—è",
					["npcID"] = 0,
				},
				[260070] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[57723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–æ—É–ª–∏—à–∏—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[108211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[317020] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞—Ä–µ–±—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[198793] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–∞–π–≥–µ–ª—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[292361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–ª–ª–∏–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["number_region_first_run"] = true,
			["hover_highlight_alpha"] = 0.2999999821186066,
			["patch_version"] = 12,
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Unit Power"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Color Change"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateGlobalScale"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowSelf"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["target_shady_alpha"] = 0.5999999642372131,
			["aura2_y_offset"] = 5,
			["login_counter"] = 2,
			["aura_alpha"] = 0.8499999642372131,
			["health_selection_overlay_alpha"] = 0.09999999403953552,
			["pet_width_scale"] = 0.949999988079071,
			["plate_config"] = {
				["enemynpc"] = {
					["level_text_alpha"] = 0.2999999821186066,
				},
				["enemyplayer"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 11,
				},
				["friendlyplayer"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 9,
				},
				["friendlynpc"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 9,
				},
			},
			["ui_parent_scale_tune"] = 1,
			["aura_y_offset"] = 5,
		},
		["–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä - –†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = {
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Unit Power"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Color Change"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["url"] = "",
					["Icon"] = 135996,
					["Enabled"] = true,
					["Revision"] = 156,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Unit - Important [Plater]",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 399,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 391,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 324,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 232,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 574,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 376,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["url"] = "",
					["Icon"] = 135024,
					["Enabled"] = true,
					["Revision"] = 59,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["version"] = -1,
					["Name"] = "Color Change [Plater]",
					["NpcNames"] = {
						"141851", -- [1]
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 157,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["url"] = "",
					["Icon"] = 133006,
					["Enabled"] = false,
					["Revision"] = 45,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Aura - Border Color [Plater]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 131,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["version"] = -1,
					["Name"] = "UnitPower [Plater]",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 190,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 194,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
				}, -- [15]
			},
			["aura2_x_offset"] = 0,
			["update_throttle"] = 0.2499999850988388,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["version"] = -1,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Name"] = "Texture Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["version"] = -1,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1596670932,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Time"] = 1554138845,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["version"] = -1,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["version"] = -1,
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Time"] = 1596791840,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 574574,
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["version"] = -1,
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["version"] = -1,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 295,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["version"] = -1,
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Time"] = 1596741775,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["cast_statusbar_fadeout_time"] = 0.4999999701976776,
			["resources"] = {
				["scale"] = 0.7999999523162842,
			},
			["health_animation_time_dilatation"] = 2.619999885559082,
			["captured_spells"] = {
				[186401] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Ä–æ–≥–æ–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[212061] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–±–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏",
					["npcID"] = 129525,
				},
			},
			["patch_version"] = 12,
			["target_shady_alpha"] = 0.5999999642372131,
			["hover_highlight_alpha"] = 0.2999999821186066,
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 1,
				["Aura Reorder"] = 2,
				["Hide Neutral Units"] = 1,
				["Combo Points"] = 3,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 1,
			},
			["minor_height_scale"] = 0.949999988079071,
			["cast_statusbar_spark_alpha"] = 0.8299999833106995,
			["ui_parent_scale_tune"] = 1,
			["aura2_y_offset"] = 5,
			["health_selection_overlay_alpha"] = 0.09999999403953552,
			["aura_alpha"] = 0.8499999642372131,
			["pet_height_scale"] = 0.949999988079071,
			["pet_width_scale"] = 0.949999988079071,
			["plate_config"] = {
				["enemynpc"] = {
					["level_text_alpha"] = 0.2999999821186066,
				},
				["enemyplayer"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 11,
				},
				["friendlyplayer"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 9,
				},
				["friendlynpc"] = {
					["level_text_alpha"] = 0.2999999821186066,
					["actorname_text_spacing"] = 9,
				},
			},
			["minor_width_scale"] = 0.8999999761581421,
			["aura_y_offset"] = 5,
		},
		["Feral"] = {
			["target_shady_combat_only"] = false,
			["aura_breakline_space"] = 7,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1594834747,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Revision"] = 162,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Prio"] = 99,
					["Name"] = "Unit - Important [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1569946350,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Revision"] = 404,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1569802082,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Revision"] = 389,
					["Author"] = "BombadÔøΩo-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1569802081,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Revision"] = 325,
					["Author"] = "BombadÔøΩo-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1569946378,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Revision"] = 235,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1569802082,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Revision"] = 568,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Revision"] = 376,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Enabled"] = true,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1569802082,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 108,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1570477405,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 60,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["NpcNames"] = {
						"141851", -- [1]
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1594834802,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 160,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Prio"] = 99,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						106830, -- [1]
						1822, -- [2]
						1079, -- [3]
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1569429992,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Revision"] = 48,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["SpellIds"] = {
					},
					["Icon"] = 133006,
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 131,
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["Enabled"] = true,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["ScriptType"] = 3,
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Revision"] = 171,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["Enabled"] = true,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1569802080,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Revision"] = 191,
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1570477389,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Revision"] = 196,
					["Author"] = "Tecno-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Fixate On You [Plater]",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = true --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.ShowRaidMarker = true\n    envTable.RaidMarkerToUse = 9 -- 1 = Star; 2 = Circle; 3 = diamond; 4 = triangle; 5 = moon; 6 = square; 7 = X; 8 = skull\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    if (envTable.ShowRaidMarker) then\n        --unitFrame.PlaterRaidTargetFrame:SetRaidTarget (unitframe, envTable.RaidMarkerToUse)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1569802084,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = true --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.ShowRaidMarker = true\n    envTable.RaidMarkerToUse = 9 -- 1 = Star; 2 = Circle; 3 = diamond; 4 = triangle; 5 = moon; 6 = square; 7 = X; 8 = skull\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Revision"] = 350,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    if (envTable.ShowRaidMarker) then\n        --unitFrame.PlaterRaidTargetFrame:SetRaidTarget (unitframe, envTable.RaidMarkerToUse)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Unit - Nazjatar Algans",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"152549", -- [1]
						"151166", -- [2]
						"150834", -- [3]
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 5, -- number of lines. Defaul value is 8;\n        frequency = 0., -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 64, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = true, -- set to true to create border under lines;\n    }\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopGlow(self.Cooldown)\n    self.glowStarted = false\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopGlow(self.Cooldown)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1594834637,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 5, -- number of lines. Defaul value is 8;\n        frequency = 0., -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 64, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = true, -- set to true to create border under lines;\n    }\n    \nend\n\n\n",
					["Icon"] = 413591,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopGlow(self.Cooldown)\n    self.glowStarted = false\n    \nend\n\n\n",
					["Revision"] = 158,
					["Options"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopGlow(self.Cooldown)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Name"] = "Pandemic Red Border Feral",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						155722, -- [1]
						1079, -- [2]
						106830, -- [3]
					},
					["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = true --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.ShowRaidMarker = true\n    envTable.RaidMarkerToUse = 9 -- 1 = Star; 2 = Circle; 3 = diamond; 4 = triangle; 5 = moon; 6 = square; 7 = X; 8 = skull\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    if (envTable.ShowRaidMarker) then\n        --unitFrame.PlaterRaidTargetFrame:SetRaidTarget (unitframe, envTable.RaidMarkerToUse)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1570146355,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = true --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.ShowRaidMarker = true\n    envTable.RaidMarkerToUse = 9 -- 1 = Star; 2 = Circle; 3 = diamond; 4 = triangle; 5 = moon; 6 = square; 7 = X; 8 = skull\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Revision"] = 349,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    if (envTable.ShowRaidMarker) then\n        --unitFrame.PlaterRaidTargetFrame:SetRaidTarget (unitframe, envTable.RaidMarkerToUse)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Unit - Nazjatar Algans",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"152549", -- [1]
						"151166", -- [2]
						"150834", -- [3]
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliThrashTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Thrash\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 4.5 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliThrashTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Thrash\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 4.5 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Time"] = 1570476778,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["Icon"] = 451161,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Revision"] = 98,
					["Author"] = "Polihayse-Area 52",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliThrashTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Thrash\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 4.5 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliThrashTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Thrash\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 4.5 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Name"] = "Thrash Snapshot",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						106830, -- [1]
					},
					["Desc"] = "Gets snapshot info from Poli Feral Dot Tracker WeakAuras group",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliRipTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Rip\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 7.2 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliRipTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Rip\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 7.2 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Time"] = 1570476786,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["Icon"] = 132152,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Revision"] = 93,
					["Author"] = "Polihayse-Area 52",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliRipTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Rip\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 7.2 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local snapshot = _G[\"WeakAuras\"].PoliRipTargets[UnitGUID(unitId)]\n    if snapshot then   \n        local r, g, b, a = envTable.getSnapshotColor(snapshot)\n        self:SetBackdropBorderColor(r, g, b, a)\n    end\n    \n    local rakeExpiration = select(6, AuraUtil.FindAuraByName(\"Rip\", unitId, \"HARMFUL\"))\n    if rakeExpiration - GetTime() < 7.2 then\n        self:SetAlpha(.4)\n    else\n        self:SetAlpha(1)\n    end\nend",
					["Name"] = "Rip Snapshot",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						1079, -- [1]
					},
					["Desc"] = "Gets snapshot info from Poli Feral Dot Tracker WeakAuras group",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    if _G[\"WeakAuras\"].PoliRakeTargets then\n        \n        local snapshot = _G[\"WeakAuras\"].PoliRakeTargets[UnitGUID(unitId)]\n        local empowered = _G[\"WeakAuras\"].PoliEmpoweredRakeTargets[UnitGUID(unitId)]\n        \n        if snapshot then   \n            local r, g, b, a = envTable.getSnapshotColor(snapshot)\n            self:SetBackdropBorderColor(r, g, b, a)\n        end\n        if empowered then\n            self.Icon:SetTexture(136168)\n        else\n            self.Icon:SetTexture(132122)\n        end\n        \n        local duration, exp = select(5, AuraUtil.FindAuraByName(\"Rake\", unitId, \"HARMFUL\"))\n        if duration > 4 and exp  - GetTime() < 4.5 then\n            self:SetAlpha(.4)\n        else\n            self:SetAlpha(1)\n        end\n    end\nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    if _G[\"WeakAuras\"].PoliRakeTargets then\n        \n        local snapshot = _G[\"WeakAuras\"].PoliRakeTargets[UnitGUID(unitId)]\n        local empowered = _G[\"WeakAuras\"].PoliEmpoweredRakeTargets[UnitGUID(unitId)]\n        \n        if snapshot then   \n            local r, g, b, a = envTable.getSnapshotColor(snapshot)\n            self:SetBackdropBorderColor(r, g, b, a)\n        end\n        if empowered then\n            self.Icon:SetTexture(136168)\n        else\n            self.Icon:SetTexture(132122)\n        end\n        \n        local duration, exp = select(5, AuraUtil.FindAuraByName(\"Rake\", unitId, \"HARMFUL\"))\n        if duration > 4 and exp  - GetTime() < 4.5 then\n            self:SetAlpha(.4)\n        else\n            self:SetAlpha(1)\n        end\n    end\nend",
					["Time"] = 1570476789,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.getSnapshotColor = function(s)\n        if s == 3 then \n            return 0, 1, 0, 1 -- green\n        elseif s == 2 then \n            return 0, 0, 1, 1 -- blue\n        elseif s == 1 then \n            return 1, 1, 0, 1 -- yellow\n        else\n            return 0, 0, 0, 0 -- none\n        end\n    end\nend",
					["Icon"] = 132122,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    self:SetAlpha(1)\nend",
					["Revision"] = 260,
					["Author"] = "Polihayse-Area 52",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    if _G[\"WeakAuras\"].PoliRakeTargets then\n        \n        local snapshot = _G[\"WeakAuras\"].PoliRakeTargets[UnitGUID(unitId)]\n        local empowered = _G[\"WeakAuras\"].PoliEmpoweredRakeTargets[UnitGUID(unitId)]\n        \n        if snapshot then   \n            local r, g, b, a = envTable.getSnapshotColor(snapshot)\n            self:SetBackdropBorderColor(r, g, b, a)\n        end\n        if empowered then\n            self.Icon:SetTexture(136168)\n        else\n            self.Icon:SetTexture(132122)\n        end\n        \n        local duration, exp = select(5, AuraUtil.FindAuraByName(\"Rake\", unitId, \"HARMFUL\"))\n        if duration > 4 and exp  - GetTime() < 4.5 then\n            self:SetAlpha(.4)\n        else\n            self:SetAlpha(1)\n        end\n    end\nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    if _G[\"WeakAuras\"].PoliRakeTargets then\n        \n        local snapshot = _G[\"WeakAuras\"].PoliRakeTargets[UnitGUID(unitId)]\n        local empowered = _G[\"WeakAuras\"].PoliEmpoweredRakeTargets[UnitGUID(unitId)]\n        \n        if snapshot then   \n            local r, g, b, a = envTable.getSnapshotColor(snapshot)\n            self:SetBackdropBorderColor(r, g, b, a)\n        end\n        if empowered then\n            self.Icon:SetTexture(136168)\n        else\n            self.Icon:SetTexture(132122)\n        end\n        \n        local duration, exp = select(5, AuraUtil.FindAuraByName(\"Rake\", unitId, \"HARMFUL\"))\n        if duration > 4 and exp  - GetTime() < 4.5 then\n            self:SetAlpha(.4)\n        else\n            self:SetAlpha(1)\n        end\n    end\nend",
					["Name"] = "Rake Snapshot",
					["PlaterCore"] = 1,
					["Enabled"] = false,
					["SpellIds"] = {
						155722, -- [1]
					},
					["Desc"] = "Gets snapshot info from Poli Feral Dot Tracker WeakAuras group",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        self.Spark:SetHeight (envTable.OriginalSpark)        \n        envTable.OriginalSpark = nil\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        self.Spark:SetHeight(envTable.OriginalSpark)        \n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    local spark = self.Spark:GetHeight()\n    envTable.OriginalSpark = spark\n    local text = Plater:GetFontSize(self.Text)\n    envTable.OriginalText = text\n    \n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    self.Spark:SetHeight(spark * envTable.CastBarHeightAdd)\n    Plater:SetFontSize (self.Text,text * envTable.CastBarHeightAdd)    \n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1597504444,
					["NpcNames"] = {
					},
					["url"] = "https://wago.io/8s7Mcrve2/21",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Racial_OrbitalStrike",
					["Options"] = {
					},
					["Enabled"] = true,
					["Revision"] = 2279,
					["semver"] = "1.0.20",
					["Name"] = "M+ Important Spells [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flash, Bounce when an important cast is happening. Add spell in the Add Trigger field.",
					["version"] = 21,
					["Prio"] = 99,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						274569, -- [3]
						278020, -- [4]
						261635, -- [5]
						272700, -- [6]
						268030, -- [7]
						265368, -- [8]
						264520, -- [9]
						265407, -- [10]
						278567, -- [11]
						278602, -- [12]
						258128, -- [13]
						257791, -- [14]
						258938, -- [15]
						265089, -- [16]
						272183, -- [17]
						256060, -- [18]
						257397, -- [19]
						269972, -- [20]
						270901, -- [21]
						270492, -- [22]
						263215, -- [23]
						268797, -- [24]
						262554, -- [25]
						253517, -- [26]
						255041, -- [27]
						252781, -- [28]
						250368, -- [29]
						258777, -- [30]
						278504, -- [31]
						266106, -- [32]
						257732, -- [33]
						268309, -- [34]
						269302, -- [35]
						263202, -- [36]
						257784, -- [37]
						278755, -- [38]
						272180, -- [39]
						263066, -- [40]
						267273, -- [41]
						265912, -- [42]
						274438, -- [43]
						268317, -- [44]
						268375, -- [45]
						276767, -- [46]
						264105, -- [47]
						265876, -- [48]
						270464, -- [49]
						278961, -- [50]
						265468, -- [51]
						256897, -- [52]
						280604, -- [53]
						268702, -- [54]
						255824, -- [55]
						253583, -- [56]
						250096, -- [57]
						278456, -- [58]
						262092, -- [59]
						257270, -- [60]
						267818, -- [61]
						265091, -- [62]
						262540, -- [63]
						263318, -- [64]
						263959, -- [65]
						257069, -- [66]
						256849, -- [67]
						267459, -- [68]
						253544, -- [69]
						268008, -- [70]
						267981, -- [71]
						272659, -- [72]
						264396, -- [73]
						257736, -- [74]
						264390, -- [75]
						255952, -- [76]
						257426, -- [77]
						274400, -- [78]
						272609, -- [79]
						269843, -- [80]
						269029, -- [81]
						272827, -- [82]
						269266, -- [83]
						263912, -- [84]
						264923, -- [85]
						258864, -- [86]
						256955, -- [87]
						265540, -- [88]
						260793, -- [89]
						270003, -- [90]
						270507, -- [91]
						257337, -- [92]
						268415, -- [93]
						275907, -- [94]
						268865, -- [95]
						260669, -- [96]
						260280, -- [97]
						253239, -- [98]
						265541, -- [99]
						250258, -- [100]
						256709, -- [101]
						277596, -- [102]
						276268, -- [103]
						265372, -- [104]
						263905, -- [105]
						265781, -- [106]
						257170, -- [107]
						268846, -- [108]
						270514, -- [109]
						258622, -- [110]
						258199, -- [111]
						256627, -- [112]
						257870, -- [113]
						258917, -- [114]
						263891, -- [115]
						268348, -- [116]
						272711, -- [117]
						271174, -- [118]
						268260, -- [119]
						269399, -- [120]
						268239, -- [121]
						264574, -- [122]
						261563, -- [123]
						257288, -- [124]
						257757, -- [125]
						267899, -- [126]
						255741, -- [127]
						260894, -- [128]
						263365, -- [129]
						260292, -- [130]
						263583, -- [131]
						272874, -- [132]
						264101, -- [133]
						264407, -- [134]
						271456, -- [135]
						262515, -- [136]
						275192, -- [137]
						256405, -- [138]
						270084, -- [139]
						257785, -- [140]
						267237, -- [141]
						266951, -- [142]
						267433, -- [143]
						255577, -- [144]
						255371, -- [145]
						270891, -- [146]
						267357, -- [147]
						258338, -- [148]
						257169, -- [149]
						270927, -- [150]
						260926, -- [151]
						264027, -- [152]
						267257, -- [153]
						253721, -- [154]
						265019, -- [155]
						260924, -- [156]
						263309, -- [157]
						266206, -- [158]
						260067, -- [159]
						274507, -- [160]
						276068, -- [161]
						263278, -- [162]
						258317, -- [163]
						256594, -- [164]
						268391, -- [165]
						268230, -- [166]
						260852, -- [167]
						267763, -- [168]
						268706, -- [169]
						264734, -- [170]
						270590, -- [171]
						290787, -- [172]
						275922, -- [173]
						269282, -- [174]
						274389, -- [175]
						258054, -- [176]
						259165, -- [177]
						269090, -- [178]
						277805, -- [179]
						282699, -- [180]
						278711, -- [181]
						268184, -- [182]
						268212, -- [183]
						257741, -- [184]
						266209, -- [185]
						270289, -- [186]
						267639, -- [187]
						268278, -- [188]
						258628, -- [189]
						266512, -- [190]
						260773, -- [191]
						269926, -- [192]
						268203, -- [193]
						256044, -- [194]
						257458, -- [195]
						300650, -- [196]
						300777, -- [197]
						300171, -- [198]
						299588, -- [199]
						299475, -- [200]
						299164, -- [201]
						298669, -- [202]
						300436, -- [203]
						297254, -- [204]
						301629, -- [205]
						284219, -- [206]
						285020, -- [207]
						283421, -- [208]
						294290, -- [209]
						291946, -- [210]
						291973, -- [211]
						297128, -- [212]
						293986, -- [213]
						295169, -- [214]
						293729, -- [215]
						298940, -- [216]
						296331, -- [217]
						298718, -- [218]
						295299, -- [219]
						300188, -- [220]
						265001, -- [221]
						294890, -- [222]
						314411, -- [223]
						314406, -- [224]
						298033, -- [225]
						305378, -- [226]
						320759, -- [227]
						300426, -- [228]
						297746, -- [229]
						315980, -- [230]
						304251, -- [231]
						308575, -- [232]
						309671, -- [233]
						308366, -- [234]
						306930, -- [235]
						309648, -- [236]
						309373, -- [237]
						301088, -- [238]
						297315, -- [239]
						306199, -- [240]
						256079, -- [241]
						311400, -- [242]
						311456, -- [243]
						308375, -- [244]
						308508, -- [245]
						305892, -- [246]
						303589, -- [247]
						306646, -- [248]
						306726, -- [249]
						296674, -- [250]
						299111, -- [251]
						302718, -- [252]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        self.Spark:SetHeight(envTable.OriginalSpark)        \n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    local spark = self.Spark:GetHeight()\n    envTable.OriginalSpark = spark\n    local text = Plater:GetFontSize(self.Text)\n    envTable.OriginalText = text\n    \n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    self.Spark:SetHeight(spark * envTable.CastBarHeightAdd)\n    Plater:SetFontSize (self.Text,text * envTable.CastBarHeightAdd)    \n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        self.Spark:SetHeight (envTable.OriginalSpark)        \n        envTable.OriginalSpark = nil\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [22]
			},
			["extra_icon_height"] = 20,
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["url"] = "https://wago.io/LhTfzARpz/5",
			["extra_icon_show_purge"] = true,
			["hover_highlight_alpha"] = 0.5899999737739563,
			["debuff_show_cc_border"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
			},
			["indicator_raidmark_scale"] = 0.99999994039536,
			["cast_statusbar_spark_alpha"] = 0.8299999833107,
			["healthbar_framelevel"] = 0,
			["aura2_y_offset"] = 5,
			["castbar_framelevel"] = 0,
			["health_statusbar_bgtexture"] = "PlaterBackground",
			["plate_config"] = {
				["player"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["percent_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["cast_incombat"] = {
						140, -- [1]
					},
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						140, -- [1]
					},
					["spellname_text_font"] = "Accidental Presidency",
					["spellname_text_anchor"] = {
						["side"] = 2,
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_anchor"] = {
						["y"] = -0.5,
					},
					["level_text_font"] = "Accidental Presidency",
					["big_actorname_text_font"] = "Accidental Presidency",
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 12,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 12,
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						120, -- [1]
						15, -- [2]
					},
					["percent_text_ooc"] = true,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 12,
					["spellpercent_text_anchor"] = {
						["x"] = -1.300003051757813,
					},
					["level_text_anchor"] = {
						["y"] = -1.300003051757813,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						120, -- [1]
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.0099945068359375,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["quest_color_enemy"] = {
						1, -- [1]
						0.3921568627451, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "Expressway",
					["big_actorname_text_color"] = {
						1, -- [1]
						0.9843137254902, -- [2]
						0.90588235294118, -- [3]
						1, -- [4]
					},
					["actorname_text_font"] = "Expressway",
					["big_actorname_text_outline"] = "NONE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["only_names"] = false,
					["quest_color_neutral"] = {
						1, -- [1]
						0.56078431372549, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Expressway",
					["spellname_text_font"] = "Expressway",
					["all_names"] = true,
					["castbar_offset"] = -1.300003051757813,
					["relevance_state"] = 2,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["percent_show_health"] = true,
					["actorname_text_anchor"] = {
						["y"] = 6.014060974121094,
						["side"] = 1,
					},
					["percent_text_size"] = 12,
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 11,
					["only_damaged"] = false,
					["buff_frame_y_offset"] = 0,
					["percent_show_percent"] = false,
					["quest_enabled"] = true,
					["percent_text_font"] = "Expressway",
					["spellpercent_text_enabled"] = true,
					["level_text_alpha"] = 1,
					["health_incombat"] = {
						120, -- [1]
						4, -- [2]
					},
					["health"] = {
						120, -- [1]
						4, -- [2]
					},
					["actorname_text_size"] = 12,
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_enabled"] = true,
					["quest_color"] = {
						0.5, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["level_text_enabled"] = true,
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 12,
					["spellpercent_text_font"] = "Expressway",
					["level_text_size"] = 12,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						120, -- [1]
						15, -- [2]
					},
					["percent_text_ooc"] = true,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 12,
					["spellpercent_text_anchor"] = {
						["x"] = -1.300003051757813,
					},
					["level_text_anchor"] = {
						["y"] = -1.300003051757813,
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_anchor"] = {
						["x"] = 0.0099945068359375,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Expressway",
					["only_names"] = false,
					["quest_color_neutral"] = {
						1, -- [1]
						0.56078431372549, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 11,
					["percent_text_enabled"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = -0.9800033569335938,
						["side"] = 1,
					},
					["quest_color_enemy"] = {
						1, -- [1]
						0.3921568627451, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_size"] = 12,
					["big_actorname_text_color"] = {
						1, -- [1]
						0.9843137254902, -- [2]
						0.90588235294118, -- [3]
						1, -- [4]
					},
					["percent_text_font"] = "Expressway",
					["spellname_text_font"] = "Expressway",
					["big_actorname_text_font"] = "Expressway",
					["percent_show_percent"] = false,
					["castbar_offset"] = -1.300003051757813,
					["big_actorname_text_outline"] = "NONE",
					["health_incombat"] = {
						nil, -- [1]
						15, -- [2]
					},
					["relevance_state"] = 2,
					["health"] = {
						120, -- [1]
						15, -- [2]
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_show_health"] = true,
					["spellpercent_text_enabled"] = true,
					["level_text_alpha"] = 1,
					["level_text_enabled"] = true,
				},
				["enemyplayer"] = {
					["actorname_text_font"] = "Big Noodle Titling",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["level_text_alpha"] = 1,
					["spellpercent_text_font"] = "Big Noodle Titling",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["level_text_size"] = 12,
					["level_text_anchor"] = {
						["y"] = -1.300003051757813,
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["cast"] = {
						120, -- [1]
						14, -- [2]
					},
					["all_names"] = true,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 8,
					["fixed_class_color"] = {
						nil, -- [1]
						0.5019607843137255, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = -0.9800033569335938,
						["side"] = 1,
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
					},
					["percent_text_size"] = 14,
					["actorname_text_spacing"] = 11,
					["percent_text_font"] = "Big Noodle Titling",
					["spellname_text_font"] = "Big Noodle Titling",
					["quest_enabled"] = true,
					["cast_incombat"] = {
						nil, -- [1]
						14, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_size"] = 8,
					["big_actorname_text_font"] = "Expressway",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
						["x"] = 0.0099945068359375,
					},
					["percent_show_percent"] = false,
					["big_actorname_text_outline"] = "NONE",
					["level_text_font"] = "Big Noodle Titling",
					["big_actortitle_text_font"] = "Expressway",
				},
				["enemynpc"] = {
					["castbar_offset"] = -1.800003051757813,
					["spellpercent_text_font"] = "PT Sans Narrow",
					["level_text_size"] = 12,
					["big_actortitle_text_font"] = "Homespun",
					["cast"] = {
						131, -- [1]
					},
					["spellpercent_text_size"] = 12,
					["level_text_outline"] = "OUTLINE",
					["big_actortitle_text_size"] = 12,
					["spellpercent_text_anchor"] = {
						["x"] = -1.300003051757813,
					},
					["level_text_anchor"] = {
						["y"] = -1.300003051757813,
					},
					["cast_incombat"] = {
						131, -- [1]
						10, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 10,
						["x"] = 2,
					},
					["percent_text_anchor"] = {
						["y"] = 2,
					},
					["level_text_font"] = "Expressway",
					["actorname_text_font"] = "Homespun",
					["quest_color"] = {
						0.5, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["quest_color_neutral"] = {
						nil, -- [1]
						0.56078431372549, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 14,
					["power_percent_text_font"] = "Accidental Presidency",
					["quest_color_enemy"] = {
						nil, -- [1]
						0.3921568627451, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["actorname_text_outline"] = "MONOCHROME",
					["actorname_text_anchor"] = {
						["y"] = 2.040000915527344,
						["x"] = 2,
						["side"] = 1,
					},
					["big_actorname_text_color"] = {
						1, -- [1]
						0.9843137254902, -- [2]
						0.90588235294118, -- [3]
						1, -- [4]
					},
					["percent_text_size"] = 14,
					["actorname_text_spacing"] = 13,
					["percent_text_font"] = "Homespun",
					["spellname_text_font"] = "Expressway",
					["big_actorname_text_outline"] = "MONOCHROME",
					["percent_show_percent"] = false,
					["big_actorname_text_size"] = 12,
					["relevance_state"] = 2,
					["spellname_text_size"] = 10,
					["health_incombat"] = {
						130, -- [1]
						15, -- [2]
					},
					["health"] = {
						130, -- [1]
						15, -- [2]
					},
					["percent_text_outline"] = "MONOCHROME",
					["level_text_alpha"] = 1,
					["big_actorname_text_font"] = "Homespun",
					["only_names"] = false,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
				},
			},
			["health_selection_overlay"] = "ElvUI A",
			["aura_y_offset"] = 11,
			["extra_icon_width"] = 26,
			["use_ui_parent"] = true,
			["health_statusbar_texture"] = "ElvUI Norm",
			["hook_auto_imported"] = {
				["Targetting Alpha"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Aura Reorder"] = 2,
				["Jaina Encounter"] = 6,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 1,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 1,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color_nointerrupt"] = {
				1, -- [1]
				0.003921568627451, -- [2]
				0, -- [3]
				0.96000000089407, -- [4]
			},
			["first_run2"] = true,
			["color_override_colors"] = {
				[3] = {
					1, -- [1]
					0.058823529411765, -- [2]
					0, -- [3]
				},
				[4] = {
					0.92549019607843, -- [1]
					0.90196078431373, -- [2]
					0, -- [3]
				},
			},
			["health_animation_time_dilatation"] = 2.6199998855591,
			["npc_cache"] = {
				[65414] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["81114"] = {
					"Gronnling Laborer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[127485] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["129527"] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				["95408"] = {
					"Anetheron", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136208"] = {
					"Stromgarde Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[134137] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Ö—Ä–∞–º–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["23172"] = {
					"Hand of Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				[127486] = {
					"–û—Ñ–∏—Ü–µ—Ä –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140792] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["134174"] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				["135240"] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[124927] = {
					"–¶–∑—é–Ω—å-–¢–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136186] = {
					"–ñ—Ä–∏—Ü–∞ –º–æ—Ä—è - —Å–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[56713] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["71479"] = {
					"He Softfoot", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["137969"] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[134139] = {
					"–•—Ä–∞–º–æ–≤–Ω–∏—Ü–∞ –∏–∑ –°–≤—è—Ç–∏–ª–∏—â–∞ –®—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["50775"] = {
					"Spike", -- [1]
					"Silvershard Mines", -- [2]
				},
				["102392"] = {
					"Resonance Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["90114"] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[53642] = {
					"–ü–µ–ø–ª–æ–ø—Ä—è–¥-—Ç–∫–∞—á", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["151325"] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["138559"] = {
					"Forgotten One", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["67235"] = {
					"Shadowfiend", -- [1]
					"Twin Peaks", -- [2]
				},
				["135002"] = {
					"Demonic Tyrant", -- [1]
					"Silvershard Mines", -- [2]
				},
				["123272"] = {
					"Saltfur Fish-Sticker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["153335"] = {
					"Potent Spark", -- [1]
					"The Eternal Palace", -- [2]
				},
				["137882"] = {
					"Northfold Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[47244] = {
					"Fierysin", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[127488] = {
					"–ú–∞–≥ –æ–≥–Ω—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[159224] = {
					"–ì—Ä–∏—Ç'–∞–∫—Å –ü–∞–ª–∞—á", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[28169] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["72276"] = {
					"Amalgam of Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["107024"] = {
					"Fel Lord", -- [1]
					"Twin Peaks", -- [2]
				},
				[135167] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["138557"] = {
					"Living Corruption", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138837"] = {
					"Zara'thik Ambershaper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140798] = {
					"–°–∫–∞–ª–æ–∫–∞—Ä", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134144] = {
					"–ñ–∏–≤–æ–π –ø–æ—Ç–æ–∫", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135169] = {
					"–¢–æ—Ç–µ–º –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –¥—É—Ö–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131586] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –±–∞–Ω–∫–µ—Ç–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["129369"] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				["140447"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["138830"] = {
					"Thorvast, Guided by the Stars", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["22847"] = {
					"Ashtongue Primalist", -- [1]
					"Black Temple", -- [2]
				},
				["139468"] = {
					"Spineripper Ku-Kon", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["144300"] = {
					"Mechagon Citizen", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["139411"] = {
					"Many-Fangs", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["155813"] = {
					"Court Attendant", -- [1]
					"The Eternal Palace", -- [2]
				},
				[36880] = {
					"–†–∞–∑–ª–∞–≥–∞—é—â–∏–π—Å—è –∫–æ–ª–æ—Å—Å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["138843"] = {
					"Wingleader Srak'ik", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["135048"] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				["146890"] = {
					"Fleshrot Runeweaver", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["151680"] = {
					"Orangetooth", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["152311"] = {
					"Zanj'ir Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				["155767"] = {
					"Grul'taj", -- [1]
					"The Eternal Palace", -- [2]
				},
				[130307] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç–∞–π—Ñ—É–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140292] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["11668"] = {
					"Firelord", -- [1]
					"Molten Core", -- [2]
				},
				["108359"] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				["138511"] = {
					"Azurescale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134150] = {
					"–†–µ–∑—á–∏–∫ —Ä—É–Ω –°–æ—Ä–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["151028"] = {
					"Thornstalker Nydora", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139269] = {
					"–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[156161] = {
					"–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –ì–Ω—à–∞–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140293] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["132918"] = {
					"Spitefin Raider", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["131574"] = {
					"Shimmerfin", -- [1]
					"The Eternal Palace", -- [2]
				},
				[10184] = {
					"–û–Ω–∏–∫—Å–∏—è", -- [1]
					"–õ–æ–≥–æ–≤–æ –û–Ω–∏–∫—Å–∏–∏", -- [2]
				},
				["106321"] = {
					"Tailwind Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["144837"] = {
					"Darkshore Stag", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["122266"] = {
					"Spineshell Turtle", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139472"] = {
					"Stone-Lord Qinsho", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138247] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[163841] = {
					"–°–ª–∏—è–Ω–∏–µ –ø–ª–æ—Ç–∏", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[140295] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[162306] = {
					"–ê–∫–∏—Ä-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["95602"] = {
					"Mystic Velruun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["69791"] = {
					"Joriti", -- [1]
					"Alterac Valley", -- [2]
				},
				["155686"] = {
					"Azsh'ari Venomwatcher", -- [1]
					"The Eternal Palace", -- [2]
				},
				["151755"] = {
					"Shadehound", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				["78801"] = {
					"Darkshard Acidback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[145927] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥ –≠–ª–ª–∞–Ω–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[67093] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ–≤–æ–π –ª–µ–∫–∞—Ä—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["1400"] = {
					"RinTinTin", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				["28585"] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[56717] = {
					"–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[126215] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ç—å–º—ã –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[36626] = {
					"–¢—É—Ö–ª–æ–ø—É–∑", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["140152"] = {
					"Rotclaw Mauler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[126983] = {
					"–ö—Ä–∞—Å–∞–≤—á–∏–∫ –•–∞—Ä–ª–∞–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["140455"] = {
					"Bramblefur Calf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138576"] = {
					"Faceless Tendril", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139429"] = {
					"Stonebound Warrior", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["31216"] = {
					"Prometheium", -- [1]
					"Isle of Conquest", -- [2]
				},
				[126216] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134157] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[155656] = {
					"–ú–∏—à–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["143754"] = {
					"Forgus Anvilrage", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[5925] = {
					"–¢–æ—Ç–µ–º –∑–∞–∑–µ–º–ª–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[153097] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - —à–∞–º–∞–Ω–∫–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[134158] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["144611"] = {
					"Coralback Scuttler", -- [1]
					"The Eternal Palace", -- [2]
				},
				["136483"] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[105486] = {
					"–ò—Å—Å–æ—Ö—à–∏–π-—à—É—Ç", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				[138254] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[61453] = {
					"–ú—É'–®–∏–±–∞", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["130299"] = {
					"Droplet", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["73152"] = {
					"Storeroom Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["92527"] = {
					"Dag'gorath", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["145026"] = {
					"Swifttail Scavenger", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[37907] = {
					"–ì–Ω–∏–ª–æ—Å—Ç–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["138818"] = {
					"Bloodwake Warbringer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["136330"] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[137233] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["77692"] = {
					"Kromog", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["140456"] = {
					"Bramblefur Musken", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140077"] = {
					"Knucklebump Stomper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129802] = {
					"–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[162828] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π –ø–∏—â–µ–≤–∞—Ä–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["72784"] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[135699] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[53648] = {
					"–ê–¥—Å–∫–∏–π —è—Å—Ç—Ä–µ–±", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["150396"] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129547] = {
					"–ö–∞—Å—Ç–µ—Ç–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[77080] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è –≤–µ—Ä—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["130639"] = {
					"Vicejaw Chomper", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139284] = {
					"–ß—É–º–Ω–æ–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["128455"] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				["126205"] = {
					"Profit-O-Matic", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["136186"] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129548] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["134173"] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["146895"] = {
					"Fleshrot Vandal", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["129047"] = {
					"Stromgarde Marksman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[127757] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["22959"] = {
					"Spellbound Attendant", -- [1]
					"Black Temple", -- [2]
				},
				["133666"] = {
					"Dizzy's Decoy", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135192] = {
					"–ü–æ—á–∏—Ç–∞–µ–º—ã–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139799] = {
					"–£—á–µ–Ω–∏–∫ –ê–π—Ä–æ–Ω—Ö–∞–ª–ª–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["140069"] = {
					"Rustpelt Wolf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139800] = {
					"–£—á–µ–Ω–∏—Ü–∞ –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü—ã —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["145932"] = {
					"Celestra Brightmoon", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["92961"] = {
					"Gorebound Brute", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["138986"] = {
					"Borgl the Seeker", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["144949"] = {
					"Canopy Stalker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[26125] = {
					"Skullcatcher", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[135706] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[129550] = {
					"–¢–∏—Ö–æ–ª–∞–ø –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["140540"] = {
					"Kindleweb Clutchkeeper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["112255"] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				["136964"] = {
					"High Perch Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["93858"] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[127503] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö–æ—Ä–≥–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["22952"] = {
					"Veras Darkshadow", -- [1]
					"Black Temple", -- [2]
				},
				["129598"] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				["59787"] = {
					"Charcootery", -- [1]
					"Eye of the Storm", -- [2]
				},
				[37782] = {
					"–ü–ª–æ—Ç–æ—è–¥–Ω–æ–µ –Ω–∞—Å–µ–∫–æ–º–æ–µ", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["135736"] = {
					"Gore", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["155845"] = {
					"Crushing Depths", -- [1]
					"The Eternal Palace", -- [2]
				},
				["139480"] = {
					"Stonebound Protector", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140986"] = {
					"Acidic Burrower", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[159767] = {
					"–ö—Ä–æ–≤–æ–º–∞—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[152089] = {
					"–¢—Ä–∞–ª–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[132126] = {
					"–ü–æ–∑–æ–ª–æ—á–µ–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["91540"] = {
					"Illusionary Outcast", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134174] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134686] = {
					"–í–∑—Ä–æ—Å–ª—ã–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[159768] = {
					"–î–µ—Ä–µ—à –∏–∑ –ü—É—Å—Ç–æ—Ç—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[129552] = {
					"–ú–æ–Ω–∑—É–º–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["139460"] = {
					"Stonebound Earthweaver", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["80411"] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["135234"] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				[151579] = {
					"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞—â–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["135893"] = {
					"Burning Emberguard", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[136735] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["155917"] = {
					"Azsh'ari Stormcaller", -- [1]
					"The Eternal Palace", -- [2]
				},
				["73530"] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129553] = {
					"–î–∏–Ω–æ–º–∞–Ω—Ç –ö–∏—à'–æ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["133944"] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["71515"] = {
					"General Nazgrim", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["150168"] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["151978"] = {
					"Waterstrider", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59794] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—å —á–∞—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[162331] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –Ω–µ–π—Ä–æ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["138567"] = {
					"Shathhoth the Punisher", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["122086"] = {
					"Slitherblade Ironscale", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134691] = {
					"–ù–∞—ç–ª–µ–∫—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ä–≤–∏—à", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["23339"] = {
					"Illidari Heartseeker", -- [1]
					"Black Temple", -- [2]
				},
				[37016] = {
					"–ü—Ä–æ–ø–æ–≤–µ–¥–Ω–∏–∫ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["131431"] = {
					"Safety Inspection Bot", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[153119] = {
					"–ú–∞–ª—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["135235"] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[135204] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –∂—Ä–µ—Ü-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["143985"] = {
					"Absorb-o-Tron", -- [1]
					"Eye of the Storm", -- [2]
				},
				["140078"] = {
					"Knucklebump Gorilla", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["19668"] = {
					"Shadowfiend", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[24207] = {
					"–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				["140694"] = {
					"Gorgejaw the Glutton", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140058"] = {
					"Grizzlefur Patriarch", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["143306"] = {
					"Majestic Penguin", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["77504"] = {
					"Slag Behemoth", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["72787"] = {
					"Blade of the Hundred Steps", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[131112] = {
					"–ë–æ–µ—Ü –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139814] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è–º –•–∞–∑–∑–ª", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140838] = {
					"–ó–ª–æ–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["132713"] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[159266] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["138569"] = {
					"Harbinger Vor'zzyx", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["144246"] = {
					"K.U.-J.0.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["139808"] = {
					"Venture Oaf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["11666"] = {
					"Firewalker", -- [1]
					"Molten Core", -- [2]
				},
				[130325] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —à—É—Å—Ç—Ä—ã–π –∫—Ä–∞–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[130581] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –≥–ª–∞–∑", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[160291] = {
					"–ü–µ–ø–µ–ª—å–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["131729"] = {
					"Lyco", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138281] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["78001"] = {
					"Cloudburst Totem", -- [1]
					"The Eternal Palace", -- [2]
				},
				[130582] = {
					"–û—Ç—á–∞—è–≤—à–∏–π—Å—è –Ω–µ–≥–æ–¥—è–π", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["93298"] = {
					"Shadowheart Fiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["112675"] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[140842] = {
					"–î—É—Ö –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["147202"] = {
					"Animated Azershard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["134069"] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["135706"] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				["22953"] = {
					"Wrathbone Flayer", -- [1]
					"Black Temple", -- [2]
				},
				[129559] = {
					"–î—É—ç–ª—è–Ω—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134701] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[63508] = {
					"–°—é—ç–Ω—å", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[78116] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["72350"] = {
					"Dragonmaw Elite Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["138839"] = {
					"Zara'thik Deathsinger", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[153130] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[125977] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["139398"] = {
					"Mirelurk Assassin", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[37531] = {
					"–ë–æ–µ—Ü –°–ª—É–∂–∏—Ç–µ–ª–µ–π –õ—å–¥–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["137626"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["144972"] = {
					"Kaldorei Huntress", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["138434"] = {
					"Spitefin Tempest Witch", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[159275] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140336] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["144776"] = {
					"Airyn Swiftfeet", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["133557"] = {
					"Razak Ironsides", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140337] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ç–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç–æ–≥–æ –∫—Ä—ã–ª–∞—Ç–æ–≥–æ –∑–º–µ—è", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["153059"] = {
					"Aethanel", -- [1]
					"The Eternal Palace", -- [2]
				},
				["132797"] = {
					"Pinegraze Calf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37148] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["1933"] = {
					"Sheep", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[37532] = {
					"–õ–µ–¥–æ–∫—Ä—ã–ª—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["129318"] = {
					"Sandskitter Crab", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["128434"] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				["140361"] = {
					"Darkshadow the Omen", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["32666"] = {
					"Training Dummy", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["155090"] = {
					"Anodized Coilbearer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["123286"] = {
					"Southsea Gambler", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["126094"] = {
					"Slitherblade Wavecaller", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["80422"] = {
					"Iron Marksman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["150712"] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["129601"] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[56472] = {
					"–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[140341] = {
					"–û–±–ª–∞—á–Ω—ã–π –†–µ–∑–≤—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144948] = {
					"–ö–æ–∂–µ–∫—Ä—ã–ª—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["137246"] = {
					"Alliance Siege Engine", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["122968"] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				["143215"] = {
					"Orca", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["48442"] = {
					"Pingola", -- [1]
					"Eye of the Storm", -- [2]
				},
				[37533] = {
					"–ò–Ω–µ–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[146485] = {
					"–ù–µ–≤–∞—Ä–∞ –ù–æ—á–Ω–∞—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["93233"] = {
					"Lord Aram'el", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135736] = {
					"–†–≤–∞—á", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["155433"] = {
					"Void-Touched Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["131677"] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				["146862"] = {
					"Mistscorn Subjugator", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[59544] = {
					"–ö–∏–≤–∞—é—â–∏–π —Ç–∏–≥—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[136249] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[153141] = {
					"–¢–æ—Ç–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –≥–æ–ª–æ–¥–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["94733"] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56473] = {
					"–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[136250] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["76810"] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["138561"] = {
					"Faceless Mindlasher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[123680] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≠–π–¥–∏—Å", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["155432"] = {
					"Enchanted Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140975"] = {
					"Youngercraw", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[37662] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥–∏—Ä", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[151096] = {
					"–•–∞—Ç–∏", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["139002"] = {
					"Wildlands Totemic", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["136006"] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["129553"] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[130335] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –∫—Ä–∏—Å—Ç–∞–ª–∏—Å–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139443"] = {
					"Spinebender Kuntai", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["22957"] = {
					"Priestess of Dementia", -- [1]
					"Black Temple", -- [2]
				},
				[161335] = {
					"–£–∂–∞—Å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["135648"] = {
					"Driftcoat", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["140902"] = {
					"Vog'rish, the Ascended", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["94916"] = {
					"Fel Touched Seer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[61337] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[135231] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[37023] = {
					"–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —á—É–º—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["140336"] = {
					"Nightscale Wind Serpent", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37663] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π –∞—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["150653"] = {
					"Blackwater Behemoth", -- [1]
					"The Eternal Palace", -- [2]
				},
				["151476"] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["140085"] = {
					"Pinegraze Greatstag", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[151613] = {
					"–ü—Ä–æ—Ç–∏–≤–æ–ø–µ—Ö–æ—Ç–Ω–∞—è –±–µ–ª–∫–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["144948"] = {
					"Leatherwing Hunter", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["135496"] = {
					"Cami Cogwizzle", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["80400"] = {
					"Iron Assembly Warden", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[135234] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –º–∞—Å—Ç–∏—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["93154"] = {
					"Gorebound Crone", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["139284"] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["144840"] = {
					"Mottled Fawn", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["135263"] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				["94808"] = {
					"Hellfire Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135235] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["136989"] = {
					"Newstead Militia", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[140354] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["92554"] = {
					"Mek'barash", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["76865"] = {
					"Beastlord Darmac", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["78832"] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["155899"] = {
					"Sak'ja", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140355] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140631"] = {
					"South Sea Ray", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["73904"] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[59547] = {
					"–¶–∑—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140356] = {
					"–Ø—Ä–∫–∞—è –ß–µ—à—É–π–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["80677"] = {
					"Iron Journeyman", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["133912"] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				["136295"] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["93813"] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136470"] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[56732] = {
					"–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["22965"] = {
					"Enslaved Servant", -- [1]
					"Black Temple", -- [2]
				},
				["139421"] = {
					"Gekkaz Moss-Scaled", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135239] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["106317"] = {
					"Storm Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["91349"] = {
					"Mannoroth", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["73724"] = {
					"Zu Yin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37665] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["28836"] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				["155691"] = {
					"Zanj'ir Wrangler", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140359] = {
					"–ì—Ä–æ–∑–æ–≤–æ–π –∑–º–µ–π - –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["112804"] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				["130622"] = {
					"Squallshaper Auran", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["95280"] = {
					"Kaz'rogal", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135241] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["140685"] = {
					"Elderhorn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59804] = {
					"–•–≤–∞—Ç–∫–∞—è –Ω–µ–Ω–∞–≤–∏—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["129758"] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				["146869"] = {
					"Gyrum the Virulent", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139337] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["126451"] = {
					"Crushclaw", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["123290"] = {
					"Sparkleshell Clacker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["76812"] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[15275] = {
					"–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –í–µ–∫'–Ω–∏–ª–∞—à", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["71734"] = {
					"Sha of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139338] = {
					"–ü—Ä–æ—Ä–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["23401"] = {
					"Hungering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				[140362] = {
					"–ú–µ—Ä—Ü–∞—é—â–µ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157254] = {
					"–¢–µ–∫'—Ä–∏—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[128551] = {
					"–ú–∞—Å—Ç–∏—Ñ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139339] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[157255] = {
					"–ê–∫–∏—Ä-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[130087] = {
					"–ù–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[158279] = {
					"–í–∑–ª–æ–º–∞–Ω–Ω—ã–π –∑–∞–≤–æ–¥–Ω–æ–π —Ä–∞–∫–µ—Ç–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[159303] = {
					"–£–∂–∞—Å–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135245] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[27731] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["131383"] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[157256] = {
					"–ê–∫–∏—Ä-—à–µ—Ä—à–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["104881"] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[137805] = {
					"–ß–µ—Ä–Ω–∞—è –∫—Ä–æ–≤—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["133588"] = {
					"Automatic Explosive Ejector", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["129470"] = {
					"Deepsea Crab", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["95813"] = {
					"Weaponlord Mehlkhior", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[144972] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[56862] = {
					"–ü—å—è–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["87317"] = {
					"Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[159305] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["104493"] = {
					"Spitting Cobra", -- [1]
					"Isle of Conquest", -- [2]
				},
				[135759] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[144973] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-—á–∞—Å–æ–≤–∞—è", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[53791] = {
					"–ü—ã–ª–∞—é—â–µ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["148610"] = {
					"Druid of the Branch", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[33572] = {
					"–ö–æ–≤–∞–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["132754"] = {
					"Highland Strider", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[135248] = {
					"–ë—Ä–∏–æ–Ω–∞ –ö—Ä–æ–≤–æ–∂–∞–¥–Ω–∞—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139766"] = {
					"Former Navigator Dublin", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135761] = {
					"–ì—Ä–æ–º–æ–≤–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["140983"] = {
					"Frostbore Burster", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[158284] = {
					"–ö—Ä—ç–≥–≥–ª –ì–æ–ª–æ–≤–æ–¥–µ—Ä–≥", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[159308] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω–∞—è –ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[131667] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["92514"] = {
					"Shao'ghun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["139748"] = {
					"Shipwrecked Smuggler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["138495"] = {
					"Twilight Commander", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158285] = {
					"–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —â–∏—Ç–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["94894"] = {
					"Keen-Eyed Gronnstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135819"] = {
					"Living Tornado", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127019] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["136643"] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["22954"] = {
					"Illidari Fearbringer", -- [1]
					"Black Temple", -- [2]
				},
				["140262"] = {
					"Runehoof Doe", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131261"] = {
					"Durkis", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135764] = {
					"–í–∑—Ä—ã–≤–Ω–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139348] = {
					"–ë–∞–≥–∞ –õ–µ–¥—è–Ω–æ–π –©–∏—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135765] = {
					"–¢–æ—Ç–µ–º –ø–æ—Ç–æ–∫–æ–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["134338"] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[138837] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –∫—É–∑–Ω–µ—Ü", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135254] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["139412"] = {
					"Gashasz", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["138493"] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				["133379"] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["150250"] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[139350] = {
					"–ê–Ω–∞—Ö–∞ –ò—Å—Å—É—à–∞—é—â–∏–π", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[53793] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["23030"] = {
					"Dragonmaw Sky Stalker", -- [1]
					"Black Temple", -- [2]
				},
				[134232] = {
					"–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["122984"] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[138840] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139352] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Å–º–µ—Ä—Ç–∏ –ú–∞–¥–∂—É–ª–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59552] = {
					"–•–æ–∑–µ–Ω-–ø–ª–∞–∫—Å–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[157268] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["136224"] = {
					"Stromgarde Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["77557"] = {
					"Admiral Gar'an", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["132005"] = {
					"Grayson Bell", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["132743"] = {
					"Flamescale Wavebreaker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139807"] = {
					"Venture Surveyor", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61216] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["135971"] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140250"] = {
					"Pinegraze Stag", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["88902"] = {
					"Mol'dana Two-Blade", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["22873"] = {
					"Coilskar General", -- [1]
					"Black Temple", -- [2]
				},
				["130011"] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[131677] = {
					"–ü–ª–µ—Ç–µ–ª—å—â–∏—Ü–∞ —Ä—É–Ω –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["101398"] = {
					"Psyfiend", -- [1]
					"Alterac Valley", -- [2]
				},
				["136203"] = {
					"Danath Trollbane", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[27733] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["137838"] = {
					"Rampaging Owlbeast", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["134828"] = {
					"Aqualing", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139357] = {
					"–®–∞—Ä–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["146870"] = {
					"Spellbinder Ohnazae", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[159321] = {
					"–ö—Ö–∞—Ç–µ–ø", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135263] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["92142"] = {
					"Blademaster Jubei'thos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["92146"] = {
					"Gurtogg Bloodboil", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["23049"] = {
					"Shadowmoon Weapon Master", -- [1]
					"Black Temple", -- [2]
				},
				["72942"] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["416"] = {
					"Zornar", -- [1]
					"Isle of Conquest", -- [2]
				},
				[138848] = {
					"–¢–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏ –ó–æ—Ä–ª–∞–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59426] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["140679"] = {
					"Frostbeard Wendigo", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152669] = {
					"–ö–∞–ø–ª—è –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["137820"] = {
					"Rumbling Exile", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["12127"] = {
					"Stormpike Guardsman", -- [1]
					"Alterac Valley", -- [2]
				},
				["134616"] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["136541"] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
				},
				["23047"] = {
					"Shadowmoon Soldier", -- [1]
					"Black Temple", -- [2]
				},
				[138338] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["141282"] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144993] = {
					"–ë–µ—à–µ–Ω—ã–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—Ö–æ–≤—ã–π –º–µ–¥–≤–µ–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["61146"] = {
					"Black Ox Statue", -- [1]
					"The Eternal Palace", -- [2]
				},
				["147938"] = {
					"Azergem Crystalback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["149098"] = {
					"Maiev Shadowsong", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[131685] = {
					"–†—É–Ω–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["76945"] = {
					"Ironcrusher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151649] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç I\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[27734] = {
					"–ù–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["22885"] = {
					"Dragon Turtle", -- [1]
					"Black Temple", -- [2]
				},
				["140691"] = {
					"Giant Dreadfang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["152033"] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["120651"] = {
					"Explosives", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[77889] = {
					"–ì—Ä–æ'—Ç–∞—à –†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[136295] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140902] = {
					"–í–æ–≥'—Ä–∏—à –í–æ–∑–Ω–µ—Å–µ–Ω–Ω—ã–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["140970"] = {
					"Cragburster", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["130318"] = {
					"Slitherblade Prophet", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132713] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["135770"] = {
					"Veteran Sergeant Slayde", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["130435"] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[59684] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["122265"] = {
					"Saltfur Smasher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["129373"] = {
					"Dockhound Packmaster", -- [1]
					"Siege of Boralus", -- [2]
				},
				["134423"] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[15277] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-–∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[134251] = {
					"–°–µ–Ω–µ—à–∞–ª—å –ú'–±–∞—Ä–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["139418"] = {
					"Stagnant One", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["34775"] = {
					"Demolisher", -- [1]
					"Isle of Conquest", -- [2]
				},
				[148584] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –ú–æ—Ä–¥–µ–Ω—Ç –í–µ—á–µ—Ä–Ω—è—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[127799] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[154727] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–æ–ª–Ω—Ü–∞ –¢–µ–Ω—Ö–∞–º–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				["128649"] = {
					"Sergeant Bainbridge", -- [1]
					"Siege of Boralus", -- [2]
				},
				["72847"] = {
					"Hellscream Annihilator", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["78116"] = {
					"Water Elemental", -- [1]
					"The Eternal Palace", -- [2]
				},
				["140272"] = {
					"Forest-Strider", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["81197"] = {
					"Iron Raider", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[151657] = {
					"–ë–æ–º–±–æ—Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["154565"] = {
					"Loyal Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				[160871] = {
					"–û–¥–µ—Ä–∂–∏–º–∞—è –ø–æ—Å—ã–ª–∫–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["132885"] = {
					"Air Elemental", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[161895] = {
					"–ü–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Ç–≤–∞—Ä—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["131858"] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[151658] = {
					"–¢–∞–Ω–∫-–¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[135790] = {
					"Raptor", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				["126832"] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				["136076"] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140559"] = {
					"Volcanor", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["73775"] = {
					"War Master Kragg", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["133593"] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["23147"] = {
					"Shadowmoon Grunt", -- [1]
					"Black Temple", -- [2]
				},
				["133007"] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				["141284"] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				["141285"] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				["146894"] = {
					"Fleshrot Cabalist", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[153196] = {
					"–í–æ—Ä—á—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[158315] = {
					"–û–∫–æ —Ö–∞–æ—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["137478"] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				["22846"] = {
					"Ashtongue Stormcaller", -- [1]
					"Black Temple", -- [2]
				},
				[65317] = {
					"–°—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["155634"] = {
					"Bound Storm", -- [1]
					"The Eternal Palace", -- [2]
				},
				["94283"] = {
					"Shadow Infuser", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["146485"] = {
					"Nevara Nightshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["93985"] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["126928"] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				["58432"] = {
					"canibus", -- [1]
					"Isle of Conquest", -- [2]
				},
				["136735"] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				["130404"] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				["151872"] = {
					"Grip of Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				["140563"] = {
					"Brimstone Tracker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["73197"] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["69792"] = {
					"Joriti", -- [1]
					"Alterac Valley", -- [2]
				},
				["155645"] = {
					"Walkie Shockie X2", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["138823"] = {
					"Bloodwake Wayfinder", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130620] = {
					"–õ–µ–¥–æ–±–æ–µ—Ü –°–µ—Ä–∞—Ñ", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["138432"] = {
					"Tidemistress Nessa", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["128967"] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				["137474"] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				["134389"] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[162417] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["151881"] = {
					"Abyssal Commander Sivara", -- [1]
					"The Eternal Palace", -- [2]
				},
				["140977"] = {
					"Jadescale Gnasher", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[157811] = {
					"–õ–∏–ª–∏–∞–º –®–ø–∏–Ω–¥–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[77130] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["140359"] = {
					"Thunderhawk Devourer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139384] = {
					"–ë–æ–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[157812] = {
					"–ë–∏–ª–∏–±—É–± –®–µ—Å—Ç–µ—Ä–µ–Ω–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["140341"] = {
					"Cloudscraper", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[129598] = {
					"–í—å—é—á–Ω—ã–π –º—É–ª –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[15246] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π –ø–æ–≥–ª–æ—Ç–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[77131] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –≤–æ–ø–ª–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[130622] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –û—Ä–∞–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["132644"] = {
					"Wolf Pup", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["139536"] = {
					"Zara'thik Drone", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["72427"] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[162933] = {
					"–ü–æ–∂–∏–Ω–∞—Ç–µ–ª—å –º—ã—Å–ª–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139387] = {
					"–ù–∞—Å—Å–∞ –•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω—ã–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[62632] = {
					"–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[129599] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –Ω–æ–∂–µ–π –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["151029"] = {
					"Thornspeaker Tavery", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["71772"] = {
					"Kor'kron Assassin", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[154744] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["94697"] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["23232"] = {
					"Mutant War Hound", -- [1]
					"Black Temple", -- [2]
				},
				["77231"] = {
					"Enforcer Sorka", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["145185"] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["104288"] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[139389] = {
					"–í–æ–ª—à–∞—Å–∏—Å –°—Ç–∞–ª—å–Ω–∞—è –ß–µ—à—É—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["138105"] = {
					"Veteran of Stromgarde", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[129600] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[77133] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —â–∏—Ç–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[152699] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["135329"] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				["140769"] = {
					"Goldenvein", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["131718"] = {
					"Zrambles", -- [1]
					"Eye of the Storm", -- [2]
				},
				[62633] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[77134] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["71770"] = {
					"Kor'kron Ironblade", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["127497"] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				["131849"] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				["95072"] = {
					"Greater Earth Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				["22955"] = {
					"Charming Courtesan", -- [1]
					"Black Temple", -- [2]
				},
				["55659"] = {
					"Wild Imp", -- [1]
					"Silvershard Mines", -- [2]
				},
				[150142] = {
					"–•–ª–∞–º–æ–º–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138369] = {
					"–§—É—Ç–±–æ–º–±–Ω—ã–π —Ö—É–ª–∏–≥–∞–Ω", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[129602] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56747] = {
					"–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[56875] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–¥—Ä—ã–≤–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[150143] = {
					"–ü–µ—Ä–µ–º–∞–ª—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134787] = {
					"–ö—Ä–∞–±-–∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["144249"] = {
					"Omega Buster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["131527"] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				["138429"] = {
					"Spitefin Tidebinder", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139395] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152704] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[132741] = {
					"–û–≥–Ω–µ–Ω–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["94604"] = {
					"Gorebound Corruptor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["77182"] = {
					"Oregorger", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139396] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140777"] = {
					"Gemshard Colossus", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[148610] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132742] = {
					"–û–≥–Ω–µ—á–µ—à—É–π—á–∞—Ç—ã–π —Å–∫–∏—Ç–∞–ª–µ—Ü", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["119052"] = {
					"War Banner", -- [1]
					"Twin Peaks", -- [2]
				},
				["126216"] = {
					"Zian-Ti Destroyer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139397] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["132126"] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[161408] = {
					"–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[157825] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∞—è –º—É—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["127503"] = {
					"Overseer Korgus", -- [1]
					"Tol Dagor", -- [2]
				},
				[139398] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["22884"] = {
					"Leviathan", -- [1]
					"Black Temple", -- [2]
				},
				[134280] = {
					"–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["130655"] = {
					"Bobby Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				["141283"] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[132745] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["145033"] = {
					"Arctic Hunter", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139400] = {
					"–†–µ—á–Ω–æ–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135817] = {
					"–ó–µ—Ñ–∏—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139389"] = {
					"Steelscale Volshasis", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[59820] = {
					"–ü–∞–Ω–¥–∞—Ä–µ–Ω-–∞—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["139471"] = {
					"Bugan the Flesh-Crusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135818] = {
					"–ö–ª—É–±—è—â–∏–π—Å—è —Å–æ–ª–¥–∞—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["121567"] = {
					"Ghost", -- [1]
					"Isle of Conquest", -- [2]
				},
				["150292"] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[15247] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["146678"] = {
					"Ancient Protector", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["93295"] = {
					"Darkcaster Adept", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["132913"] = {
					"Island Ettin", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134284] = {
					"–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134796] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["72452"] = {
					"Kor'kron Dire Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["132051"] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				["135763"] = {
					"Voidling", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["22964"] = {
					"Sister of Pleasure", -- [1]
					"Black Temple", -- [2]
				},
				["139818"] = {
					"Security Officer Durk", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139003"] = {
					"Wildlands Warrior", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[148618] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ê–Ω–¥—Ä–µ–Ω–∏–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["135818"] = {
					"Gust Soldier", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[150154] = {
					"–ó–∞–≤—Ä–æ–ª–∏—Å–∫-–∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["136044"] = {
					"Venomswell", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140094"] = {
					"Mudsnout Thornback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131727] = {
					"–§–µ–Ω—Ä–∞ –ö–æ–≤–∞—Ä–Ω–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[160904] = {
					"–û–±—Ä–∞–∑ –æ—Ç–ø—É—â–µ–Ω–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[161416] = {
					"–ê–∫–∏—Ä - —Ç–≤–æ—Ä–µ—Ü —Ç–µ–Ω–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["134214"] = {
					"Riftblade Kelain", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["127049"] = {
					"Drywhisker Surveyor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139406] = {
					"–•–∏—Å—Å–∞–Ω –ö—Ä–æ–≤–∞–≤–∞—è –ß–µ—à—É—è", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["155689"] = {
					"Zanj'ir Gladiator", -- [1]
					"The Eternal Palace", -- [2]
				},
				["152135"] = {
					"Void-Twisted Spellweaver", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				["129550"] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				[120651] = {
					"–í–∑—Ä—ã–≤—á–∞—Ç–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["72484"] = {
					"Zazo", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[140431] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139340"] = {
					"Icetusk Necromancer", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[106319] = {
					"–¢–æ—Ç–µ–º –æ–≥–Ω–µ–∑–æ–ª–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["71923"] = {
					"Bloodclaw", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[140432] = {
					"–°–∫–∞–ª—å–Ω—ã–π –ø—Ä—ã–≥—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[107855] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["135930"] = {
					"Lavarok", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["133663"] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[132755] = {
					"–ü–∞–¥–∞–ª—å—â–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129529"] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[150159] = {
					"–ö–æ—Ä–æ–ª—å –ì–æ–±–±–∞–º–∞–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["151581"] = {
					"Horrific Vision", -- [1]
					"The Eternal Palace", -- [2]
				},
				["90269"] = {
					"Tyrant Velhari", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[150160] = {
					"–ë—É–≥–∞–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134804] = {
					"–ù–µ—Å—Ç–∞—Ä–µ—é—â–∏–π —Ä—É–Ω–æ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["145340"] = {
					"Hydra", -- [1]
					"Twin Peaks", -- [2]
				},
				["138374"] = {
					"Sand Fur", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["95632"] = {
					"Sargerei Enforcer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["76811"] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[130635] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["87761"] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				["135834"] = {
					"Vile Cloud", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129640"] = {
					"Snarling Dockhound", -- [1]
					"Siege of Boralus", -- [2]
				},
				["140619"] = {
					"Coastal Fathomjaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["138888"] = {
					"Bloodwake Soothsayer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["140292"] = {
					"Snowfur Alpha", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["103217"] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[134807] = {
					"–î—Ä–µ–≤–Ω—è—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["132742"] = {
					"Flamescale Strider", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[156818] = {
					"–ì–Ω–µ–≤–∏–æ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[66652] = {
					"–ú–∞–ª–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["152159"] = {
					"Zoatroid", -- [1]
					"The Eternal Palace", -- [2]
				},
				[37813] = {
					"–°–∞—É—Ä—Ñ–∞–Ω–≥ –°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["153060"] = {
					"Cyranus", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140439] = {
					"–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫ - –≤–æ–∂–∞–∫ —Å—Ç–∞–¥–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["134058"] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[150165] = {
					"–ñ–∏–∂–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["136181"] = {
					"Volcano", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["135562"] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156820] = {
					"–î–æ–¥", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["139360"] = {
					"Risen Icetusk Brute", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["140168"] = {
					"Elder Chest-Thump", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[135322] = {
					"–ó–æ–ª–æ—Ç–æ–π –ó–º–µ–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["138842"] = {
					"Ta'kil the Resonator", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140441] = {
					"–ú–æ–ª–æ–¥–æ–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15312] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["137786"] = {
					"Arathor Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["136160"] = {
					"King Dazar", -- [1]
					"Kings' Rest", -- [2]
				},
				[140442] = {
					"–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["150195"] = {
					"Gnome-Eating Slime", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["92523"] = {
					"Vazeel'fazag", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136297"] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140443] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["32517"] = {
					"Loque'nahak", -- [1]
					"The Eternal Palace", -- [2]
				},
				[130639] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["88818"] = {
					"Security Guard", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["140443"] = {
					"Muskflank Charger", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[15984] = {
					"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å—Ç—Ä–∞–∂ –°–∞—Ä—Ç—É—Ä—ã", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["140431"] = {
					"Craghoof Goat", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135963"] = {
					"Earth Elemental", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["149331"] = {
					"Luminous Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["77687"] = {
					"Grom'kar Man-at-Arms", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["140982"] = {
					"Icecracker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139422] = {
					"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –∫—Ä–æ–ª—É—Å–∫–æ–≤", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["145064"] = {
					"Blaze", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[153755] = {
					"–ù–∞–Ω–æ –ú–µ–≥–∞–±—É–º", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[140447] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[153244] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–∞–±–≤–µ–Ω–∏—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["140264"] = {
					"Runehoof Calf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["150276"] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["139393"] = {
					"Mirelurk Clutchguard", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["137405"] = {
					"Gripping Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["59764"] = {
					"Healing Tide Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["139110"] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[139425] = {
					"–ë–µ—à–µ–Ω–∞—è –Ω–∞—Å–µ–¥–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["133436"] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["93830"] = {
					"Iron Dragoon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[127315] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["150547"] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[161437] = {
					"–í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["134150"] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["23418"] = {
					"Essence of Suffering", -- [1]
					"Black Temple", -- [2]
				},
				["139348"] = {
					"Baga the Frostshield", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["130638"] = {
					"Vicejaw Crocolisk", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["136254"] = {
					"Stromgarde Knight", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[143011] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –æ–∫—É–Ω—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135894"] = {
					"Fire Elemental", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["23523"] = {
					"Ashtongue Elementalist", -- [1]
					"Black Temple", -- [2]
				},
				[145059] = {
					"–•–∏—Ç—Ä—ã–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["124316"] = {
					"Pig", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["140760"] = {
					"Earthliving Giant", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["77325"] = {
					"Blackhand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[139429] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≤–æ–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135846] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["140978"] = {
					"Doomtunnel", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["131728"] = {
					"Raul the Tenacious", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56884] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[146596] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["156130"] = {
					"Lesser Zoatroid", -- [1]
					"The Eternal Palace", -- [2]
				},
				[145061] = {
					"–í–∏–∑–∂–∞—â–∏–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["134388"] = {
					"A Knot of Snakes", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["87515"] = {
					"Iron Flame Binder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[34234] = {
					"–£—Å–∏–ª–µ–Ω–Ω—ã–π —Ä—É–Ω–∞–º–∏ —á–∞—Å–æ–≤–æ–π", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["136083"] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[122967] = {
					"–ñ—Ä–∏—Ü–∞ –ê–ª—É–Ω'–∑–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["140839"] = {
					"Water Spirit", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140968] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –∫—É—Å–∞—Ç–µ–ª—å", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["126848"] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				["138187"] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				["71405"] = {
					"Set'thik Wind Wielder", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["151649"] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["88821"] = {
					"Bellows Operator", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[157349] = {
					"–í–µ–ø—Ä—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["71993"] = {
					"Desperation Spawn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["135322"] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				[122968] = {
					"–Ø–∑–º–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["137473"] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				["22853"] = {
					"Illidari Defiler", -- [1]
					"Black Temple", -- [2]
				},
				[145065] = {
					"–û–ø–µ—Ä–∏–≤—à–∏–π—Å—è —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15537] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-–≤–æ–∏–Ω", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["113321"] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[129367] = {
					"–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["138626"] = {
					"Amathet Zealot", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[158375] = {
					"–©—É–ø–∞–ª—å—Ü–µ –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[122969] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["139416"] = {
					"Volshas", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145067] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω–µ–Ω–æ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158376] = {
					"–≠–≥–æ—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139949] = {
					"–ß—É–º–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["136845"] = {
					"Sandscalp Axe Thrower", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["130012"] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[122970] = {
					"–ö—Ä–∞–¥—É—â–∏–π—Å—è —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["73191"] = {
					"Aqueous Defender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[140974] = {
					"–°—Ç–∞—Ä–æ–∑–æ–±", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["131825"] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				["50051"] = {
					"BuBu", -- [1]
					"Warsong Gulch", -- [2]
				},
				["95613"] = {
					"Binder Hallaani", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136880] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[122971] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["28923"] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[136881] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["95638"] = {
					"Sargerei Bannerman", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[150190] = {
					"–í–æ–∑–¥—É—à–Ω—ã–π –ø–æ–¥–∞–≤–∏—Ç–µ–ª—å –û–£-8", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["155859"] = {
					"Vizja'ra", -- [1]
					"The Eternal Palace", -- [2]
				},
				[129370] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[56631] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[136882] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[130138] = {
					"Nevermore", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["129469"] = {
					"Deepsea Crawler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["23403"] = {
					"Illidari Assassin", -- [1]
					"Black Temple", -- [2]
				},
				[159405] = {
					"–ê–∫–∏—Ä-—Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[122972] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∞–≤–≥—É—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["28578"] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				["78978"] = {
					"Darkshard Gnasher", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[129371] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–æ–≤ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["129526"] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				[136884] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –±–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["130325"] = {
					"Deepsea Viseclaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[122973] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –¥—É—Ö–æ–≤–Ω–∏–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["135052"] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				["23421"] = {
					"Ashtongue Channeler", -- [1]
					"Black Temple", -- [2]
				},
				["138369"] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["136398"] = {
					"Illidari Satyr", -- [1]
					"Twin Peaks", -- [2]
				},
				[129372] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å —á–µ—Ä–Ω–æ–π —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["107237"] = {
					"Icy Enchantment", -- [1]
					"The Nighthold", -- [2]
				},
				[150195] = {
					"–°–ª–∏–∑–Ω—é–∫-–≥–Ω–æ–º–æ–µ–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[61239] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["139457"] = {
					"Stonebound Quilen", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["151658"] = {
					"Strider Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["23394"] = {
					"Promenade Sentinel", -- [1]
					"Black Temple", -- [2]
				},
				[54073] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–ø—Å–∞—Ä—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["152162"] = {
					"Void-Twisted Skystriker", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[129373] = {
					"–ü–æ—Ä—Ç–æ–≤–∞—è –∑–∞–≤–æ–¥—á–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["150249"] = {
					"Pistonhead Scrapper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[141495] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[130653] = {
					"–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130909] = {
					"–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["127479"] = {
					"The Sand Queen", -- [1]
					"Tol Dagor", -- [2]
				},
				["140259"] = {
					"Runehoof Greatstag", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["28695"] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
				},
				["139342"] = {
					"Icetusk Warrior", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["146884"] = {
					"Warlord Hjelskard", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139799"] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[157365] = {
					"–ì—Ä–æ–∑–æ–≤–æ–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[15250] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π –¥—É—à–µ–≥—É–±", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[134331] = {
					"–ö–æ—Ä–æ–ª—å –†–∞—É'–∞–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["88288"] = {
					"Dungeoneer's Training Dummy", -- [1]
					"FW Horde Garrison Level 3", -- [2]
				},
				[157366] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[15538] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[150712] = {
					"–¢—Ä–∏–∫—Å–∏ –ò—Å–∫—Ä–æ–∂–≥—É—á–∫–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["11982"] = {
					"Magmadar", -- [1]
					"Molten Core", -- [2]
				},
				[132797] = {
					"–ï–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131864"] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130655] = {
					"–ë–æ–±–±–∏ –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[136893] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –ê–≥–≥–∞–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[137405] = {
					"–¶–µ–ø–∫–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[138429] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[159416] = {
					"–®–∏–ø–∞—Å—Ç–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["131670"] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140989] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56890] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[130400] = {
					"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["153755"] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[159417] = {
					"–°—É–º–∞—Å—à–µ–¥—à–∏–π –º–∞—Å—Ç–µ—Ä –Ω–æ–∂–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["94008"] = {
					"Dark Devourer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["94816"] = {
					"Togdrov", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["10990"] = {
					"Alterac Ram", -- [1]
					"Alterac Valley", -- [2]
				},
				[140991] = {
					"–ú–æ–∑–≥–æ–ø–ª–µ—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139422"] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["139006"] = {
					"Wildlands Furbolg", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["127490"] = {
					"Knight Captain Valyri", -- [1]
					"Tol Dagor", -- [2]
				},
				[134338] = {
					"–ñ—Ä–µ—Ü –º–æ—Ä—è - –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139457] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ü–∏–π–ª–∏–Ω—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56763] = {
					"–ù–∞–±–∏—Ä–∞—é—â–∏–π —Å–∏–ª—ã —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["92526"] = {
					"Zerik'shekor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135130"] = {
					"Siege Tower", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[138434] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["80526"] = {
					"Stubborn Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["94563"] = {
					"Gorebound Fanatic", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["155810"] = {
					"Frozen Sentry", -- [1]
					"The Eternal Palace", -- [2]
				},
				["127799"] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				["12099"] = {
					"Firesworn", -- [1]
					"Molten Core", -- [2]
				},
				["87780"] = {
					"Slagshop Brute", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["72353"] = {
					"Dragonmaw Flameslinger", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139459] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["112671"] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				["131824"] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				["126845"] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				["134990"] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["131545"] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				["134144"] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[138437] = {
					"–°–∑–µ—Ä–∏—Å –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["151685"] = {
					"Stinkfur Denmother", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139461] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–∫–∞–ª–æ–≥—Ä—ã–∑", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56636] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –†–∏'–º–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[132807] = {
					"–¶–∏–π–ª–∏–Ω—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130404] = {
					"–ö—Ä—ã—Å–æ–ª–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["94995"] = {
					"Graggra", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[159425] = {
					"–û–∫–∫—É–ª—å—Ç–∏—Å—Ç–∫–∞ - —Ç–µ–º–Ω–∞—è —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139462] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≥–ª–∏–Ω–æ—á–µ—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["127111"] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[156866] = {
					"–†–∞-–¥–µ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["150169"] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["140354"] = {
					"Brightscale Wind Serpent", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["137817"] = {
					"Cresting Exile", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[139463] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["126095"] = {
					"Vyliss", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["131821"] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				[58812] = {
					"–ó–ª–æ–±–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[146118] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130661] = {
					"–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["136684"] = {
					"Wildhammer Flame-Binder", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["130620"] = {
					"Frostfencer Seraphi", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["11665"] = {
					"Lava Annihilator", -- [1]
					"Molten Core", -- [2]
				},
				["132530"] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				["112676"] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				["14466"] = {
					"Horde Battle Standard", -- [1]
					"Eye of the Storm", -- [2]
				},
				["147936"] = {
					"Azergem Shardback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56765] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[133835] = {
					"–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["112251"] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				["155616"] = {
					"Zanj'ir Brute", -- [1]
					"The Eternal Palace", -- [2]
				},
				[53694] = {
					"–õ—é—Ç–æ–≥—Ä—ã–∑", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[133836] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["138972"] = {
					"Zian-Ti Cloudbreaker", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139467] = {
					"–¶–∏–Ω—å—Å—É –ì—Ä–∞–Ω–∏—Ç–Ω—ã–π –ö—É–ª–∞–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135245"] = {
					"Bilge Rat Demolisher", -- [1]
					"Siege of Boralus", -- [2]
				},
				["95642"] = {
					"Korvos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["85711"] = {
					"Aquatic Technician", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["136270"] = {
					"Captain Nials", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["136402"] = {
					"Ur'zul", -- [1]
					"Twin Peaks", -- [2]
				},
				["146835"] = {
					"Ghoul", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["72903"] = {
					"Kor'kron Siegemaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139469] = {
					"–¶–∑—É-–°–∞–Ω—å –ì—Ä–æ–º–æ–≤–æ–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131685"] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				["144842"] = {
					"Tide Crawler", -- [1]
					"The Eternal Palace", -- [2]
				},
				[56766] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["152364"] = {
					"Radiance of Azshara", -- [1]
					"The Eternal Palace", -- [2]
				},
				[61245] = {
					"–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				["140425"] = {
					"Surefoot", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["71773"] = {
					"Kor'kron Warshaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["72451"] = {
					"Kor'kron Dark Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53695] = {
					"–ö–æ—Å–æ–º–æ—Ä–¥", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["76815"] = {
					"Primal Elementalist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["154744"] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["93952"] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135760"] = {
					"7th Legion Marine", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[34500] = {
					"–ú–µ–¥–≤–µ–¥—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["138887"] = {
					"Bloodwake Mystic", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["151096"] = {
					"Hati", -- [1]
					"The Eternal Palace", -- [2]
				},
				["136721"] = {
					"Circle Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["2442"] = {
					"Cow", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["123287"] = {
					"Southsea Swashbuckler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[150222] = {
					"–¢–æ–∫—Å–∏–∫–æ–∏–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[139473] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ù—É-–°–∏–Ω—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56511] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[132819] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56895] = {
					"–°–ª–∞–±–æ–µ –º–µ—Å—Ç–æ", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[162508] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[26532] = {
					"–•—Ä–æ–Ω–æ–ª–æ—Ä–¥ –≠–ø–æ—Ö", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["71466"] = {
					"Iron Juggernaut", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[132820] = {
					"–ü–æ—Ä–æ—Å–µ–Ω–æ–∫-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["144944"] = {
					"Thirsting Bloodsucker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140984"] = {
					"Frostbore Worm", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["156131"] = {
					"Zanj'ir Myrmidon", -- [1]
					"The Eternal Palace", -- [2]
				},
				["140337"] = {
					"Nightscale Hatchling", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["155869"] = {
					"Shirakess Shadowcaster", -- [1]
					"The Eternal Palace", -- [2]
				},
				[137940] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–∞—è –∞–∫—É–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139476] = {
					"–ö–∞–º–µ–Ω–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135893] = {
					"–ü—ã–ª–∞—é—â–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["130485"] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["92041"] = {
					"Bleeding Darkcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135894] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["140992"] = {
					"Corpseburster", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61247] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∑–µ–ª–µ–Ω–æ—Ä–æ–≥", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[36805] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - –ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[135895] = {
					"–û—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–∞—è –∏—Å–∫—Ä–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["134284"] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				["138103"] = {
					"Stromgarde Arbalest", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["61245"] = {
					"Capacitor Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["137321"] = {
					"Knight of Arathor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["138840"] = {
					"Zara'thik Impaler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["76809"] = {
					"Foreman Feldspar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["61029"] = {
					"Primal Fire Elemental", -- [1]
					"The Eternal Palace", -- [2]
				},
				[139480] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[156884] = {
					"–°—É—â–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Å–∏–ª—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138969] = {
					"–î—É—Ö –º–æ–≥—É –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[15252] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["122088"] = {
					"Slitherblade Skulker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138970] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133852] = {
					"–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134364] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫ - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —è–∏—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[138971] = {
					"–ó–º–µ–π –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["71380"] = {
					"Animated Stone Mogu", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[126832] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω –ö—Ä–∞–≥–≥", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["94777"] = {
					"Morkronn", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["122963"] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				["92038"] = {
					"Salivating Bloodthirster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135204"] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				["150293"] = {
					"Mechagon Prowler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["137485"] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				["132879"] = {
					"Crystalline Giant", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[36807] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - —É—á–µ–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[139486] = {
					"–ù–µ–±–æ–ª–æ–º", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["149555"] = {
					"Abomination", -- [1]
					"Silvershard Mines", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138464] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59458] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["151613"] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["90409"] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["90387"] = {
					"Shadowy Construct", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["92039"] = {
					"Bleeding Grunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["122971"] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				["144839"] = {
					"Whitetail Doe", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["140295"] = {
					"Snowfur Pup", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["731"] = {
					"GORDOGATO", -- [1]
					"Alterac Valley", -- [2]
				},
				["133556"] = {
					"Razak Ironsides", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["155900"] = {
					"Zsal'iss", -- [1]
					"The Eternal Palace", -- [2]
				},
				["145934"] = {
					"Ivan the Mad", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[131812] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["91331"] = {
					"Archimonde", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135903"] = {
					"Manifestation of the Deep", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["126983"] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[146657] = {
					"–ß–∞—Å–æ–≤–∞—è-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["138464"] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[160990] = {
					"–û–±—Ä–∞–∑ –æ—Ç–ø—É—â–µ–Ω–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[161502] = {
					"–ì–æ–ª–æ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ø–ª–æ—Ç–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["141565"] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138468] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59459] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["155275"] = {
					"Tideshaper Korvess", -- [1]
					"The Eternal Palace", -- [2]
				},
				["140432"] = {
					"Craghoof Leaper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138469] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["134602"] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140657"] = {
					"Craghorn Behemoth", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["72744"] = {
					"Kor'kron Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["140632"] = {
					"Scaleback Snapper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138471] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–º–µ–µ—Å—Ç—Ä–∞–∂", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["150297"] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["138825"] = {
					"Ingathora Blood-Drinker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[131817] = {
					"–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[121975] = {
					"–ê–≥–≥—Ä–∞–º–∞—Ä", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["139433"] = {
					"Sister of Anguish", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59460] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[131818] = {
					"–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[131819] = {
					"–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["139539"] = {
					"Tavok, Hammer of the Empress", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158437] = {
					"–ü–∞–¥—à–∏–π –Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[15317] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π —Å–∫–æ—Ä–ø–∏–æ–Ω", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[138986] = {
					"–ë–æ—Ä–≥–ª –ò—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["23237"] = {
					"Bonechewer Blood Prophet", -- [1]
					"Black Temple", -- [2]
				},
				[15509] = {
					"–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –•—É—Ö—É—Ä–∞–Ω", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[138475] = {
					"–¢–∏—Ä–∞–Ω–∏–æ–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["146847"] = {
					"Summoner Laniella", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[131821] = {
					"–ë–µ–∑–ª–∏–∫–∞—è –¥–µ–≤–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["150142"] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[161510] = {
					"–†–∞–∑–¥–∏—Ä–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["127879"] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[150249] = {
					"–î–µ–º–æ–Ω—Ç–∞–∂–Ω–∏—Ü–∞ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["138847"] = {
					"Battle-Mender Ka'vaz", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59461] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["22871"] = {
					"Teron Gorefiend", -- [1]
					"Black Temple", -- [2]
				},
				["136884"] = {
					"Bristlethorn Battleguard", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[133870] = {
					"–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["90296"] = {
					"Soulbound Construct", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["132807"] = {
					"Zian-Ti Quilen", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["71454"] = {
					"Malkorok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[150251] = {
					"–ú–µ—Ö–∞–Ω–∏–∫ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["141566"] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131824] = {
					"–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["131318"] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				["138841"] = {
					"Zara'thik Battlesinger", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138479] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –≤–ª–∞–¥—ã–∫–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["93955"] = {
					"Delusional Zealot", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[132849] = {
					"–ú–µ–¥–≤–µ–∂–æ–Ω–æ–∫-—Å–µ—Ä–æ—à–∫—É—Ä", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[133361] = {
					"–ò–∑–Ω—É—Ä–µ–Ω–Ω—ã–π —Å–ª—É–≥–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[150253] = {
					"–í–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–π —Ä–æ–±–æ–ø–∞—É–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["144293"] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[138992] = {
					"–ü–∞—á–∫—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["126093"] = {
					"Slitherblade Saurok", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["22946"] = {
					"Shadowmoon War Hound", -- [1]
					"Black Temple", -- [2]
				},
				["139439"] = {
					"Duskbinder Zuun", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137969] = {
					"–ü–æ–≥—Ä–µ–±–∞–ª—å–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[88708] = {
					"–ü–∞—à—Ç–µ—Ç", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["135716"] = {
					"Nightsaber Hunter", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["151679"] = {
					"Stinkfur Thumper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134388] = {
					"–ö–ª—É–±–æ–∫ –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["126847"] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				["12076"] = {
					"Lava Elemental", -- [1]
					"Molten Core", -- [2]
				},
				[135924] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω–∞—è —è—Ä–æ—Å—Ç—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138838"] = {
					"Zara'thik Mantid", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140171"] = {
					"Mistfur", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["127757"] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[134389] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["35189"] = {
					"Demon", -- [1]
					"Isle of Conquest", -- [2]
				},
				["129547"] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				["71858"] = {
					"Wavebinder Kardris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[78728] = {
					"–®–∞–∞–¥—É–º", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[134390] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["139751"] = {
					"Stranded Blockader", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["5429"] = {
					"Carrion Bird", -- [1]
					"Eye of the Storm", -- [2]
				},
				["133482"] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["89890"] = {
					"Fel Lord Zakuun", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["145967"] = {
					"RthBdrGinbrg", -- [1]
					"Twin Peaks", -- [2]
				},
				["138627"] = {
					"Amathet Hierophant", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["136905"] = {
					"Forward Lookout", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["134158"] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				["138890"] = {
					"Dargulf the Spirit-Seeker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[78437] = {
					"–ì—É–ª'–∫–æ—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[126205] = {
					"–ù–∞–∂–∏–≤-–æ-–º–∞—Ç–∏–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59553] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–≤—á–∏—Ö –ø—Ç–∏—Ü", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59545] = {
					"–ó–æ–ª–æ—Ç–æ–π –∂—É–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[146678] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–µ –¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["22960"] = {
					"Dragonmaw Wyrmcaller", -- [1]
					"Black Temple", -- [2]
				},
				[59464] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[156145] = {
					"–ü–æ–¥–∑–µ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[62360] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["90485"] = {
					"Felfire Artillery", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[108033] = {
					"–§–∞–ª'–¥–æ—Ä–∞–π—Å–∫–∏–π –ø–∞—É—Ç–∏–Ω–æ—Ö–æ–¥", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["23223"] = {
					"Bonechewer Spectator", -- [1]
					"Black Temple", -- [2]
				},
				[138489] = {
					"–¢–µ–Ω—å –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["148618"] = {
					"Archdruid Andrenius", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[62358] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["80676"] = {
					"Iron Flametwister", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[57109] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["145305"] = {
					"Feral Hulk", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136181] = {
					"–í—É–ª–∫–∞–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["128435"] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				["155860"] = {
					"Shirakess Voidreaper", -- [1]
					"The Eternal Palace", -- [2]
				},
				[126847] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –†–∞—É–ª—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["135231"] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				[156406] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –ø–æ—á–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["22879"] = {
					"Shadowmoon Reaver", -- [1]
					"Black Temple", -- [2]
				},
				[149555] = {
					"–ü–æ–≥–∞–Ω–∏—â–µ", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				["154758"] = {
					"Toxic Monstrosity", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[56762] = {
					"–Æ–π-–ª—É–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[58803] = {
					"–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[62982] = {
					"–ü–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				["129552"] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				["131410"] = {
					"Gargantuan Venomscale", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140787] = {
					"–£–≥–æ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				["132819"] = {
					"Rustpelt Pup", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[121985] = {
					"–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[59555] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[142587] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[126848] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –Æ–¥–æ—Ä–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26530] = {
					"–°–∞–ª—Ä–∞–º–º –ü–ª–æ—Ç–æ—Ä–µ–∑", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[59808] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[15510] = {
					"–§–∞–Ω–∫—Ä–∏—Å—Å –ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω—ã–π", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["129232"] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["58960"] = {
					"Neganix", -- [1]
					"Isle of Conquest", -- [2]
				},
				[151133] = {
					"Hati", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[138493] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["140067"] = {
					"Rustpelt Alpha", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[28201] = {
					"–ñ–µ–ª—á–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["137486"] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				["104676"] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				["140630"] = {
					"Ornate Puffer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[141565] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[89] = {
					"–ò–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[56754] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[62348] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["135169"] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				["146859"] = {
					"Enslaved Rock Elemental", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[61623] = {
					"–ö–∞–ø–ª—è —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[132864] = {
					"–ú–æ–ª–æ–¥–æ–π –∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[141566] = {
					"–ö–∏—à–∫–æ–¥–µ—Ä–∫–∞ –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["139404"] = {
					"High Prophet Massas", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[56719] = {
					"–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["140968"] = {
					"Garnetback Striker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["110340"] = {
					"Ash", -- [1]
					"Twin Peaks", -- [2]
				},
				["155278"] = {
					"Shimmerskin Pufferfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				[59546] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Ä—ã–±–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[58826] = {
					"–¶–∑–∞–æ –ò—Å–∫–∞—Ç–µ–ª—å –°–æ–ª–Ω—Ü–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["93391"] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["144296"] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[156794] = {
					"–ü–æ–≥–ª–æ—â–µ–Ω–Ω–∞—è –¢—å–º–æ–π –∞–≥–µ–Ω—Ç –®–†–£", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[158343] = {
					"–û—Ä–≥–∞–Ω –ø–æ—Ä—á–∏", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[127106] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140854] = {
					"–î—É—Ö –æ—Ç–ª–∏–≤–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["94861"] = {
					"Grim Ambusher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136408"] = {
					"Darkhound", -- [1]
					"Twin Peaks", -- [2]
				},
				[137473] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Å—Ç—Ä–∞–∂–∏ –ê—Ç—É", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["134137"] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[138497] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—à—É–µ–∫–ª—è—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["132849"] = {
					"Grizzlefur Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56395] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[58807] = {
					"–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["127486"] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[137713] = {
					"–ö—Ä–∞–±-–º–∞–≥–Ω–∞—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137474] = {
					"–ö–æ—Ä–æ–ª—å –¢–∏–º–∞–ª–¥–∂–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[158411] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–ª—É–≥–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[59819] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—è", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[140990] = {
					"–ö–æ—Å—Ç–µ—á–µ—à—É–π–Ω—ã–π –ø–ª–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137785"] = {
					"Arathor Faithful", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["71474"] = {
					"Embodied Despair", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[60447] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–±–æ—Ç–∞–∂–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["126918"] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[59835] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["144298"] = {
					"Defense Bot Mk III", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["139475"] = {
					"Jade-Formed Bonesnapper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140430"] = {
					"Craghoof Bounder", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["145851"] = {
					"Kaldorei Hippogryph Rider", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["22876"] = {
					"Coilskar Soothsayer", -- [1]
					"Black Temple", -- [2]
				},
				[56876] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–ø–µ—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["133389"] = {
					"Galvazzt", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["134821"] = {
					"Vilegaze Petrifier", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[130435] = {
					"–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["138889"] = {
					"Uvuld the Forseer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["99541"] = {
					"Risen Skulker", -- [1]
					"Deepwind Gorge", -- [2]
				},
				[136688] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["136837"] = {
					"Venomancer Ant'su", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["12264"] = {
					"Shazzrah", -- [1]
					"Molten Core", -- [2]
				},
				["151742"] = {
					"Void-Twisted Invader", -- [1]
					"Eastern Kingdoms - Vermillion Redoubt - HoA Scenario", -- [2]
				},
				[63808] = {
					"–¢—É—Å–∫–ª—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[137989] = {
					"–ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138501] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["139432"] = {
					"Lu'si", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[27743] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["140692"] = {
					"Bloodbore", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["135472"] = {
					"Zanazal the Wise", -- [1]
					"Kings' Rest", -- [2]
				},
				[15276] = {
					"–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –í–µ–∫'–ª–æ—Ä", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[137478] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –£–∞—Å–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[130436] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[61387] = {
					"–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["124581"] = {
					"Spineshell Snapper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["123292"] = {
					"Sparkleshell Pincher", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["133345"] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["155693"] = {
					"Subdued Brute", -- [1]
					"The Eternal Palace", -- [2]
				},
				[157442] = {
					"–í–∑–æ—Ä –±–µ–∑—É–º–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["125828"] = {
					"Omnipotynt", -- [1]
					"Atal'Dazar", -- [2]
				},
				[150276] = {
					"–¢—è–∂–µ–ª—ã–π —Ö–ª–∞–º–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["140294"] = {
					"Snowfur Wolf", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[61339] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[151812] = {
					"–î–µ—Ç–µ–∫—Ç–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[131849] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[62795] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["146653"] = {
					"Champion Huntress", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[76946] = {
					"–†–∞–∑–ª–æ–º", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[130437] = {
					"–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[56906] = {
					"–î–∏–≤–µ—Ä—Å–∞–Ω—Ç –ö–∏–ø'—Ç–∏–ª–∞–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[156650] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ —Ç—å–º—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["93881"] = {
					"Contracted Engineer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["72352"] = {
					"Dragonmaw Ebon Stalker", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139758] = {
					"–≠–Ω–Ω–∏ –î–≤–∞ –°—Ç–≤–æ–ª–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["123285"] = {
					"Southsea Swabbie", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[126969] = {
					"–¢—Ä–æ—Ç–∞–∫", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[37955] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –∫–æ—Ä–æ–ª–µ–≤–∞ –õ–∞–Ω–∞'—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[161334] = {
					"–°–∫–∞–ª—è—â–∏–π—Å—è —É–∂–∞—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[133663] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["137511"] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				["71433"] = {
					"Spark of Life", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[52558] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –†–∏–æ–ª–∏—Ç", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["17203"] = {
					"INVIZABOL", -- [1]
					"Eye of the Storm", -- [2]
				},
				[158286] = {
					"–ü–µ—Ä–µ–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–µ–≤–æ–π —Ä–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139388] = {
					"–ó–µ—Å—Å'–µ–∑", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[152722] = {
					"–ü–∞–¥—à–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[129016] = {
					"–ú—É—à–∫–µ—Ç–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127111] = {
					"–ë–æ–µ—Ü –Ω–∞ –≤–µ—Å–ª–∞—Ö –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135258] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[158452] = {
					"–ò—Å–∫–∞–∂–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[127879] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[15511] = {
					"–õ–æ—Ä–¥ –ö—Ä–∏", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[146185] = {
					"–û–≥–Ω–µ–∂–∞–ª-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[79507] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[100943] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[37970] = {
					"–ü—Ä–∏–Ω—Ü –í–∞–ª–∞–Ω–∞—Ä", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[138467] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[108034] = {
					"–§–∞–ª'–¥–æ—Ä–∞–π—Å–∫–∏–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				[157447] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π —Å–µ–∫—Ç–∞–Ω—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[137484] = {
					"–ö–æ—Ä–æ–ª—å –ê'–∞–∫—É–ª", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146186] = {
					"–û–≥–Ω–µ–∂–∞–ª-–≤–æ–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138508] = {
					"–í–æ—Ä—Ç–∞–∫—Å –ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["108360"] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				["130521"] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				["140356"] = {
					"Brightscale Hatchling", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[161312] = {
					"–°–æ–∫—Ä—É—à–∞—é—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["127048"] = {
					"Drywhisker Digger", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[137485] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π –∫—Ä–æ–≤—å—é —à–ø–∏–æ–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["135366"] = {
					"Blacktooth Arsonist", -- [1]
					"Tol Dagor", -- [2]
				},
				["139097"] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["129367"] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[53130] = {
					"–î—Ä–µ–≤–Ω–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –ª–∞–≤—ã", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["137092"] = {
					"Valorcall Faithful", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["155272"] = {
					"Blackwater Oracle", -- [1]
					"The Eternal Palace", -- [2]
				},
				["132740"] = {
					"Venomscale Hydra", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137486] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ü–∞—Ç–ª–∞–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["146119"] = {
					"Needleback Brute", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[53691] = {
					"–®—ç–Ω–Ω–æ–∫—Å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["135958"] = {
					"Malachite", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157231] = {
					"–®–∞–¥'—Ö–∞—Ä –ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[95072] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["139357"] = {
					"Icetusk Shambler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157450] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[137487] = {
					"–û—Ö–æ—Ç–Ω–∏—á–∏–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56764] = {
					"–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[128649] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["139390"] = {
					"Scaleguard Sarrisz", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[129015] = {
					"–¢—Ä–µ—Ç–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["130582"] = {
					"Despondent Scallywag", -- [1]
					"Tol Dagor", -- [2]
				},
				[131858] = {
					"–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136976] = {
					"–¢'–∑–∞–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["123288"] = {
					"Southsea Cannoneer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137521"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				["11667"] = {
					"Flameguard", -- [1]
					"Molten Core", -- [2]
				},
				["90435"] = {
					"Kormrok", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[139536] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59598] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["133935"] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				[157452] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π –∞–Ω—Ç–∏–≥–µ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["130436"] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["73539"] = {
					"Kor'kron Den Mother", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["151836"] = {
					"Void Horror", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				[53141] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π –æ–≥–Ω–µ–≤—Å–ø–ª–µ—Å–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["107285"] = {
					"Fiery Enchantment", -- [1]
					"The Nighthold", -- [2]
				},
				[2630] = {
					"–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[127479] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ—Å–∫–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["129366"] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[36811] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - –ø–æ–º–æ—â–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[883] = {
					"–û–ª–µ–Ω—å", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[134797] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∑–∞—Ç–≤–æ—Ä–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["136838"] = {
					"Zgordo the Brutalizer", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[36948] = {
					"–ú—É—Ä–∞–¥–∏–Ω –ë—Ä–æ–Ω–∑–æ–±–æ—Ä–æ–¥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[157813] = {
					"–°–ø—Ä–∞–π—Ç –ü—Ä—ã–≥–æ–∑—É–±—á–∏–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["72455"] = {
					"Overseer Komak", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[33237] = {
					"–£–ª—å–¥—É–∞—Ä—Å–∫–∏–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["53006"] = {
					"Spirit Link Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["135353"] = {
					"Veteran Man O' War", -- [1]
					"Freehold", -- [2]
				},
				[128651] = {
					"–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[58319] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[37972] = {
					"–ü—Ä–∏–Ω—Ü –ö–µ–ª–µ—Å–µ—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["22855"] = {
					"Illidari Nightlord", -- [1]
					"Black Temple", -- [2]
				},
				[140563] = {
					"–°–µ—Ä–Ω–∞—è –±–æ—Ä–∑–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132885] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129788"] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[131726] = {
					"–ì—É–Ω–Ω–æ–ª—å—Ñ –Ø—Ä–æ—Å—Ç–Ω—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[133666] = {
					"–û—Ç–≤–ª–µ–∫–∞—Ç–æ—Ä –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[15311] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["22845"] = {
					"Ashtongue Mystic", -- [1]
					"Black Temple", -- [2]
				},
				[144951] = {
					"–ë–ª–µ–¥–Ω–æ—à–∫—É—Ä—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140564] = {
					"–°–µ—Ä–Ω—ã–π –º–∞–≥–º–æ–∑–µ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59800] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[128140] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –°–≤–µ—Ç–∞", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[162432] = {
					"–ü—Ä–æ–±—É–¥–∏–≤—à–∏–π—Å—è —É–∂–∞—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[128652] = {
					"–í–∏–∫'–ì–æ—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[108027] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø–∞—É—Ç–∏–Ω—ã –®–∏–Ω–∞—Ä–∏—Å", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				[3527] = {
					"–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["91103"] = {
					"Felfire Demolisher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136470] = {
					"–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["130909"] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[56912] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–≥–ª–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[133627] = {
					"–¢–∞–ª–ª–∏ –ë—ã—Å—Ç—Ä–æ—Ü–∞–ø", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[134423] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37012] = {
					"–î—Ä–µ–≤–Ω–∏–π —Å–∫–µ–ª–µ—Ç-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[131864] = {
					"–ì–æ—Ä–∞–∫ –¢—É–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[53786] = {
					"–ü—ã–ª–∞—é—â–µ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["73194"] = {
					"Kor'kron Iron Scorpion", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[154619] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ê—É–º-–∫–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[133912] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134795] = {
					"–°–∫—Ä—ã—Ç—ã–π –æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[61240] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["105419"] = {
					"Dire Basilisk", -- [1]
					"Eye of the Storm", -- [2]
				},
				["155760"] = {
					"Tank Buster MK2", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[53795] = {
					"–ö–ª–∞–¥–∫–∞ —è–∏—Ü", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["90521"] = {
					"Salivating Bloodthirster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[126094] = {
					"–í–æ–ª–Ω–æ–≥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[150293] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[158774] = {
					"–°–ª–æ–º–ª–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[52409] = {
					"–†–∞–≥–Ω–∞—Ä–æ—Å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["140620"] = {
					"South Sea Stinger", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["28579"] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				["131863"] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				["127124"] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				["140355"] = {
					"Brightscale Screecher", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[53134] = {
					"–î—Ä–µ–≤–Ω—è—è –≥–æ–Ω—á–∞—è –Ω–µ–¥—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["129370"] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140294] = {
					"–í–æ–ª–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["140659"] = {
					"Ragestomp", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["91539"] = {
					"Fel Raven", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[156949] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞ –¢–µ—Ä–µ–Ω—Å–æ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[157461] = {
					"–ú–∏—Ü–µ–ª–∏–∞–ª—å–Ω–∞—è –∫–∏—Å—Ç–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["141938"] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150295] = {
					"\"–¢–∞–Ω–∫–æ–±–æ—Ä–µ—Ü-1\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[133379] = {
					"–ì—é—Ä–∑–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[61392] = {
					"–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[127119] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140058] = {
					"–°–µ—Ä–æ—à–∫—É—Ä-–ø–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[53167] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[134417] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["138431"] = {
					"Tidemistress Najula", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[15544] = {
					"–í–µ–º", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[157449] = {
					"–ó–ª–æ–≤–µ—â–∏–π —Ä–µ–∑—á–∏–∫ –¥—É—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[159510] = {
					"–û–∫–æ –≥–ª—É–±–∏–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[156642] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140059] = {
					"–°–µ—Ä–æ—à–∫—É—Ä-–±–æ–µ—Ü", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134941] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["95061"] = {
					"Greater Fire Elemental", -- [1]
					"Silvershard Mines", -- [2]
				},
				["72490"] = {
					"Overseer Mojka", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[150297] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["87084"] = {
					"Warhammer", -- [1]
					"Twin Peaks", -- [2]
				},
				["132299"] = {
					"Angry Treant", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["139842"] = {
					"Risen Ravasaur", -- [1]
					"Eye of the Storm", -- [2]
				},
				[151659] = {
					"–†–∞–∫–µ—Ç–Ω—ã–π —Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["134994"] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				["130437"] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[158328] = {
					"–ò–ª'–≥–∏–Ω–æ—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["73541"] = {
					"Kor'kron Wolf Pup", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[134940] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["28587"] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[32517] = {
					"Mokrator", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["62005"] = {
					"Beast", -- [1]
					"Eye of the Storm", -- [2]
				},
				[56658] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[146116] = {
					"–ò–≥–ª–æ—Å–ø–∏–Ω-–¥–æ–±—ã—Ç—á–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[158327] = {
					"–¢–ª–µ—é—â–∏–π –æ—Å–∫–æ–ª–æ–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["23337"] = {
					"Illidari Centurion", -- [1]
					"Black Temple", -- [2]
				},
				[139946] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[136353] = {
					"–û–≥—Ä–æ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[69791] = {
					"Fumonk", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["81315"] = {
					"Iron Crack-Shot", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["94617"] = {
					"Glynevere", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[135366] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[15622] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["144301"] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["126185"] = {
					"Zian-Ti Shadowcaster", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[159514] = {
					"–ö—Ä–æ–≤—å –ù–∏–∞–ª–æ—Ç—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[106317] = {
					"–¢–æ—Ç–µ–º –±—É—Ä–∏", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[157467] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["129699"] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				["23222"] = {
					"Bonechewer Brawler", -- [1]
					"Black Temple", -- [2]
				},
				["72941"] = {
					"Dragonmaw Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["138101"] = {
					"Stromgarde Sorceress", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["127315"] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[151325] = {
					"–¢—Ä–µ–≤–æ–≥–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["138508"] = {
					"Unbreakable Vortax", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["130635"] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["152236"] = {
					"Lady Ashvane", -- [1]
					"The Eternal Palace", -- [2]
				},
				[152033] = {
					"–ù–µ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["140643"] = {
					"Ferocious Craghorn", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136297] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["135929"] = {
					"Baron Blazehollow", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[53185] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–¥–µ—Å—è—Ç–Ω–∏–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["137026"] = {
					"Newstead Hound", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144160] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –ö—Ä–∞—Å–Ω–æ–∫—Ä—é–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133605] = {
					"–ë–µ–≥–ª—ã–π –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–π", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[131728] = {
					"–†–∞—É–ª—å –°—Ç–æ–π–∫–∏–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[56915] = {
					"–°–æ–ª–Ω—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[53545] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["54318"] = {
					"Anka", -- [1]
					"Eye of the Storm", -- [2]
				},
				[37011] = {
					"–ü—Ä–æ–∫–ª—è—Ç—ã–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["134063"] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[135971] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[136483] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145185] = {
					"\"–ì–Ω–æ–º–æ–≥–µ–¥–¥-0–ù\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[159309] = {
					"–ü–æ—Ö–∏—â–∞—é—â–∏–π –∂–∏–∑–Ω—å –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138019] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140430] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–ª–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127497] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[132879] = {
					"–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140067] = {
					"–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["151752"] = {
					"Voidswarm", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				["148584"] = {
					"Archmage Mordent Evenshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[126100] = {
					"–¢–µ–º–Ω–æ—à–∫—É—Ä—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152809] = {
					"–ê–ª—å–∫—Å'–∫–æ–≤ –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[134437] = {
					"–†–æ–±–æ—Ç-–ª–µ–∫–∞—Ä—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["146872"] = {
					"Kachota the Exiled", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["145927"] = {
					"Starcaller Ellana", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140068] = {
					"–†—ã–∂–µ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["74158"] = {
					"Kor'kron Gunner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[153377] = {
					"–ñ–∏–∂–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["146116"] = {
					"Needleback Forager", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[52524] = {
					"–ü–µ–ø–ª–æ–ø—Ä—è–¥-—Ç–∫–∞—á", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[126092] = {
					"–ì–ª–∞–¥–∏–∞—Ç–æ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15249] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[131670] = {
					"–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["91541"] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["155094"] = {
					"Mechagon Trooper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["134232"] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[140769] = {
					"–ó–æ–ª–æ—Ç–∞—è –ñ–∏–ª–∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[65362] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[127490] = {
					"–†—ã—Ü–∞—Ä—å-–∫–∞–ø–∏—Ç–∞–Ω –í–∞–ª–∏—Ä–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["134617"] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135975] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["85748"] = {
					"Iron Mauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[137511] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[133389] = {
					"–ì–∞–ª—å–≤–∞–∑–∑—Ç", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[37007] = {
					"–ó–∞–∫–ª—è—Ç—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[144971] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["151674"] = {
					"Stinkfur Hopling", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131585"] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				["138428"] = {
					"Spitefin Myrmidon", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157475] = {
					"–ê–Ω–∞–±–æ–ª–∏—á–µ—Å–∫–∏–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[54161] = {
					"–ü–æ–ª—ã—Ö–∞—é—â–∏–π –∞—Ä—Ö–æ–Ω—Ç", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[122263] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161243] = {
					"–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["92144"] = {
					"Dia Darkwhisper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["72498"] = {
					"Theramore Citizen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[123287] = {
					"–°–æ—Ä–≤–∏–≥–æ–ª–æ–≤–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144944] = {
					"–ê–ª—á–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161571] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["127482"] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[37666] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π —Ç–∞–∫—Ç–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["140973"] = {
					"Bore Tunneler", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["139413"] = {
					"Mirelurk Oasis-Speaker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135989"] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				["155688"] = {
					"Azsh'ari Frostbinder", -- [1]
					"The Eternal Palace", -- [2]
				},
				[134173] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140977] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["139001"] = {
					"Wildlands Ursa", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[122264] = {
					"–°—Ç–∞—Ä–∞—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["137012"] = {
					"Newstead Huntsman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[53206] = {
					"–ê–¥—Å–∫–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[140038] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —É–≥–æ—Ä—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["144952"] = {
					"Hookfang", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136160] = {
					"–ö–æ—Ä–æ–ª—å –î–∞–∑–∞—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["10184"] = {
					"Onyxia", -- [1]
					"Onyxia's Lair", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[36808] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - —Ä–µ–≤–Ω–∏—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[157238] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–∫–∏—Ç—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["138647"] = {
					"Hjana Fogbringer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["28584"] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[53794] = {
					"–¢–ª–µ—é—â–∏–π –¥–µ—Ç–µ–Ω—ã—à", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[127477] = {
					"–ú–æ—Ä—Å–∫–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["147932"] = {
					"Agitated Azershard", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137516] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[105885] = {
					"–ê–ª—á—É—â–∞—è –æ–±–æ–ª–æ—á–∫–∞", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				[161241] = {
					"–ú–∞–ª'—Ç–∏—Ä - –º–∞–≥ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131825] = {
					"–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["22880"] = {
					"Shadowmoon Champion", -- [1]
					"Black Temple", -- [2]
				},
				[59605] = {
					"–û—Ç—É–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["23318"] = {
					"Ashtongue Rogue", -- [1]
					"Black Temple", -- [2]
				},
				[132910] = {
					"–í–∏–∑–≥—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["152910"] = {
					"Queen Azshara", -- [1]
					"The Eternal Palace", -- [2]
				},
				["137233"] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[52498] = {
					"–ë–µ—Ç'—Ç–∏–ª–∞–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[155098] = {
					"–†–µ–∫—Å–∞—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[135470] = {
					"–ê–∫–∞'–∞–ª–∏ –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140077] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[152874] = {
					"–í–µ–∑'–æ–∫–∫ –ë–µ—Å–ø—Ä–æ—Å–≤–µ—Ç–Ω—ã–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["93156"] = {
					"Eredar Faithbreaker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[150292] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –∫–∞–≤–∞–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[133935] = {
					"–û–∂–∏–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["139459"] = {
					"Stonebound Soldier", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144970] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["76973"] = {
					"Hans'gar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[140078] = {
					"–ì–æ—Ä–∏–ª–ª–∞-–∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["72983"] = {
					"Corrupted Skullsplitter", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["147968"] = {
					"Agitated Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["122986"] = {
					"Wild Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				["134060"] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[58198] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["133384"] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135472] = {
					"–ó–∞–Ω–∞–∑–∞–ª –ú—É–¥—Ä—ã–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["5913"] = {
					"Tremor Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[78735] = {
					"–ó–∞—Ä'—à—É—É–ª", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[132913] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[103326] = {
					"Spirit Beast", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["71481"] = {
					"Embodied Sorrow", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["72456"] = {
					"Korgra the Snake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[77734] = {
					"–¢–µ—Ä–æ–Ω'–∫—Ä–æ–≤", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["155871"] = {
					"Voidbound Terror", -- [1]
					"The Eternal Palace", -- [2]
				},
				[123291] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["133852"] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[78734] = {
					"–ó–∏–ø—Ç–µ–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[137521] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[125828] = {
					"–ú—É—â—â—ã–Ω–∞—ã", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["13320"] = {
					"Commander Karl Philips", -- [1]
					"Alterac Valley", -- [2]
				},
				["127488"] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[135474] = {
					"–í–µ–¥—å–º–∞-–ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["136249"] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[150169] = {
					"–¢–æ–∫—Å–∏—á–Ω—ã–π —Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["73538"] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[37595] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π —Ä—ã—Ü–∞—Ä—å –∫—Ä–æ–≤–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[135839] = {
					"–ë–æ–ª–æ—Ç–Ω—ã–π –≥–∞–∑–æ–≤–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["149311"] = {
					"Shandris Feathermoon", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[61398] = {
					"–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["138498"] = {
					"Twilight Drake", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["28586"] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				["112709"] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[157486] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –æ–ø—É—Ö–æ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[162534] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[37017] = {
					"–£–±–∏–π—Ü–∞ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["5925"] = {
					"Grounding Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["80719"] = {
					"Iron Smith", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[155951] = {
					"–†–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["150160"] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[34269] = {
					"–î–æ–±—ã—á–∞—Ç–æ—Ä XR-949", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["129548"] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				["152703"] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["134797"] = {
					"Ocean Recluse", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[154663] = {
					"–ü–æ–≥–ª–æ—â–∞—é—â–∞—è –≥–Ω–æ–º–æ–≤ –∫–∞–ø–ª—è", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[155952] = {
					"–°–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[135989] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[53901] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –º–∞–≥–º–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[139804] = {
					"–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["144299"] = {
					"Workshop Defender", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131669] = {
					"–®–∏–ø–∞—Å—Ç–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["140068"] = {
					"Rustpelt Snarler", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[155953] = {
					"–ö'–¢–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140085] = {
					"–ë–æ–ª—å—à–æ–π –µ–ª–µ–Ω—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158781] = {
					"–ò—Å—Å–µ—á–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[56792] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç —Å–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[36829] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[133943] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["133627"] = {
					"Tally Zapnabber", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[61399] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[151859] = {
					"–ú–æ–≥–∏–ª—å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[140086] = {
					"–ï–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["133079"] = {
					"Newstead Farmhand", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["135759"] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[133944] = {
					"–ê—Å–ø–∏–¥–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["139759"] = {
					"Mutineer Jalia", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131823] = {
					"–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138842] = {
					"–¢–∞'–∫–∏–ª –£—Å–∏–ª–∏—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140087] = {
					"–ú–æ–ª–æ–¥–∞—è –µ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140564"] = {
					"Brimstone Lavamaw", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["127480"] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				["95603"] = {
					"Mystic Aaran", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["140678"] = {
					"Frostbeard Howler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["138848"] = {
					"Blade-Dancer Zorlak", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["105427"] = {
					"Skyfury Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["137819"] = {
					"Thundering Exile", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["144782"] = {
					"Brother Bruen", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[156980] = {
					"–°—É—â–Ω–æ—Å—Ç—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[34267] = {
					"–¢–µ—Ö–Ω–∏–∫ –ø–æ –æ–±–ª–æ–º–∫–∞–º", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["133432"] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[123290] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ç—Ä–µ—â–æ—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["72728"] = {
					"Kor'kron Blood Axe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["71382"] = {
					"Burial Urn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[122984] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["135248"] = {
					"Briona the Bloodthirsty", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["122967"] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				["139394"] = {
					"Mirelurk Bog Priest", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140069] = {
					"–í–æ–ª–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136883] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à–∏–ø–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[77890] = {
					"–î–∞—Ä—É–≥ –í–ª–∞—Å—Ç–Ω–∞—è", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["139469"] = {
					"Zu-Xan of Thunder", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[37027] = {
					"–ò–µ—Ä–æ—Ñ–∞–Ω—Ç —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["137443"] = {
					"Friar Farshire", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["155619"] = {
					"Zanj'ir Honor Guard", -- [1]
					"The Eternal Palace", -- [2]
				},
				[133436] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[37003] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[157354] = {
					"–í–µ–∫—Å–∏–æ–Ω–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[150254] = {
					"–£—Ç–∏–ª—å—Ö–∞—É–Ω–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136665] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[37571] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["138969"] = {
					"Zian-Ti Spirit", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[34271] = {
					"–ö–æ–º–ø–∞–∫—Ç–æ–±–æ—Ç XD-175", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["138836"] = {
					"Zara'thik Swarmguard", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["155273"] = {
					"Garval the Vanquisher", -- [1]
					"The Eternal Palace", -- [2]
				},
				["145059"] = {
					"Cunning Nightwing", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135240] = {
					"–°—É–±—Å—Ç–∞–Ω—Ü–∏—è –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[126190] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["134157"] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[161746] = {
					"–û—Å—Å–∏—Ä–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[153401] = {
					"–ö'—Ç–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["134280"] = {
					"Vindicator Baatul", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129517] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —è—â–µ—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[108197] = {
					"–ò—Å—Å–æ—Ö—à–∏–π - –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –º–∞–≥–∏–µ–π", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["138970"] = {
					"Vengeful Spirit", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["146816"] = {
					"Sir Barton Brigham", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["138558"] = {
					"Faceless One", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[52571] = {
					"–ú–∞–∂–æ—Ä–¥–æ–º –§—ç–Ω–¥—Ä–∞–ª –û–ª–µ–Ω–∏–π –®–ª–µ–º", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[131847] = {
					"–ì—É–ª—è–∫–∞ –∏–∑ –¥–æ–º–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["134795"] = {
					"Veiled Hermit", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["138506"] = {
					"Crimsonscale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131850] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[37038] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["119724"] = {
					"Tidal Surger", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140094] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37021] = {
					"–°–≤—è—â–µ–Ω–Ω–∏–∫ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["87771"] = {
					"Slagshop Worker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["76877"] = {
					"Gruul", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["136828"] = {
					"Witherbranch Warrior", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["139425"] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[79508] = {
					"–ê–±–∏—Å—Å–∞–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[133685] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[140095] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[148797] = {
					"–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[155090] = {
					"–ê–Ω–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä—è–¥–Ω–∏–∫–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[15543] = {
					"–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –Ø—É–¥–∂", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[42718] = {
					"Cat", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["130896"] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
				},
				["76974"] = {
					"Franzok", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["22963"] = {
					"Bonechewer Worker", -- [1]
					"Black Temple", -- [2]
				},
				[130028] = {
					"–ñ—Ä–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[130640] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-—Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["11669"] = {
					"Flame Imp", -- [1]
					"Molten Core", -- [2]
				},
				["140260"] = {
					"Runehoof Courser", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["71771"] = {
					"Kor'kron Arcweaver", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["145298"] = {
					"Feral Hungerer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133384] = {
					"–ú–µ—Ä–µ–∫—Ç–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["29240"] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[139341] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["22949"] = {
					"Gathios the Shatterer", -- [1]
					"Black Temple", -- [2]
				},
				[149311] = {
					"–®–∞–Ω–¥—Ä–∏—Å–∞ –û–ø–µ—Ä–µ–Ω–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[76595] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è –∂—Ä–∏—Ü–∞ –¥—É—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[162303] = {
					"–ê–∫–∏—Ä - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä–æ—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[122532] = {
					"–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["146770"] = {
					"Druid of the Claw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[160061] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["152312"] = {
					"Azsh'ari Witch", -- [1]
					"The Eternal Palace", -- [2]
				},
				["130027"] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				["145061"] = {
					"Screeching Nightwing", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["22917"] = {
					"Illidan Stormrage", -- [1]
					"Black Temple", -- [2]
				},
				["71477"] = {
					"Embodied Gloom", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["146828"] = {
					"Feral Pup", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["146866"] = {
					"Enslaved Frost Elemental", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140444"] = {
					"Muskflank Bull", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129699] = {
					"–õ—é–¥–≤–∏–≥ —Ñ–æ–Ω –¢–æ—Ä—Ç–æ–ª–ª–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[34273] = {
					"–£—Ç–∏–ª—è—Ç–æ—Ä XB-488", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				[139343] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["94285"] = {
					"Fel Extractor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["34802"] = {
					"Glaive Thrower", -- [1]
					"Isle of Conquest", -- [2]
				},
				["140076"] = {
					"Knucklebump Silverback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139394] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136005] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140076] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-–≤–æ–∂–∞–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["144295"] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["28580"] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				["72493"] = {
					"Trak'gen", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["72958"] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["129372"] = {
					"Blacktar Bomber", -- [1]
					"Siege of Boralus", -- [2]
				},
				[136006] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["139339"] = {
					"Icetusk Defender", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139470] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –∑–º–µ–µ–≤ –°–∏—à–æ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["153090"] = {
					"Lady Venomtongue", -- [1]
					"The Eternal Palace", -- [2]
				},
				[146244] = {
					"–ß—É–¥–æ–≤–∏—â–Ω–æ–µ –ñ–∞–ª–æ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["139431"] = {
					"Guardian of Tombs", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[37217] = {
					"–ü—Ä–µ–ª–µ—Å—Ç—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[36961] = {
					"–°–µ—Ä–∂–∞–Ω—Ç —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[140102] = {
					"–ù–æ–∂–µ—Å–≤–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["150859"] = {
					"Za'qul", -- [1]
					"The Eternal Palace", -- [2]
				},
				["151659"] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[124581] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["131402"] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[124582] = {
					"–£—â–µ–ª—å–Ω–∏–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[158158] = {
					"–°—Ç—Ä–∞–∂ –∫—É–∑–Ω–∏ –•—É—Ä—Ä—É–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["135962"] = {
					"Crag Rager", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["13358"] = {
					"Stormpike Bowman", -- [1]
					"Alterac Valley", -- [2]
				},
				["131577"] = {
					"Spirit of Fire", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[161229] = {
					"–ê–∫–∏—Ä - –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å —è–¥–æ–≤", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["140263"] = {
					"Runehoof Stag", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["137442"] = {
					"High Sorceress Marala", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["138556"] = {
					"Tainted Ooze", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[146247] = {
					"–ë–µ–ª–∞—è –°–º–µ—Ä—Ç—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131402] = {
					"–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["131587"] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				["155628"] = {
					"Azsh'ari Oracle", -- [1]
					"The Eternal Palace", -- [2]
				},
				[162764] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				["142312"] = {
					"Skullripper", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["93162"] = {
					"Umbral Supplicant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[124583] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["126422"] = {
					"Coralback Scuttler", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140434] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—Ä–æ–≥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56541] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["94806"] = {
					"Fel Hellweaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["132802"] = {
					"Craghorn Yeti", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[26483] = {
					"Kongfu", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				["155276"] = {
					"Bursting Cragfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				["23018"] = {
					"Shadowmoon Houndmaster", -- [1]
					"Black Temple", -- [2]
				},
				["146876"] = {
					"Machitu the Brutal", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["71397"] = {
					"Zar'thik Amber Priest", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[148137] = {
					"–í–æ–ª–Ω–æ–ª–æ–≤-–ª—É–Ω–∞—Ç–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["72358"] = {
					"Kor'kron Cannon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["87989"] = {
					"Forgemistress Flamehand", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146895] = {
					"–í–∞–Ω–¥–∞–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140442"] = {
					"Muskflank Yak", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[75927] = {
					"–ê–∑–∑–∞–∫–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[139460] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ç–∫–∞—á –∑–µ–º–ª–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139414"] = {
					"Mire Priest Vassz", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["72351"] = {
					"Dragonmaw Flagbearer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["140087"] = {
					"Pinegraze Doe", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138968"] = {
					"Zian-Ti Ironmaw", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[52530] = {
					"–ê–ª–∏—Å—Ä–∞–∑–æ—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[146119] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["61056"] = {
					"Primal Earth Elemental", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[145001] = {
					"–õ–∞–Ω–∞—Ä–∞ –õ—É–Ω–Ω—ã–π –°—É–º—Ä–∞–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["91646"] = {
					"Grim Collaborator", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["73742"] = {
					"Thresher Turret", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["72354"] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[138061] = {
					"–î–æ–∫–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[160249] = {
					"–®–∏–ø–∞—Å—Ç–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[134990] = {
					"–ó–∞—Ä—è–∂–µ–Ω–Ω–∞—è –ø–µ—Å—á–∞–Ω–∞—è –¥—å—è–≤–æ–ª–∏—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["23236"] = {
					"Bonechewer Shield Disciple", -- [1]
					"Black Temple", -- [2]
				},
				["129015"] = {
					"Southsea Third Mate", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[109229] = {
					"–ì–æ–ª–µ–º –ø–æ–º—Ä–∞—á–µ–Ω–Ω—ã—Ö", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["134804"] = {
					"Timeless Runeback", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["140693"] = {
					"Hisskarath", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["104818"] = {
					"Ancestral Protection Totem", -- [1]
					"Silvershard Mines", -- [2]
				},
				[53087] = {
					"–ü—Ä–∞–≤–∞—è –Ω–æ–≥–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[134991] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[131408] = {
					"–î—É–±–æ–ª–æ–º –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136330] = {
					"–®–∏–ø—ã –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["140271"] = {
					"Severhorn", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140353"] = {
					"Brightscale Coilfang", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["22877"] = {
					"Coilskar Wrangler", -- [1]
					"Black Temple", -- [2]
				},
				["133430"] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146893] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[54015] = {
					"–ú–∞–∂–æ—Ä–¥–æ–º –§—ç–Ω–¥—Ä–∞–ª –û–ª–µ–Ω–∏–π –®–ª–µ–º", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["139750"] = {
					"Stranded Bruiser", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[152396] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ê–∑–µ—Ä–æ—Ç", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				["130025"] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				["134612"] = {
					"Grasping Tentacles", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["72365"] = {
					"Dragonmaw Cannoneer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[146134] = {
					"–¢–æ—Ä–æ–ø—ã–≥–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["93913"] = {
					"Fel Scorcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134993] = {
					"–ú—á–∏–º–±–∞ –ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137835"] = {
					"Vicious Black Bear", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[146892] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["130400"] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
				},
				["11673"] = {
					"Ancient Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				[146187] = {
					"–û–≥–Ω–µ–∂–∞–ª-–ø–æ–∫–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["123274"] = {
					"Saltfur Brawler", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134994] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[130024] = {
					"–ú–æ–∫—Ä–∞—è –∫–æ—Ä–∞–±–µ–ª—å–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["93288"] = {
					"Solenin", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["139395"] = {
					"Mirelurk Bogtender", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[56799] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["152512"] = {
					"Stormwraith", -- [1]
					"The Eternal Palace", -- [2]
				},
				[56927] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["76806"] = {
					"Heart of the Mountain", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["132746"] = {
					"Frostscale Broodmother", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139472] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –ª–æ—Ä–¥ –¶–∏–Ω—å—à–æ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138992"] = {
					"Muckfin Puddlejumper", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140444] = {
					"–ú–∞—Ç–µ—Ä—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["104415"] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				["72658"] = {
					"Amalgamated Hubris", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[133972] = {
					"–¢—è–∂–µ–ª–æ–µ –æ—Ä—É–¥–∏–µ", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[146769] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[56718] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["151687"] = {
					"Shrieker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["147225"] = {
					"Azerite Extractor", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["94018"] = {
					"Shadow Burster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["73342"] = {
					"Fallen Pool Tender", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["137784"] = {
					"Arathor Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["153196"] = {
					"Scrapbone Grunter", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["87411"] = {
					"Workshop Guardian", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[77812] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –¥—É—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[59487] = {
					"–©–∏—Ç-–ø—É–∑—ã—Ä—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["132922"] = {
					"Enslaved Murloc", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["137614"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131863] = {
					"–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["142587"] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				["80534"] = {
					"Ornery Ironhoof", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[157253] = {
					"–ö–∞'–∑–∏—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139353] = {
					"–ù–µ–∂–∏–≤–æ–π –≥–µ—Ä–æ–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["135975"] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["130319"] = {
					"Slitherblade Phalanx", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[28340] = {
					"–ù–µ–ø—Ä–∏—è—Ç–µ–ª—å –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["136688"] = {
					"Fanatical Driller", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[123286] = {
					"–®—É–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140343"] = {
					"Razorwing", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["130661"] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138187] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[140630] = {
					"–ù–∞—Ä—è–¥–Ω—ã–π –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["155271"] = {
					"Abyssal Spearhunter", -- [1]
					"The Eternal Palace", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["143622"] = {
					"Wild Imp", -- [1]
					"Silvershard Mines", -- [2]
				},
				["126424"] = {
					"Coralback Surfcrawler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136139] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[75839] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ö–∞–∞—Ç–∞—Ä", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[158035] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –£–º–±—Ä–∏–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129599"] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				["71476"] = {
					"Embodied Misery", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["131578"] = {
					"Burning Exile", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[150250] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[77935] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["138826"] = {
					"Leikneir the Brave", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["71480"] = {
					"Sun Tenderheart", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[140632] = {
					"–ß–µ—à—É–π—á–∞—Ç–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["123293"] = {
					"Royal Sand Crab", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["94924"] = {
					"Iron Peon", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["139445"] = {
					"Tumat", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["119990"] = {
					"Kain", -- [1]
					"Deepwind Gorge", -- [2]
				},
				["146844"] = {
					"Olfkrig the Indentured", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[126095] = {
					"–í—É–ª–∏—Å—Å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56929] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["92330"] = {
					"Soul of Socrethar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["127484"] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[153942] = {
					"–ê–Ω–Ω–∏–≥–∏–ª—è—Ç–æ—Ä –õ–∞–∫'—Ö–∞–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[146887] = {
					"–ì–µ—Ä–Ω –ü–æ–≥–∞–Ω—ã–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[123146] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["22844"] = {
					"Ashtongue Battlelord", -- [1]
					"Black Temple", -- [2]
				},
				["132170"] = {
					"Striped Pacu", -- [1]
					"The Eternal Palace", -- [2]
				},
				[56867] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –ø–ª—É—Ç", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["138500"] = {
					"Twilight Scalesister", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[15516] = {
					"–ë–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂ –°–∞—Ä—Ç—É—Ä–∞", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[153943] = {
					"–î–µ—Ü–∏–º–∞—Ç–æ—Ä –®–∏–∫'–≤–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[150146] = {
					"–®–∞–º–∞–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["146864"] = {
					"Mistscorn Earthbinder", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["134005"] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["136207"] = {
					"Stromgarde Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[140123] = {
					"–û—Ä—É–∂–µ–π–Ω–∏–∫ –•–∞–ª—É", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145242] = {
					"–ù–∞–≥–∞–∑–∞–≤—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["108361"] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				["77477"] = {
					"Marak the Blooded", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["79200"] = {
					"Blackrock Forge Specialist", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[131318] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["137940"] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134993"] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				[136541] = {
					"–ñ–µ–ª—á–Ω—ã–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[59873] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["131818"] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[162647] = {
					"–î–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è –∂–µ—Ä—Ç–≤–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[161218] = {
					"–ê–∫–∏—Ä-–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["62982"] = {
					"Mindbender", -- [1]
					"Silvershard Mines", -- [2]
				},
				["133943"] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[158041] = {
					"–ù'–ó–æ—Ç –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[28341] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["12119"] = {
					"Flamewaker Protector", -- [1]
					"Molten Core", -- [2]
				},
				[56930] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –≤–µ—Å—Ç–Ω–∏–∫ —Ä–æ—è", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["150253"] = {
					"Weaponized Crawler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["137484"] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[135007] = {
					"–°—Ç—Ä–∞–∂ —Å—Ñ–µ—Ä—ã", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["73745"] = {
					"Kor'kron Iron Sentinel", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["129600"] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				["131974"] = {
					"Lieutenant Valen", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[129369] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["131009"] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				["112603"] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[159578] = {
					"–û—Ç–∫—Ä—ã—Ç—ã–π —Å–∏–Ω–∞–ø—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[158146] = {
					"–ü–∞–¥—à–∞—è —Å—Ç—Ä–∞–Ω–Ω–∏—Ü–∞ —Ä–∞–∑–ª–æ–º–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["139399"] = {
					"Mirelurk Basher", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["139338"] = {
					"Icetusk Prophet", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["129016"] = {
					"Southsea Musketeer", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161217] = {
					"–ê–∫–∏—Ä-–±—ã—Å—Ç—Ä–æ–Ω–æ–≥", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["1863"] = {
					"Nazriana", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				["28826"] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[417] = {
					"Maatom", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				["11659"] = {
					"Molten Destroyer", -- [1]
					"Molten Core", -- [2]
				},
				["151657"] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[146884] = {
					"–í–æ–µ–≤–æ–¥–∞ –•—å–µ–ª—å—Å–∫–∞—Ä–¥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["147965"] = {
					"Volatile Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139342] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[128434] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[126181] = {
					"–†–∞–º—É—Ç –ß–µ—Ä–Ω—ã–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135406] = {
					"–û–∂–∏–≤—à–µ–µ –∑–æ–ª–æ—Ç–æ", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["145865"] = {
					"Worgen Musketeer", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["72661"] = {
					"Zeal", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["139392"] = {
					"Mirelurk Saurok", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["139946"] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[156146] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - —â–∏—Ç–æ–Ω–æ—Å–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["145372"] = {
					"Wild Mooncaller", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["126919"] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				["144772"] = {
					"Lady Tamakeen", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[164188] = {
					"–ü–ª–æ–¥ —É–∂–∞—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["129231"] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["91521"] = {
					"Vindicator Bramu", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[53732] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π —Ç–ª–µ—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["135895"] = {
					"Blazing Spark", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[128435] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Å–∞—É—Ä–∏–¥", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["81117"] = {
					"Karnor the Cruel", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["144973"] = {
					"Kaldorei Sentinel", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[164189] = {
					"–ü–ª–æ–¥ —É–∂–∞—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["129032"] = {
					"Stranded Crewman", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140768] = {
					"–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["90316"] = {
					"Shadow-Lord Iskar", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["93616"] = {
					"Dreadstalker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["138019"] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				["12056"] = {
					"Baron Geddon", -- [1]
					"Molten Core", -- [2]
				},
				["123146"] = {
					"Torn Spirit", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["124927"] = {
					"Jun-Ti", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["132532"] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[136549] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["146853"] = {
					"Kefolkis the Unburied", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["134283"] = {
					"Anchorite Lanna", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["140677"] = {
					"Hulking Frostbeard", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133588] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∑—Ä—ã–≤—á–∞—Ç–∫–æ—Å—Ç—Ä–µ–ª", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["133685"] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["132919"] = {
					"Spitefin Behemoth", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[129366] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["144759"] = {
					"Keeper Dagda", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["72893"] = {
					"Orgrimmar Peon", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["138846"] = {
					"Amberwinged Mindsinger", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["136050"] = {
					"Gorestream", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139110] = {
					"–ò—Å–∫—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[36969] = {
					"–†—É–∂–µ–π–Ω–∏—Ü–∞ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["112718"] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				["131847"] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				["140086"] = {
					"Pinegraze Courser", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["95614"] = {
					"Binder Eloah", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[139360] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["136353"] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["153194"] = {
					"Briny Bubble", -- [1]
					"The Eternal Palace", -- [2]
				},
				["126423"] = {
					"Coralback Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["150143"] = {
					"Scrapbone Grinder", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[159219] = {
					"–ú—Ä–∞—á–Ω—ã–π –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["137103"] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				["136347"] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[130485] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[144231] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["79208"] = {
					"Blackrock Enforcer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["132744"] = {
					"Frostscale Hydra", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["144993"] = {
					"Crazed Thistlebear", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["133870"] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[131407] = {
					"–ì—Ä–æ–º–∏–ª–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[133482] = {
					"–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["151900"] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				["142336"] = {
					"Pygmy Octopus", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155657] = {
					"–•–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["145303"] = {
					"Kaldorei Glaive Thrower", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[144232] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[161124] = {
					"–£—Ä–≥'—Ä–æ—Ç –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –ì–µ—Ä–æ–µ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[15229] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[11262] = {
					"–î—Ä–∞–∫–æ–Ω—á–∏–∫ –û–Ω–∏–∫—Å–∏–∏", -- [1]
					"–õ–æ–≥–æ–≤–æ –û–Ω–∏–∫—Å–∏–∏", -- [2]
				},
				[158565] = {
					"–ù–∞—Ä–æ—Å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[53094] = {
					"–û–≥–Ω–µ–Ω–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞ - –ø–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[53222] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-—Ü–µ–Ω—Ç—É—Ä–∏–æ–Ω", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[139626] = {
					"–£—Ç–æ–ø—à–∏–π –º–∞—Ç—Ä–æ—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[37098] = {
					"–í–∞–ª—å'–∫–∏—Ä–∞-–≥–ª–∞—à–∞—Ç–∞–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["140038"] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["103822"] = {
					"Treant", -- [1]
					"Isle of Conquest", -- [2]
				},
				[15517] = {
					"–û—É—Ä–æ", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["92913"] = {
					"Gorebound Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[123285] = {
					"–Æ–Ω–≥–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137097"] = {
					"Valorcall Spellweaver", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["145399"] = {
					"Wild Starcaller", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135923"] = {
					"Hound of Gazzran", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["122089"] = {
					"Slitherblade Oracle", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["126190"] = {
					"Zian-Ti Brutalizer", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[158567] = {
					"–ò–∑–º—É—á–µ–Ω–Ω—ã–π –∫–æ—Ä'–∫—Ä–æ–Ω—Å–∫–∏–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["95640"] = {
					"Sargerei Soul Cleaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134286] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["152816"] = {
					"Stormling", -- [1]
					"The Eternal Palace", -- [2]
				},
				["22939"] = {
					"Temple Concubine", -- [1]
					"Black Temple", -- [2]
				},
				[134283] = {
					"–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["126100"] = {
					"Duskcoat Prowler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["138501"] = {
					"Twilight Whelp", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["11672"] = {
					"Core Rager", -- [1]
					"Molten Core", -- [2]
				},
				["133836"] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				["12118"] = {
					"Lucifron", -- [1]
					"Molten Core", -- [2]
				},
				[129208] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[53095] = {
					"–û–≥–Ω–µ–Ω–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞ - –º–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[56678] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –ü–æ—Å–æ—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["136829"] = {
					"Witherbranch Axe Thrower", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61029] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[130488] = {
					"–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["128551"] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[53223] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–¥—Ä–µ—Å—Å–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[153531] = {
					"–ê–∫–∏—Ä-–∫–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["72421"] = {
					"Kor'kron Overseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[152939] = {
					"–ë–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["138247"] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["130653"] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["136403"] = {
					"Void Terror", -- [1]
					"Twin Peaks", -- [2]
				},
				["139004"] = {
					"Wildlands Shaman", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["150773"] = {
					"Shimmerskin Pufferfish", -- [1]
					"The Eternal Palace", -- [2]
				},
				[146876] = {
					"–ú–∞—á–∏—Ç—É –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156523] = {
					"–ú–∞—É—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138255] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["135961"] = {
					"Deepstone Crusher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["136713"] = {
					"Highlands Laborer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[163690] = {
					"–ù–∞—á–µ—Ä—Ç–∞—Ç–µ–ª—å —à–∞—Ç'—è—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["150190"] = {
					"HK-8 Aerial Oppression Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[59494] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["139812"] = {
					"Venture Producer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131492"] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[134514] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["22950"] = {
					"High Nethermancer Zerevor", -- [1]
					"Black Temple", -- [2]
				},
				["147948"] = {
					"Coagulated Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["135475"] = {
					"Kula the Butcher", -- [1]
					"Kings' Rest", -- [2]
				},
				["133463"] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["146860"] = {
					"Mistscorn Marauder", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["63508"] = {
					"Xuen", -- [1]
					"Alterac Valley", -- [2]
				},
				["72564"] = {
					"Doomlord", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36844] = {
					"–í–æ—Å–∫—Ä–µ—à–µ–Ω–Ω—ã–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ - –ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["132868"] = {
					"Congealed Azerite", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["72249"] = {
					"Galakras", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53096] = {
					"–î–µ—Ç–µ–Ω—ã—à –æ–≥–Ω–µ–Ω–Ω–æ–π —á–µ—Ä–µ–ø–∞—Ö–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[53224] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["72150"] = {
					"Kor'kron Shadowmage", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[61670] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[37228] = {
					"–í–æ–∏–Ω –°–ª—É–∂–∏—Ç–µ–ª–µ–π –õ—å–¥–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["153026"] = {
					"NdNd", -- [1]
					"Eye of the Storm", -- [2]
				},
				[138465] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[37868] = {
					"–í–æ—Å–∫—Ä–µ—à–µ–Ω–Ω—ã–π –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[131445] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –±–ª–æ–∫–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["23399"] = {
					"Suffering Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				["103225"] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[134599] = {
					"–£—Å–∏–ª–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["23397"] = {
					"Illidari Blood Lord", -- [1]
					"Black Temple", -- [2]
				},
				["154174"] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				["140800"] = {
					"Cloudwing the Killthief", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134005] = {
					"–°–ª–∞–Ω—Ü–µ–µ–¥", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[56924] = {
					"–†–∞—Å—Å–≤–∏—Ä–µ–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["138819"] = {
					"Bloodwake Marauder", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["106319"] = {
					"Ember Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[140148] = {
					"–ë–µ—Å–Ω–æ–≤–∞—Ç—ã–π —Å–µ—Ä–æ—à–∫—É—Ä", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59751] = {
					"–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["146178"] = {
					"Azurespine", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["135007"] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["23420"] = {
					"Essence of Anger", -- [1]
					"Black Temple", -- [2]
				},
				["76906"] = {
					"Operator Thogar", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["131408"] = {
					"Venture Muscle", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140989"] = {
					"Bonescale Worm", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144244] = {
					"\"–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π –ª—É–ø—Ü–µ–≤–∞—Ç–æ—Ä\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[131436] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["122970"] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[139194] = {
					"–ì–Ω–∏–ª–æ–∂–æ—Ä", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["12259"] = {
					"Gehennas", -- [1]
					"Molten Core", -- [2]
				},
				["145402"] = {
					"Frenzied Wildheart", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["142324"] = {
					"Bluefin Dolphin", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["56524"] = {
					"Iso", -- [1]
					"Eye of the Storm", -- [2]
				},
				[37229] = {
					"–ö–æ–ª–¥—É–Ω—å—è –°–ª—É–∂–∏—Ç–µ–ª–µ–π –õ—å–¥–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[144757] = {
					"–≠–¥–≥–∞—Ä–¥ –¢–µ–º–Ω—ã–π –ö–æ–≥–æ—Ç—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[123288] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137591] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["126969"] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
				},
				["115663"] = {
					"Harry", -- [1]
					"Twin Peaks", -- [2]
				},
				["22875"] = {
					"Coilskar Sea-Caller", -- [1]
					"Black Temple", -- [2]
				},
				["134787"] = {
					"Spineclaw Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144246] = {
					"–ö–£-–î–ñ0", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["137320"] = {
					"Champion Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[58856] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140980] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146871] = {
					"–ú–∞—Ç—Ä–∏–∞—Ä—Ö –ù–∞—Å'–Ω–∞–π—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["147933"] = {
					"Geoactive Azershard", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129640] = {
					"–ó–ª–æ–±–Ω—ã–π –ø–æ—Ä—Ç–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["130028"] = {
					"Ashvane Priest", -- [1]
					"Tol Dagor", -- [2]
				},
				["134786"] = {
					"Spineclaw Sandsnapper", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[59752] = {
					"–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				["135699"] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				["138427"] = {
					"Spitefin Harpooner", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["23330"] = {
					"Dragonmaw Wind Reaver", -- [1]
					"Black Temple", -- [2]
				},
				["139341"] = {
					"Icetusk Shadowcaster", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["134139"] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129214] = {
					"–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[144248] = {
					"–ì–ª–∞–≤–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ò—Å–∫—Ä–æ—Ç–æ—á–µ—Ü", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[161140] = {
					"–ë–≤–µ–º–±–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[15230] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["58959"] = {
					"Gib'tok", -- [1]
					"The Eternal Palace", -- [2]
				},
				["155612"] = {
					"Azsh'ari Channeler", -- [1]
					"The Eternal Palace", -- [2]
				},
				["94832"] = {
					"Gorebound Assassin", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["150165"] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["137458"] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
				},
				["94693"] = {
					"Siegeworks Technician", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[37230] = {
					"–õ–µ–¥—è–Ω–æ–π –∑–º–µ–π –®–ø–∏–ª—è", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[61928] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["139804"] = {
					"Venture Inspector", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134012] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["129208"] = {
					"Dread Captain Lockwood", -- [1]
					"Siege of Boralus", -- [2]
				},
				["93931"] = {
					"Gorebound Felcaster", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["140990"] = {
					"Bonescale Spitter", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129471] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["140059"] = {
					"Grizzlefur Mauler", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["134629"] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["129227"] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["131812"] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				["135365"] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				["12100"] = {
					"Lava Reaver", -- [1]
					"Molten Core", -- [2]
				},
				["72367"] = {
					"Dragonmaw Tidal Shaman", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["141988"] = {
					"Spider", -- [1]
					"Twin Peaks", -- [2]
				},
				["22882"] = {
					"Shadowmoon Deathshaper", -- [1]
					"Black Temple", -- [2]
				},
				["138822"] = {
					"Bloodwake Harpooner", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["90284"] = {
					"Iron Reaver", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["91305"] = {
					"Fel Iron Summoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["132050"] = {
					"Huntmaster Theodore", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["122973"] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[136984] = {
					"–†–µ–±–∞–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["146769"] = {
					"Druid of the Claw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["91543"] = {
					"Corrupted Talonpriest", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[53244] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["71543"] = {
					"Immerseus", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["34793"] = {
					"Catapult", -- [1]
					"Isle of Conquest", -- [2]
				},
				[57080] = {
					"–ü—Ä–æ–∫–ª—è—Ç—ã–π —Å–≤–∏—Ç–æ–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				["155763"] = {
					"Darkweaver Kar'dress", -- [1]
					"The Eternal Palace", -- [2]
				},
				["145001"] = {
					"Lanara Moonshade", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["138632"] = {
					"Guardian Asuda", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[144765] = {
					"–ê—Å–∏—Ç—Ä–∞ –ñ—É—Ç–∫–∞—è –ü–µ—Å–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[61929] = {
					"–°–∏–∫'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["94724"] = {
					"Bryanda", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[150396] = {
					"–í–æ–∑–¥—É—à–Ω–æ–µ —Å—É–¥–Ω–æ R-21/X", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138623] = {
					"–ê–º–∞—Ç–µ—Ç-–ª—É—á–Ω–∏–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[150397] = {
					"–ö–æ—Ä–æ–ª—å –ú–µ—Ö–∞–≥–æ–Ω", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[135552] = {
					"–ú–µ—á–µ–Ω–Ω—ã–π —Å–º–µ—Ä—Ç—å—é –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["82308"] = {
					"Shadow", -- [1]
					"Silvershard Mines", -- [2]
				},
				[132481] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["150254"] = {
					"Scraphound", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["17252"] = {
					"Izikkilig", -- [1]
					"Silvershard Mines", -- [2]
				},
				["23215"] = {
					"Ashtongue Sorcerer", -- [1]
					"Black Temple", -- [2]
				},
				["140609"] = {
					"Ravenous Mako", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131009] = {
					"–î—É—Ö –∑–æ–ª–æ—Ç–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["136005"] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["132837"] = {
					"Beach Strider", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["134417"] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["141495"] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				["10981"] = {
					"Frost Wolf", -- [1]
					"Alterac Valley", -- [2]
				},
				["135474"] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138625] = {
					"–ê–º–∞—Ç–µ—Ç-–∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56863] = {
					"–°–æ–Ω–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["115905"] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				["150251"] = {
					"Pistonhead Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["130335"] = {
					"Gritplate Crystaleye", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["140357"] = {
					"Venomreaver", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["152009"] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["130298"] = {
					"Water Elemental", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[138626] = {
					"–ê–º–∞—Ç–µ—Ç-—Ñ–∞–Ω–∞—Ç–∏–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[163708] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≤—Ä–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["131311"] = {
					"Unleashed Azerite", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[37232] = {
					"–ù–µ—Ä—É–±'–∞—Ä—Å–∫–∏–π –¥–µ—Ç–µ–Ω—ã—à", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["127381"] = {
					"Silt Crab", -- [1]
					"Tol Dagor", -- [2]
				},
				["113512"] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[130011] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138627] = {
					"–ê–º–∞—Ç–µ—Ç-–∏–µ—Ä–æ—Ñ–∞–Ω—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["128651"] = {
					"Hadal Darkfathom", -- [1]
					"Siege of Boralus", -- [2]
				},
				["155738"] = {
					"Rallying Banner", -- [1]
					"The Eternal Palace", -- [2]
				},
				["146874"] = {
					"Windcaller Mariah", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["130621"] = {
					"Squallshaper Bryson", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["150397"] = {
					"King Mechagon", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["136250"] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["93308"] = {
					"Portal Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["134767"] = {
					"Deathclaw Egg-Mother", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["131817"] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				["139462"] = {
					"Stonebound Shale-Speaker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["87719"] = {
					"Ogron Hauler", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["84860"] = {
					"Iron Earthbinder", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["113128"] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				["146186"] = {
					"Firesting Warrior", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[59479] = {
					"–Ø–Ω—å-–ß–∂—É –í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[138629] = {
					"–í–∏–∫–∞—Ä–∏–π –î–∂–æ—Å–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37116] = {
					"–ö–æ–ª–¥—É–Ω —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[162664] = {
					"–ê–∫–∏—Ä-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[140677] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π —Å–∏–ª–∞—á", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["72485"] = {
					"Goma", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["137716"] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["137713"] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["94779"] = {
					"Sovokk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["28547"] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[163712] = {
					"–£–º–∏—Ä–∞—é—â–µ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["153377"] = {
					"Goop", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[140678] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["126963"] = {
					"Gwyndra Wildhammer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[134024] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[157613] = {
					"–ü–∞—Å—Ç—å –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["135192"] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				["22945"] = {
					"Shadowmoon Blood Mage", -- [1]
					"Black Temple", -- [2]
				},
				[135048] = {
					"–ó–∞–ø–∞—á–∫–∞–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –ø–æ—Ä–æ—Å–µ–Ω–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["138061"] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["111075"] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[140679] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π –≤–µ–Ω–¥–∏–≥–æ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["28546"] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["129602"] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[135049] = {
					"–ì—Ä–æ–∑–Ω–æ–∫—Ä—ã–ª—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["140987"] = {
					"Fleshmelter the Insatiable", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["76814"] = {
					"Flamebender Ka'graz", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["140681"] = {
					"Gurudu The Gorge", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140680] = {
					"–õ–µ–¥–æ—Ä–æ–≥ –ë–µ—Å–Ω–æ—Ä–µ–≤–µ—Ü", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129371"] = {
					"Riptide Shredder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["87521"] = {
					"Iron Slag-Shaper", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["138438"] = {
					"Tidereaver Steelfang", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["11658"] = {
					"Molten Giant", -- [1]
					"Molten Core", -- [2]
				},
				["22848"] = {
					"Storm Fury", -- [1]
					"Black Temple", -- [2]
				},
				[135562] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["91522"] = {
					"Protector Bajunt", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[132491] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["140450"] = {
					"Dunu the Blind", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15263] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–∫–µ—Ä–∞–º", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[131383] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["121571"] = {
					"Spirit Beast", -- [1]
					"Eye of the Storm", -- [2]
				},
				["135258"] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["145337"] = {
					"Sandclaw Crab", -- [1]
					"The Eternal Palace", -- [2]
				},
				["883"] = {
					"Deer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[135052] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["134514"] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["94859"] = {
					"Armored Skullsmasher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[128455] = {
					"–¢'–ª–æ–Ω–¥–∂–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[138635] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –•—É—Å–∞–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[128967] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["139663"] = {
					"Dampscale Reedweaver", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[136076] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["131667"] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				["134686"] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["138338"] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				["71475"] = {
					"Rook Stonetoe", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[138636] = {
					"–ü—Ä–∏–Ω—Ü –ê–±–∞—Ä–∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["139410"] = {
					"Visz the Silent Blade", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135241"] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				["22887"] = {
					"High Warlord Naj'entus", -- [1]
					"Black Temple", -- [2]
				},
				["151579"] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["123291"] = {
					"Sparkleshell Crab", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["77936"] = {
					"Greater Storm Elemental", -- [1]
					"Alterac Valley", -- [2]
				},
				["84859"] = {
					"Iron Cleaver", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["94284"] = {
					"Fiery Enkindler", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135406"] = {
					"Animated Gold", -- [1]
					"Kings' Rest", -- [2]
				},
				["138255"] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				["145065"] = {
					"Fledgling Nightwing", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157609] = {
					"–ö'—Ç–∏—Ä —Ä–µ–∑—á–∏–∫ —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[133007] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[137614] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["137029"] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["23083"] = {
					"Shadowmoon Riding Hound", -- [1]
					"Black Temple", -- [2]
				},
				["128652"] = {
					"Viq'Goth", -- [1]
					"Siege of Boralus", -- [2]
				},
				["133438"] = {
					"Stromgarde Sorceress", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[134063] = {
					"–ë—Ä–∞—Ç –ê–π—Ä–æ–Ω—Ö–∞–ª–ª", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["151676"] = {
					"Stinkfur Hooligan", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137103] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["132760"] = {
					"Plains Creeper", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["137487"] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				["155618"] = {
					"Zanj'ir Huntress", -- [1]
					"The Eternal Palace", -- [2]
				},
				[128969] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["144294"] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["93615"] = {
					"Felborne Overfiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136592] = {
					"–§–ª–∏–Ω–Ω –§—ç–π—Ä–≤–∏–Ω–¥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127381] = {
					"–ò–ª—å–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["134251"] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				["133963"] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["133585"] = {
					"Dizzy Dina", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["151812"] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["135049"] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[158092] = {
					"–ü–∞–¥—à–∏–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["146863"] = {
					"Mistscorn Ravager", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["140991"] = {
					"Marrowbore", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["150159"] = {
					"King Gobbamak", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[144299] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["73226"] = {
					"Lesser Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["81318"] = {
					"Iron Gunnery Sergeant", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[143760] = {
					"–°–∫–æ–∫-–Ω–∞-–ü–µ–Ω–µ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["132755"] = {
					"Breakbeak Scavenger", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140689] = {
					"–ü–æ–ª–∑—É–Ω-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["156132"] = {
					"Azsh'ari Witch", -- [1]
					"The Eternal Palace", -- [2]
				},
				["134024"] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				["140297"] = {
					"Nok-arak", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[36724] = {
					"–°–ª—É–≥–∞ —Ç—Ä–æ–Ω–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[136083] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["130522"] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				["126092"] = {
					"Slitherblade Gladiator", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140690] = {
					"–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["23400"] = {
					"Illidari Archon", -- [1]
					"Black Temple", -- [2]
				},
				["22878"] = {
					"Aqueous Lord", -- [1]
					"Black Temple", -- [2]
				},
				[146834] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–º–∞–≥–∏—Å—Ç—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146833] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["24207"] = {
					"Army of the Dead", -- [1]
					"Warsong Gulch", -- [2]
				},
				[129227] = {
					"–ê–∑–µ—Ä–æ–∫–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["138821"] = {
					"Bloodwake Warmaiden", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["136976"] = {
					"T'zala", -- [1]
					"Kings' Rest", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["131726"] = {
					"Gunnolf the Ferocious", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["136888"] = {
					"Dirt-Speaker Barrul", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["137830"] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144298] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç II\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[140692] = {
					"–ö—Ä–æ–≤–æ–ø–æ–ª–æ–∑", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140180] = {
					"–ò–∑–¥–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["72945"] = {
					"Dragonmaw Bonecrusher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["71378"] = {
					"Quilen Guardian", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["140787"] = {
					"Ember Elemental", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				["134418"] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[146835] = {
					"–í—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[159632] = {
					"–°–µ–∫—Ç–∞–Ω—Ç–∫–∞ - —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["138660"] = {
					"Mist Hound", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["94804"] = {
					"Shambling Hulk", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["140690"] = {
					"Dreadfang Viper", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["134991"] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140434"] = {
					"Craghoof Rockhorn", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[36597] = {
					"–ö–æ—Ä–æ–ª—å-–ª–∏—á", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[36725] = {
					"–ù–µ—Ä—É–±'–∞—Ä—Å–∫–∏–π –Ω–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[36853] = {
					"–°–∏–Ω–¥—Ä–∞–≥–æ—Å–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["95282"] = {
					"Azgalor", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[120526] = {
					"Fiertai", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				[53617] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["151754"] = {
					"Void Haunt", -- [1]
					"Emerald Dream - HoA Scenario", -- [2]
				},
				["137067"] = {
					"Valorcall Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[126919] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[126423] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["72412"] = {
					"Kor'kron Grunt", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[15233] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["146657"] = {
					"Veteran Sentinel", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["122969"] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[105427] = {
					"–¢–æ—Ç–µ–º –Ω–µ–±–µ—Å–Ω–æ–π —è—Ä–æ—Å—Ç–∏", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[76259] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[134041] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[146838] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137160"] = {
					"Valorcall Engineer", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["22997"] = {
					"Flame of Azzinoth", -- [1]
					"Black Temple", -- [2]
				},
				["137516"] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[99541] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[145303] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[137625] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["133361"] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				["28838"] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				["138489"] = {
					"Shadow of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				["140458"] = {
					"Bramblefur Bull", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["131785"] = {
					"Buzzing Drone", -- [1]
					"Tol Dagor", -- [2]
				},
				["138254"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[15264] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["90432"] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[146840] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["129559"] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				["144244"] = {
					"The Platinum Pummeler", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["16934"] = {
					"GnomeStalker", -- [1]
					"Silvershard Mines", -- [2]
				},
				[161173] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –¥–æ–∑–æ—Ä–Ω—ã–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["155919"] = {
					"Stormling", -- [1]
					"The Eternal Palace", -- [2]
				},
				[137627] = {
					"–°–∂–∏–º–∞—é—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["146892"] = {
					"Fleshrot Marauder", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["144160"] = {
					"Chopper Redhook", -- [1]
					"Siege of Boralus", -- [2]
				},
				["28926"] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[129231] = {
					"–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["135964"] = {
					"Rumbling Earth", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["71395"] = {
					"Modified Anima Golem", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["144957"] = {
					"Shali'i", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["131436"] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				["139667"] = {
					"Seer Grglok", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["141939"] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126928] = {
					"–ö–æ—Ä—Å–∞—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["72947"] = {
					"Kor'kron Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["130334"] = {
					"Gritplate Gazer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["146854"] = {
					"Stella Darkpaw", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["134056"] = {
					"Aqu'sirr", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["144286"] = {
					"Asset Manager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129232] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146843] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["139415"] = {
					"Slitherscale", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["127019"] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				["132745"] = {
					"Frostscale Wanderer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[12129] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –û–Ω–∏–∫—Å–∏–∏", -- [1]
					"–õ–æ–≥–æ–≤–æ –û–Ω–∏–∫—Å–∏–∏", -- [2]
				},
				["22947"] = {
					"Mother Shahraz", -- [1]
					"Black Temple", -- [2]
				},
				["139626"] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["71859"] = {
					"Earthbreaker Haromm", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[36855] = {
					"–õ–µ–¥–∏ –°–º–µ—Ä—Ç–Ω—ã–π –®–µ–ø–æ—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["72483"] = {
					"Sarok", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["127106"] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[152987] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –≤–æ–ª–∏", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[53619] = {
					"–î—Ä—É–∏–¥ –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[157594] = {
					"–ú–∞–ª—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["132864"] = {
					"Juvenile Knucklebump", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["138630"] = {
					"Cleric Izzad", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[157602] = {
					"–î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["72496"] = {
					"Overseer Thathung", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["130024"] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				[144286] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–∫—Ç–∏–≤–∞–º–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[152988] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Ç–µ–Ω–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["23398"] = {
					"Angered Soul Fragment", -- [1]
					"Black Temple", -- [2]
				},
				["88708"] = {
					"chaotik", -- [1]
					"Isle of Conquest", -- [2]
				},
				[154524] = {
					"–ö'—Ç–∏—Ä —Ä–µ–∑—á–∏–∫ —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["144970"] = {
					"Kaldorei Archer", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["139806"] = {
					"Venture Demolitions Expert", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["135959"] = {
					"Quakestomp the Rumbler", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["151147"] = {
					"Hati", -- [1]
					"Silvershard Mines", -- [2]
				},
				["71921"] = {
					"Darkfang", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["139754"] = {
					"Shipwrecked Navigator", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["134012"] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[162715] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["112665"] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				["134390"] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["22956"] = {
					"Sister of Pain", -- [1]
					"Black Temple", -- [2]
				},
				[127124] = {
					"–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["152313"] = {
					"Dreadcoil Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[162716] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["134331"] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				["132074"] = {
					"Overseer Krix", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["71529"] = {
					"Demossauro", -- [1]
					"Twin Peaks", -- [2]
				},
				["146187"] = {
					"Firesting Dominator", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131492] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["151148"] = {
					"daredevil", -- [1]
					"Isle of Conquest", -- [2]
				},
				["134739"] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				["92911"] = {
					"Hulking Berserker", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["155434"] = {
					"Emissary of the Tides", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[162717] = {
					"–ó–ª–æ–≤–µ—â–∞—è —Ä–µ–∑—á–∏—Ü–∞ –¥—É—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[156575] = {
					"–¢–µ–º–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –ó–∞–Ω–µ—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["93968"] = {
					"Shadowfel Warden", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[136100] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["146893"] = {
					"Fleshrot Mystic", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["94947"] = {
					"Fel-Starved Trainee", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["87448"] = {
					"Ironworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["130026"] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[162718] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω–∞—è –∫–∞—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["90199"] = {
					"Gorefiend", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["122263"] = {
					"Spineshell Snapjaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["95630"] = {
					"Construct Peacekeeper", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136214"] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["138499"] = {
					"Twilight Dragonkin", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["135817"] = {
					"Zephyr", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["138562"] = {
					"Void Maggot", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[162719] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["137064"] = {
					"Valorcall Marksman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[126419] = {
					"Naroua", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				["133972"] = {
					"Heavy Cannon", -- [1]
					"Tol Dagor", -- [2]
				},
				[156577] = {
					"–¢–µ—Ä—É–º –ü–æ–¥–∑–µ–º–Ω–∞—è –ö—É–∑–Ω—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["22951"] = {
					"Lady Malande", -- [1]
					"Black Temple", -- [2]
				},
				["139530"] = {
					"Earth-Wrought Siegebreaker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["136592"] = {
					"Flynn Fairwind", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[14465] = {
					"–ë–æ–µ–≤–æ–π —à—Ç–∞–Ω–¥–∞—Ä—Ç –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				["22962"] = {
					"Priestess of Delight", -- [1]
					"Black Temple", -- [2]
				},
				[65522] = {
					"–©–∏—Ç-–ø—É–∑—ã—Ä—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["138497"] = {
					"Twilight Scalesworn", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144293] = {
					"–ü–µ—Ä–µ—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Ö–æ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[53616] = {
					"–ö–∞—Ä –í–µ—á–Ω–æ–ø—ã–ª–∞—é—â–∏–π", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["136246"] = {
					"Stromgarde Faithful", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["145304"] = {
					"Feral Strangler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134056] = {
					"–ê–∫–≤–∞'—Å–∏—Ä—Ä", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146853] = {
					"–ö–µ—Ñ–æ–ª–∫–∏—Å –≠–∫—Å–≥—É–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["71603"] = {
					"Sha Puddle", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["22883"] = {
					"Aqueous Spawn", -- [1]
					"Black Temple", -- [2]
				},
				[144294] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –±–æ–µ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["131823"] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[157603] = {
					"–ö–∞–ø–ª—è –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["134364"] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["154240"] = {
					"Azshara's Devoted", -- [1]
					"The Eternal Palace", -- [2]
				},
				["128969"] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[163746] = {
					"\"–®–æ–∫–æ—Ç—Ä–æ–Ω X1\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["146833"] = {
					"Necromancer Conjurer", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144295] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[59764] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[157604] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[137626] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134058] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –§—ç–π", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["28837"] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[159633] = {
					"–°–µ–∫—Ç–∞–Ω—Ç–∫–∞-–ø–∞–ª–∞—á", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["140451"] = {
					"Doting Calfmother", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144296] = {
					"–¢–∞–Ω–∫-–ø–∞—É–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["132904"] = {
					"Sandscalp Villager", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157605] = {
					"–ü–æ–¥–∑–µ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["94873"] = {
					"Felfire Flamebelcher", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["137880"] = {
					"Northfold Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["133835"] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[131785] = {
					"–ñ—É–∂–∂–∞—â–∏–π —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				["71715"] = {
					"Orgrimmar Faithful", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53494] = {
					"–ë–µ–π–ª—Ä–æ–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["144071"] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				["139343"] = {
					"Icetusk Drudge", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134602] = {
					"–°–∫—Ä—ã—Ç–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134060] = {
					"–õ–æ—Ä–¥ –®—Ç–æ—Ä–º—Å–æ–Ω–≥", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["28965"] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[131527] = {
					"–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[76260] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π –ø–∏—Ä–æ–º–∞–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["140976"] = {
					"Bore Worm", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["134437"] = {
					"Medic Bot", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[157607] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Ç–µ–Ω–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140691] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[126424] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –ø—Ä–∏–ª–∏–≤–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["127485"] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				["138281"] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[146832] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["102263"] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				["71392"] = {
					"Shadow Ritualist Phylactery", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[157608] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –≤–æ–ª–∏", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["94607"] = {
					"Gorebound Cauterizer", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["138644"] = {
					"Kvaldir Cursewalker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137068"] = {
					"Valorcall Cavalry", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[151978] = {
					"–í–æ–¥–Ω—ã–π –¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144300] = {
					"–ñ–∏—Ç–µ–ª—å –ú–µ—Ö–∞–≥–æ–Ω–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[121562] = {
					"Nager", -- [1]
					"–ö–∞–Ω—å–æ–Ω –°—É—Ä–æ–≤—ã—Ö –í–µ—Ç—Ä–æ–≤", -- [2]
				},
				["137625"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["23524"] = {
					"Ashtongue Spiritbinder", -- [1]
					"Black Temple", -- [2]
				},
				["23469"] = {
					"Enslaved Soul", -- [1]
					"Black Temple", -- [2]
				},
				[56865] = {
					"–í–æ–¥–Ω—ã–π —Ç–∞–Ω—Ü–æ—Ä", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["73104"] = {
					"Unstable Spark", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["140792"] = {
					"Breakbeak Bonepicker", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144301] = {
					"–ñ–∏–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[157439] = {
					"–Ø—Ä–æ—Å—Ç—å –ù'–ó–æ—Ç–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[157610] = {
					"–ö'—Ç–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["136934"] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["71482"] = {
					"Embodied Desperation", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["146840"] = {
					"Skeleton Guardian", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["152128"] = {
					"Orgozoa", -- [1]
					"The Eternal Palace", -- [2]
				},
				["29264"] = {
					"Spirit Raptor", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				["23216"] = {
					"Ashtongue Defender", -- [1]
					"Black Temple", -- [2]
				},
				["138566"] = {
					"Nyl'sozz", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139396"] = {
					"Mirelurk Guardian", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["28581"] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[130521] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146862] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["144757"] = {
					"Edgard Shadeclaw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["111463"] = {
					"Mochi", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				[144303] = {
					"–°–¢–†–ê–ñ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[132530] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[157612] = {
					"–û–∫–æ –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[126918] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["131727"] = {
					"Fenrae the Cunning", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["132481"] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				["150146"] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[56439] = {
					"–®–∞ –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[76263] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –º–∞–≥", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["134286"] = {
					"Archmage Tamuura", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["112638"] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				["23402"] = {
					"Illidari Battle-mage", -- [1]
					"Black Temple", -- [2]
				},
				[130522] = {
					"–ú–æ—Ä—è—á–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["94618"] = {
					"Cattwen", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["146834"] = {
					"Necromancer Master", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["60561"] = {
					"Earthgrab Totem", -- [1]
					"Warsong Gulch", -- [2]
				},
				[132532] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[157614] = {
					"–®—É–ø–∞–ª—å—Ü–µ –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[133556] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[135044] = {
					"–ö—Ä–æ–º—Å–∞—Ç–µ–ª—å –ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["23028"] = {
					"Bonechewer Taskmaster", -- [1]
					"Black Temple", -- [2]
				},
				["139397"] = {
					"Mirelurk Lurker", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[145865] = {
					"–í–æ—Ä–≥–µ–Ω-–º—É—à–∫–µ—Ç–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["104596"] = {
					"Scrubber", -- [1]
					"The Nighthold", -- [2]
				},
				[161198] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –î—É—à–∞—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["111071"] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[133557] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[134069] = {
					"–í–æ–ª'–∑–∏—Ç –®–µ–ø—á—É—â–∞—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["139350"] = {
					"Anaha Witherbreath", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["93392"] = {
					"Captured Prisoner", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["143011"] = {
					"Sandy Perch", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["132835"] = {
					"Dreadfang Snake", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158588] = {
					"–ì–∞–º–æ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[135246] = {
					"–õ–æ—Ç—Ç–∏ –ö–æ–ª—é—á–∫–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[66413] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["139949"] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["146832"] = {
					"Necromancer Disciple", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["140293"] = {
					"Snowfur Snarler", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["134701"] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				["22881"] = {
					"Aqueous Surger", -- [1]
					"Black Temple", -- [2]
				},
				[130012] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129470] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["128631"] = {
					"Tidal Clickshell", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["139537"] = {
					"Zara'thik Kunchong", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["155768"] = {
					"Squallbinder Mal'ur", -- [1]
					"The Eternal Palace", -- [2]
				},
				["155814"] = {
					"Eldritch Understudy", -- [1]
					"The Eternal Palace", -- [2]
				},
				["2630"] = {
					"Earthbind Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				["100820"] = {
					"Elemental Raptor", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[37501] = {
					"–ù–µ—Ä—É–±'–∞—Ä—Å–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["103224"] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				["151681"] = {
					"Shorttail the Chucker", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[151476] = {
					"\"–í–∑—Ä—ã–≤–æ—Ç—Ä–æ–Ω –•-80\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["131669"] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144249] = {
					"\"–û–º–µ–≥–∞-–∫—Ä—É—à–∏—Ç–µ–ª—å\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["87520"] = {
					"Animated Slag", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["93303"] = {
					"Slavering Hound", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136984"] = {
					"Reban", -- [1]
					"Kings' Rest", -- [2]
				},
				["132820"] = {
					"Mudsnout Piglet", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15262] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∏—Å–∫–æ—Ä–µ–Ω–∏—Ç–µ–ª—å", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["134793"] = {
					"Glowspine", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["136549"] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["138465"] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["131445"] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[157620] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–∫–∏—Ç—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["50807"] = {
					"Oharrodere", -- [1]
					"Twin Peaks", -- [2]
				},
				[108003] = {
					"–í–µ—Ä—Å—Ç–æ–∫ –¢–µ–º–Ω–∞—è –í–µ—Ç–≤—å", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["135642"] = {
					"Duskcoat Tiger Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["134215"] = {
					"Duskrunner Lorinas", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["111081"] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[129469] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[129758] = {
					"–ì—Ä–µ–Ω–∞–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[153526] = {
					"–ê–∫–∏—Ä-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["146886"] = {
					"Hrolskald the Fetid", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[154550] = {
					"–ê–º–∞—Ç–µ—Ç - –∂—Ä–µ—Ü –°–æ–ª–Ω—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				["136391"] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["22849"] = {
					"Ashtongue Feral Spirit", -- [1]
					"Black Temple", -- [2]
				},
				[139349] = {
					"–ú—É–¥–∂–∞ –ü–µ–≤–µ—Ü –ú–æ–≥–∏–ª—ã", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["140096"] = {
					"Mudsnout Boar", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[1933] = {
					"–û–≤—Ü–∞", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[153527] = {
					"–ê–∫–∏—Ä - –≤–æ–∂–∞–∫ —Ä–æ—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[37502] = {
					"–ù–µ—Ä—É–±'–∞—Ä—Å–∫–∏–π —Ç–∫–∞—á", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["139461"] = {
					"Stonebound Rockmaw", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[123289] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[37886] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–æ–µ –ø–æ–≥–∞–Ω–∏—â–µ", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[160182] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["132741"] = {
					"Flamescale Hydra", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148921] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["11661"] = {
					"Flamewaker", -- [1]
					"Molten Core", -- [2]
				},
				[145850] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π —Å–∞–ø–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[154552] = {
					"–ê–º–∞—Ç–µ—Ç-—Ñ–∞–Ω–∞—Ç–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				["136830"] = {
					"Witherbranch Headhunter", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["156133"] = {
					"Dreadcoil Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[160183] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["72194"] = {
					"Hellscream Demolisher", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["149635"] = {
					"Blooming Protector", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["134789"] = {
					"Monstrous Spineclaw", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[158136] = {
					"–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –¢–µ–º–Ω–æ—Å–ª–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["1860"] = {
					"Makzazt", -- [1]
					"Alterac Valley", -- [2]
				},
				["136100"] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["155873"] = {
					"Darkcast Annihilator", -- [1]
					"The Eternal Palace", -- [2]
				},
				[156089] = {
					"–ê–∫–∏—Ä - –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å —è–¥–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["72770"] = {
					"Kor'kron Dark Farseer", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["93068"] = {
					"Xhul'horac", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["135892"] = {
					"Unleashed Inferno", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["130333"] = {
					"Gritplate Basilisk", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[154554] = {
					"–ê–º–∞—Ç–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[53115] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["134691"] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140620] = {
					"–•–∞—Ä–∏–±–¥–∏–¥–∞ –Æ–∂–Ω–æ–≥–æ –º–æ—Ä—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["146867"] = {
					"Mistscorn Sharphorn", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["80423"] = {
					"Thunderlord Beast-Tender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[61945] = {
					"–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["140335"] = {
					"Nightscale Screecher", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[154555] = {
					"–ê–º–∞—Ç–µ—Ç-–º–µ—Ö–∞–Ω–æ–ª–æ–≥", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				["80708"] = {
					"Iron Taskmaster", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["28835"] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				["72434"] = {
					"Treasury Guard", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["140095"] = {
					"Mudsnout Gorer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137517] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[153532] = {
					"–ê–∫–∏—Ä - –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["135846"] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["76829"] = {
					"Slag Elemental", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["134822"] = {
					"Gritplate Matriarch", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["149312"] = {
					"Ferocious Swiftclaw", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				["78233"] = {
					"Darkshard Crystalback", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[160699] = {
					"–†–∞—Å—Å–µ—Ä–∂–µ–Ω–Ω—ã–π –ø–æ—á—Ç–æ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["151027"] = {
					"Thornguard Burton", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[132835] = {
					"–ó–º–µ—è-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[158140] = {
					"–ë–µ—à–µ–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140353] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[141939] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["72662"] = {
					"Vanity", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["155586"] = {
					"Arathor Ancestor", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["124583"] = {
					"Garnetback Worm", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[153022] = {
					"–°–Ω–∞–Ω–≥", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["12101"] = {
					"Lava Surger", -- [1]
					"Molten Core", -- [2]
				},
				["72492"] = {
					"Shimra", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[144071] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[53116] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π –ø—ã–ª–∞—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[61434] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["72655"] = {
					"Fragment of Pride", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["28582"] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[136643] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[61946] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["139767"] = {
					"\"Spyglass\" Marie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["23196"] = {
					"Bonechewer Behemoth", -- [1]
					"Black Temple", -- [2]
				},
				["122972"] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				["139417"] = {
					"Rotwood the Cursed", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[122963] = {
					"–†–µ–∑–∞–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["98035"] = {
					"Dreadstalker", -- [1]
					"Silvershard Mines", -- [2]
				},
				["137989"] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				["146849"] = {
					"Spirit Master Rowena", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["23235"] = {
					"Bonechewer Blade Fury", -- [1]
					"Black Temple", -- [2]
				},
				["84841"] = {
					"Iron Dockworker", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[146882] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∞—è —á—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137881"] = {
					"Northfold Knight", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["153064"] = {
					"Overzealous Hulk", -- [1]
					"The Eternal Palace", -- [2]
				},
				[142336] = {
					"–û—Å—å–º–∏–Ω–æ–∂–µ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["112655"] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				["139269"] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				["91648"] = {
					"Somber Guardian", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[56637] = {
					"–£–∫-–£–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[135475] = {
					"–ö—É–ª–∞ –ñ–∏–≤–æ–¥–µ—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[77905] = {
					"–ê–±–∏—Å—Å–∞–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["140441"] = {
					"Muskflank Calf", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[160704] = {
					"–ö–∞–ø–ª—è –ë–µ–∑–¥–Ω—ã –≤ –ø–∏—Å—å–º–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["60849"] = {
					"Jade Serpent Statue", -- [1]
					"Temple of Kotmogu", -- [2]
				},
				["135470"] = {
					"Aka'ali the Conqueror", -- [1]
					"Kings' Rest", -- [2]
				},
				[122086] = {
					"–°—Ç–∞–ª–µ—à–∫—É—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["26125"] = {
					"Beetleface", -- [1]
					"The Eternal Palace", -- [2]
				},
				[65402] = {
					"–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["28825"] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				["11671"] = {
					"Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				["73806"] = {
					"Kor'kron Machinist", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[144837] = {
					"–û–ª–µ–Ω—å c –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[61947] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[10404] = {
					"–ì–Ω–æ–π–Ω–∏–∫–æ–≤—ã–π —É–∂–∞—Å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[58108] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[134600] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["140334"] = {
					"Nightscale Coilfang", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140102"] = {
					"Razorhog", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145040] = {
					"–•–∏—Ç—Ä—é–≥–∞ –õ–ª–æ—Ä–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["130488"] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[60208] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[77042] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["22948"] = {
					"Gurtogg Bloodboil", -- [1]
					"Black Temple", -- [2]
				},
				[146140] = {
					"–ú–µ–≥–∞–±—Ä–∞–∑", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["155629"] = {
					"Azsh'ari Stormbinder", -- [1]
					"The Eternal Palace", -- [2]
				},
				[76220] = {
					"–ü—ã–ª–∞—é—â–∏–π –ø–ª—É—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["146843"] = {
					"Spiked Ghoul", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144839] = {
					"–ë–µ–ª–æ—Ö–≤–æ—Å—Ç–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[153541] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –£–ª'—Ä–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["95636"] = {
					"Sargerei Adjutant", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["22841"] = {
					"Shade of Akama", -- [1]
					"Black Temple", -- [2]
				},
				["138349"] = {
					"Vengeful Ghost", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["152853"] = {
					"Silivaz the Zealous", -- [1]
					"The Eternal Palace", -- [2]
				},
				["129471"] = {
					"Deepsea Sandcrawler", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139097] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[144840] = {
					"–ü—è—Ç–Ω–∏—Å—Ç—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[15235] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π –æ—Å—Ç—Ä–æ–∂–∞–ª", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[122088] = {
					"–¢–∏—Ö–æ—Å—Ç—É–ø –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131666] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[145035] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ª–∏—Å", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[61436] = {
					"–°–∏–∫'—Ç–∏–∫ - —Ç–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[157451] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω–∞—è –∫–∞—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[37122] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ê—Ä–Ω–∞—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[53630] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["71712"] = {
					"Despair Spawn", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["136011"] = {
					"Bloodstone", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["138509"] = {
					"Spellbinder Ulura", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["144248"] = {
					"Head Machinist Sparkflux", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["140985"] = {
					"Acidic Worm", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146245] = {
					"–®—É—Å—Ç—Ä–æ–∫—Ä—ã–ª", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[52577] = {
					"–õ–µ–≤–∞—è –Ω–æ–≥–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[144842] = {
					"–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["80409"] = {
					"Markog Aba'dir", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[122089] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["132491"] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146890] = {
					"–†—É–Ω–æ–º–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["140154"] = {
					"Rotclaw Patriarch", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152009] = {
					"–ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–π —Ö–ª–∞–º–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["28583"] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				["136012"] = {
					"Mountanus the Immovable", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["138990"] = {
					"Urgl the Blind", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["131819"] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				["72131"] = {
					"Blind Blademaster", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[139416] = {
					"–í–æ–ª—à–∞—Å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129000] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138838] = {
					"–ë–æ–≥–æ–º–æ–ª-–∑–∞—Ä–∞'—Ç–∏–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[141938] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["140438"] = {
					"Old Longtooth", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				["131411"] = {
					"Venomscale Monitor", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[158367] = {
					"–ú–æ–ª–æ—Ç—è—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["77337"] = {
					"Aknor Steelbringer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				[53119] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["88820"] = {
					"Furnace Engineer", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["22874"] = {
					"Coilskar Harpooner", -- [1]
					"Black Temple", -- [2]
				},
				[37123] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ë—Ä–µ–Ω–¥–æ–Ω", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[53631] = {
					"–ü–∞—É—á–æ–Ω–æ–∫-–ø–µ–ø–ª–æ–ø—Ä—è–¥", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["135254"] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				["132056"] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[62205] = {
					"–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[54143] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π –ø—Ä–∞—Ä–æ–¥–∏—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["128142"] = {
					"Voidling", -- [1]
					"Isle of Conquest", -- [2]
				},
				["13096"] = {
					"Coldmine Explorer", -- [1]
					"Alterac Valley", -- [2]
				},
				["151149"] = {
					"Thisicithati", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[138841] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü –≤–æ–π–Ω—ã", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[130025] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[133585] = {
					"–î–∏–Ω–∞ \"–î–∏–∑–∑–∏\" –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[159320] = {
					"–ê–º–∞—Ç–µ—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[56731] = {
					"–ü–µ—Ä—Ü–æ–≤–∫–∞", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["153091"] = {
					"Serena Scarscale", -- [1]
					"The Eternal Palace", -- [2]
				},
				[59518] = {
					"–†–∞–∑–¥—É–≤—à–∏–π—Å—è –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["140457"] = {
					"Bramblefur Grazer", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["93023"] = {
					"Siegemaster Mar'tak", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["72768"] = {
					"Kor'kron War Wolf", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[161286] = {
					"–¢–µ–º–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["73250"] = {
					"Kor'kron Wild Gun", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["28920"] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				["58964"] = {
					"Xelcor", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				[135365] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ê–ª—å–º–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[132051] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				["28961"] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[130026] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫–æ–ª–¥—É–Ω –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[158157] = {
					"–í–ª–∞–¥—ã–∫–∞ –ú–∞—Ç–∏–∞—Å –®–æ—É", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[36612] = {
					"–õ–æ—Ä–¥ –†–µ–±—Ä–∞–¥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[53120] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–∑–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[150547] = {
					"–í–æ—Ä—á—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["94802"] = {
					"Voidscribe Aathalos", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["138102"] = {
					"Stromgarde Priestess", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[144849] = {
					"–†–∞–∑–≤–µ–¥—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["138100"] = {
					"Stromgarde Footman", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				["14465"] = {
					"Alliance Battle Standard", -- [1]
					"Eye of the Storm", -- [2]
				},
				["145850"] = {
					"Gilnean Defuser", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[134612] = {
					"–¶–µ–ø–∫–∏–µ —â—É–ø–∞–ª—å—Ü–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140979] = {
					"–î–ª–∏–Ω–Ω–æ–∑—É–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				["150222"] = {
					"Gunker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[144850] = {
					"–°–∏—Ä–µ–Ω–∞ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[130027] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139468] = {
					"–•—Ä–µ–±—Ç–æ–¥–µ—Ä –ö—É-–ö–æ–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["155791"] = {
					"Horrific Shrieker", -- [1]
					"The Eternal Palace", -- [2]
				},
				["142000"] = {
					"Haunting Tendril", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["152852"] = {
					"Pashmar the Fanatical", -- [1]
					"The Eternal Palace", -- [2]
				},
				[59519] = {
					"–¢—É—á–Ω—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[139386] = {
					"–î–≤—É—è–∑—ã–∫–∏–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["135552"] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[162305] = {
					"–ê–∫–∏—Ä-—Å–µ—Ä–¥—Ü–µ–∫–æ–ª", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138983] = {
					"–í–æ–ª–Ω–æ–ª–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135247] = {
					"–í–∞—Ä–∏–≥–≥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[77132] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Ä–µ–≤–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[122266] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56448] = {
					"–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[37664] = {
					"–û–º—Ä–∞—á–µ–Ω–Ω—ã–π –≤–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["87841"] = {
					"Grom'kar Firemender", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["146827"] = {
					"Feral Dog", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[108035] = {
					"–§–∞–ª'–¥–æ—Ä–∞–π—Å–∫–∏–π –ø–∞—É—á–æ–∫", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["3527"] = {
					"Healing Stream Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[53121] = {
					"–ö–ª–µ–π–º—è—â–∏–π –ø–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[79510] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π –ø–∏—Ä–æ–º–∞–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[61567] = {
					"–í–∏–∑–∏—Ä—å –¶–∑–∏–Ω—å'–±–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[132056] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["105451"] = {
					"Counterstrike Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[161745] = {
					"–•–µ–ø—Ñ–∏—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["155764"] = {
					"Rak'sha the Swift", -- [1]
					"The Eternal Palace", -- [2]
				},
				[154758] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134616] = {
					"–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130896] = {
					"–ë–æ—á–∫–∞ —á–µ—Ä–Ω–æ–π –ø–µ–ª–µ–Ω—ã", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[131545] = {
					"–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["137204"] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["135765"] = {
					"Torrent Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				["131112"] = {
					"Cutwater Striker", -- [1]
					"Tol Dagor", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["90378"] = {
					"Kilrogg Deadeye", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[134617] = {
					"–î–µ—Ç–µ–Ω—ã—à –∫—Ä–æ–ª—É—Å–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[122965] = {
					"–í–æ–ª'–∫–∞–∞–ª", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[59520] = {
					"–®–∏–ø—É—á–∏–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140248] = {
					"–°—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω—ã–π –õ–æ–≤–µ—Ü –õ—É–Ω—ã", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["150154"] = {
					"Saurolisk Bonenipper", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[107763] = {
					"–ò—Å—Å–æ—Ö—à–∏–π-—à–∞—Ä–∫—É–Ω", -- [1]
					"–†—É–∏–Ω—ã –§–∞–ª–∞–Ω–∞–∞—Ä–∞", -- [2]
				},
				["135246"] = {
					"\"Stabby\" Lottie", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["12129"] = {
					"Onyxian Warder", -- [1]
					"Onyxia's Lair", -- [2]
				},
				[15240] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π —è–¥–æ—Ö–≤–æ—Å—Ç", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[135642] = {
					"–¢–µ–º–Ω–æ—à–∫—É—Ä—ã–π —Ç–∏–≥—Ä–µ–Ω–æ–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["131666"] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				["22869"] = {
					"Illidari Boneslicer", -- [1]
					"Black Temple", -- [2]
				},
				[15236] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∞—è –æ—Å–∞", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[145026] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[15300] = {
					"–í–µ–∫–Ω–∏—Å—Å–∫–∏–π —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[155094] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[37025] = {
					"–í–æ–Ω—é—á–∫–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[36998] = {
					"–ó–∞—Å—Ç—É–ø–Ω–∏–∫ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[140250] = {
					"–ï–ª–µ–Ω—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135329] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140973] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["125977"] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				["134766"] = {
					"Wavespitter", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[36678] = {
					"–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –ú–µ—Ä–∑–æ—Ü–∏–¥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[77942] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –±—É—Ä–∏", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["123289"] = {
					"Sparkleshell Deathclaw", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[139530] = {
					"–ó–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω–æ–ª–æ–º", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136347] = {
					"–£—á–µ–Ω–∏—Ü–∞ –∂—Ä–µ—Ü–æ–≤ –º–æ—Ä—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[33236] = {
					"–ö–æ–≤–∞–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				["154663"] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["139337"] = {
					"Icetusk Blood-Drinker", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["141218"] = {
					"Doomtunnel Vehicle Stalker", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61910] = {
					"–°–∫–æ–ø–ª–µ–Ω–∏–µ —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[59521] = {
					"–ë—É–ª—å–∫–∞—é—â–∏–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				["130307"] = {
					"Unstable Typhoon", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[36627] = {
					"–ì–Ω–∏–ª–æ–º–æ—Ä–¥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["147935"] = {
					"Azergem Crawler", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["127119"] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[131587] = {
					"–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[158478] = {
					"–ó–∞—Ä–∞–∑–Ω–∞—è –æ–ø—É—Ö–æ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["154175"] = {
					"Horrific Summoner", -- [1]
					"The Eternal Palace", -- [2]
				},
				["134216"] = {
					"Shadeweaver Zarra", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[131377] = {
					"bubblenbee", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[56706] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[37144] = {
					"–°—Ç—Ä–µ–ª–æ–∫ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[76177] = {
					"–°—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –¥—É—à –ù–∏–∞–º–∏", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["12057"] = {
					"Garr", -- [1]
					"Molten Core", -- [2]
				},
				["145123"] = {
					"Myara Nightsong", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[37026] = {
					"–ö–æ–ª–¥—É–Ω —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[53635] = {
					"–ü–µ–ø–ª–æ–ø—Ä—è–¥-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[15316] = {
					"–ö–∏—Ä–∞–∂—Å–∫–∏–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[150168] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["417"] = {
					"Pryyzhum", -- [1]
					"Alterac Valley", -- [2]
				},
				["135764"] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[136214] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Å –≤–µ—Ç—Ä–∞–º–∏ –•–µ–ª–¥–∏—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["139400"] = {
					"Mirelurk Rivercaller", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				["144971"] = {
					"Druid of the Branch", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[134418] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[135903] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[79511] = {
					"–ü—ã–ª–∞—é—â–∏–π –ø–ª—É—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				["134599"] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[137830] = {
					"–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[102392] = {
					"–¢–æ—Ç–µ–º —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[59522] = {
					"–ü–µ–Ω–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[134828] = {
					"–í–æ–¥–µ–Ω—ã—à", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[59778] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–µ—Ü", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[131585] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				["136861"] = {
					"Duskstalker Kuli", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[159764] = {
					"–î–∂–µ—à'—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146911] = {
					"–ß—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61389] = {
					"–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["76874"] = {
					"Dreadwing", -- [1]
					"Blackrock Foundry", -- [2]
				},
				["136665"] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[161244] = {
					"–ö—Ä–æ–≤—å –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[159312] = {
					"–ñ–∏–≤–∞—è –∫—Ä–æ–≤—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				["137517"] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[149635] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[33113] = {
					"\"–û–≥–Ω–µ–Ω–Ω—ã–π –õ–µ–≤–∏–∞—Ñ–∞–Ω\"", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				[61442] = {
					"–ö—É–∞–π –ë–µ—Å—á–µ–ª–æ–≤–µ—á–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[147936] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[126099] = {
					"–ú–∞—Ç—å –ª–æ–≥–æ–≤–∞ —Ç–µ–º–Ω–æ—à–∫—É—Ä—ã—Ö —Ç–∏–≥—Ä–æ–≤", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				["129214"] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141282] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[131729] = {
					"–õ–∏–∫–æ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146401] = {
					"–†–∞–± –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["138625"] = {
					"Amathet Enforcer", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["113307"] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				["54319"] = {
					"Magria", -- [1]
					"Eye of the Storm", -- [2]
				},
				[139346] = {
					"–ì–æ–≤–æ—Ä—è—â–∏–π —Å –¥—É—Ö–∞–º–∏ –ì–∞–ª–∞–Ω–∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[53187] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–º–∞–≥–º–æ–º–∞–Ω—Ç", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[141283] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[63106] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[141285] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134629] = {
					"–ß–µ—à—É–π—á–∞—Ç—ã–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –∫—Ä–æ–ª—É—Å–∫–µ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[69792] = {
					"Fumonk", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[147938] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["130087"] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				["126429"] = {
					"Encrusted Coralback", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[141284] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∞—è —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				["11262"] = {
					"Onyxian Whelp", -- [1]
					"Onyxia's Lair", -- [2]
				},
				[36950] = {
					"–ü–µ—Ö–æ—Ç–∏–Ω–µ—Ü —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["135761"] = {
					"Thundering Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[137204] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				["136003"] = {
					"Gravellus", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[156641] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è –æ—Ä—É–∂–µ–π–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["151773"] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				["138983"] = {
					"Muckfin Tidehunter", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["122264"] = {
					"Elder Spineshell", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[53575] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ª–∞–≤—ã", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["130640"] = {
					"Vicejaw Sawtooth", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138466] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138440] = {
					"–õ–µ–¥–∏ –ê—Å—Å–∞–Ω–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[61699] = {
					"–°–∏–∫'—Ç–∏–∫ –ñ–µ–ª—Ç–æ–∫—Ä—ã–ª", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[153760] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[106321] = {
					"–¢–æ—Ç–µ–º –ø–æ–ø—É—Ç–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				["135829"] = {
					"Dustwind", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158690] = {
					"–°–µ–∫—Ç–∞–Ω—Ç-–º—É—á–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[130638] = {
					"–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				["72411"] = {
					"Kor'kron Provisioner", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[151773] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π –±–æ—Ç –º–æ–¥–µ–ª–∏ \"–ü–ï–°\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				["135239"] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				["129802"] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[27736] = {
					"–õ–æ—Å–∫—É—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[139340] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[37973] = {
					"–ü—Ä–∏–Ω—Ü –¢–∞–ª–¥–∞—Ä–∞–º", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["71393"] = {
					"Mogu Shadow Ritualist", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[156795] = {
					"–û—Å–≤–µ–¥–æ–º–∏—Ç–µ–ª—å –®–†–£", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["146118"] = {
					"Territorial Needleback", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["144303"] = {
					"G.U.A.R.D.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[161251] = {
					"–°–µ–∫—Ç–∞–Ω—Ç–∫–∞-–ø—Ä–∏—Å–ª—É–∂–Ω–∏—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[136391] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[126093] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139463"] = {
					"Stonebound Annihilator", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				["139800"] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["72943"] = {
					"Dragonmaw Proto-Drake", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[53188] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[129526] = {
					"–ú–æ—Ä—è—á–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140777] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137091"] = {
					"High Perch Initiate", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[157700] = {
					"–û–≥—é—Å—Ç –ú—É–ª–µ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["145035"] = {
					"Swifttail Courser", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["138820"] = {
					"Bloodwake Vrykul", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[61444] = {
					"–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[158371] = {
					"–ó–∞—Ä–¥–µ—Ç –ß–µ—Ä–Ω—ã–π –ö–æ–≥–æ—Ç—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				["100943"] = {
					"Earthen Wall Totem", -- [1]
					"Alterac Valley", -- [2]
				},
				[157158] = {
					"–°–µ–∫—Ç–∞–Ω—Ç - –ø–æ–≥–æ–Ω—â–∏–∫ —Ä–∞–±–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[53140] = {
					"–°—ã–Ω –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				["134041"] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				["155920"] = {
					"Azsh'ari Galeblade", -- [1]
					"The Eternal Palace", -- [2]
				},
				[15589] = {
					"–û–∫–æ –ö'–¢—É–Ω–∞", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				[15621] = {
					"–ü–æ—Ç–æ–º—Å—Ç–≤–æ –Ø—É–¥–∂", -- [1]
					"–•—Ä–∞–º –ê–Ω'–ö–∏—Ä–∞–∂–∞", -- [2]
				},
				["135167"] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[129527] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[34069] = {
					"–û–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				[134739] = {
					"–ì–æ–ª–µ–º-—á–∏—Å—Ç–∏–ª—å—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				["140084"] = {
					"Crushknuckle", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["133439"] = {
					"Stromgarde Gryphon Rider", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[37022] = {
					"–ó–∞—á—É–º–ª–µ–Ω–Ω–æ–µ –ø–æ–≥–∞–Ω–∏—â–µ", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[152718] = {
					"–ê–ª–ª–µ—Ä–∏—è –í–µ—Ç—Ä–æ–∫—Ä—ã–ª–∞—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139756] = {
					"–ë–∞–Ω–¥–∏—Ç–∫–∞ –®–µ–π–ª–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127480] = {
					"–ñ–∞–ª—è—â–∏–π –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[153065] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[37534] = {
					"–•—Ä–µ–±—Ç–æ—Ö—Ä—É—Å—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[138847] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∏–π –ë–æ–µ–º –ö–∞'–≤–∞–∑", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[58810] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[157904] = {
					"–ê–∫–∏—Ä-—Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[28167] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[139757] = {
					"–ú–µ—Ç–∫–∏–π –î–∂–æ–Ω—Å–æ–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["107592"] = {
					"Ice Shards", -- [1]
					"The Nighthold", -- [2]
				},
				[61448] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["135247"] = {
					"Varigg", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[26533] = {
					"–ú–∞–ª'–ì–∞–Ω–∏—Å", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["134788"] = {
					"Spineclaw Rockshell", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[53127] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π —Å–∫–æ—Ä–ø–∏–æ–Ω", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[61445] = {
					"–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["131850"] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[61701] = {
					"–°–∏–∫'—Ç–∏–∫-–≤–æ–∏–Ω", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[53639] = {
					"–ö–ª–µ–π–º—è—â–∏–π –ø–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[26529] = {
					"–ú—è—Å–Ω–æ–π –ö—Ä—é–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["91520"] = {
					"Adjunct Kuroh", -- [1]
					"Hellfire Citadel", -- [2]
				},
				["136139"] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[61338] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[19668] = {
					"–ò—Å—á–∞–¥–∏–µ –¢—å–º—ã", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				["148940"] = {
					"Kaldorei Chimaera", -- [1]
					"Warfronts Darkshore - Horde", -- [2]
				},
				[129529] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				["135718"] = {
					"Nightsaber Cub", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[149098] = {
					"–ú–∞–π–µ–≤ –ü–µ—Å–Ω—å –¢–µ–Ω–µ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				["89"] = {
					"Infernal", -- [1]
					"Alterac Valley", -- [2]
				},
				[61242] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["137007"] = {
					"High Perch Defender", -- [1]
					"Warfronts Arathi - Horde", -- [2]
				},
				[61243] = {
					"–ì–µ–∫–∫–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139760] = {
					"–°—Ç–∞—Ä—à–∏–π —à—Ç—É—Ä–º–∞–Ω –§—Ä–∞–Ω–∫–ª–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127482] = {
					"–°—Ç–æ—á–Ω—ã–π –∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[61340] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				["34944"] = {
					"Keep Cannon", -- [1]
					"Isle of Conquest", -- [2]
				},
				["23239"] = {
					"Bonechewer Combatant", -- [1]
					"Black Temple", -- [2]
				},
				["129517"] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				["114565"] = {
					"Guardian of the Forgotten Queen", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				["131586"] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139761] = {
					"–°—Ç–∞—Ä—à–∏–π –º–∞—Ç—Ä–æ—Å –û'–†—É—Ä–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156653] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è —É–∂–∞—Å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[59801] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["148797"] = {
					"Magus of the Dead", -- [1]
					"Warsong Gulch", -- [2]
				},
				[56589] = {
					"–ë–æ–µ—Ü –ì–∞'–¥–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				["122965"] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[53128] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –æ–≥–Ω–µ–Ω–Ω—ã–π —Å–∫–æ—Ä–ø–∏–æ–Ω", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[56877] = {
					"–†–∞–π–≥–æ–Ω–Ω", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[37004] = {
					"–ö–ª–∏–Ω–æ–∫ —É–∂–∞—Å–∞ —Å \"–£—Å–º–∏—Ä–∏—Ç–µ–ª—è –Ω–µ–±–µ—Å\"", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[59551] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[53640] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–û–≥–Ω–µ–Ω–Ω—ã–µ –ü—Ä–æ—Å—Ç–æ—Ä—ã", -- [2]
				},
				[33293] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å XT-002", -- [1]
					"–£–ª—å–¥—É–∞—Ä", -- [2]
				},
				[28200] = {
					"–¢–µ–º–Ω—ã–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[37934] = {
					"–í–æ–ª–¥—ã—Ä–Ω—ã–π –∑–æ–º–±–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				[36791] = {
					"–ò—Å—Ç–æ—Ä–≥–∞—é—â–∏–π –ø–ª–∞–º—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –õ–µ–¥—è–Ω–æ–π –ö–æ—Ä–æ–Ω—ã", -- [2]
				},
				["73349"] = {
					"Tormented Initiate", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				[156143] = {
					"–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π –≤ –ë–µ–∑–¥–Ω—É –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				["138496"] = {
					"Twilight Drakonaar", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				["137591"] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				["139747"] = {
					"Shipwrecked Pirate", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137716] = {
					"–î–æ–Ω–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[61634] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["134600"] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[61485] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				["135715"] = {
					"Ferocious Nightsaber", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127484] = {
					"–î–∂–µ—Å –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[27737] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[28249] = {
					"–í—Å–µ–ø–æ–∂–∏—Ä–∞—é—â–∏–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[27729] = {
					"–†–∞–∑—ä—è—Ä–∏–≤—à–∏–π—Å—è –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[27732] = {
					"–ú–∞—Å—Ç–µ—Ä –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∏–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[28199] = {
					"–ö–ª–∞–¥–±–∏—â–µ–Ω—Å–∫–∏–π –ª–æ–≤–µ—Ü", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["72791"] = {
					"Lingering Corruption", -- [1]
					"Siege of Orgrimmar", -- [2]
				},
				["12050"] = {
					"Stormpike Defender", -- [1]
					"Alterac Valley", -- [2]
				},
				[129788] = {
					"–ú—è—Å–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[27742] = {
					"–ù–µ–ø—Ä–∏—è—Ç–µ–ª—å –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["92391"] = {
					"Gorebound Bloodletter", -- [1]
					"Hellfire Citadel", -- [2]
				},
				[27744] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				["146838"] = {
					"Brittle Skeleton", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
			},
			["aura_frame1_anchor"] = {
				["y"] = 11,
				["side"] = 7,
			},
			["aura_grow_direction"] = 1,
			["indicator_extra_raidmark"] = false,
			["aggro_modifies"] = {
				["border_color"] = true,
				["actor_name_color"] = true,
			},
			["minor_height_scale"] = 0.94999998807907,
			["not_affecting_combat_alpha"] = 0,
			["extra_icon_show_enrage_border"] = {
				0.94901960784314, -- [1]
				0, -- [2]
				1, -- [3]
			},
			["aura_height"] = 21,
			["ui_parent_scale_tune"] = 1.079999923706055,
			["aura_padding"] = 2.799999952316284,
			["target_highlight_alpha"] = 1,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "BigArrow",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 51,
					["LastHookEdited"] = "Constructor",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Time"] = 1570477370,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 46,
					["LastHookEdited"] = "Constructor",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Icon"] = 136207,
					["Time"] = 1569020059,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 178,
					["LastHookEdited"] = "Constructor",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"white\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"white\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Icon"] = 133689,
					["Time"] = 1561871920,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 55,
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
							["1"] = 2280,
							["Enabled"] = true,
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["Time"] = 1548117267,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = 1990989,
					["Time"] = 1541606242,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 220,
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							["1"] = 2281,
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Time"] = 1548612537,
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = 135358,
					["Time"] = 1547406548,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 224,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Author"] = "Kastfall-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1594834360,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 37,
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
							["Enabled"] = true,
							["117"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = 2446016,
					["Time"] = 1549827281,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 266,
					["LastHookEdited"] = "Constructor",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"center\", unitFrame.healthBar, \"center\", 3, -10},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 0.74,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"center\", unitFrame.healthBar, \"center\", 3, -10},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 0.74,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Icon"] = 135426,
					["Time"] = 1570476614,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["HooksTemp"] = {
					},
					["Icon"] = 1966587,
					["Time"] = 1548278227,
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1552354619,
					["Icon"] = 878211,
					["PlaterCore"] = 1,
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 19,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Name"] = "Change All Fonts",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1550095750,
					["Icon"] = 134331,
					["PlaterCore"] = 1,
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 34,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local profile = Plater.db.profile\n    \n    if profile.aggro_modifies.border_color then\n        return\n    end\n    \n    if (not unitFrame.IsSelf) then\n        --if this nameplate the current target of the player?\n        if (unitFrame.namePlateIsTarget) then\n            Plater.SetBorderColor (self, envTable.targetcolor)   \n        else\n            Plater.SetBorderColor (self, envTable.notargetcolor)\n        end\n    end\nend",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetBorderColor (self)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.targetcolor = \"white\"\n    envTable.notargetcolor = \"black\"\n    \nend",
					},
					["Author"] = "‰∏ÄÈ¶¨Áï∂ÂÖà-È¨ºÈõæÂ≥∞",
					["Desc"] = "Change Targetborder color to White,Others black,like blz origin",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local profile = Plater.db.profile\n    \n    if profile.aggro_modifies.border_color then\n        return\n    end\n    \n    if (not unitFrame.IsSelf) then\n        --if this nameplate the current target of the player?\n        if (unitFrame.namePlateIsTarget) then\n            Plater.SetBorderColor (self, envTable.targetcolor)   \n        else\n            Plater.SetBorderColor (self, envTable.notargetcolor)\n        end\n    end\nend",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    Plater.SetBorderColor (self)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.targetcolor = \"white\"\n    envTable.notargetcolor = \"black\"\n    \nend",
					},
					["Name"] = "TargetBorder Color",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1570854896,
					["Icon"] = 132351,
					["PlaterCore"] = 1,
				}, -- [16]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add npc id of stealth detect mobs here\n    envTable.stealthMobs = {\n        --AD\n        [127879] = true, \n        [122984] = true,\n        --SotS\n        [134144] = true,\n        [134139] = true,\n        [136249] = true,\n        [134150] = true,\n        [136214] = true,\n        [134338] = true,\n        --ML\n        [133430] = true,\n        [137940] = true,\n        [133463] = true,\n        --TD\n        [135699] = true,\n        [127486] = true,\n        [127497] = true,\n        [130025] = true,\n    }\n    \n    --change color of names for stealth detect mobs here\n    envTable.stealthColor = {1, 1, 0, 1}\n    \n    --do not change below\n    function envTable.updateStealth(unitFrame)\n        if unitFrame and unitFrame.namePlateNpcId then\n            local id = unitFrame.namePlateNpcId\n            if envTable.stealthMobs[id] then\n                unitFrame.unitName:SetTextColor(unpack(envTable.stealthColor))\n            end\n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateStealth(unitFrame)\nend",
					},
					["Author"] = "Canoeshoes-Area 52",
					["OptionsValues"] = {
					},
					["Desc"] = "Changes name color for mobs that can see stealth",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateStealth(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add npc id of stealth detect mobs here\n    envTable.stealthMobs = {\n        --AD\n        [127879] = true, \n        [122984] = true,\n        --SotS\n        [134144] = true,\n        [134139] = true,\n        [136249] = true,\n        [134150] = true,\n        [136214] = true,\n        [134338] = true,\n        --ML\n        [133430] = true,\n        [137940] = true,\n        [133463] = true,\n        --TD\n        [135699] = true,\n        [127486] = true,\n        [127497] = true,\n        [130025] = true,\n    }\n    \n    --change color of names for stealth detect mobs here\n    envTable.stealthColor = {1, 1, 0, 1}\n    \n    --do not change below\n    function envTable.updateStealth(unitFrame)\n        if unitFrame and unitFrame.namePlateNpcId then\n            local id = unitFrame.namePlateNpcId\n            if envTable.stealthMobs[id] then\n                unitFrame.unitName:SetTextColor(unpack(envTable.stealthColor))\n            end\n        end\n    end\n    \nend",
					},
					["Prio"] = 99,
					["Name"] = "Stealth Mobs",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Time"] = 1594834536,
					["Icon"] = 132320,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [17]
				{
					["Enabled"] = false,
					["Revision"] = 102,
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"white\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 6, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --frames:\n    --create the text frame that will show the XP\n    \n    if (not  unitFrame.healthBar.followerXPTextFrame) then\n        envTable.followerXPTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.followerXPTextFrame, anchor);\n        unitFrame.healthBar.followerXPTextFrame = envTable.followerXPTextFrame\n        envTable.followerXPTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    -- functions\n    \n    envTable.NPCIDToWidgetIDMap = {\n        [154304] = 1940, -- Farseer Ori\n        [150202] = 1613, -- Hunter Akana\n        [154297] = 1966, -- Bladesman Inowari\n        [151300] = 1621, -- Neri Sharpfin\n        [151310] = 1622, -- Poen Gillbrack\n        [151309] = 1920, -- Vim Brineheart\n    }\n    \n    envTable.CampfireNPCIDToWidgetIDMap = {\n        [149805] = 1940, -- Farseer Ori\n        [149804] = 1613, -- Hunter Akana\n        [149803] = 1966, -- Bladesman Inowari\n        [149904] = 1621, -- Neri Sharpfin\n        [149902] = 1622, -- Poen Gillbrack\n        [149906] = 1920, -- Vim Brineheart\n    }\n    \n    \n    envTable.Update = function(unitFrame)\n        envTable.followerXPTextFrame = envTable.followerXPTextFrame or unitFrame.healthBar.followerXPTextFrame\n        local npcID = tonumber(unitFrame.namePlateNpcId)\n        local shouldDisplay = npcID and (envTable.NPCIDToWidgetIDMap[npcID] and self.unit and UnitIsOwnerOrControllerOfUnit(\"player\", unitFrame.unit)) or envTable.CampfireNPCIDToWidgetIDMap[npcID]\n        \n        if shouldDisplay then\n            local widgetID = envTable.NPCIDToWidgetIDMap[npcID] or envTable.CampfireNPCIDToWidgetIDMap[npcID]\n            local rank, cur, next, total = envTable.GetBodyguardXP(widgetID)\n            envTable.followerXPTextFrame:SetText((\"R%d - %d / %d\"):format(rank,cur, next))\n            if (unitFrame.PlateFrame.IsNpcWithoutHealthBar) then\n                envTable.followerXPTextFrame:SetParent(unitFrame.PlateFrame)\n                Plater.SetAnchor (envTable.followerXPTextFrame, anchor, unitFrame.PlateFrame);\n            else\n                envTable.followerXPTextFrame:SetParent(unitFrame.healthBar)\n                Plater.SetAnchor (envTable.followerXPTextFrame, anchor, unitFrame.healthBar);\n            end\n            envTable.followerXPTextFrame:Show()\n        else\n            envTable.followerXPTextFrame:SetText(\"\")\n            envTable.followerXPTextFrame:Hide()\n        end\n    end\n    \n    envTable.GetBodyguardXP = function (widgetID)\n        local widget = widgetID and C_UIWidgetManager.GetStatusBarWidgetVisualizationInfo(widgetID)\n        if not widget then return end\n        \n        local rank = strmatch(widget.overrideBarText, \"%d+\")\n        local cur = widget.barValue - widget.barMin\n        local next = widget.barMax - widget.barMin\n        local total = widget.barValue\n        return rank, cur, next, total\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Adds a text to the follower nameplate to show the current rank and XP.",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Update(unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"white\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 6, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --frames:\n    --create the text frame that will show the XP\n    \n    if (not  unitFrame.healthBar.followerXPTextFrame) then\n        envTable.followerXPTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.followerXPTextFrame, anchor);\n        unitFrame.healthBar.followerXPTextFrame = envTable.followerXPTextFrame\n        envTable.followerXPTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    -- functions\n    \n    envTable.NPCIDToWidgetIDMap = {\n        [154304] = 1940, -- Farseer Ori\n        [150202] = 1613, -- Hunter Akana\n        [154297] = 1966, -- Bladesman Inowari\n        [151300] = 1621, -- Neri Sharpfin\n        [151310] = 1622, -- Poen Gillbrack\n        [151309] = 1920, -- Vim Brineheart\n    }\n    \n    envTable.CampfireNPCIDToWidgetIDMap = {\n        [149805] = 1940, -- Farseer Ori\n        [149804] = 1613, -- Hunter Akana\n        [149803] = 1966, -- Bladesman Inowari\n        [149904] = 1621, -- Neri Sharpfin\n        [149902] = 1622, -- Poen Gillbrack\n        [149906] = 1920, -- Vim Brineheart\n    }\n    \n    \n    envTable.Update = function(unitFrame)\n        envTable.followerXPTextFrame = envTable.followerXPTextFrame or unitFrame.healthBar.followerXPTextFrame\n        local npcID = tonumber(unitFrame.namePlateNpcId)\n        local shouldDisplay = npcID and (envTable.NPCIDToWidgetIDMap[npcID] and self.unit and UnitIsOwnerOrControllerOfUnit(\"player\", unitFrame.unit)) or envTable.CampfireNPCIDToWidgetIDMap[npcID]\n        \n        if shouldDisplay then\n            local widgetID = envTable.NPCIDToWidgetIDMap[npcID] or envTable.CampfireNPCIDToWidgetIDMap[npcID]\n            local rank, cur, next, total = envTable.GetBodyguardXP(widgetID)\n            envTable.followerXPTextFrame:SetText((\"R%d - %d / %d\"):format(rank,cur, next))\n            if (unitFrame.PlateFrame.IsNpcWithoutHealthBar) then\n                envTable.followerXPTextFrame:SetParent(unitFrame.PlateFrame)\n                Plater.SetAnchor (envTable.followerXPTextFrame, anchor, unitFrame.PlateFrame);\n            else\n                envTable.followerXPTextFrame:SetParent(unitFrame.healthBar)\n                Plater.SetAnchor (envTable.followerXPTextFrame, anchor, unitFrame.healthBar);\n            end\n            envTable.followerXPTextFrame:Show()\n        else\n            envTable.followerXPTextFrame:SetText(\"\")\n            envTable.followerXPTextFrame:Hide()\n        end\n    end\n    \n    envTable.GetBodyguardXP = function (widgetID)\n        local widget = widgetID and C_UIWidgetManager.GetStatusBarWidgetVisualizationInfo(widgetID)\n        if not widget then return end\n        \n        local rank = strmatch(widget.overrideBarText, \"%d+\")\n        local cur = widget.barValue - widget.barMin\n        local next = widget.barMax - widget.barMin\n        local total = widget.barValue\n        return rank, cur, next, total\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Nazjatar Follower XP",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1563115632,
					["Icon"] = 644389,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [18]
				{
					["Enabled"] = false,
					["Revision"] = 48,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"white\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Change the color of the aura timer by it's time left",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"white\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
					},
					["Name"] = "Paint Aura Timers",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1569368412,
					["Icon"] = "Interface\\Timer\\Challenges-Logo",
					["PlaterCore"] = 1,
				}, -- [19]
				{
					["Enabled"] = false,
					["Revision"] = 213,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    local auras = envTable.auras or {}\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do \n            local level = auras[auraIcon.spellId or 0] or auras[auraIcon.SpellName or \"\"]\n            if level then\n                local stacks = tonumber(auraIcon.StackText:IsShown() and (auraIcon.StackText:GetText() or \"1\") or \"1\")\n                local minStacks = envTable.minStacks[auraIcon.spellId or 0] or envTable.minStacks[auraIcon.SpellName or \"\"] or stacks\n                \n                if auraIcon:IsShown() and auraIcon.RemainingTime <= level and auraIcon.RemainingTime > 0 and stacks <= minStacks and stacks > 0 then\n                    auraIcon.pandemicGlowEffect = auraIcon.pandemicGlowEffect or Plater.CreateIconGlow (auraIcon)\n                    auraIcon.pandemicGlowEffect:SetColor( envTable.AntsColor, envTable.GlowColor)\n                    auraIcon.pandemicGlowEffect:Show()\n                elseif auraIcon.pandemicGlowEffect then\n                    auraIcon.pandemicGlowEffect:Hide()\n                end \n            elseif auraIcon.pandemicGlowEffect then\n                auraIcon.pandemicGlowEffect:Hide()\n            end\n        end\n        \n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    envTable.GlowType = \"action button glow\"\n    envTable.GlowColor = \"red\"\n    envTable.AntsColor = \"0\"\n    \n    \n    \n    \n    envTable.auras = {\n        -- Affliction\n        [155722] = 5.4, -- Rake\n        [1079] = 8.4, -- Rip\n        [63106] = 4.5, -- Siphon Life\n        [\"Unstable Affliction\"] = 2,\n        [\"Instabiles Gebrechen\"] = 2,\n        \n        -- Destruction\n        [157736] = 5.4, -- Immolate,\n    }\n    \n    envTable.minStacks = {\n        [\"Unstable Affliction\"] = 1,\n        [\"Instabiles Gebrechen\"] = 1\n    }\n    envTable.Color = {\n        --textcolor\n        [155722] = \"red\"\n    }\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow effect to all debuffs of the warlock, that are in the pandemic range.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    envTable.GlowType = \"action button glow\"\n    envTable.GlowColor = \"red\"\n    envTable.AntsColor = \"0\"\n    \n    \n    \n    \n    envTable.auras = {\n        -- Affliction\n        [155722] = 5.4, -- Rake\n        [1079] = 8.4, -- Rip\n        [63106] = 4.5, -- Siphon Life\n        [\"Unstable Affliction\"] = 2,\n        [\"Instabiles Gebrechen\"] = 2,\n        \n        -- Destruction\n        [157736] = 5.4, -- Immolate,\n    }\n    \n    envTable.minStacks = {\n        [\"Unstable Affliction\"] = 1,\n        [\"Instabiles Gebrechen\"] = 1\n    }\n    envTable.Color = {\n        --textcolor\n        [155722] = \"red\"\n    }\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    local auras = envTable.auras or {}\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do \n            local level = auras[auraIcon.spellId or 0] or auras[auraIcon.SpellName or \"\"]\n            if level then\n                local stacks = tonumber(auraIcon.StackText:IsShown() and (auraIcon.StackText:GetText() or \"1\") or \"1\")\n                local minStacks = envTable.minStacks[auraIcon.spellId or 0] or envTable.minStacks[auraIcon.SpellName or \"\"] or stacks\n                \n                if auraIcon:IsShown() and auraIcon.RemainingTime <= level and auraIcon.RemainingTime > 0 and stacks <= minStacks and stacks > 0 then\n                    auraIcon.pandemicGlowEffect = auraIcon.pandemicGlowEffect or Plater.CreateIconGlow (auraIcon)\n                    auraIcon.pandemicGlowEffect:SetColor( envTable.AntsColor, envTable.GlowColor)\n                    auraIcon.pandemicGlowEffect:Show()\n                elseif auraIcon.pandemicGlowEffect then\n                    auraIcon.pandemicGlowEffect:Hide()\n                end \n            elseif auraIcon.pandemicGlowEffect then\n                auraIcon.pandemicGlowEffect:Hide()\n            end\n        end\n        \n    end\nend",
					},
					["Name"] = "[Feral Druid] Pandemic Glow",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1570477692,
					["Icon"] = 136112,
					["PlaterCore"] = 1,
				}, -- [20]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Hooks"] = {
						["Nameplate Updated"] = "\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.unitName:GetText()\n    \n    local  FirstName  = { [144747] = true, -- pakus-aspect\n        [144767]  = true, -- gonks-aspect\n        [144963]  = true, -- kimbuls-aspect \n        [144941] = true } -- akundas-aspect    \n    \n    \n    \n    \n    if (text) then\n        local  a ,b, c ,d ,e ,f=  strsplit(\" \",text,5)   \n        if not FirstName [unitFrame.namePlateNpcId] then \n            unitFrame.healthBar.unitName:SetText (f or e or d or c or b or a)  \n        else\n            unitFrame.healthBar.unitName:SetText (a) \n        end\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1595763266,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/N_8CWRftW/2",
					["Icon"] = 134331,
					["Enabled"] = true,
					["Revision"] = 103,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show Last Name only.",
					["Prio"] = 99,
					["Name"] = "Last Name Only",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.unitName:GetText()\n    \n    local  FirstName  = { [144747] = true, -- pakus-aspect\n        [144767]  = true, -- gonks-aspect\n        [144963]  = true, -- kimbuls-aspect \n        [144941] = true } -- akundas-aspect    \n    \n    \n    \n    \n    if (text) then\n        local  a ,b, c ,d ,e ,f=  strsplit(\" \",text,5)   \n        if not FirstName [unitFrame.namePlateNpcId] then \n            unitFrame.healthBar.unitName:SetText (f or e or d or c or b or a)  \n        else\n            unitFrame.healthBar.unitName:SetText (a) \n        end\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = 2,
				}, -- [21]
				{
					["Enabled"] = true,
					["Revision"] = 117,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Author"] = "Ditador-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Name"] = "Cast Icon Anchor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Cast Update",
					["Time"] = 1594834364,
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["PlaterCore"] = 1,
				}, -- [22]
				{
					["Enabled"] = true,
					["Revision"] = 121,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    Plater.UpdatePersonalBar (true)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    Plater.UpdatePersonalBar (false)\nend",
						["Player Logon"] = "function ()\n    \n    -- change these to your liking. val\n    local config = {\n        --alpha = 0.5, -- defaults to 1.\n        --frameLevel = 25, -- sub-level within the strata level. defaults to 25\n        --frameStrata = \"LOW\", -- frame level. defaults to Level & Strata -> Current Target strata (\"BACKGROUND\" -> \"LOW\" -> \"MEDIUM\" -> \"HIGH\" -> \"DIALOG\")\n    }\n    \n    \n    local origUpdateResourceFrame = Plater.UpdateResourceFrame\n    \n    ---------------------------------------------------------------------------------------------------------------------------\n    local UpdateResourceFrameSettings = function (notUpdateOrig)\n        if not notUpdateOrig then\n            origUpdateResourceFrame(self)\n        end\n        local showSelf = GetCVarBool (\"nameplateShowSelf\")\n        local onCurrentTarget = GetCVarBool (\"nameplateResourceOnTarget\")\n        \n        if (not onCurrentTarget) then\n            return\n        end\n        \n        local resourceFrame = NamePlateDriverFrame.classNamePlateMechanicFrame\n        if (not resourceFrame) then return end\n        if (resourceFrame:IsForbidden()) then return end\n        \n        resourceFrame:SetParent(UIParent)\n        resourceFrame:SetFrameStrata(config.frameStrata or Plater.db.profile.ui_parent_target_strata)\n        resourceFrame:SetFrameLevel(config.frameLevel or 25)\n        resourceFrame:SetAlpha(config.alpha or 1)\n    end\n    \n    Plater.UpdateResourceFrame = UpdateResourceFrameSettings\n    \nend\n\n\n\n\n\n",
					},
					["Author"] = "Ariani-Antonidas",
					["OptionsValues"] = {
					},
					["Desc"] = "Adds configuration options for the target resource frame. Settings in \"Player Logon\". Requires a /reload to work initially and after changing configs.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    Plater.UpdatePersonalBar (true)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    Plater.UpdatePersonalBar (false)\nend",
						["Player Logon"] = "function ()\n    \n    -- change these to your liking. val\n    local config = {\n        --alpha = 0.5, -- defaults to 1.\n        --frameLevel = 25, -- sub-level within the strata level. defaults to 25\n        --frameStrata = \"LOW\", -- frame level. defaults to Level & Strata -> Current Target strata (\"BACKGROUND\" -> \"LOW\" -> \"MEDIUM\" -> \"HIGH\" -> \"DIALOG\")\n    }\n    \n    \n    local origUpdateResourceFrame = Plater.UpdateResourceFrame\n    \n    ---------------------------------------------------------------------------------------------------------------------------\n    local UpdateResourceFrameSettings = function (notUpdateOrig)\n        if not notUpdateOrig then\n            origUpdateResourceFrame(self)\n        end\n        local showSelf = GetCVarBool (\"nameplateShowSelf\")\n        local onCurrentTarget = GetCVarBool (\"nameplateResourceOnTarget\")\n        \n        if (not onCurrentTarget) then\n            return\n        end\n        \n        local resourceFrame = NamePlateDriverFrame.classNamePlateMechanicFrame\n        if (not resourceFrame) then return end\n        if (resourceFrame:IsForbidden()) then return end\n        \n        resourceFrame:SetParent(UIParent)\n        resourceFrame:SetFrameStrata(config.frameStrata or Plater.db.profile.ui_parent_target_strata)\n        resourceFrame:SetFrameLevel(config.frameLevel or 25)\n        resourceFrame:SetAlpha(config.alpha or 1)\n    end\n    \n    Plater.UpdateResourceFrame = UpdateResourceFrameSettings\n    \nend\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Resource On Target Config",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["Time"] = 1594834366,
					["Icon"] = 413591,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [23]
				{
					["Enabled"] = false,
					["Revision"] = 41,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Player Logon"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 8,\n        height = 8,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \nend\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Adds two arrows into the target indicators options.",
					["Hooks"] = {
						["Player Logon"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 8,\n        height = 8,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Arrow Target Indicators",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Player Logon",
					["Time"] = 1594834355,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
					["PlaterCore"] = 1,
				}, -- [24]
				{
					["Enabled"] = false,
					["Revision"] = 66,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 20,\n        height = 16,\n        x = 28,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend\n\n\n",
					},
					["Author"] = "ÔøΩrÔøΩÔøΩne-Kel'thuzad",
					["Desc"] = "Adds double arrow as a target indicators option",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 20,\n        height = 16,\n        x = 28,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend\n\n\n",
					},
					["Name"] = "Double Arrow Target",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Nameplate Created",
					["Time"] = 1570907736,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
					["PlaterCore"] = 1,
				}, -- [25]
				{
					["Enabled"] = false,
					["Revision"] = 26,
					["HooksTemp"] = {
						["Player Logon"] = "function()\n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Thin Arrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_thin_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 10,\n        x = 16,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend",
					},
					["Author"] = "Xitobel-Saurfang",
					["Desc"] = "Adds a single thin arrow to target indicator options.",
					["Hooks"] = {
						["Player Logon"] = "function()\n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Thin Arrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_thin_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 10,\n        x = 16,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend",
					},
					["Name"] = "Arrow Thin Target",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Player Logon",
					["Time"] = 1570907768,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_thin_right_64",
					["PlaterCore"] = 1,
				}, -- [26]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Name"] = "Texture Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["version"] = -1,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Time"] = 1596670932,
				}, -- [27]
			},
			["pet_height_scale"] = 0.94999998807907,
			["minor_width_scale"] = 0.89999997615814,
			["cast_statusbar_fadeout_time"] = 0.49999997019768,
			["indicator_raidmark_anchor"] = {
				["y"] = 4,
			},
			["aura_show_enrage"] = true,
			["aura_alpha"] = 1,
			["target_shady_alpha"] = 0.199999988079071,
			["cast_statusbar_color"] = {
				0.031372549019608, -- [1]
				1, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0.7843137254902, -- [2]
				0.89019607843137, -- [3]
				1, -- [4]
			},
			["aura_width"] = 21,
			["aura_height2"] = 21,
			["update_throttle"] = 0.05000000074505806,
			["target_highlight_height"] = 28,
			["aura_tracker"] = {
				["buff_tracked"] = {
					["209859"] = true,
				},
				["buff_banned"] = {
					["206150"] = true,
					["61574"] = true,
					["61573"] = true,
				},
			},
			["range_check_enabled"] = false,
			["login_counter"] = 1398,
			["version"] = 5,
			["click_space_friendly"] = {
				132, -- [1]
				26, -- [2]
			},
			["pet_width_scale"] = 0.89999997615814,
			["aura_border_colors"] = {
				["enrage"] = {
					0.94901960784314, -- [1]
					0, -- [2]
					1, -- [3]
				},
				["steal_or_purge"] = {
					nil, -- [1]
					0.86666666666667, -- [2]
					1, -- [3]
				},
				["is_show_all"] = {
					0, -- [1]
					0, -- [2]
					0, -- [3]
				},
			},
			["cast_statusbar_color_interrupted"] = {
				nil, -- [1]
				0, -- [2]
				0.054901960784314, -- [3]
			},
			["aura_stack_font"] = "Expressway",
			["patch_version"] = 12,
			["ui_parent_cast_level"] = 12,
			["aura2_grow_direction"] = 3,
			["hook_data_trash"] = {
				{
					["Enabled"] = true,
					["Revision"] = 385,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    function envTable.StripName(unitFrame)\n        if unitFrame and unitFrame.unitName and unitFrame.namePlateUnitName then\n            local name = unitFrame.namePlateUnitName\n            local abbr = name:gsub('(%S+) ',function(t) return t:sub(1,1)..'.' end)\n            if unitFrame.actorType == \"friendlynpc\" then\n                unitFrame.ActorNameSpecial:SetText(abbr)\n            else\n                unitFrame.unitName:SetText(abbr)\n            end\n        end\n    end\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.unitName then\n        envTable.StripName(unitFrame)\n    end\nend",
					},
					["OptionsValues"] = {
					},
					["Author"] = "Zenshoes-Area 52",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Desc"] = "Abbreviates names on nameplates",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.unitName then\n        envTable.StripName(unitFrame)\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    function envTable.StripName(unitFrame)\n        if unitFrame and unitFrame.unitName and unitFrame.namePlateUnitName then\n            local name = unitFrame.namePlateUnitName\n            local abbr = name:gsub('(%S+) ',function(t) return t:sub(1,1)..'.' end)\n            if unitFrame.actorType == \"friendlynpc\" then\n                unitFrame.ActorNameSpecial:SetText(abbr)\n            else\n                unitFrame.unitName:SetText(abbr)\n            end\n        end\n    end\nend",
					},
					["__TrashAt"] = 1595763150,
					["Name"] = "Abbreviated Names",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1595763044,
					["Icon"] = "INTERFACE\\ICONS\\Ability_Spy",
					["Prio"] = 99,
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Author"] = "–û—Ç–∂–∏–≥–∞–π-–†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥",
					["OptionsValues"] = {
					},
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1595763154,
					["Name"] = "New Mod",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["Icon"] = "",
					["Time"] = 1595763151,
				}, -- [2]
				{
					["LastHookEdited"] = "Nameplate Updated",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local name = unitFrame.healthBar.unitName:GetText()\n    \n    if (name) then\n        unitFrame.healthBar.unitName:SetText(name:gsub('(%S+) ',function(t) return t:sub(1,1)..'.' end))\n    end\nend\n\n\n\n\n\n\n\n",
					},
					["__TrashAt"] = 1595763230,
					["Time"] = 1595763202,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/Rcm39UnZV/2",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Spy",
					["Enabled"] = true,
					["Revision"] = 428,
					["semver"] = "1.0.1",
					["Author"] = "Zenshoes-Area 52",
					["Desc"] = "Abbreviates names on nameplates",
					["Prio"] = 99,
					["Name"] = "Abbreviated Names",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local name = unitFrame.healthBar.unitName:GetText()\n    \n    if (name) then\n        unitFrame.healthBar.unitName:SetText(name:gsub('(%S+) ',function(t) return t:sub(1,1)..'.' end))\n    end\nend\n\n\n\n\n\n\n\n",
					},
					["version"] = 2,
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Author"] = "–û—Ç–∂–∏–≥–∞–π-–†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥",
					["Time"] = 1597504332,
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1597504336,
					["Name"] = "New Mod",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["Icon"] = "",
					["OptionsValues"] = {
					},
				}, -- [4]
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Aura - Blink Time Left"] = 1,
				["Explosion Affix M+"] = 3,
				["Aura - Debuff Alert"] = 3,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Unit - Important"] = 5,
				["Color Change"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["target_highlight_color"] = {
				0.99607843137255, -- [1]
				1, -- [2]
				0.98039215686275, -- [3]
			},
			["extra_icon_anchor"] = {
				["y"] = 2.6800003051758,
				["x"] = -0.020004272460938,
			},
			["aura_timer_text_size"] = 12,
			["cast_statusbar_bgtexture"] = "ElvUI A",
			["resources"] = {
				["scale"] = 0.6499999761581421,
				["alpha"] = 0.4399999976158142,
				["y_offset_target"] = -25,
				["y_offset_target_withauras"] = 0,
			},
			["number_region_first_run"] = true,
			["aura_timer_text_font"] = "Expressway",
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowSelf"] = "0",
				["nameplateGlobalScale"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.2",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateShowAll"] = "1",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateOtherTopInset"] = "0.08",
				["nameplateMinScale"] = "0.75",
				["nameplateMaxDistance"] = "53",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "0.4",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["NamePlateVerticalScale"] = "1",
			},
			["range_check_alpha"] = 0.089999996125698,
			["click_space"] = {
				136, -- [1]
				40, -- [2]
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["castbar_target_font"] = "Expressway",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.001365900039673,
				},
			},
			["semver"] = "1.0.4",
			["aura_timer"] = false,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						nil, -- [1]
						0.054901960784314, -- [2]
						0.85882352941176, -- [3]
						1, -- [4]
					},
					["anothertank"] = {
						0.66274509803922, -- [1]
						0, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["aggro"] = {
						1, -- [1]
						0.3098039215686275, -- [2]
						0.1568627450980392, -- [3]
						1, -- [4]
					},
					["noaggro"] = {
						0.04705882352941176, -- [1]
						1, -- [2]
						0.8274509803921568, -- [3]
						1, -- [4]
					},
					["pulling"] = {
						0.37647058823529, -- [1]
						nil, -- [2]
						0.92156862745098, -- [3]
						1, -- [4]
					},
				},
			},
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						nil, -- [1]
						0.03921568627451, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["noaggro"] = {
						0.019607843137255, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["pulling"] = {
						nil, -- [1]
						0.4078431372549, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["captured_spells"] = {
				[164815] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268604] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259489] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[306474] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106620] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –ü–æ—Å–æ—Ö",
					["npcID"] = 56678,
				},
				[1543] = {
					["source"] = "Everwaddle-Silvermoon",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113017] = {
					["encounterID"] = 1417,
					["source"] = "–¶–∑–∞–æ –ò—Å–∫–∞—Ç–µ–ª—å –°–æ–ª–Ω—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 58826,
				},
				[115192] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315176] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193475] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183752] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[104318] = {
					["source"] = "–î–∏–∫–∏–π –±–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 143622,
				},
				[255909] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313643] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106877] = {
					["npcID"] = 56719,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏",
					["encounterID"] = 1305,
				},
				[38166] = {
					["type"] = "BUFF",
					["source"] = "–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏",
					["npcID"] = 56719,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1305,
				},
				[119415] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281404] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Ñ–æ—Å",
					["npcID"] = 0,
				},
				[255654] = {
					["source"] = "Lifedragon-Dalaran",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6360] = {
					["source"] = "Fiertai",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 120526,
				},
				[168657] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31661] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["encounterID"] = 1397,
				},
				[17364] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[147420] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31821] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[403] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[216251] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[115450] = {
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288573] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[268616] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259495] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[286016] = {
					["source"] = "–ß–∏—Ö—É–∞–ª–µ–Ω–æ–∫-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[118905] = {
					["source"] = "–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61245,
				},
				[113020] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58807,
				},
				[90887] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç–æ—Ä—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["encounterID"] = 1465,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233397] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[48722] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162264] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221883] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ–π–Ω–µ–µ–ª—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[224186] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194249] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190411] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Keuliseutian-BurningLegion",
					["npcID"] = 0,
				},
				[113021] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58807,
				},
				[228537] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[301886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ï–∏—Ä–ø–æ–Ω—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[45524] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[421] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[335151] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106113] = {
					["encounterID"] = 1439,
					["source"] = "–®–∞ –°–æ–º–Ω–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56439,
				},
				[190925] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[113022] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58807,
				},
				[313148] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203975] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[273232] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1715] = {
					["source"] = "Raballeco-C'Thun",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[1719] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[290121] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288075] = {
					["source"] = "–¢—É–±—É—Ç—Å–∏—è-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®—Ä–∏–≤–µ—Ç–∞–ª-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[272723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[190927] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[302917] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235450] = {
					["source"] = "–ö–æ—Ç—ë–Ω–∞–∫-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[128248] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59752,
				},
				[303943] = {
					["type"] = "BUFF",
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1397,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302408] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[245686] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287568] = {
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199373] = {
					["encounterID"] = 1418,
					["source"] = "–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24207,
				},
				[292686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[64844] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115455] = {
					["encounterID"] = 1405,
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫ - –ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—å —á–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59794,
				},
				[267611] = {
					["type"] = "BUFF",
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116095] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286547] = {
					["source"] = "–ú–æ—Ä–∞—Ç–æ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295248] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219589] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ—Ä—Ç–æ–≤—ã–π",
					["npcID"] = 0,
				},
				[107140] = {
					["encounterID"] = 1303,
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56754,
				},
				[107268] = {
					["encounterID"] = 1397,
					["source"] = "–î–∏–≤–µ—Ä—Å–∞–Ω—Ç –ö–∏–ø'—Ç–∏–ª–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56906,
				},
				[280409] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287062] = {
					["source"] = "–•—ç–º–º–∏–Ω–¥-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5217] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–µ–±—É–Ω–∑—É–¥–æ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[5225] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1833] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280412] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ä—Ä–∏",
					["npcID"] = 0,
				},
				[121982] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61670,
				},
				[7384] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279902] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Å—Ç—Ä–æ–Ω–æ–º–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[288091] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[302932] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[110852] = {
					["type"] = "BUFF",
					["source"] = "–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä",
					["npcID"] = 56747,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[213708] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298839] = {
					["source"] = "–•–∏–ª—ë—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210126] = {
					["source"] = "–ê–Ω–∑–µ—Å—É—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123646] = {
					["source"] = "–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61945,
				},
				[223176] = {
					["source"] = "–õ—è—à–∞–º–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295258] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[201427] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Arth√©s-Deathwing",
					["npcID"] = 0,
				},
				[204242] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281954] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317265] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102793] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[475] = {
					["source"] = "–§–µ–π–∑–∏—Å—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[214222] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Ant√≥sha-Ravencrest",
					["npcID"] = 0,
				},
				[24275] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[251836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–π–¥–Ω–æ—Ä-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[305497] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193753] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198103] = {
					["encounterID"] = 1439,
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300893] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[127230] = {
					["source"] = "–≠—Ñ—Ç–µ—Ä–ø–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121601] = {
					["source"] = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61946,
				},
				[279913] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251838] = {
					["source"] = "–ì–∞–≤—Ä–∏–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1943] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[185311] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[128766] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59752,
				},
				[1953] = {
					["type"] = "BUFF",
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251839] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Keuliseutian-BurningLegion",
					["npcID"] = 0,
				},
				[156910] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–∞–ª–ª–∏–∏-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[273264] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[192221] = {
					["source"] = "–õ—è—à–∞–º–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42650] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["encounterID"] = 1439,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195292] = {
					["source"] = "–°—Ç–µ—Ä–µ–æ–∫–æ–º–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[301413] = {
					["source"] = "–ß–∏—Ö—É–∞–ª–µ–Ω–æ–∫-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[498] = {
					["type"] = "BUFF",
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["encounterID"] = 1304,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19574] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[107146] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["encounterID"] = 1419,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56877,
				},
				[119684] = {
					["encounterID"] = 1441,
					["source"] = "–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61398,
				},
				[280433] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ–µ–µ–∫–∫–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[193759] = {
					["source"] = "–í–∏–ª–∞–∞—Ç-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187874] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[302952] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[107019] = {
					["source"] = "–•–æ–∑–µ–Ω-–≤—ã—à–∏–±–∞–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56849,
				},
				[123651] = {
					["source"] = "–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61947,
				},
				[192225] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119941] = {
					["type"] = "DEBUFF",
					["source"] = "–õ—É–∂–∞ —Å–º–æ–ª—ã",
					["encounterID"] = 1465,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61613,
				},
				[133630] = {
					["source"] = "–ù–∑–≥—Ä–ª–∞—Å-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122244] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 62632,
				},
				[32752] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–Ω–∂–µ–Ω–µ—Ä–±–æ–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[115080] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286581] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6201] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–∂–µ–Ω–µ—Ä–±–æ–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[147193] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205021] = {
					["source"] = "S√≤vi-Frostmane",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2094] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2098] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[527] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187878] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278908] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ—Ä–¥—Ä–∏–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[256453] = {
					["source"] = "–õ–∏–Ω—ç-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12654] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192229] = {
					["source"] = "–õ—è—à–∞–º–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122246] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62632,
				},
				[286587] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[546] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[114826] = {
					["source"] = "–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–≤—á–∏—Ö –ø—Ç–∏—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59553,
				},
				[203233] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–ª—É–º–±–∞–π–Ω–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[272260] = {
					["source"] = "–í–µ—Ä–∏—Ç–∞—Å—Ö-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123654] = {
					["encounterID"] = 1442,
					["source"] = "–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61444,
				},
				[205025] = {
					["source"] = "–£–º–±—Ä–∏—è-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∞—Ä–≥–æ–º–µ–ª—å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[273286] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[102417] = {
					["source"] = "–í–æ—Å—å–º–∏–¥—É–∑–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[315763] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[123655] = {
					["encounterID"] = 1442,
					["source"] = "–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61445,
				},
				[120201] = {
					["type"] = "DEBUFF",
					["source"] = "–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61445,
				},
				[220124] = {
					["source"] = "–õ—è—à–∞–º–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200166] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279943] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–≥–∑–æ—Ä—Ü–∏—Å—Ç-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[11327] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[171253] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[585] = {
					["source"] = "Holyper-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[586] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119946] = {
					["encounterID"] = 1442,
					["source"] = "–ú—É'–®–∏–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61453,
				},
				[589] = {
					["source"] = "N√øk√ø-LesSentinelles",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236502] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[91800] = {
					["source"] = "–ß–µ—Ä–µ–ø–æ–ø–æ–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 26125,
				},
				[204262] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272783] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[596] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190446] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111759] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77472] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[53209] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[34914] = {
					["source"] = "N√øk√ø-LesSentinelles",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112911] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58810,
				},
				[272276] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[121483] = {
					["encounterID"] = 1418,
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56448,
				},
				[272790] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[124682] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[33763] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[264091] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279956] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210152] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[633] = {
					["encounterID"] = 1502,
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∏—Å–æ–∫—É—Å—å",
					["npcID"] = 0,
				},
				[295310] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288146] = {
					["source"] = "–ö–∞–≤–µ—Ä–∑–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200174] = {
					["encounterID"] = 1303,
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[642] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[269214] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[206572] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287638] = {
					["source"] = "–ö–∞–≤–µ—Ä–∑–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[110099] = {
					["source"] = "–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 57109,
				},
				[102167] = {
					["source"] = "–°—Ç—ç–π–ø—Ä–∏–º–∏—Ç–∏–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[315787] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[126476] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[222695] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ñ–µ—Å—Ç–∫–∞—Ä–∏–¥–∑–µ-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[267685] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106646] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥",
					["npcID"] = 56473,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞—Ä–æ–≤–µ–ª—å",
					["npcID"] = 0,
				},
				[107030] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[190456] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79140] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288158] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[686] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[87840] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196342] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272295] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[225512] = {
					["source"] = "–ñ–µ–∫–∞–Ω–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289184] = {
					["source"] = "–ù–æ–Ω–µ–π–º–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2782] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[295838] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[703] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61336] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2818] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260057] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ì–æ–Ω–∫–∞",
					["npcID"] = 131809,
				},
				[106648] = {
					["source"] = "–ö–∞—Ç—è—â–∞—è—Å—è –±–æ—á–∫–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56682,
				},
				[295840] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[193530] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[193786] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[184575] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295842] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç—Ä–æ–¥–µ–º—É—Å",
					["npcID"] = 0,
				},
				[290213] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[197625] = {
					["type"] = "BUFF",
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16827] = {
					["source"] = "Raptor",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135790,
				},
				[281517] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269747] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[147732] = {
					["type"] = "DEBUFF",
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287660] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256735] = {
					["source"] = "–î–∞—Ä–∫–≤–µ–π–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197628] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[310690] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[311202] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278962] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269239] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[172809] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187650] = {
					["source"] = "Everwaddle-Silvermoon",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[93985] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[139546] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303017] = {
					["source"] = "–§–∏–ª–ª–∏–ø–ø–∏–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316835] = {
					["source"] = "–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162764,
				},
				[317859] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∏–∫–∫–∞–¥",
					["npcID"] = 0,
				},
				[295855] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[49184] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[102558] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[295856] = {
					["npcID"] = 152396,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—â–∏—Ç–Ω–∏–∫ –ê–∑–µ—Ä–æ—Ç",
					["encounterID"] = 1303,
				},
				[256739] = {
					["source"] = "–í–∞–π–∑—Ä–∞–ª-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[774] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[198144] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3110] = {
					["source"] = "–ö—É–∑—Ä–æ—Ç–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 416,
				},
				[781] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–µ—Ä–º–æ–Ω—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[783] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®—Ä–∏–≤–µ—Ç–∞–ª-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[267201] = {
					["source"] = "–≠–ª–ª–µ–æ–Ω–æ–ª–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[12544] = {
					["source"] = "–ë–æ–µ–≤–æ–π –º–∞–≥ –ú—É–º–ø–ª–∏–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 96770,
				},
				[126995] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106653] = {
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59873,
				},
				[62618] = {
					["source"] = "–ë–æ–≥–ø—Ä–æ—Å—Ç–∏—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[23161] = {
					["source"] = "–ù–µ–º–∏–∑–∑–∏–¥–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193796] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318378] = {
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[119703] = {
					["encounterID"] = 1447,
					["source"] = "–û—Å–∞–¥–Ω—ã–µ —Å–Ω–∞—Ä—è–¥—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61452,
				},
				[262115] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111771] = {
					["source"] = "–ù–µ—Ç–æ—Ä—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[85288] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[274369] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299445] = {
					["source"] = "–ê–ª–æ–Ω—à-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–µ–ª–∞—Ä–∏–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[116633] = {
					["npcID"] = 60447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–±–æ—Ç–∞–∂–Ω–∏–∫",
					["encounterID"] = 1406,
				},
				[19483] = {
					["source"] = "–ò–Ω—Ñ–µ—Ä–Ω–∞–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 89,
				},
				[21562] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115098] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194310] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260070] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[190984] = {
					["source"] = "Zverska-Draenor",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277955] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–ª—É–¥–∏–Ω–µ—Ä–æ-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[274373] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[319919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—É—Ä–∞–ª–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[200196] = {
					["source"] = "–ù–∑–≥—Ä–ª–∞—Å-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275909] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[818] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304056] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202244] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260072] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[225529] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[217597] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[160793] = {
					["source"] = "–•–π—Ä—É—Ä–≥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290754] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123032] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15407] = {
					["source"] = "N√øk√ø-LesSentinelles",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298431] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[185358] = {
					["source"] = "Klingolas-Spinebreaker",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115356] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202246] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[15487] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[111646] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[22842] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[83244] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[242419] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[6770] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[200200] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[225532] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106785] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[853] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303041] = {
					["source"] = "–ì–∞—Ä–∞—Ö–∞—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297412] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[83245] = {
					["encounterID"] = 1412,
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[311231] = {
					["source"] = "–°–∏–ø–æ—á–∏–Ω–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[295368] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[176151] = {
					["source"] = "–§–∞–Ω—Ç–µ–Ω-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54049] = {
					["source"] = "–ë–∏—Ö–æ–º–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 417,
				},
				[77489] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Doyakhan-Blackrock",
					["npcID"] = 0,
				},
				[4987] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188178] = {
					["source"] = "–í–æ—Ä—Ç–∏–≥–µ–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121116] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[224001] = {
					["source"] = "–ö–∞–ª–µ–¥–æ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295373] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[30455] = {
					["source"] = "S√≤vi-Frostmane",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[112929] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–ª–æ–±–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å",
					["npcID"] = 58812,
				},
				[275931] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24858] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295378] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269279] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[224772] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∞—Ä–≥–æ–º–µ–ª—å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[265187] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[107045] = {
					["encounterID"] = 1416,
					["source"] = "–Æ–π-–ª—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56762,
				},
				[290264] = {
					["source"] = "–°–∫—ç–∏–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297941] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–º–∞–¥–∞—Ä–∞-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[213771] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[114466] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–µ–Ω–∏—Å—Ç–∞—è –ø—Ä–µ–≥—Ä–∞–¥–∞",
					["encounterID"] = 1414,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59512,
				},
				[271843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[295384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[112931] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58810,
				},
				[107046] = {
					["source"] = "–û—Ç—É–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59605,
				},
				[132404] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[117665] = {
					["type"] = "BUFF",
					["source"] = "–®–∞ –°–æ–º–Ω–µ–Ω–∏—è",
					["encounterID"] = 1439,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56439,
				},
				[202770] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101545] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203538] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228358] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[122527] = {
					["source"] = "–ú–∞–ª—ã–π —à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 58319,
				},
				[275429] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184092] = {
					["source"] = "–°–∞–π–≤–∏—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[223497] = {
					["source"] = "–í–µ—Ä–≥–∏–ª–ª–∏–æ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112932] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58803,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–º–∞–Ω–¥–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[107047] = {
					["encounterID"] = 1405,
					["source"] = "–ë–æ–µ—Ü –ì–∞'–¥–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56589,
				},
				[202004] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196375] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264173] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[34477] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["encounterID"] = 1305,
				},
				[304603] = {
					["source"] = "–†–∞–Ω—Ü–≤–µ–ª—å-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[34861] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108839] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106920] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–±–∏—Ä–∞—é—â–∏–π —Å–∏–ª—ã —à–∞",
					["npcID"] = 56763,
				},
				[250878] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[157228] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22812] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–æ–ª—É–º–±–∞–π–Ω–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[308188] = {
					["source"] = "–î–∞—Å–µ—Ä–∂",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304606] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264178] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[308189] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ—Ä—Ç—Ä–∞–º–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[31224] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[980] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100780] = {
					["encounterID"] = 1417,
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[183585] = {
					["source"] = "–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –°–≤–µ—Ç—É –∞–Ω–∞—Ö–æ—Ä–µ—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 109751,
				},
				[187935] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196379] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[110120] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞",
					["npcID"] = 65414,
				},
				[145205] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[305123] = {
					["source"] = "–õ–∞–π—Ñ—Ö–∞—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304612] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201754] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞—Ç–∏",
					["npcID"] = 151096,
				},
				[111400] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∂–æ–Ω–∏—Å–º–æ—É–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[295402] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–ø—É–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[105771] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185123] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132157] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç–∫–æ–Ω–µ—á–Ω–æ",
					["npcID"] = 0,
				},
				[114599] = {
					["source"] = "–ú–∞–ª—ã–π —à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59598,
				},
				[48168] = {
					["source"] = "–°–µ—Å—Ç—Ä–∞ –û—Å—Å–µ–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 96955,
				},
				[102573] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π",
					["npcID"] = 56754,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[106923] = {
					["encounterID"] = 1303,
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56754,
				},
				[279029] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279541] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207386] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[1022] = {
					["encounterID"] = 1502,
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[235021] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304619] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–µ–±—É–Ω–∑—É–¥–æ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[108843] = {
					["type"] = "BUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1406,
				},
				[288756] = {
					["source"] = "–ü–∞–Ω–∫—É—Ö–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279033] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49576] = {
					["encounterID"] = 1418,
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196385] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1044] = {
					["source"] = "Youngthorns-Hyjal",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126115] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–¥—è–Ω–æ–π —Å—Ç—Ä–µ–ª–æ–∫ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 64549,
				},
				[193315] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[66] = {
					["source"] = "–ü—Ä–∞–π–º–º–∏–Ω–∏—Å—Ç—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31289] = {
					["source"] = "–ö–∏–≤–∞—é—â–∏–π —Ç–∏–≥—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59544,
				},
				[106797] = {
					["type"] = "BUFF",
					["source"] = "–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ",
					["encounterID"] = 1416,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56732,
				},
				[106925] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞",
					["npcID"] = 56764,
				},
				[2139] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194084] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209693] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[55078] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–Ω—Ö–µ—Ç—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[184362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[254472] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267211] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[408] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194509] = {
					["source"] = "–ë–æ–≥–ø—Ä–æ—Å—Ç–∏—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[289277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£–º–∏–ª—è—à–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[264681] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["npcID"] = 122004,
				},
				[203554] = {
					["source"] = "–ê–±–∏–±–æ–∫–∞-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[110125] = {
					["source"] = "–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 57109,
				},
				[198590] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279555] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[1122] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[184364] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272903] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[254474] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[256777] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–∑–∑–∏–Ω–æ—Ç—É—Å-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[294909] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257506] = {
					["source"] = "–ù–µ–Ω–∞–≤–π—Å—Ç—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260843] = {
					["source"] = "–î–∂–∞–¥–µ–Ω –§–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 122704,
				},
				[317420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∑—É–Ω–¥—ç—Ä",
					["npcID"] = 0,
				},
				[294701] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273299] = {
					["source"] = "Sh√§√∂lin-Archimonde",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201253] = {
					["source"] = "–°–∞–≥–∏–Ω–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[93622] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[324902] = {
					["source"] = "–î–∞—Ä–∫–≤–∏–Ω–¥–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[291118] = {
					["source"] = "–ú–∏–∫—Ä–æ–æ—à–∏–±–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[178119] = {
					["source"] = "–ï—Ä–∏—Ñ–∞–Ω-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77758] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294912] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[73920] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–¥–æ—à-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[1160] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[52174] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132168] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294255] = {
					["source"] = "–ë—É–±–ª–∏—Ç–∫—É—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20572] = {
					["source"] = "–ë–µ–∫–ª–µ—Ä–±–µ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[155158] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[184367] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[228050] = {
					["source"] = "–°—Ç—Ä–∞–∂ –∑–∞–±—ã—Ç–æ–π –∫–æ—Ä–æ–ª–µ–≤—ã",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 114565,
				},
				[271374] = {
					["encounterID"] = 1418,
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280400] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–ª—É–¥–∏–Ω–µ—Ä–æ-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[44457] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[50977] = {
					["source"] = "–†–æ–¥–∏–ø–∏—Ç–æ—á–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48107] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6795] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["encounterID"] = 1303,
				},
				[2379] = {
					["source"] = "–¶–µ–π–Ω–∞-–ü–æ–¥–∑–µ–º—å–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106929] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞",
					["npcID"] = 56764,
				},
				[199721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–Ω—Ö–µ—Ç—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[210212] = {
					["source"] = "–®–º–∏—Ç–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[120095] = {
					["source"] = "–í–∏–∑–∏—Ä—å –¶–∑–∏–Ω—å'–±–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61567,
				},
				[292359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏–ø—Å",
					["npcID"] = 0,
				},
				[233497] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[144399] = {
					["source"] = "–ù–∞—Ä—ç–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[178740] = {
					["source"] = "–†–∏–∏–Ω–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292360] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—è–≥—É—à–µ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[116011] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31884] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ–∑–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[167381] = {
					["source"] = "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω –ø–æ–∫–æ—Ä–∏—Ç–µ–ª—è –ø–æ–¥–∑–µ–º–µ–ª–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 144078,
				},
				[85948] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[233498] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51690] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274738] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292362] = {
					["source"] = "–®–ø—Ä–µ—Ö–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185394] = {
					["source"] = "–ê–º–µ–Ω–¥–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111920] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273428] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[267799] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268311] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[97463] = {
					["source"] = "–î–≥–±–µ—Å—É-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297993] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[292364] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—Ä—á—É–≥–æ",
					["npcID"] = 0,
				},
				[318391] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–µ–ª–∏–∫–∏–π –ø–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —á–µ—Ä–≤—å",
					["npcID"] = 152550,
				},
				[187698] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[199203] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48108] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106547] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 56395,
				},
				[118922] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–µ—Ä–º–æ–Ω—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[119085] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—É—Ä–∞–ª–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[113656] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268314] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266779] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[50603] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[974] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[128239] = {
					["source"] = "–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 65402,
				},
				[119981] = {
					["encounterID"] = 1442,
					["source"] = "–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61444,
				},
				[236060] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[228128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[246807] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Ä—Ä–∏–Ω–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[5116] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77762] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[206891] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118958] = {
					["source"] = "–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61242,
				},
				[172604] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260881] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33076] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113942] = {
					["source"] = "–ù–µ—Ç–æ—Ä—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256455] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[208683] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111666] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257541] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[153561] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[170758] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—Ç–æ–ª–± –≤—ã–∑–æ–≤–∞",
					["npcID"] = 85517,
				},
				[257044] = {
					["source"] = "Klingolas-Spinebreaker",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[167385] = {
					["source"] = "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω –ø–æ–∫–æ—Ä–∏—Ç–µ–ª—è –ø–æ–¥–∑–µ–º–µ–ª–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 144078,
				},
				[285720] = {
					["source"] = "–î–∏–Ω–æ–∫–∏—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106421] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59741,
				},
				[208353] = {
					["source"] = "–¢–µ–ø–ª—ã–π–ø–∞—Ä–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[231849] = {
					["source"] = "–°—Ç—É—É–¥–µ–Ω—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285721] = {
					["source"] = "Uthadruid-TarrenMill",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106933] = {
					["encounterID"] = 1405,
					["source"] = "–ë–æ–µ—Ü –ì–∞'–¥–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56589,
				},
				[120946] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61929,
				},
				[275895] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[5308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[1330] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313310] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61031] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[120562] = {
					["source"] = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61946,
				},
				[296962] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294935] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[268836] = {
					["source"] = "–ù–µ–≥–µ–π—à–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287771] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77764] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[170950] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[225574] = {
					["source"] = "–ú–∏—Ä–µ—Å–∞–º–∏—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108853] = {
					["source"] = "Fierysin-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[14914] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[157736] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[154953] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[128238] = {
					["source"] = "–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 65402,
				},
				[119922] = {
					["encounterID"] = 1442,
					["source"] = "–ö—É–∞–π –ë–µ—Å—á–µ–ª–æ–≤–µ—á–Ω—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61442,
				},
				[111668] = {
					["encounterID"] = 1406,
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56877,
				},
				[157644] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122159] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207400] = {
					["source"] = "–ú–∏–ª—ã–π—à–∞–º–∞–Ω—á–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[30108] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[16595] = {
					["source"] = "–ü—É—Å—Å–∏–ª–æ—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[132169] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288548] = {
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 148797,
				},
				[155722] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[118961] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å",
					["npcID"] = 56541,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[225832] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32379] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288800] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[213680] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122259] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 62632,
				},
				[198839] = {
					["source"] = "–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 100943,
				},
				[266030] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[772] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[215598] = {
					["source"] = "–õ–∏–∫–∞–Ω—Ç—Ä–æ–ø–∏–µ-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290337] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∞—Ä–æ—à-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[203277] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192999] = {
					["source"] = "–î–∂–∏–∑–∏–ª–∞–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192058] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[214831] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2823] = {
					["source"] = "–°–µ–Ω–∞—Ç—É—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106680] = {
					["source"] = "–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56472,
				},
				[106808] = {
					["type"] = "DEBUFF",
					["source"] = "–£–∫-–£–∫",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56637,
				},
				[18562] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115453] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 58108,
				},
				[272940] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞—Ä–æ–≤–µ–ª—å",
					["npcID"] = 0,
				},
				[5211] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285475] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106651] = {
					["type"] = "BUFF",
					["source"] = "–£–∫-–£–∫",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56637,
				},
				[204213] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[160331] = {
					["source"] = "–ú—ç–ª–±–æ—É–≥–∏-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233496] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5740] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–∂–µ–Ω–µ—Ä–±–æ–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[202164] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107314] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å",
					["encounterID"] = 1419,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56929,
				},
				[122278] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[165961] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[106681] = {
					["source"] = "–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56472,
				},
				[296971] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271920] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197690] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—ç–Ω–¥–æ—Ñ—Ç–∞–π–º-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[36213] = {
					["encounterID"] = 1439,
					["source"] = "–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 95072,
				},
				[115509] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59751,
				},
				[5394] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114803] = {
					["source"] = "–°—è–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 65317,
				},
				[260069] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ì–æ–Ω–∫–∞",
					["npcID"] = 131809,
				},
				[19577] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[41635] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48045] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[235016] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61353] = {
					["source"] = "–î–∞–≥–Ω–∞ –ö—Ä–µ–º–Ω–µ–≤–æ–µ –†—É–∂—å–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 96779,
				},
				[313113] = {
					["source"] = "Ratterich-ArgentDawn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272435] = {
					["encounterID"] = 1418,
					["source"] = "–ì–æ–Ω—á–∞—è –¢—å–º—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136408,
				},
				[254240] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277904] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–π—Ñ–¥—ç–¥–ª–∏",
					["npcID"] = 0,
				},
				[271924] = {
					["type"] = "DEBUFF",
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268854] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264760] = {
					["source"] = "Hotnonstop-Stormscale",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–π–Ω–µ–µ–ª—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[1490] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2983] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–æ–º–æ—Ä–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[103740] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[41425] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[233490] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268856] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[221886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—å—è–Ω–∞—è–¥–µ–≤–∫–∞",
					["npcID"] = 0,
				},
				[273974] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[272439] = {
					["encounterID"] = 1416,
					["source"] = "–£—Ä'–∑—É–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136402,
				},
				[287280] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß—É–≤–∞–∫–∞–±—Ä–∞",
					["npcID"] = 0,
				},
				[114999] = {
					["npcID"] = 56884,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É",
					["encounterID"] = 1306,
				},
				[152108] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267558] = {
					["source"] = "–õ–∞—Ç–Ω–∏–∫—Å-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–æ—è–±–∏—Ç—å–º–æ—Ä–¥–∞",
					["npcID"] = 0,
				},
				[69070] = {
					["source"] = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288305] = {
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116849] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260384] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77130] = {
					["source"] = "Ize-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193345] = {
					["source"] = "–î–∂–∏–∑–∏–ª–∞–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120593] = {
					["source"] = "–õ—É–∂–∞ —Å–º–æ–ª—ã",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61965,
				},
				[130736] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267325] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106428] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 56395,
				},
				[233499] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267326] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215607] = {
					["source"] = "–õ–∏–∫–∞–Ω—Ç—Ä–æ–ø–∏–µ-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183111] = {
					["source"] = "–°—Ç—Ä–∞–∂ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 104091,
				},
				[199736] = {
					["source"] = "–®–º–∞–ª—å—Ç–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267327] = {
					["type"] = "BUFF",
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107324] = {
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å",
					["encounterID"] = 1419,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56929,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞—Ä–æ–≤–µ–ª—å",
					["npcID"] = 0,
				},
				[205231] = {
					["encounterID"] = 1412,
					["source"] = "–°–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å –¢—å–º—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 103673,
				},
				[264769] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[124212] = {
					["source"] = "–î–µ–æ–Ω–µ–π-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288675] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–ª—ã–π—à–∞–º–∞–Ω—á–∏",
					["encounterID"] = 1397,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275006] = {
					["source"] = "–≠–ª—å–∑–æ–Ω—Ä–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118455] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[267329] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120758] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61634,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–ª–µ—á—å-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[256293] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∫–∞–∑–æ—á–Ω–æ-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[267330] = {
					["type"] = "BUFF",
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120759] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫",
					["encounterID"] = 1502,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61634,
				},
				[293142] = {
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[99] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267331] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[319241] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[294966] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101568] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[59052] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[160597] = {
					["source"] = "–ñ–µ–∫–∞–Ω–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187464] = {
					["type"] = "DEBUFF",
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["encounterID"] = 1305,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[248473] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235313] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ—Ñ–æ—Å",
					["npcID"] = 0,
				},
				[1604] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59752,
				},
				[119345] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61434,
				},
				[115002] = {
					["npcID"] = 56884,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É",
					["encounterID"] = 1306,
				},
				[106942] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —à–∞",
					["npcID"] = 56765,
				},
				[264777] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∏–Ω–ª–∞–π–Ω–ª–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[264776] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∏–Ω–ª–∞–π–Ω–ª–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[293946] = {
					["source"] = "–ñ—É–π–∫–∏–≤–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273988] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264265] = {
					["source"] = "–ö–∞—Ä–æ–º–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 50138,
				},
				[192839] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[146739] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126389] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[285976] = {
					["source"] = "–ô–æ—Ä—É–∫—à–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198065] = {
					["source"] = "–õ—É—Ä–µ–Ω–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120760] = {
					["encounterID"] = 1502,
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61634,
				},
				[225080] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§—Ä–∏–º—ç–Ω-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["npcID"] = 0,
				},
				[106807] = {
					["encounterID"] = 1412,
					["source"] = "–£–∫-–£–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56637,
				},
				[118969] = {
					["source"] = "–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61240,
				},
				[312372] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Ä—Ä–∏–Ω–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[166592] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190026] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295186] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[127797] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[56814] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121762] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 62633,
				},
				[116155] = {
					["source"] = "–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 66413,
				},
				[116027] = {
					["encounterID"] = 1413,
					["source"] = "–ü—Ä—ã–≥—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59464,
				},
				[114108] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131894] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[272970] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287811] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118714] = {
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56448,
				},
				[192840] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268877] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[272156] = {
					["encounterID"] = 1418,
					["source"] = "–£–∂–∞—Å–µ–Ω—å –ë–µ–∑–¥–Ω—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136403,
				},
				[313663] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[119354] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - —Ç–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61436,
				},
				[107200] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1306,
				},
				[20707] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∂–æ–Ω–∏—Å–º–æ—É–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[182096] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 92447,
				},
				[269085] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–ª—ã–π—à–∞–º–∞–Ω—á–∏",
					["encounterID"] = 1397,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196937] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[62124] = {
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106612] = {
					["encounterID"] = 1418,
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56448,
				},
				[51505] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[115313] = {
					["encounterID"] = 1418,
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[296003] = {
					["source"] = "–≠–º–∏–ª—å–∫–æ-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[26573] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280615] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[268619] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1706] = {
					["source"] = "–°–ø–µ—Ü–¥—Ü-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[86603] = {
					["source"] = "–®–∞–¥–æ-–º–∞—Å—Ç–µ—Ä –ß—É–º –ö–∏—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 64517,
				},
				[126994] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119611] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[193356] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[280653] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121114] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61929,
				},
				[231895] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["encounterID"] = 1465,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185934] = {
					["source"] = "–ê–ª–∏—Ä—ç–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280654] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313918] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[227847] = {
					["source"] = "–ù–æ–Ω–µ–π–º–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196428] = {
					["source"] = "–ò–≤–∞—Ç–∏—ç–ª—å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[233786] = {
					["source"] = "–í–æ—Ä–æ–≤–∫–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 111254,
				},
				[225598] = {
					["source"] = "–ó—É–ª—å–º–∏—Ä–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6940] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[114051] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203849] = {
					["source"] = "–í–∏—Ç–æ–ª–µ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[47540] = {
					["source"] = "Holyper-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[204361] = {
					["source"] = "Chamydeather-KhazModan",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[30283] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303174] = {
					["source"] = "–ü–æ–¥—Å—Ç–∞–≤–∫–∞: –ú–µ—Ö–∞–≥–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 155431,
				},
				[268887] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300104] = {
					["source"] = "–ê—Å–º–æ–¥—ç–π-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[203850] = {
					["source"] = "–°–∞–∑–µ–∫—Å-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196782] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292363] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç–∫–æ–Ω–µ—á–Ω–æ",
					["npcID"] = 0,
				},
				[116670] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297035] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[55342] = {
					["source"] = "–ü–∏–¥—ç–ª—å—Ñ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[40120] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–µ—Ä–∫–∞—Å",
					["npcID"] = 0,
				},
				[127417] = {
					["source"] = "–°–∞–º–æ–¥–µ–ª—å–Ω—ã–π –∑–∞—Ä—è–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 65168,
				},
				[119347] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61434,
				},
				[188499] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[198222] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏–ª–æ–Ω–¥—Ä–∏–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®—Ä–∏–≤–µ—Ç–∞–ª-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[184662] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[1784] = {
					["source"] = "–ö–∞–≤–µ—Ä–∑–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24450] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ—à–∫–∞",
					["npcID"] = 59534,
				},
				[203852] = {
					["source"] = "–£–∂–∞–ª–µ–Ω–Ω–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289362] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212552] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì—Ä–∏–º–ª–æ—Ä–¥",
					["npcID"] = 0,
				},
				[246584] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–≤–ª–∏–Ω–Ω –°—Ç–∏–∫—Å",
					["npcID"] = 121527,
				},
				[297039] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∂—É—Å—Å–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[268893] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[104773] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201550] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297040] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í—ã–Ω–æ—Å–º–æ–∑–≥—ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[82326] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[78674] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288853] = {
					["source"] = "–ë–µ–∫–ª–µ—Ä–±–µ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188501] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ç–∏—Ñ—Ñ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[260402] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162402] = {
					["source"] = "–î–∂–∏–∑–∏–ª–∞–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287831] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[304722] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1822] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[16870] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[73685] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8679] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192852] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115009] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59808,
				},
				[201552] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1850] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–µ—Ä–∫–∞—Å",
					["npcID"] = 0,
				},
				[268898] = {
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[78675] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[44535] = {
					["source"] = "–ö–∞–≤–µ—Ä–∑–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313088] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[117952] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[61295] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[201553] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[55090] = {
					["source"] = "–ë–µ–∫–ª–µ—Ä–±–µ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116] = {
					["source"] = "S√≤vi-Frostmane",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51124] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[186801] = {
					["source"] = "–°–º—è–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1856] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[168290] = {
					["source"] = "–ì–∞—Ä—Ä—Ç–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115010] = {
					["npcID"] = 59804,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–≤–∞—Ç–∫–∞—è –Ω–µ–Ω–∞–≤–∏—Å—Ç—å",
					["encounterID"] = 1306,
				},
				[205648] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11540] = {
					["source"] = "–ó–µ–º–º-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203720] = {
					["source"] = "–†–∏–∏–Ω–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280149] = {
					["source"] = "–ú–∞—Ä–∞–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115650] = {
					["source"] = "–ü–µ–Ω–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59522,
				},
				[280404] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212792] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[271462] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["encounterID"] = 1397,
				},
				[281178] = {
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106055] = {
					["encounterID"] = 1418,
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56448,
				},
				[268904] = {
					["source"] = "–î–≥–±–µ—Å—É-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312915] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∂–æ–∞–¥–∂–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[106439] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 56395,
				},
				[271465] = {
					["type"] = "DEBUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1397,
				},
				[268905] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106823] = {
					["encounterID"] = 1416,
					["source"] = "–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56732,
				},
				[223306] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–∞–ª–ª–∏–∏-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[48438] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[121536] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[117570] = {
					["type"] = "BUFF",
					["source"] = "–§—Ä–∞–≥–º–µ–Ω—Ç —Å–æ–º–Ω–µ–Ω–∏—è",
					["encounterID"] = 1439,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56792,
				},
				[280165] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204883] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[221771] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[126270] = {
					["type"] = "BUFF",
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["encounterID"] = 1303,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124172] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61434,
				},
				[156779] = {
					["source"] = "–ü–∏—Ç—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[128829] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56890,
				},
				[141928] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268899] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20549] = {
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[223819] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[211793] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[210116] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[11366] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[186799] = {
					["source"] = "–°–º—è–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115652] = {
					["source"] = "–¢—É—á–Ω—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59519,
				},
				[216890] = {
					["source"] = "–ù–æ–Ω–µ–π–º–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[18960] = {
					["source"] = "–õ–∞—É–Ω–æ–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219726] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280170] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[223202] = {
					["source"] = "–î–∞–∑–≥—Ä—É–ª-–†–∞–∑—É–≤–∏–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[312411] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196442] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269883] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5697] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§—É–Ω—Ç–∏—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[1966] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121282] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62205,
				},
				[109128] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259388] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[278326] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[58506] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–Ω—å –ú–µ–¥–≤–µ–∂—å–µ –°–µ—Ä–¥—Ü–µ",
					["npcID"] = 62236,
				},
				[117828] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287338] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[185940] = {
					["source"] = "–ê–ª–∏—Ä—ç–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317020] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246851] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[134522] = {
					["source"] = "–§–∏–ª–ª–∏–ø–ø–∏–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281711] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49143] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[106826] = {
					["type"] = "BUFF",
					["source"] = "–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏",
					["npcID"] = 56719,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1305,
				},
				[53365] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[13877] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[115436] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59800,
				},
				[246852] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√™√™box-Blackrock",
					["npcID"] = 0,
				},
				[121449] = {
					["type"] = "DEBUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8004] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–µ—Ä–µ–≥–∞—Ä–∏—â–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[280177] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–º–∞–¥–∞—Ä–∞-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[19750] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[201549] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[26297] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201563] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264314] = {
					["source"] = "–Ø—Ä–±–∞–≥–∏—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191840] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[246853] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216528] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106827] = {
					["npcID"] = 56719,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏",
					["encounterID"] = 1305,
				},
				[106699] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥",
					["npcID"] = 56473,
				},
				[197214] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[121284] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62205,
				},
				[228381] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304482] = {
					["source"] = "–ö–µ–Ω–≥–∞–≤–∞—Ä–ª–æ–∫-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292463] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[58867] = {
					["encounterID"] = 1439,
					["source"] = "–î—É—Ö –≤–æ–ª–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 29264,
				},
				[172602] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113900] = {
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –≤—Ä–∞—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59271,
				},
				[111725] = {
					["encounterID"] = 1419,
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56877,
				},
				[248646] = {
					["source"] = "–°–∫—É—Ç–µ—Ä–æ–∫-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏—Ä–µ–Ω–∞–∫—Å",
					["npcID"] = 0,
				},
				[90361] = {
					["npcID"] = 151096,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞—Ç–∏",
					["encounterID"] = 1304,
				},
				[130] = {
					["source"] = "–≠–ø–∏—Ñ–æ—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12294] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281209] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Arth√©s-Deathwing",
					["npcID"] = 0,
				},
				[2060] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[45242] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131968] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - –±–æ–µ–≤–æ–π –ª–µ–∫–∞—Ä—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 67093,
				},
				[191587] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57716] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279673] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[139133] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[147833] = {
					["source"] = "–õ–∏—Å–µ—Ä–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107119] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–ø–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56876,
				},
				[258883] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102351] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[316522] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[300145] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116680] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[79962] = {
					["source"] = "–ù–µ–ª—É—Ä –°–µ—é—â–∏–π –°–≤–µ—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 96954,
				},
				[168304] = {
					["source"] = "–ì–∞—Ä—Ä—Ç–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[223829] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[254409] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109132] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1066] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54710] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠—Ñ—Ñ–µ–Ω–±–µ—Ä–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[115078] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[141917] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[95988] = {
					["source"] = "–£–Ω–∏—á—Ç–æ–∂—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[145255] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131971] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[114250] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8680] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131972] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - –±–æ–µ–≤–æ–π –ª–µ–∫–∞—Ä—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 67093,
				},
				[88023] = {
					["source"] = "–ó–æ–ª–æ—Ç–æ–π –∂—É–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59545,
				},
				[204896] = {
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –º–∞–≥–∏–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 114406,
				},
				[168306] = {
					["source"] = "–ì–∞—Ä—Ä—Ç–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207520] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[211805] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[244813] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281216] = {
					["source"] = "–î–∞—Ä—Ö—É–Ω-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290819] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280193] = {
					["source"] = "–ò–≥—Ä—É—à–µ—á–Ω–∞—è –æ—Å–∞–¥–Ω–∞—è –±–∞—à–µ–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 143744,
				},
				[135299] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[139] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[79571] = {
					["source"] = "–°—Ç—Ä–∞–∂ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 104091,
				},
				[212799] = {
					["source"] = "–î–µ–Ω–µ–≤-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296059] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[108238] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108366] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106447] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 56395,
				},
				[259387] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[107118] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["encounterID"] = 1406,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56877,
				},
				[279684] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231724] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107087] = {
					["type"] = "DEBUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1306,
				},
				[216413] = {
					["source"] = "–Å—Ä–∏—Ö–∏–º—ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267612] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[212061] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–±–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏",
					["npcID"] = 129525,
				},
				[116841] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273006] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Kardimal-Elune",
					["npcID"] = 0,
				},
				[245388] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[217694] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[55095] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[17] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[194153] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[201633] = {
					["source"] = "–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 100943,
				},
				[268429] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[90328] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 151096,
				},
				[201318] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61684] = {
					["source"] = "Raptor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 135790,
				},
				[269571] = {
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318187] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2336] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280711] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280713] = {
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205157] = {
					["source"] = "–ü—É—Å—Ç–æ—Ç–µ–ª—ã–π –∏—Å—Å–æ—Ö—à–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 100014,
				},
				[105809] = {
					["type"] = "BUFF",
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["encounterID"] = 1303,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[179057] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[73313] = {
					["source"] = "–í–∞–Ω–¥–µ—Ä–≤–µ—Ä–≥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247121] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193538] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6789] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257413] = {
					["source"] = "–®–∞–¥–æ—É–±—É–º-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192106] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—É–¥—å–±–∞–≥—É–±-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[213858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[280204] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[270481] = {
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–π —Ç–∏—Ä–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135002,
				},
				[27243] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48265] = {
					["source"] = "–ú–∞—Ä–∞–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280205] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196770] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[293511] = {
					["source"] = "–•–∞–Ω—Ç–µ—Ä–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[172057] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[128051] = {
					["source"] = "–ó–æ–ª–æ—Ç–æ–π –∂—É–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59545,
				},
				[295047] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–µ–ª–∞—Ä–∏–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2120] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
				},
				[190319] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126892] = {
					["source"] = "–¶–∏–≥—É–Ω-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118988] = {
					["encounterID"] = 2129,
					["source"] = "–ì–µ–∫–∫–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61243,
				},
				[195181] = {
					["source"] = "–°—Ç–µ—Ä–µ–æ–∫–æ–º–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[64044] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195182] = {
					["source"] = "–°—Ç–µ—Ä–µ–æ–∫–æ–º–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202090] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1417,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281744] = {
					["source"] = "–≠–≥–∏–¥–∏–æ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ª–∫–∏—Ç–æ—Ä",
					["npcID"] = 0,
				},
				[155777] = {
					["source"] = "–ê–±–∏–±–æ–∫–∞-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294027] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ–∑–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2484] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114255] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279187] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[182512] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196718] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268953] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124219] = {
					["source"] = "–ì–∏–ª—Ä–æ–Ω–∏-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115151] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[207311] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268954] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[225534] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[205146] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298068] = {
					["source"] = "–•–∞—Ç–∞–¥–∂–∏-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268955] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2061] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316036] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193641] = {
					["source"] = "Palomb√∏-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268956] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300174] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264352] = {
					["source"] = "–ú–µ–º–∞—Å—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51259] = {
					["source"] = "–ö—Ä—ã—Å–æ–∫–æ–Ω—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 110708,
				},
				[299662] = {
					["source"] = "–ê–Ω–∞–ª—å–≥—É–ª—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121165] = {
					["source"] = "–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61392,
				},
				[80353] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—ç–º–ø–∏—Å—Ç—ç–¥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[121421] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61928,
				},
				[45438] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279194] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[229217] = {
					["source"] = "–¶–∏–≥—É–Ω-–†–∞–∑—É–≤–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[35395] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[299664] = {
					["source"] = "–ê–π—Ä–∏—à–±–∞—Å—Ç–∞—Ä–¥-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ—ë–ª–∏–∫–µ–±–æ–ª–∏–∫-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[289308] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107570] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317065] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–º–∞–Ω–¥–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[5246] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102359] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[121422] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61928,
				},
				[131474] = {
					["source"] = "–ú–∞–≥–≥–≤–∞–π–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279709] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°—É–¥—å–±–∞–≥—É–±-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[297108] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[105174] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[224869] = {
					["source"] = "–ö–æ—Ä—Ä–µ–∫—Ç—Ç–æ—Ä—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300691] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[113746] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[129250] = {
					["source"] = "Holyper-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196382] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279028] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[84342] = {
					["encounterID"] = 2129,
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[27576] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198813] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300693] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198121] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293529] = {
					["source"] = "–ö–∏–ª–ª–Ω–∞—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[238176] = {
					["source"] = "–≠–π–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106966] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è",
					["npcID"] = 56766,
				},
				[53563] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[33697] = {
					["type"] = "BUFF",
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257408] = {
					["source"] = "–•–µ—Ä–∞–π—á—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221887] = {
					["source"] = "–ú–∏—Ä–µ—Å–∞–º–∏—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116178] = {
					["source"] = "–ü–µ–Ω–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59522,
				},
				[17962] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[207472] = {
					["source"] = "–ó—É–ª—å–º–∏—Ä–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138130] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69791,
				},
				[8921] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[172] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279715] = {
					["source"] = "–†—É–Ω–∏–∏-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122959] = {
					["encounterID"] = 1441,
					["source"] = "–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61398,
				},
				[274598] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279204] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[106839] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[183081] = {
					["source"] = "–°—Ç—Ä–∞–∂ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 104091,
				},
				[191837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[279793] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[129262] = {
					["type"] = "BUFF",
					["source"] = "–ì–µ–∫–∫–∞–Ω",
					["encounterID"] = 2129,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61243,
				},
				[44544] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121443] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62205,
				},
				[123647] = {
					["source"] = "–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61945,
				},
				[213652] = {
					["source"] = "–ë–æ–º–±–∞—Ä–¥–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263854] = {
					["source"] = "Raptor",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135790,
				},
				[259161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞—Ä–º–∞–ª–µ–∫—É—Å-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[264878] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[215111] = {
					["source"] = "–ó–ª–æ–≤–µ—â–∏–π –æ—Ö–æ—Ç–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 98035,
				},
				[273992] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221885] = {
					["source"] = "–•–∞–ª—å–±—å–µ—Ä–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298823] = {
					["source"] = "–ì–∞–Ω–µ—à–µ–Ω—å–∫–∞-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[174723] = {
					["source"] = "–≠–π–ª–≥–∞—Ä–¥-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[120100] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61444,
				},
				[236645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[216431] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[123649] = {
					["source"] = "–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61947,
				},
				[84963] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51886] = {
					["source"] = "–ô—ä—ë—å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[221549] = {
					["source"] = "–ù–µ–∏–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79206] = {
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275936] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120402] = {
					["source"] = "–ë–æ–≥–æ–º–æ–ª—å—Å–∫–∏–π –±–æ—á–æ–Ω–æ–∫ —Å —Å–æ–∫–æ–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61817,
				},
				[144787] = {
					["source"] = "–°–µ–≤–∏—Ä—É—Å-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8122] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196884] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[217200] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[112084] = {
					["encounterID"] = 1417,
					["source"] = "–¶–∑–∞–æ –ò—Å–∫–∞—Ç–µ–ª—å –°–æ–ª–Ω—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 58826,
				},
				[106841] = {
					["encounterID"] = 1416,
					["source"] = "–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56732,
				},
				[199545] = {
					["source"] = "–≠–º–∏–ª—å–µ–Ω–Ω–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131476] = {
					["source"] = "–ú–∞–≥–≥–≤–∞–π–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2908] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[188031] = {
					["source"] = "–†–µ–∫–¥–∞—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196475] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[143625] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121442] = {
					["encounterID"] = 1464,
					["source"] = "–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 62205,
				},
				[2050] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106857] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297126] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[114811] = {
					["source"] = "–ì–æ–≤–æ—Ä—è—â–∞—è —Ä—ã–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59546,
				},
				[2948] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196476] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[122962] = {
					["source"] = "–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61387,
				},
				[180612] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287916] = {
					["source"] = "–ê–≤—Ä–∏—ç–ª–∫–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280746] = {
					["source"] = "–•–µ—Ä–∞–π—á—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[29893] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[132764] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ç—Ç–∫–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[123986] = {
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274346] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292012] = {
					["source"] = "–¢—É–±—É—Ç—Å–∏—è-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108194] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199804] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198013] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298154] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[188290] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–Ω—Ö–µ—Ç—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[223929] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50613] = {
					["encounterID"] = 1418,
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√™√™box-Blackrock",
					["npcID"] = 0,
				},
				[119381] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[136] = {
					["source"] = "Everwaddle-Silvermoon",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[58875] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196479] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Omghehe-Ahn'Qiraj",
					["npcID"] = 0,
				},
				[85222] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[32612] = {
					["source"] = "–ü—Ä–∞–π–º–º–∏–Ω–∏—Å—Ç—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295137] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[337612] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[79849] = {
					["source"] = "–°—Ç—Ä–∞–∂ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 104091,
				},
				[195457] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì—Ä—ç–π–≥—É—Å",
					["npcID"] = 0,
				},
				[120789] = {
					["encounterID"] = 1502,
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61634,
				},
				[233582] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205180] = {
					["type"] = "BUFF",
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121173] = {
					["source"] = "–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61389,
				},
				[35079] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1305,
				},
				[57724] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∞–ª–≥–∞—à–∏–∫-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[121557] = {
					["source"] = "–ì–∏–ª—Ä–æ–Ω–∏-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107356] = {
					["type"] = "BUFF",
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É",
					["npcID"] = 56884,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1306,
				},
				[114660] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[53822] = {
					["source"] = "–í–∞–º–ø–∏—Ä–µ—Å–∫–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277179] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12472] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[276154] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[73325] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[6262] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[241260] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121468] = {
					["encounterID"] = 1406,
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61177,
				},
				[286393] = {
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–æ–¥–µ–≥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[121174] = {
					["source"] = "–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61392,
				},
				[302769] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304611] = {
					["type"] = "DEBUFF",
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185736] = {
					["source"] = "–ù—è–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107357] = {
					["npcID"] = 56884,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É",
					["encounterID"] = 1306,
				},
				[54149] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[65081] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[207230] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[124283] = {
					["encounterID"] = 1447,
					["source"] = "–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61485,
				},
				[1064] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[275699] = {
					["encounterID"] = 1418,
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[252216] = {
					["source"] = "–ó—É–ª—å–º–∏—Ä–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—à–æ–ª—ã—á",
					["npcID"] = 0,
				},
				[85256] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[289467] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277185] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[106062] = {
					["type"] = "BUFF",
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56448,
				},
				[60103] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[188089] = {
					["encounterID"] = 1418,
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115418] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59801,
				},
				[120800] = {
					["encounterID"] = 1502,
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61634,
				},
				[23881] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[196741] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[131493] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§—Ä—Ñ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[303344] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302775] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[305395] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[245102] = {
					["source"] = "–î–µ–≤–ª–∏–Ω–Ω –°—Ç–∏–∫—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121527,
				},
				[58301] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198533] = {
					["encounterID"] = 1418,
					["source"] = "–°—Ç–∞—Ç—É—è –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 60849,
				},
				[88625] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[120160] = {
					["encounterID"] = 1442,
					["source"] = "–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61445,
				},
				[115419] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59801,
				},
				[258920] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280772] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[84714] = {
					["source"] = "S√≤vi-Frostmane",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199754] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[182158] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280773] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277703] = {
					["type"] = "DEBUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1397,
				},
				[189067] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞–Ω—á—É–ª—å—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä —Å–º–µ—Ä—Ç–∏",
					["npcID"] = 131242,
				},
				[32645] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209746] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[130772] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–Ø—â–µ—Ä",
					["npcID"] = 3123,
				},
				[265931] = {
					["source"] = "–ì—Ä–∏–º—Ä–æ–¥–¥",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100784] = {
					["encounterID"] = 1417,
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[192077] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–µ—Ä–µ–≥–∞—Ä–∏—â–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[201350] = {
					["source"] = "–ê—Ä—Ç–µ–¥–∞–Ω-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278297] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–∫—É",
					["npcID"] = 0,
				},
				[280776] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[115804] = {
					["source"] = "Raptor",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 135790,
				},
				[277706] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186254] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[131241] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–û–≥–Ω–µ–Ω–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 56767,
				},
				[186265] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[270674] = {
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208772] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137639] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[211587] = {
					["source"] = "–ß–∞—Ä–æ–º–∞–Ω—Ç –í—Ä–∏–¥–∏—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 106655,
				},
				[147362] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[198793] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[15655] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç—Ä–µ–∫—à–∞—è—Å—è - –±–æ–µ–≤–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞",
					["npcID"] = 131216,
				},
				[3408] = {
					["source"] = "–°–µ–Ω–∞—Ç—É—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[224125] = {
					["source"] = "–î—É—Ö –≤–æ–ª–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 100820,
				},
				[280780] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115421] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59801,
				},
				[124253] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫ - —Ç–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61436,
				},
				[256374] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126935] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[197003] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81262] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–µ—Ä–∏–æ–¥ —Ü–≤–µ—Ç–µ–Ω–∏—è",
					["npcID"] = 47649,
				},
				[224126] = {
					["source"] = "–î—É—Ö –≤–æ–ª–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 100820,
				},
				[59752] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[300741] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122714] = {
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –ö–∞–º–µ–Ω–Ω–∞—è –ü–æ—Å—Ç—É–ø—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56843,
				},
				[96231] = {
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[328136] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205448] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[224127] = {
					["type"] = "BUFF",
					["source"] = "–î—É—Ö –≤–æ–ª–∫–∞",
					["encounterID"] = 1442,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 100820,
				},
				[127576] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1305,
				},
				[273942] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ—Ç—Ä–µ–≥–æ",
					["encounterID"] = 1465,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186258] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–ª—É–º–±–∞–π–Ω–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[51714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[203407] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[8936] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–Ω–∞–µ—Ö",
					["npcID"] = 0,
				},
				[296138] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–¥–æ—à-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[242551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–º–∞–Ω–¥–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[297162] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102560] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186263] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106853] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å",
					["npcID"] = 56541,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[314058] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112992] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º",
					["encounterID"] = 1413,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56717,
				},
				[110945] = {
					["type"] = "BUFF",
					["source"] = "–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä",
					["npcID"] = 56747,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[32390] = {
					["source"] = "–ê–Ω—à–∞–¥–µ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290512] = {
					["source"] = "Sh√§√∂lin-Archimonde",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[175513] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[211594] = {
					["source"] = "–ß–∞—Ä–æ–º–∞–Ω—Ç –í—Ä–∏–¥–∏—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 106655,
				},
				[202636] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–µ—Ä–∫–∞—Å",
					["npcID"] = 0,
				},
				[113760] = {
					["source"] = "–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56472,
				},
				[24394] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–∞—Ç–∏",
					["npcID"] = 151096,
				},
				[36554] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272090] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ—É–∫—Å–∏",
					["npcID"] = 0,
				},
				[119388] = {
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["encounterID"] = 1447,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[556] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—à–æ–ª—ã—á",
					["npcID"] = 0,
				},
				[205708] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188308] = {
					["source"] = "–ú–µ—Ñ–∞–ª–∏–æ–Ω-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264415] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[302797] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞—Ä–±–∞—Ä–∏–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[3600] = {
					["source"] = "–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 2630,
				},
				[298703] = {
					["source"] = "–ö–∏–ª–æ—Ñ–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297168] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[80240] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271581] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–µ—Ä–æ–∏–∫-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[190356] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[288981] = {
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3716] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 1860,
				},
				[5215] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44614] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∫—Ä–æ—Å–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[298700] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ–Ω–Ω—Ä–∞",
					["npcID"] = 0,
				},
				[271071] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[106851] = {
					["source"] = "–¢—É—á–Ω—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59519,
				},
				[188310] = {
					["source"] = "–ú–µ—Ñ–∞–ª–∏–æ–Ω-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[186257] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–ª—É–º–±–∞–π–Ω–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[304851] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121182] = {
					["source"] = "–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61392,
				},
				[57994] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[264420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[53390] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138927] = {
					["source"] = "–ì–∞—Ä–∞—Ö–∞—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[87023] = {
					["type"] = "DEBUFF",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1406,
				},
				[270562] = {
					["source"] = "–ì–∞—Ä–∏–±–∞–ª—å–¥–∏–∏-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[156071] = {
					["source"] = "–ö–∞–≤–∏–¥–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298197] = {
					["source"] = "–°—Ç–µ—Ä–µ–æ–∫–æ–º–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280286] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288455] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[247677] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278244] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–ª–º–∞—Ä–∏–æ–Ω-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[247675] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[270564] = {
					["source"] = "–£—Å–æ–±–æ—Ä–æ–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–ª—É–¥–∏–Ω–µ—Ä–æ-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[213644] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[51460] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288988] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–∞—Ä—Ç—Ä–µ—Å—Å",
					["npcID"] = 0,
				},
				[251258] = {
					["source"] = "–ê–º–µ–≥–æ—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106526] = {
					["encounterID"] = 1418,
					["source"] = "–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56448,
				},
				[87024] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–≤–∏–ª–∏-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[192082] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ç–µ–º –≤–µ—Ç—Ä—è–Ω–æ–≥–æ –ø–æ—Ä—ã–≤–∞",
					["npcID"] = 97285,
				},
				[107428] = {
					["encounterID"] = 1417,
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277731] = {
					["source"] = "–ö–∞–≤–µ—Ä–∑–Ω–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255937] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5487] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[69369] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–µ–±—É–Ω–∑—É–¥–æ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[223677] = {
					["source"] = "–í–∏–ª—Ä–µ—Å–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[260249] = {
					["source"] = "Everwaddle-Silvermoon",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192081] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267498] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–ø—É–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[300762] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270569] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210320] = {
					["source"] = "–ö—Ä–∞—Å–∞–≤–∫–∞-–°–µ–¥–æ–≥—Ä–∏–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289324] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270058] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[257537] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[79848] = {
					["source"] = "–°—Ç—Ä–∞–∂ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 104091,
				},
				[219788] = {
					["source"] = "–°—Ç–µ—Ä–µ–æ–∫–æ–º–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33917] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[154796] = {
					["source"] = "–ö—Ä–µ–π–∑–∏–∫–∞–∑–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108280] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[123652] = {
					["source"] = "–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61947,
				},
				[188316] = {
					["source"] = "–¶–∏–≥—É–Ω-–†–∞–∑—É–≤–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[299661] = {
					["source"] = "–§–∏–Ω–Ω–∞–≤–∞—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112869] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–∂–µ–Ω–µ—Ä–±–æ–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[121185] = {
					["source"] = "–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61389,
				},
				[106984] = {
					["npcID"] = 56747,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä",
					["encounterID"] = 1303,
				},
				[154797] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16591] = {
					["source"] = "–ü—É—Å—Å–∏–ª–æ—Ä–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262652] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185763] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273323] = {
					["source"] = "–§–æ–ª—å–≤–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196834] = {
					["type"] = "BUFF",
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314585] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201846] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§—Ä–∏–º—ç–Ω-–ü–∏—Ä–∞—Ç—Å–∫–∞—è–ë—É—Ö—Ç–∞",
					["npcID"] = 0,
				},
				[216468] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118903] = {
					["source"] = "–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61216,
				},
				[193316] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[7814] = {
					["source"] = "Fiertai",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 120526,
				},
				[270576] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112998] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58803,
				},
				[212800] = {
					["type"] = "BUFF",
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["encounterID"] = 2129,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119395] = {
					["type"] = "DEBUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["encounterID"] = 1447,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210324] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[123648] = {
					["source"] = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61946,
				},
				[165802] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[106434] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å",
					["encounterID"] = 1304,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56541,
				},
				[156079] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—Ä–∏–ª–∏–∞–Ω–Ω–∞-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["npcID"] = 0,
				},
				[302307] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195949] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[21655] = {
					["source"] = "–°—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –ö–∏—Ä–∏–Ω-–¢–æ—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 104091,
				},
				[64843] = {
					["source"] = "–ë–∞—Ä—ç–±—É—Ö-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81782] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81340] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194717] = {
					["source"] = "–≠—Ä—É–≤—ç–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112999] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏",
					["npcID"] = 58803,
				},
				[118940] = {
					["encounterID"] = 2129,
					["source"] = "–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61339,
				},
				[25771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[115430] = {
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59800,
				},
				[198300] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270070] = {
					["source"] = "–£–∂–∞–ª–µ–Ω–Ω–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294133] = {
					["source"] = "–í–¥—É–Ω—å—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137619] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197277] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272118] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–µ–ª—Ä–æ—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[277956] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259455] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–ª—å–±–µ—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[120778] = {
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 63106,
				},
				[12042] = {
					["source"] = "–ì–∂–∏—à-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313571] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[229220] = {
					["source"] = "–ù–∏–±–ª–µ—Ä–∏-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
				},
				[115175] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—å—é–ø–∞–º–æ–Ω–∫-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[54406] = {
					["source"] = "–ü–∏—Ç—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279584] = {
					["source"] = "–ó–æ—Ä—Ä–æ–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281844] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[272121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–ª–∞–π–Ω–ª–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[45181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ó–µ–ª—å–¥–∞—Ä–∏—è-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[305249] = {
					["source"] = "Lilstewert-Bloodhoof",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246407] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–ª—É–¥–∏–Ω–µ—Ä–æ-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[110117] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞",
					["npcID"] = 65414,
				},
				[279810] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[257410] = {
					["source"] = "–î–µ–∫–∞-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3409] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287379] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51271] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[246152] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[93402] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[107120] = {
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –†–∏'–º–æ–∫",
					["encounterID"] = 1406,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 56636,
				},
				[79934] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 107244,
				},
				[120087] = {
					["encounterID"] = 1442,
					["source"] = "–ö—Ä—É–∂–∞—â–∏–π—Å—è –¥–µ—Ä–≤–∏—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61626,
				},
				[198304] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[192842] = {
					["source"] = "–î–µ—Ä–ª–∞–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119910] = {
					["source"] = "–ù–µ—Ç–æ—Ä—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[131521] = {
					["type"] = "BUFF",
					["source"] = "–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É",
					["npcID"] = 56884,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1306,
				},
				[215652] = {
					["source"] = "–ë–æ–º–±–∞—Ä–¥–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272126] = {
					["source"] = "–õ—ç–π–±—Ä–∏–∫—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292361] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271103] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188070] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[276025] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198817] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188838] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[121190] = {
					["source"] = "–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61387,
				},
				[195627] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303345] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271105] = {
					["source"] = "–î–≥–±–µ—Å—É-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251837] = {
					["source"] = "–ü–µ—Ä–µ—à–Ω–∏—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270657] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[111723] = {
					["encounterID"] = 1419,
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56877,
				},
				[1079] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[120167] = {
					["encounterID"] = 1442,
					["source"] = "–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61445,
				},
				[213915] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[114282] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[271107] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120679] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[207203] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[198819] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265273] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304372] = {
					["source"] = "–ì—Ä–∞—Ñ–¥–∂–µ–π–º—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298743] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ—Ä–∞—Ç—Ä–æ–Ω-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["npcID"] = 0,
				},
				[121447] = {
					["encounterID"] = 1464,
					["source"] = "–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 62205,
				},
				[288074] = {
					["source"] = "–ö–∞—Ä–º–∏—Å-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245389] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288509] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–ª–ª–µ—Å–∏—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[273836] = {
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113899] = {
					["source"] = "–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –≤—Ä–∞—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59262,
				},
				[205473] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215387] = {
					["source"] = "–õ–∏–∫–∞–Ω—Ç—Ä–æ–ø–∏–µ-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268552] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[289534] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ—é–±–∏–º–æ–µ–∏–º—è-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["npcID"] = 0,
				},
				[152280] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287790] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281724] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[269065] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∏–Ω–ª–∞–π–Ω–ª–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[133] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[284277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ç—Ç–∫–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[121448] = {
					["type"] = "DEBUFF",
					["source"] = "–ë–∞—Ç–∞—à-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316007] = {
					["source"] = "–ê–±–∏–±–æ–∫–∞-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294142] = {
					["source"] = "–ö–∏–ª–ª–Ω–∞—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288371] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20271] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48778] = {
					["source"] = "–ó–ª–æ–π—É–º—ã—Å–µ–ª-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79833] = {
					["source"] = "–ó–∞—â–∏—Ç–Ω–∏–∫ –•–∏–¥–∂–∞–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 52216,
				},
				[284275] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[108271] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8092] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275773] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[46968] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[106736] = {
					["encounterID"] = 1439,
					["source"] = "–®–∞ –°–æ–º–Ω–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56439,
				},
				[47541] = {
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318219] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Ö–∞–ª–∏–Ω–æ—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123496] = {
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π",
					["npcID"] = 56754,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[204197] = {
					["source"] = "Holyper-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261769] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113645] = {
					["encounterID"] = 1397,
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317861] = {
					["source"] = "–§–æ—Ä–µ—Å—Ç-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119875] = {
					["encounterID"] = 1447,
					["source"] = "–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61485,
				},
				[146268] = {
					["source"] = "–≠—Å–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313948] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278559] = {
					["source"] = "–õ–∏–∞–¥—Ä–∏–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[34026] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[54216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø—â–µ—Ä",
					["npcID"] = 3123,
				},
				[300801] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120938] = {
					["source"] = "–°–∫–æ–ø–ª–µ–Ω–∏–µ —Å–º–æ–ª—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61910,
				},
				[6807] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[208097] = {
					["source"] = "–ü–æ—Ä—Ä–∏–≥–∞—Ç—Ç–µ—Ä-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300802] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108446] = {
					["source"] = "–ù–∏–º–∞–Ω—Ç—ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 1863,
				},
				[192090] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296197] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–¥–æ—à-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[270661] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203819] = {
					["source"] = "–†–∏–∏–Ω–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[223203] = {
					["source"] = "–î–∞–∑–≥—Ä—É–ª-–†–∞–∑—É–≤–∏–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116858] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[183218] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61391] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[40626] = {
					["source"] = "–≠—Ñ—Ç–µ—Ä–ø–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[688] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[186289] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[3567] = {
					["source"] = "–ê–ª–∏—Ä—ç–Ω–æ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[53385] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[106866] = {
					["encounterID"] = 1405,
					["source"] = "–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56706,
				},
				[197548] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏–ª–æ–Ω–¥—Ä–∏–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[107122] = {
					["encounterID"] = 1406,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113858] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[310530] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1304,
				},
				[286171] = {
					["source"] = "–ö–∞–≤–∏–¥–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111728] = {
					["npcID"] = 56877,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["encounterID"] = 1419,
				},
				[287827] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115008] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—É—Ä–∞–ª–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[193455] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[275544] = {
					["source"] = "Holyper-TwistingNether",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287825] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194223] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300809] = {
					["source"] = "Klingolas-Spinebreaker",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207017] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114927] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä",
					["npcID"] = 56747,
				},
				[297034] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–º—Ç–∏—Ä–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[193456] = {
					["source"] = "–ì–ª–∏–Ω–æ–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280852] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79892] = {
					["source"] = "–ú—É—Ä–≥–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω–∞—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 96957,
				},
				[96312] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–µ–º–∏—Ü—É-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[315179] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–∞–∫—Å–µ—Ä-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[212653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—É–∫–∞–Ω–æ–ø–ª–∞–≤–∫–∞",
					["npcID"] = 0,
				},
				[318211] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3355] = {
					["type"] = "DEBUFF",
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290577] = {
					["source"] = "–ü–æ–≥–∞–Ω–∏—â–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 149555,
				},
				[199854] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299789] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[302348] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ–Ω–µ—Ñ–∏—Ü–∏–∞—Ä–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2565] = {
					["source"] = "Grodahuvud-Terokkar",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8221] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[299790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[192843] = {
					["source"] = "–î–æ–∫—Ç–æ–π-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[319237] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Omghehe-Ahn'Qiraj",
					["npcID"] = 0,
				},
				[22703] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5176] = {
					["source"] = "–•–∏–ª–∏–º–¥–µ–¥–∞-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316801] = {
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[51723] = {
					["source"] = "–°–µ–Ω–∞—Ç—É—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[111730] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–π–≥–æ–Ω–Ω",
					["npcID"] = 56877,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1419,
				},
				[174524] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Dentcha-Drak'thul",
					["npcID"] = 0,
				},
				[164545] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199600] = {
					["source"] = "–°–∞—Ä—É–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274443] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√™√™box-Blackrock",
					["npcID"] = 0,
				},
				[318216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[296211] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266018] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194739] = {
					["source"] = "–¢—Ä–æ–ª—å—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162243] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[2641] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ—Ä–∏–Ω–¥—É–≥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2645] = {
					["source"] = "Ize-Sylvanas",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2649] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 121571,
				},
				[20473] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1329] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[127408] = {
					["source"] = "–Ø–Ω –ñ–µ–ª–µ–∑–Ω—ã–π –ö–æ–≥–æ—Ç—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61620,
				},
				[119476] = {
					["type"] = "BUFF",
					["source"] = "–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫",
					["encounterID"] = 1447,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 61485,
				},
				[118000] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∞–≥–∞—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[164547] = {
					["source"] = "Zverska-Draenor",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228260] = {
					["encounterID"] = 1303,
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[124317] = {
					["encounterID"] = 1447,
					["source"] = "–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61485,
				},
				[132563] = {
					["source"] = "–ê–ª–∞–π—è-–ê–∑—É—Ä–µ–≥–æ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119840] = {
					["encounterID"] = 1447,
					["source"] = "–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61448,
				},
				[223143] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303380] = {
					["source"] = "Cleanse-Pozzodell'Eternit√†",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231843] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–ª–º–∞—Ä–∏–æ–Ω-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[80182] = {
					["encounterID"] = 1412,
					["source"] = "–ü—å—è–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56862,
				},
				[120955] = {
					["source"] = "–°–º–æ–ª—è–Ω–æ–π –∫—É–ø–æ–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62208,
				},
				[132564] = {
					["source"] = "–ö–æ—Ç—ç–Ω–¥–µ–ª—å-–†–∞–∑—É–≤–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196277] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[11426] = {
					["source"] = "S√≤vi-Frostmane",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195901] = {
					["source"] = "–ü—ç—Ä–∏–ª",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298357] = {
					["type"] = "BUFF",
					["source"] = "–ú–æ–π–∫–∞–º–∏–Ω",
					["encounterID"] = 1412,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267560] = {
					["source"] = "–ê–ª–æ–Ω—à-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134489] = {
					["source"] = "–ó–µ–º–º-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[114291] = {
					["source"] = "–ü—Ä—ã–≥—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 59464,
				},
				[120560] = {
					["source"] = "–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61945,
				},
				[298343] = {
					["source"] = "–û–ª–∞–¥–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297375] = {
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["encounterID"] = 1502,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198837] = {
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 99541,
				},
				[768] = {
					["source"] = "–ö–ª–∏–∫–µ—Ä-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116014] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118963] = {
					["source"] = "–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61240,
				},
				[280413] = {
					["source"] = "–ö—É—Ä–æ—Å—Ö–∏–º—ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[348] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[253595] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì—Ä–∏–º–ª–æ—Ä–¥",
					["npcID"] = 0,
				},
				[124430] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198838] = {
					["source"] = "Ize-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318227] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "B√¢rtholom√§us-Blackrock",
					["npcID"] = 0,
				},
				[259491] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–æ—Ä–∏-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[288546] = {
					["encounterID"] = 1418,
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148797,
				},
				[288803] = {
					["source"] = "–°–∫—É—Ä–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–Ω—Ñ–∞—Å—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[183998] = {
					["source"] = "–ü–æ–≥—á—É–º–ø",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257946] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "R√™√™box-Blackrock",
					["npcID"] = 0,
				},
				[2825] = {
					["type"] = "BUFF",
					["source"] = "–ó–∞—Ä–≥—Ä–∏–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1303,
				},
				[112944] = {
					["encounterID"] = 1413,
					["source"] = "–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 56717,
				},
				[106872] = {
					["npcID"] = 56719,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏",
					["encounterID"] = 1305,
				},
				[5672] = {
					["source"] = "–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 3527,
				},
				[51533] = {
					["encounterID"] = 1418,
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187837] = {
					["encounterID"] = 1418,
					["source"] = "–£—Ç—Ç—è—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[51661] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠—Ñ—Ñ–µ–Ω–±–µ—Ä–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[165832] = {
					["source"] = "–í–µ—á–Ω–æ–∫—Ä—ã–ª–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278826] = {
					["source"] = "Kriegstreibr-Aegwynn",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[326419] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∏–Ω–ª–∞–π–Ω–ª–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[107574] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315161] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49998] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77575] = {
					["source"] = "D√†ri√∂s-Sylvanas",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196881] = {
					["source"] = "–®–µ–Ω–∞–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295367] = {
					["source"] = "Grodahuvud-Terokkar",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[114805] = {
					["source"] = "–¶–∑—è–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 59547,
				},
				[16979] = {
					["source"] = "–°–∞–∏–±–µ—Ä-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2643] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[94719] = {
					["source"] = "–û—Ä–∫–æ—Ä–æ–∫-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[29722] = {
					["source"] = "Kr√Øshn√§-TwistingNether",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[109304] = {
					["encounterID"] = 1502,
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[691] = {
					["source"] = "–ù–µ—Ç–æ—Ä—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1459] = {
					["source"] = "Fierysin-Terokkar",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111735] = {
					["type"] = "BUFF",
					["source"] = "–¢–∞—Ä",
					["encounterID"] = 1419,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 58835,
				},
				[197051] = {
					["source"] = "Ratterich-ArgentDawn",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228049] = {
					["source"] = "–ë–æ–º–±–∞—Ä–¥–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49821] = {
					["source"] = "–§—Ä–∞–Ω–∫—Ç–∏–º–∞–Ω—Ç–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[83242] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–µ–ª–±–æ–π–≤–æ–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[12051] = {
					["source"] = "–ö–æ—Ç—ë–Ω–∞–∫-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202425] = {
					["source"] = "–î–¥—Ä—É–ª—å–∏—Ç-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115630] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω",
					["npcID"] = 59751,
				},
				[63560] = {
					["encounterID"] = 1418,
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267798] = {
					["source"] = "L√∂ckd√∂wn-Outland",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[281036] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª–µ–ø–æ–π–ø—ä—é",
					["npcID"] = 0,
				},
				[164812] = {
					["source"] = "–ó—É–ª—Ö–∞–º–∞–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274739] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["encounterID"] = 1502,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202225] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316703] = {
					["source"] = "–ë–æ–º–±–∞—Ä–¥–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280385] = {
					["source"] = "–ì–æ—Ö–∞—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274740] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[224189] = {
					["source"] = "–≠–≥–∏–¥–∏–æ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199356] = {
					["source"] = "–ë—É—Ä–µ–≤–µ—Å—Ç–Ω–∏—Ü–∞ –ú–∏–ª—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 98378,
				},
				[243432] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274741] = {
					["source"] = "–†–µ–∑–µ—Ä—Ö–∞–Ω—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162794] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∞–Ω—Ö–∞–≥–µ–Ω",
					["npcID"] = 0,
				},
				[104316] = {
					["source"] = "–ù–µ–≤–æ–∑–º—É—Ç–∏–º–∞—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198589] = {
					["encounterID"] = 2129,
					["source"] = "–ò–≤–∞–Ω–¥—ç—Ö–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274742] = {
					["source"] = "–î–≥–±–µ—Å—É-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207289] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∫—Å—Ä–∞—Ä–¥-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["encounterID"] = 1418,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210391] = {
					["source"] = "–ê–ª—É–Ω–∏–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115191] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[88082] = {
					["npcID"] = 47244,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–µ—Å—Ç–µ—Ä—á–∏—Ç–æ—Å",
					["encounterID"] = 1397,
				},
				[264683] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["npcID"] = 122004,
				},
				[264682] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–º–±—Ä–∞'–¥–∂–∏–Ω",
					["npcID"] = 122004,
				},
				[290608] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—Ä—á—É–≥–æ",
					["npcID"] = 0,
				},
				[54861] = {
					["type"] = "BUFF",
					["source"] = "–¢–æ—Ä—Ä–∞–¥–∞—Ä",
					["encounterID"] = 1464,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288602] = {
					["source"] = "–ì–µ–¥—Ö–∞–Ω–∞–Ω—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196099] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä—Ö–∞–≥–∞–∫",
					["npcID"] = 0,
				},
				[214975] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Remnance-Stormrage",
					["npcID"] = 0,
				},
			},
			["health_statusbar_bgcolor"] = {
				0.04313725490196078, -- [1]
				0.04313725490196078, -- [2]
				0.04313725490196078, -- [3]
				1, -- [4]
			},
			["extra_icon_show_enrage"] = true,
			["border_thickness"] = 1.299999952316284,
			["cast_statusbar_texture"] = "ElvUI A",
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["extra_icon_show_purge_border"] = {
				nil, -- [1]
				0.86666666666667, -- [2]
			},
			["aura_width2"] = 21,
			["health_selection_overlay_alpha"] = 0,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
		},
		["–†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥"] = {
			["use_ui_parent"] = true,
			["ui_parent_scale_tune"] = 1,
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Explosion Affix M+"] = 3,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Color Change"] = 1,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["url"] = "",
					["Icon"] = 135996,
					["Enabled"] = true,
					["Revision"] = 156,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Name"] = "Unit - Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 399,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 391,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 324,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 232,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 574,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 376,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["url"] = "",
					["Icon"] = 135024,
					["Enabled"] = true,
					["Revision"] = 59,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Name"] = "Color Change [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 157,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["url"] = "",
					["Icon"] = 133006,
					["Enabled"] = false,
					["Revision"] = 45,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Border Color [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 131,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Name"] = "UnitPower [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 190,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 194,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [15]
			},
			["aura2_x_offset"] = 0,
			["aura2_y_offset"] = 5,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Color Automation [Plater]",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Time"] = 1547392935,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Hide Neutral Units [Plater]",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["Time"] = 1541606242,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["Name"] = "Cast Bar Icon Settings [P]",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1596670932,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["semver"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Time"] = 1554138845,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Name"] = "Execute Range [Plater]",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["Time"] = 1547406548,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Reorder Nameplate [Plater]",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1596791840,
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 574574,
					["semver"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Time"] = 1547993111,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Name"] = "Extra Border [Plater]",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["Time"] = 1547409079,
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135426,
					["Time"] = 1548354524,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Players Targeting a Target [Plater]",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["Time"] = 1548278227,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Current Target Color [Plater]",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["Time"] = 1552354619,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 295,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Aura Reorder [Plater]",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1596741775,
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["semver"] = "",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Attacking Specific Unit"] = 1,
				["Cast Bar Icon Config"] = 1,
				["Execute Range"] = 1,
				["Extra Border"] = 2,
				["Combo Points"] = 3,
				["Target Color"] = 3,
				["Aura Reorder"] = 2,
				["Hide Neutral Units"] = 1,
			},
			["patch_version"] = 12,
			["aura_y_offset"] = 5,
		},
		["Huntard"] = {
			["target_shady_combat_only"] = false,
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Name"] = "Unit - Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["ScriptType"] = 3,
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 399,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["Name"] = "Aura - Buff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 388,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "BombadÔøΩo-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538066775,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "BombadÔøΩo-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 567,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538237586,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 376,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 106,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Icon"] = 135024,
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Color Change [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["ScriptType"] = 3,
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Icon"] = 133006,
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["ScriptType"] = 3,
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["ScriptType"] = 2,
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
					},
					["ScriptType"] = 1,
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Icon"] = 841383,
					["Author"] = "Tecno-Azralon",
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Fixate On You [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["ScriptType"] = 3,
				}, -- [15]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["url"] = "https://wago.io/YZGnikQjh/1",
			["hover_highlight_alpha"] = 0.10055037587881,
			["target_shady_enabled"] = false,
			["cast_statusbar_spark_alpha"] = 0.69999998807907,
			["aura2_y_offset"] = 5,
			["aura_timer_text_anchor"] = {
				["side"] = 13,
				["x"] = 8,
			},
			["health_statusbar_bgtexture"] = "PlaterBackground",
			["plate_config"] = {
				["player"] = {
					["actorname_text_font"] = "EXPRESSWAY",
					["power_percent_text_font"] = "EXPRESSWAY",
					["percent_text_font"] = "EXPRESSWAY",
					["spellpercent_text_font"] = "EXPRESSWAY",
					["big_actorname_text_font"] = "EXPRESSWAY",
					["spellname_text_font"] = "EXPRESSWAY",
					["level_text_font"] = "EXPRESSWAY",
					["big_actortitle_text_font"] = "EXPRESSWAY",
				},
				["friendlyplayer"] = {
					["spellname_text_font"] = "EXPRESSWAY",
					["big_actorname_text_font"] = "EXPRESSWAY",
					["percent_text_font"] = "EXPRESSWAY",
					["spellpercent_text_font"] = "EXPRESSWAY",
					["actorname_text_font"] = "EXPRESSWAY",
					["power_percent_text_font"] = "EXPRESSWAY",
					["level_text_font"] = "EXPRESSWAY",
					["big_actortitle_text_font"] = "EXPRESSWAY",
				},
				["friendlynpc"] = {
					["actorname_text_font"] = "EXPRESSWAY",
					["percent_text_font"] = "EXPRESSWAY",
					["spellpercent_text_font"] = "EXPRESSWAY",
					["big_actortitle_text_font"] = "EXPRESSWAY",
					["all_names"] = false,
					["power_percent_text_font"] = "EXPRESSWAY",
					["relevance_state"] = 3,
					["big_actorname_text_font"] = "EXPRESSWAY",
					["level_text_font"] = "EXPRESSWAY",
					["spellname_text_font"] = "EXPRESSWAY",
				},
				["enemyplayer"] = {
					["actorname_text_font"] = "EXPRESSWAY",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellpercent_text_font"] = "EXPRESSWAY",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["level_text_size"] = 9,
					["big_actortitle_text_font"] = "EXPRESSWAY",
					["cast"] = {
						160, -- [1]
						12, -- [2]
					},
					["all_names"] = true,
					["big_actortitle_text_size"] = 10,
					["big_actorname_text_font"] = "EXPRESSWAY",
					["power_percent_text_font"] = "EXPRESSWAY",
					["level_text_alpha"] = 0.69999998807907,
					["spellname_text_font"] = "EXPRESSWAY",
					["percent_text_size"] = 8,
					["actorname_text_spacing"] = 7,
					["percent_text_font"] = "EXPRESSWAY",
					["spellpercent_text_size"] = 8,
					["spellpercent_text_outline"] = "NONE",
					["quest_enabled"] = true,
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["side"] = 8,
					},
					["big_actorname_text_size"] = 10,
					["health_incombat"] = {
						115, -- [1]
						8, -- [2]
					},
					["health"] = {
						115, -- [1]
						8, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 10,
						["x"] = 15.25,
					},
					["cast_incombat"] = {
						160, -- [1]
					},
					["percent_text_anchor"] = {
						["side"] = 11,
						["x"] = -1.6500015258789,
					},
					["level_text_font"] = "EXPRESSWAY",
					["actorname_text_size"] = 8,
				},
				["enemynpc"] = {
					["actorname_text_font"] = "EXPRESSWAY",
					["big_actorname_text_outline"] = "MONOCHROME",
					["spellpercent_text_font"] = "EXPRESSWAY",
					["level_text_size"] = 9,
					["big_actortitle_text_font"] = "EXPRESSWAY",
					["cast"] = {
						100, -- [1]
						12, -- [2]
					},
					["spellpercent_text_size"] = 10.22869300842285,
					["spellname_text_font"] = "EXPRESSWAY",
					["actorname_text_outline"] = "MONOCHROME",
					["actorname_text_anchor"] = {
						["side"] = 8,
					},
					["level_text_alpha"] = 0.69999998807907,
					["percent_text_size"] = 10.38100242614746,
					["actorname_text_spacing"] = 11.27874374389648,
					["percent_text_font"] = "EXPRESSWAY",
					["percent_show_health"] = false,
					["power_percent_text_font"] = "EXPRESSWAY",
					["cast_incombat"] = {
						120.1644439697266, -- [1]
						12, -- [2]
					},
					["percent_text_outline"] = "MONOCHROME",
					["actorname_text_size"] = 12.27874374389648,
					["spellname_text_size"] = 12.43119525909424,
					["health_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["health"] = {
						120.1644439697266, -- [1]
						12.37312507629395, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 10,
						["x"] = 15.254608154297,
					},
					["big_actorname_text_font"] = "EXPRESSWAY",
					["percent_text_anchor"] = {
						["y"] = 2.069999694824219,
						["x"] = -1.6450576782227,
						["side"] = 11,
					},
					["level_text_font"] = "EXPRESSWAY",
					["level_text_enabled"] = false,
				},
			},
			["indicator_raidmark_anchor"] = {
				["y"] = 22.059997558594,
				["x"] = -75.339996337891,
				["side"] = 9,
			},
			["aura_y_offset"] = 9.8333129882813,
			["aura_tracker"] = {
				["buff_banned"] = {
					["206150"] = true,
					["61574"] = true,
					["61573"] = true,
				},
				["buff_tracked"] = {
					["209859"] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Targetting Alpha"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Attacking Specific Unit"] = 1,
				["Jaina Encounter"] = 6,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Combo Points"] = 3,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Aura Reorder"] = 2,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.79781, -- [4]
			},
			["update_throttle"] = 0.050000000745058,
			["color_override_colors"] = {
				[3] = {
					nil, -- [1]
					0.2784313, -- [2]
					0.2078431, -- [3]
				},
			},
			["aura_show_tooltip"] = true,
			["npc_cache"] = {
				["138432"] = {
					"Tidemistress Nessa", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["132922"] = {
					"Enslaved Murloc", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["128967"] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				["137474"] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				["134389"] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["126969"] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
				},
				["146945"] = {
					"Swarming Voidspawn", -- [1]
					"Crucible of Storms", -- [2]
				},
				["144767"] = {
					"Gonk's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146320"] = {
					"Prelate Za'lan", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146766"] = {
					"Greater Serpent Totem", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["147896"] = {
					"Zandalari Crusader", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146409"] = {
					"Lady Jaina Proudmoore", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146256"] = {
					"Laminaria", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136549"] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["128435"] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				["148622"] = {
					"Echo of Kimbul", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["135231"] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				["137458"] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
				},
				["129208"] = {
					"Dread Captain Lockwood", -- [1]
					"Siege of Boralus", -- [2]
				},
				["129552"] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				["134686"] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["129227"] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["131812"] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				["149240"] = {
					"Blingtron MK2", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148623"] = {
					"Echo of Gonk", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148195"] = {
					"Hateful Shade", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["122973"] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				["148488"] = {
					"Unliving Augur", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["137486"] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				["144683"] = {
					"Ra'wani Kanae", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138557"] = {
					"Living Corruption", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["135329"] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				["140769"] = {
					"Goldenvein", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["135552"] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				["148614"] = {
					"Kul Tiran Cannoneer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148624"] = {
					"Echo of Pa'ku", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["127497"] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				["136005"] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["129369"] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				["140447"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["135474"] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128455] = {
					"–¢'–ª–æ–Ω–¥–∂–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["148631"] = {
					"Unexploded Ordnance", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["127486"] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				["131311"] = {
					"Unleashed Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147105"] = {
					"Solid Ice", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131527"] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				["135048"] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				["129879"] = {
					"Irontide Cleaver", -- [1]
					"Siege of Boralus", -- [2]
				},
				["148611"] = {
					"Yoru'cha", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146436"] = {
					"Tempting Siren", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["128651"] = {
					"Hadal Darkfathom", -- [1]
					"Siege of Boralus", -- [2]
				},
				["148569"] = {
					"Breakwater Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["149535"] = {
					"Icebound Image", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131817"] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				["146596"] = {
					"Darkscale Myrmidon", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["146940"] = {
					"Primordial Mindbender", -- [1]
					"Crucible of Storms", -- [2]
				},
				["129471"] = {
					"Deepsea Sandcrawler", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["132126"] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				["132918"] = {
					"Spitefin Raider", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["137713"] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["124581"] = {
					"Spineshell Snapper", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["138002"] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				["133345"] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["145273"] = {
					"The Hand of In'zashi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["125828"] = {
					"Kobecoopper", -- [1]
					"Atal'Dazar", -- [2]
				},
				["135192"] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				["140294"] = {
					"Snowfur Wolf", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["139657"] = {
					"Coldlight Shorestriker", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["144807"] = {
					"Ravenous Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["130655"] = {
					"Bobby Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				["148665"] = {
					"Rastari Royal Guard", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["147497"] = {
					"Prelate Akk'al", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129232"] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["148147"] = {
					"Orwell Stevenson", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["148199"] = {
					"Screeching Phantasm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["147827"] = {
					"7th Legion Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148673"] = {
					"Vessel of Bwonsamdi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["145267"] = {
					"AzerMEK Mk. II", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["135258"] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["132913"] = {
					"Island Ettin", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["134940"] = {
					"Bristlethorn Piercer", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["134514"] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["146492"] = {
					"Phantom of Rage", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146731"] = {
					"Zombie Dust Totem", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131667"] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				["132051"] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				[127757] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["137614"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["135366"] = {
					"Blacktooth Arsonist", -- [1]
					"Tol Dagor", -- [2]
				},
				["139097"] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["135406"] = {
					"Animated Gold", -- [1]
					"Kings' Rest", -- [2]
				},
				["144754"] = {
					"Fa'thuul the Feared", -- [1]
					"Crucible of Storms", -- [2]
				},
				["132740"] = {
					"Venomscale Hydra", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["148483"] = {
					"Ancestral Avenger", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146119"] = {
					"Needleback Brute", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[122963] = {
					"–†–µ–∑–∞–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["129550"] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				["137487"] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				["129231"] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["147830"] = {
					"Rastari Flamespeaker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136330"] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				["135049"] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				["130436"] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["146253"] = {
					"Brother Joseph", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["133663"] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				["129366"] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["131492"] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				["132755"] = {
					"Breakbeak Scavenger", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["130522"] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				["148970"] = {
					"7th Legion Medic", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138281"] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				["134950"] = {
					"Fanged Terror", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["129788"] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				["147933"] = {
					"Geoactive Azershard", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["147374"] = {
					"Barrier", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["128455"] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				["129640"] = {
					"Snarling Dockhound", -- [1]
					"Siege of Boralus", -- [2]
				},
				[129552] = {
					"–ú–æ–Ω–∑—É–º–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["148169"] = {
					"Certified Explosives Expert", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["140619"] = {
					"Coastal Fathomjaw", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["130909"] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				["140292"] = {
					"Snowfur Alpha", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["134173"] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["146895"] = {
					"Fleshrot Vandal", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["138560"] = {
					"Faceless Horror", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["130653"] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["146889"] = {
					"Fleshrot Deathwalker", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["134910"] = {
					"Shimmerweb", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[129553] = {
					"–î–∏–Ω–æ–º–∞–Ω—Ç –ö–∏—à'–æ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["122969"] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				["134058"] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["148582"] = {
					"Stormbound Guardian", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["135562"] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["137516"] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				["131863"] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				["133361"] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				["148164"] = {
					"Boomshot Specialist", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["148442"] = {
					"Gnomish Commando", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138254"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				["141938"] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				["129559"] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				["131785"] = {
					"Buzzing Drone", -- [1]
					"Tol Dagor", -- [2]
				},
				["148621"] = {
					"Jek'kwa", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129598"] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				["140038"] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["148272"] = {
					"Crankshot Flame Turret", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131436"] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				["133836"] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[122970] = {
					"–ö—Ä–∞–¥—É—â–∏–π—Å—è —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["144286"] = {
					"Asset Manager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["127019"] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				["133848"] = {
					"Encyclopedia Antagonistica", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["144976"] = {
					"Forsaken Deathguard", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["149331"] = {
					"Luminous Azerite", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["135234"] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				["127106"] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[122971] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["149289"] = {
					"De Lurker Be'loa", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129699"] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				["144733"] = {
					"Deathguard Captain Vandel", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["133944"] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["127315"] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[125977] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["137405"] = {
					"Gripping Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["139110"] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["134012"] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["145513"] = {
					"Dredge Fleet Sawbones", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["138992"] = {
					"Muckfin Puddlejumper", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["133436"] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["138980"] = {
					"Muckfin Raider", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["140334"] = {
					"Nightscale Coilfang", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["135235"] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				["134150"] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["146893"] = {
					"Fleshrot Mystic", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["135699"] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				["130026"] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				["145274"] = {
					"Yalat's Bulwark", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["122263"] = {
					"Spineshell Snapjaw", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["136214"] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["148441"] = {
					"Gnomish Gyro-Engineer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["140760"] = {
					"Earthliving Giant", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["134331"] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				["129719"] = {
					"Golly", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["149441"] = {
					"Frozen Ballista", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["134617"] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["133972"] = {
					"Heavy Cannon", -- [1]
					"Tol Dagor", -- [2]
				},
				["132713"] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134388"] = {
					"A Knot of Snakes", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["144977"] = {
					"Forsaken Deadshot", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131823"] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				["134364"] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["136083"] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["126848"] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				["138187"] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				["145130"] = {
					"Doomrider Champion", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["135989"] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				["146072"] = {
					"Shredder Technician", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["135322"] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				["130521"] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				["137473"] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				["134899"] = {
					"Venomfang Lurker", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["146326"] = {
					"Headhunter Gal'wana", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["147202"] = {
					"Animated Azershard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["134069"] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["135706"] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				["147932"] = {
					"Agitated Azershard", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147218"] = {
					"Spirit of Gold", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["128650"] = {
					"Chopper Redhook", -- [1]
					"Siege of Boralus", -- [2]
				},
				["148945"] = {
					"Ensign Roberts", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138255"] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				["130012"] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				["140792"] = {
					"Breakbeak Bonepicker", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147786"] = {
					"Forsaken Blightspreader", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131825"] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				["134060"] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["137626"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["133384"] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[122532] = {
					"–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["138434"] = {
					"Spitefin Tempest Witch", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147495"] = {
					"Rastari Enforcer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["133870"] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				["133852"] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				["139626"] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["142324"] = {
					"Bluefin Dolphin", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["133990"] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135989] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["151059"] = {
					"Eternal Guardian", -- [1]
					"Crucible of Storms", -- [2]
				},
				[161437] = {
					"–í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["138507"] = {
					"Warlord Ultriss", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["129526"] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				["128434"] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				["122972"] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				["130325"] = {
					"Deepsea Viseclaw", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["135052"] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				["139949"] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["138369"] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["129601"] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				["147498"] = {
					"Prelate Jakit", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["122968"] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				["136250"] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["125977"] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				["148221"] = {
					"Risen Hulk", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["144755"] = {
					"Zaxasj the Speaker", -- [1]
					"Crucible of Storms", -- [2]
				},
				["131669"] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				["139269"] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				["127480"] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				["148144"] = {
					"Croz Bloodrage", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["127479"] = {
					"The Sand Queen", -- [1]
					"Tol Dagor", -- [2]
				},
				["131445"] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				["148667"] = {
					"Rastari Punisher", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["133432"] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["149144"] = {
					"Jaina's Tide Elemental", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["139799"] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["122967"] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				["151068"] = {
					"Tentacled Voidpriest", -- [1]
					"Crucible of Storms", -- [2]
				},
				["138561"] = {
					"Faceless Mindlasher", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["132920"] = {
					"Shadow Serpent", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["144796"] = {
					"High Tinker Mekkatorque", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136006"] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["129553"] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				["131864"] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				["148615"] = {
					"Div'yane", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["134157"] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				["136811"] = {
					"Pebblestone Flinger", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["145195"] = {
					"Dredge Fleet Destroyer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["128652"] = {
					"Viq'Goth", -- [1]
					"Siege of Boralus", -- [2]
				},
				["130333"] = {
					"Gritplate Basilisk", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["134691"] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["119724"] = {
					"Tidal Surger", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["145261"] = {
					"Opulence", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["145510"] = {
					"Dredge Fleet Marine", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["134333"] = {
					"Dorp", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["139425"] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["148972"] = {
					"Wounded Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["144638"] = {
					"Grong the Revenant", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["139422"] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["127490"] = {
					"Knight Captain Valyri", -- [1]
					"Tol Dagor", -- [2]
				},
				["139284"] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["144840"] = {
					"Mottled Fawn", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["135263"] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				["65310"] = {
					"Turnip Punching Bag", -- [1]
					"Atal'Dazar", -- [2]
				},
				["139652"] = {
					"Coldlight Coastrunner", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["127799"] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["133685"] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				["134390"] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["137989"] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				["131824"] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				["126845"] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				["134990"] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["146138"] = {
					"Exploding Magmite", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["145554"] = {
					"Base Cap'n Crankshot", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["134144"] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["136295"] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["129372"] = {
					"Blacktar Bomber", -- [1]
					"Siege of Boralus", -- [2]
				},
				["136470"] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["144849"] = {
					"Darkscale Scout", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["134063"] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["127111"] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				["123289"] = {
					"Sparkleshell Deathclaw", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["131402"] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				["148522"] = {
					"Ice Block", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["130488"] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["140293"] = {
					"Snowfur Snarler", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["129758"] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				["123290"] = {
					"Sparkleshell Clacker", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["144691"] = {
					"Ma'ra Grimfang", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131818"] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				["135245"] = {
					"Bilge Rat Demolisher", -- [1]
					"Siege of Boralus", -- [2]
				},
				["129996"] = {
					"Irontide Cleaver", -- [1]
					"Siege of Boralus", -- [2]
				},
				["129548"] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				["131819"] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				["146322"] = {
					"Siegebreaker Roka", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138447"] = {
					"Battle-Maiden Salaria", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["131685"] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				["144842"] = {
					"Tide Crawler", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131411"] = {
					"Venomscale Monitor", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[127315] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["135254"] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				["133835"] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				["137517"] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["136297"] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["144998"] = {
					"Death Specter", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[122967] = {
					"–ñ—Ä–∏—Ü–∞ –ê–ª—É–Ω'–∑–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["132056"] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["130025"] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[132126] = {
					"–ü–æ–∑–æ–ª–æ—á–µ–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["140797"] = {
					"Corpseharvest", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[161408] = {
					"–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131009] = {
					"–î—É—Ö –∑–æ–ª–æ—Ç–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["146493"] = {
					"Phantom of Slaughter", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["145053"] = {
					"Eldritch Abomination", -- [1]
					"Crucible of Storms", -- [2]
				},
				["129370"] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[122969] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["130400"] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
				},
				[122965] = {
					"–í–æ–ª'–∫–∞–∞–ª", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[129517] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —è—â–µ—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[127879] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["148893"] = {
					"Tormented Soul", -- [1]
					"Tol Dagor", -- [2]
				},
				[122973] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –¥—É—Ö–æ–≤–Ω–∏–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["134600"] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[161502] = {
					"–ì–æ–ª–æ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ø–ª–æ—Ç–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[161510] = {
					"–†–∞–∑–¥–∏—Ä–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["136845"] = {
					"Sandscalp Axe Thrower", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["131587"] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[122972] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∞–≤–≥—É—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["138556"] = {
					"Tainted Ooze", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["134056"] = {
					"Aqu'sirr", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["130027"] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				["144963"] = {
					"Kimbul's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136643"] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["138428"] = {
					"Spitefin Myrmidon", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["144941"] = {
					"Akunda's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138499"] = {
					"Twilight Dragonkin", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["136810"] = {
					"Pebblestone Earthrager", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["126928"] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				["140337"] = {
					"Nightscale Hatchling", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["146553"] = {
					"Kul Tiran Strongarm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129527"] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				["129364"] = {
					"Sneaky Pete", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["134612"] = {
					"Grasping Tentacles", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["139658"] = {
					"Coldlight Murkdweller", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[121975] = {
					"–ê–≥–≥—Ä–∞–º–∞—Ä", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["130028"] = {
					"Ashvane Priest", -- [1]
					"Tol Dagor", -- [2]
				},
				["136391"] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["130485"] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["151041"] = {
					"Etruvis the Vassal", -- [1]
					"Crucible of Storms", -- [2]
				},
				["136186"] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["151058"] = {
					"Bubbling Blood", -- [1]
					"Crucible of Storms", -- [2]
				},
				["135975"] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["144747"] = {
					"Pa'ku's Aspect", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["137625"] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				["138061"] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["133379"] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["138559"] = {
					"Forgotten One", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["145307"] = {
					"Forsaken Laborer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["145047"] = {
					"Forsaken Blight Thrower", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["130661"] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["129374"] = {
					"Scrimshaw Enforcer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["134284"] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				["147948"] = {
					"Coagulated Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["148118"] = {
					"Caravan Brutosaur", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[128434] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["126424"] = {
					"Coralback Surfcrawler", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["149569"] = {
					"Dazari Worshipper", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[161243] = {
					"–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["137204"] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["129599"] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				["131112"] = {
					"Cutwater Striker", -- [1]
					"Tol Dagor", -- [2]
				},
				["138445"] = {
					"Duke Szzull", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["122984"] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				["134338"] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["134417"] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["136483"] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				["144975"] = {
					"Forsaken Lancer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["131677"] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				["129367"] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				["130635"] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["148894"] = {
					"Lost Soul", -- [1]
					"Tol Dagor", -- [2]
				},
				[128435] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Å–∞—É—Ä–∏–¥", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["145132"] = {
					"Veteran Deathguard", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["133935"] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				["131666"] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				["142587"] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				["127484"] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				["133430"] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["146251"] = {
					"Sister Katherine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["137511"] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				["135971"] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["136139"] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["133463"] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["131821"] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
				},
				["144692"] = {
					"Anathos Firecaller", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["127503"] = {
					"Overseer Korgus", -- [1]
					"Tol Dagor", -- [2]
				},
				["130011"] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				["145371"] = {
					"Uu'nat", -- [1]
					"Crucible of Storms", -- [2]
				},
				["134005"] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134418"] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["132911"] = {
					"Pebblestone Trogg", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["136076"] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["140335"] = {
					"Nightscale Screecher", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["144765"] = {
					"Asithra Diresong", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["130307"] = {
					"Unstable Typhoon", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["147895"] = {
					"Rezani Disciple", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["137940"] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134993"] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				["127119"] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				["122963"] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				["127488"] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				["134991"] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["137716"] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134828"] = {
					"Aqualing", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["133943"] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				["122266"] = {
					"Spineshell Turtle", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147968"] = {
					"Agitated Azerite", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["127381"] = {
					"Silt Crab", -- [1]
					"Tol Dagor", -- [2]
				},
				["148613"] = {
					"Commander Broadside", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["137485"] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				["137484"] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				["147868"] = {
					"Frenzied Saurid", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146125"] = {
					"Magmaster Blastcrank", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["129600"] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				["146240"] = {
					"AzerMEK Beam Target", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["148625"] = {
					"Echo of Krag'wa", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148617"] = {
					"Akunda the Devout", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131009"] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				["144942"] = {
					"Spark Bot", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["147571"] = {
					"Pa'kura Priestess", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129529"] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				["144850"] = {
					"Darkscale Siren", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["135204"] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				["130437"] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[127799] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["134599"] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["145603"] = {
					"Goblin Harvester", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["129602"] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				["127482"] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				["146116"] = {
					"Needleback Forager", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["137103"] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				["147965"] = {
					"Volatile Azerite", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["136861"] = {
					"Duskstalker Kuli", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["151098"] = {
					"Shadowy Appendage", -- [1]
					"Crucible of Storms", -- [2]
				},
				["144839"] = {
					"Whitetail Doe", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["139946"] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["134616"] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["122971"] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				["136541"] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
				},
				["140295"] = {
					"Snowfur Pup", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["145644"] = {
					"Bwonsamdi", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["134041"] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				["127485"] = {
					"Bilge Rat Looter", -- [1]
					"Tol Dagor", -- [2]
				},
				["140542"] = {
					"Kindleweb Spider", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["133389"] = {
					"Galvazzt", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["135240"] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				["129214"] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134174"] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				["135903"] = {
					"Manifestation of the Deep", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["126983"] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				["147938"] = {
					"Azergem Crystalback", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["144996"] = {
					"Visage from Beyond", -- [1]
					"Crucible of Storms", -- [2]
				},
				["138464"] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				["148619"] = {
					"Echo of Akunda", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146105"] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138563"] = {
					"Vudax", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				["134898"] = {
					"Venomfang Recluse", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["131849"] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				["144760"] = {
					"Shredmaster Blix", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["128969"] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				["130087"] = {
					"Irontide Raider", -- [1]
					"Tol Dagor", -- [2]
				},
				["126429"] = {
					"Encrusted Coralback", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["133738"] = {
					"Astralite Visara", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["136249"] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["136665"] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				["148907"] = {
					"Prismatic Image", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148120"] = {
					"Kul Tiran Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131545"] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				["147835"] = {
					"Rastari Alpha", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["134602"] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["122264"] = {
					"Elder Spineshell", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["146491"] = {
					"Phantom of Retribution", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["120651"] = {
					"Explosives", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["147829"] = {
					"Rastari Beastmaster", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["144993"] = {
					"Crazed Thistlebear", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["130435"] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["138429"] = {
					"Spitefin Tidebinder", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["135846"] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["146831"] = {
					"Kul Tiran Stormbringer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["129371"] = {
					"Riptide Shredder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["147936"] = {
					"Azergem Shardback", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["149508"] = {
					"Ice Blocked Nathanos", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["135365"] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				["126919"] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				["135239"] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				["129802"] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["138576"] = {
					"Faceless Tendril", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["136347"] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["151630"] = {
					"Void Ichor", -- [1]
					"Crucible of Storms", -- [2]
				},
				["136797"] = {
					"Pebblestone Skullthumper", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["131847"] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				["146118"] = {
					"Territorial Needleback", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[121985] = {
					"–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["148443"] = {
					"Defense-A-Bot", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["127124"] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				["137969"] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				["138978"] = {
					"Gargantuan Muckfin", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["139800"] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["129373"] = {
					"Dockhound Packmaster", -- [1]
					"Siege of Boralus", -- [2]
				},
				["149591"] = {
					"Rastari Marksman", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["144762"] = {
					"Delaryn Summermoon", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["134423"] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["134024"] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				["146829"] = {
					"Undying Guardian", -- [1]
					"Crucible of Storms", -- [2]
				},
				["131585"] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				["134251"] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				["135241"] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				["146401"] = {
					"Darkscale Dig-Slave", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["100943"] = {
					"Earthen Wall Totem", -- [1]
					"The Battle for Gilneas", -- [2]
				},
				["134137"] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["129989"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				["137521"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				["135169"] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				["130582"] = {
					"Despondent Scallywag", -- [1]
					"Tol Dagor", -- [2]
				},
				["134629"] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["135167"] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				["130024"] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				["146753"] = {
					"Kul Tiran Marine", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["148962"] = {
					"Ravenous Stalker", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["127879"] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				["138558"] = {
					"Faceless One", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["138247"] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				["134139"] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["144837"] = {
					"Darkshore Stag", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["136934"] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["145915"] = {
					"Kaldorei Dark Ranger", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["145129"] = {
					"Deathguard Champion", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["137029"] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["148607"] = {
					"Kal'ia Pa'kuaya", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131383"] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				["131858"] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				["139651"] = {
					"Coldlight Deepseer", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["137830"] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				["126832"] = {
					"Skycap'n Kragg", -- [1]
					"Freehold", -- [2]
				},
				["148154"] = {
					"Agathe Wyrmwood", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["147935"] = {
					"Azergem Crawler", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["136353"] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["128551"] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				["148968"] = {
					"Kul Tiran Sailor", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["131850"] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				["133912"] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				["131318"] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[161241] = {
					"–ú–∞–ª'—Ç–∏—Ä - –º–∞–≥ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["133593"] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["146107"] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["133007"] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				["126918"] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				["145616"] = {
					"King Rastakhan", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["138990"] = {
					"Urgl the Blind", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["146894"] = {
					"Fleshrot Cabalist", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["134232"] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["149556"] = {
					"Eternal Enforcer", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["134900"] = {
					"Venomfang Spider", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["137478"] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				["133963"] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				["134332"] = {
					"Captain Greenbelly", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["139656"] = {
					"Coldlight Oracle", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				["148290"] = {
					"Crazed Crankshot Engineer", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["146756"] = {
					"Energized Storm", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136100"] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				["129517"] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				["138577"] = {
					"Crushing Tentacle", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["131586"] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				["137233"] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["122986"] = {
					"Wild Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				["148716"] = {
					"Risen Soul", -- [1]
					"Tol Dagor", -- [2]
				},
				[161244] = {
					"–ö—Ä–æ–≤—å –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["129928"] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				["122965"] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				["144974"] = {
					"Forsaken Alchemist", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["146552"] = {
					"Kul Tiran Tideweaver", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["146106"] = {
					"Living Bomb", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["130404"] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				["140630"] = {
					"Ornate Puffer", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["147026"] = {
					"Forsaken Bilespitter", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["134701"] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				["138465"] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				["134739"] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				["126847"] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				["138501"] = {
					"Twilight Whelp", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["144071"] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				["137591"] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				["148119"] = {
					"Furious Merchant", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["136735"] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				["127757"] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				["148200"] = {
					"Restless Bones", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["144860"] = {
					"Sira Moonwarden", -- [1]
					"Warfronts Darkshore - Alliance", -- [2]
				},
				["129547"] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				["147069"] = {
					"Spirit of Xuen", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				["133733"] = {
					"Moonscythe Pelani", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["138562"] = {
					"Void Maggot", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["135007"] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				["134941"] = {
					"Bristlethorn Spider", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				["151056"] = {
					"Varanq'ul the Mighty", -- [1]
					"Crucible of Storms", -- [2]
				},
				["138427"] = {
					"Spitefin Harpooner", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				["122970"] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[122968] = {
					"–Ø–∑–º–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["138500"] = {
					"Twilight Scalesister", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[123680] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≠–π–¥–∏—Å", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				["133482"] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[125828] = {
					"Toonspice", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				["134158"] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
			},
			["spell_animation_list"] = {
				["228354"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 228354,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["5374"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 5374,
						["class"] = "ROGUE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["31935"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.03,
						["scale_upY"] = 1.03,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.97,
						["duration"] = 0.05,
						["scale_downX"] = 0.97,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 31935,
						["class"] = "PALADIN",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = true,
						["duration"] = 0.1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["critical_scale"] = 1.05,
						["amplitude"] = 6,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				["11366"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.15,
						["scale_upY"] = 1.15,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.8,
						["duration"] = 0.05,
						["scale_downX"] = 0.8,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 11366,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.2,
						["amplitude"] = 10,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				["199552"] = {
					["1"] = {
						["scaleY"] = 0.79999923706055,
						["fade_out"] = 0.099999994039536,
						["absolute_sineX"] = true,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.20000076293945,
						["amplitude"] = 2.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 199552,
						["class"] = "DEMONHUNTER",
						["time"] = 1539717392,
						["desc"] = "",
					},
					["2"] = {
						["scale_upY"] = 1.0299999713898,
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.96999996900559,
						["duration"] = 0.05,
						["scale_downX"] = 0.96999996900559,
						["animation_type"] = "scale",
					},
				},
				["222024"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.035,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 222024,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.02,
						["absolute_sineX"] = true,
						["duration"] = 0.075,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["critical_scale"] = 2,
						["amplitude"] = 1.8,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 50,
					},
				},
				["2098"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1000000238419,
						["scale_upY"] = 1.1999999284744,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.89999997615814,
						["duration"] = 0.04,
						["scale_downX"] = 0.89999997615814,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 2098,
						["class"] = "ROGUE",
						["time"] = 1539293610,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.079999998211861,
						["duration"] = 0.21999999880791,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 1.5,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 2.710000038147,
					},
				},
				["228598"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 2,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 228598,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["228600"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.2,
						["amplitude"] = 10,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 228600,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["203782"] = {
					["1"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = true,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["amplitude"] = 1.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 203782,
						["class"] = "DEMONHUNTER",
						["time"] = 1539716639,
						["desc"] = "",
					},
				},
				["107270"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.1499999910593,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["critical_scale"] = 1.05,
						["amplitude"] = 0.1499999910593,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 107270,
						["class"] = "MONK",
						["time"] = 1539296490,
						["desc"] = "",
					},
				},
				["205523"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["critical_scale"] = 1.05,
						["amplitude"] = 3,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 205523,
						["class"] = "MONK",
						["time"] = 1539295885,
						["desc"] = "",
					},
				},
				["162243"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039535,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 1,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 162243,
						["class"] = "DEMONHUNTER",
						["time"] = 1539717356,
						["desc"] = "",
					},
				},
				["117418"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1499999910593,
						["duration"] = 0.1799999922514,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["critical_scale"] = 1.05,
						["amplitude"] = 0.1499999910593,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 116.00999450684,
					},
					["info"] = {
						["spellid"] = 117418,
						["class"] = "MONK",
						["time"] = 1539296387,
						["desc"] = "",
					},
				},
				["6343"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 0.95,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.1,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 6343,
						["class"] = "WARRIOR",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["204157"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 6,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 204157,
						["class"] = "DEMONHUNTER",
						["time"] = 1539716637,
						["desc"] = "",
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.03,
						["scale_upY"] = 1.03,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.97,
						["duration"] = 0.05,
						["scale_downX"] = 0.97,
						["enabled"] = true,
					},
				},
				["222026"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.04,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 222026,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.18,
						["duration"] = 0.08,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 10,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 3.1,
					},
				},
				["199547"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.59999847412109,
						["critical_scale"] = 1.05,
						["amplitude"] = 3,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 199547,
						["class"] = "DEMONHUNTER",
						["time"] = 1539717795,
						["desc"] = "",
					},
					["2"] = {
						["scale_upY"] = 1.039999961853,
						["scale_upX"] = 1.039999961853,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.96999996900558,
						["duration"] = 0.05,
						["scale_downX"] = 0.96999996900558,
						["animation_type"] = "scale",
					},
				},
				["185438"] = {
					["1"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.19999998807907,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 6.460000038147,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 185438,
						["class"] = "ROGUE",
						["time"] = 1539204014,
						["desc"] = "",
					},
					["2"] = {
						["scale_upY"] = 1.0299999713898,
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.96999996900559,
						["duration"] = 0.05,
						["scale_downX"] = 0.96999996900559,
						["animation_type"] = "scale",
					},
				},
				["245388"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.03,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 245388,
						["class"] = "ROGUE",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.06,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 5,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 2,
					},
				},
				["206930"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.035,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 206930,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["absolute_sineX"] = true,
						["duration"] = 0.075,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = -1,
						["critical_scale"] = 2,
						["amplitude"] = 1.8,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 50,
					},
				},
				["52174"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.15,
						["scale_upY"] = 1.15,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.8,
						["duration"] = 0.075,
						["scale_downX"] = 0.8,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 52174,
						["class"] = "WARRIOR",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.2,
						["absolute_sineX"] = false,
						["duration"] = 0.3,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.15,
						["critical_scale"] = 1.2,
						["amplitude"] = 6,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 50,
					},
				},
				["264178"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.08,
						["duration"] = 0.15,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 3,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.25,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 264178,
						["class"] = "WARLOCK",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["108853"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 108853,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["86040"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1,
						["duration"] = 0.15,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 2,
						["fade_in"] = 0.05,
						["enabled"] = true,
						["cooldown"] = 0.25,
						["frequency"] = 20,
					},
					["info"] = {
						["spellid"] = 86040,
						["class"] = "WARLOCK",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["275779"] = {
					["1"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 275779,
						["class"] = "PALADIN",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["100784"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["critical_scale"] = 1.05,
						["amplitude"] = 3,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 100784,
						["class"] = "MONK",
						["time"] = 1539296312,
						["desc"] = "",
					},
				},
				["228478"] = {
					["1"] = {
						["scaleY"] = 0.79999923706055,
						["fade_out"] = 0.099999994039536,
						["absolute_sineX"] = true,
						["duration"] = 0.099999994039535,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.20000076293945,
						["amplitude"] = 2.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 228478,
						["class"] = "DEMONHUNTER",
						["time"] = 1539716636,
						["desc"] = "",
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["scale_upY"] = 1.0299999713898,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.96999996900559,
						["duration"] = 0.05,
						["scale_downX"] = 0.96999996900559,
						["enabled"] = true,
					},
				},
				["199804"] = {
					["1"] = {
						["scaleY"] = 0.88999938964844,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.19999998807907,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["critical_scale"] = 1.05,
						["amplitude"] = 1.1699999570847,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 23.525676727295,
					},
					["info"] = {
						["spellid"] = 199804,
						["class"] = "ROGUE",
						["time"] = 1539293872,
						["desc"] = "",
					},
					["2"] = {
						["scale_upY"] = 1.0499999523163,
						["scale_upX"] = 1.0499999523163,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 1,
						["duration"] = 0.050000000745058,
						["scale_downX"] = 1,
						["animation_type"] = "scale",
					},
				},
				["53595"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.03,
						["scale_upY"] = 1.03,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.97,
						["duration"] = 0.05,
						["scale_downX"] = 0.97,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 53595,
						["class"] = "PALADIN",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.05,
						["amplitude"] = 3,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				["197834"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 197834,
						["class"] = "ROGUE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["20243"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 20243,
						["class"] = "WARRIOR",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["30451"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 30451,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["185099"] = {
					["1"] = {
						["scaleY"] = 0.84999847412109,
						["fade_out"] = 0.18999999761581,
						["absolute_sineX"] = false,
						["duration"] = 0.19999998807907,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["critical_scale"] = 1.05,
						["amplitude"] = 3,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 185099,
						["class"] = "MONK",
						["time"] = 1539712435,
						["desc"] = "",
					},
				},
				["44425"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 44425,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["32645"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.04,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 32645,
						["class"] = "ROGUE",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.18,
						["duration"] = 0.08,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 10,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 4.1,
					},
				},
				["46968"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 0.95,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.1,
						["frequency"] = 120,
					},
					["info"] = {
						["spellid"] = 46968,
						["class"] = "WARRIOR",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["196278"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.05,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 196278,
						["class"] = "WARLOCK",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["55090"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.18,
						["duration"] = 0.08,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 10,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 4.1,
					},
					["info"] = {
						["spellid"] = 55090,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["198030"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.31999999284744,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 0.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 198030,
						["class"] = "DEMONHUNTER",
						["time"] = 1539717136,
						["desc"] = "",
					},
				},
				["196819"] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.1999999284744,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.89999997615814,
						["duration"] = 0.04,
						["scale_downX"] = 0.89999997615814,
						["scale_upY"] = 1.2999999523163,
					},
					["info"] = {
						["spellid"] = 196819,
						["class"] = "ROGUE",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1799999922514,
						["duration"] = 0.21999999880791,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["absolute_sineX"] = false,
						["amplitude"] = 5,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 3.3099999427795,
					},
				},
				["148135"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["critical_scale"] = 1.05,
						["amplitude"] = 1.75,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 60.874122619629,
					},
					["info"] = {
						["spellid"] = 148135,
						["class"] = "MONK",
						["time"] = 1539295958,
						["desc"] = "",
					},
				},
				["189112"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.34999999403954,
						["absolute_sineX"] = true,
						["duration"] = 0.40000000596046,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["critical_scale"] = 1.05,
						["amplitude"] = 1.8799999952316,
						["fade_in"] = 0,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 51.979999542236,
					},
					["info"] = {
						["spellid"] = 189112,
						["class"] = "DEMONHUNTER",
						["time"] = 1539715467,
						["desc"] = "",
					},
				},
				["31661"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 31661,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["7268"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["duration"] = 0.1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 7268,
						["class"] = "MAGE",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["85948"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 85948,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["35395"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.12,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 35395,
						["class"] = "PALADIN",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["280720"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["duration"] = 0.19999998807907,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.05,
						["amplitude"] = 0.89999997615814,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 280720,
						["class"] = "ROGUE",
						["time"] = 1539292087,
						["desc"] = "",
					},
				},
				["116858"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.075,
						["scale_upY"] = 1.075,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.915,
						["duration"] = 0.075,
						["scale_downX"] = 0.915,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 116858,
						["class"] = "WARLOCK",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1,
						["duration"] = 0.15,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 2,
						["fade_in"] = 0.05,
						["enabled"] = true,
						["cooldown"] = 0.25,
						["frequency"] = 60,
					},
				},
				["100780"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.099999994039536,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.05,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["info"] = {
						["spellid"] = 100780,
						["class"] = "MONK",
						["time"] = 1539295910,
						["desc"] = "",
					},
				},
				["185763"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.25999999046326,
						["absolute_sineX"] = false,
						["duration"] = 0.15999999642372,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["critical_scale"] = 1.05,
						["amplitude"] = 3.6583230495453,
						["fade_in"] = 0.0099999997764826,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 23.525663375854,
					},
					["info"] = {
						["spellid"] = 185763,
						["class"] = "ROGUE",
						["time"] = 1539275610,
						["desc"] = "",
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.96999996900559,
						["duration"] = 0.05,
						["scale_downX"] = 0.96999996900559,
						["scale_upY"] = 1.0299999713898,
					},
				},
				["184575"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.05,
						["scale_upY"] = 1.05,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.95,
						["duration"] = 0.05,
						["scale_downX"] = 0.95,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 184575,
						["class"] = "PALADIN",
						["time"] = 0,
						["desc"] = "",
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["duration"] = 0.1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["critical_scale"] = 1.2,
						["amplitude"] = 2,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				["49998"] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["duration"] = 0.13,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["absolute_sineX"] = false,
						["amplitude"] = 1.8,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["info"] = {
						["spellid"] = 49998,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["27285"] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1.1,
						["scale_upY"] = 1.1,
						["cooldown"] = 0.75,
						["scale_downY"] = 0.9,
						["duration"] = 0.075,
						["scale_downX"] = 0.9,
						["animation_type"] = "scale",
					},
					["info"] = {
						["spellid"] = 27285,
						["class"] = "WARLOCK",
						["time"] = 0,
						["desc"] = "",
					},
				},
				["155166"] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["duration"] = 0.2,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["absolute_sineX"] = false,
						["amplitude"] = 0.45,
						["fade_in"] = 0.01,
						["enabled"] = true,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
					["info"] = {
						["spellid"] = 155166,
						["class"] = "DEATHKNIGHT",
						["time"] = 0,
						["desc"] = "",
					},
				},
			},
			["indicator_scale"] = 0.75,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.84000000357628, -- [4]
			},
			["health_selection_overlay_alpha"] = 0.19999998807907,
			["not_affecting_combat_alpha"] = 0.799999,
			["aura_height"] = 15.812648773193,
			["target_highlight_alpha"] = 1,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Double Arrows",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1547392935,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["PlaterCore"] = 1,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1549937733,
					["Icon"] = 136207,
					["PlaterCore"] = 1,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1547409079,
					["Icon"] = 133689,
					["PlaterCore"] = 1,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 56,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
							["1"] = 2280,
							["Enabled"] = true,
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554147636,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["PlaterCore"] = 1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1541606242,
					["Icon"] = 1990989,
					["PlaterCore"] = 1,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 224,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
							["1"] = 2281,
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554147865,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["PlaterCore"] = 1,
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 89,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554940124,
					["Icon"] = 135358,
					["PlaterCore"] = 1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1547993111,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["PlaterCore"] = 1,
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 41,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
							["Enabled"] = true,
							["117"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554929323,
					["Icon"] = 2446016,
					["PlaterCore"] = 1,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1548354524,
					["Icon"] = 135426,
					["PlaterCore"] = 1,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 184,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554132966,
					["Icon"] = 1966587,
					["PlaterCore"] = 1,
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "",
					["Time"] = 1552354619,
					["Icon"] = 878211,
					["PlaterCore"] = 1,
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 20,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"EXPRESSWAY\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"EXPRESSWAY\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Name"] = "Change All Fonts",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554147863,
					["Icon"] = 134331,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 58,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add npc id of stealth detect mobs here\n    envTable.stealthMobs = {\n        --AD\n        [127879] = true, \n        [122984] = true,\n        --SotS\n        [134144] = true,\n        [134139] = true,\n        [136249] = true,\n        [134150] = true,\n        [136214] = true,\n        [134338] = true,\n        --ML\n        [133430] = true,\n        [137940] = true,\n        [133463] = true,\n        --TD\n        [135699] = true,\n        [127486] = true,\n        [127497] = true,\n        [130025] = true,\n    }\n    \n    --change color of names for stealth detect mobs here\n    envTable.stealthColor = {1, 1, 0, 1}\n    \n    --do not change below\n    function envTable.updateStealth(unitFrame)\n        if unitFrame and unitFrame.namePlateNpcId then\n            local id = unitFrame.namePlateNpcId\n            if envTable.stealthMobs[id] then\n                unitFrame.unitName:SetTextColor(unpack(envTable.stealthColor))\n            end\n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateStealth(unitFrame)\nend",
					},
					["Author"] = "Canoeshoes-Area 52",
					["Desc"] = "Changes name color for mobs that can see stealth",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateStealth(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --add npc id of stealth detect mobs here\n    envTable.stealthMobs = {\n        --AD\n        [127879] = true, \n        [122984] = true,\n        --SotS\n        [134144] = true,\n        [134139] = true,\n        [136249] = true,\n        [134150] = true,\n        [136214] = true,\n        [134338] = true,\n        --ML\n        [133430] = true,\n        [137940] = true,\n        [133463] = true,\n        --TD\n        [135699] = true,\n        [127486] = true,\n        [127497] = true,\n        [130025] = true,\n    }\n    \n    --change color of names for stealth detect mobs here\n    envTable.stealthColor = {1, 1, 0, 1}\n    \n    --do not change below\n    function envTable.updateStealth(unitFrame)\n        if unitFrame and unitFrame.namePlateNpcId then\n            local id = unitFrame.namePlateNpcId\n            if envTable.stealthMobs[id] then\n                unitFrame.unitName:SetTextColor(unpack(envTable.stealthColor))\n            end\n        end\n    end\n    \nend",
					},
					["Name"] = "Stealth Mobs",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554929315,
					["Icon"] = 132320,
					["PlaterCore"] = 1,
				}, -- [16]
				{
					["Enabled"] = true,
					["Revision"] = 76,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 20,\n        height = 16,\n        x = 28,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend\n\n\n",
					},
					["Author"] = "ÔøΩrÔøΩÔøΩne-Kel'thuzad",
					["Desc"] = "Adds double arrow as a target indicators option",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 20,\n        height = 16,\n        x = 28,\n        y = 0,\n        blend = \"ADD\",\n        color = \"gold\",\n    }    \n    \nend\n\n\n",
					},
					["Name"] = "Double Arrow Target",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Nameplate Created",
					["Time"] = 1554148251,
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
					["PlaterCore"] = 1,
				}, -- [17]
				{
					["Enabled"] = true,
					["Revision"] = 164,
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["Name"] = "M+ MDT MobPercentage",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554929325,
					["Icon"] = 254292,
					["PlaterCore"] = 1,
				}, -- [18]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
				}, -- [19]
			},
			["aura_width2"] = 18,
			["aura_stack_size"] = 8,
			["target_shady_alpha"] = 0,
			["aura_width"] = 18,
			["aura_height2"] = 15.812648773193,
			["health_statusbar_bgcolor"] = {
				0.043137254901961, -- [1]
				0.043137254901961, -- [2]
				0.043137254901961, -- [3]
				1, -- [4]
			},
			["login_counter"] = 23,
			["version"] = 1,
			["aura_border_colors"] = {
				["steal_or_purge"] = {
					nil, -- [1]
					0.50196078431373, -- [2]
					0.98039215686274, -- [3]
				},
			},
			["aura_grow_direction"] = 1,
			["indicator_enemyclass"] = true,
			["aura_stack_anchor"] = {
				["side"] = 9,
			},
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
			["hook_data_trash"] = {
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["HooksTemp"] = {
					},
					["Author"] = "Altieri-Proudmoore",
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1554127930,
					["Name"] = "New Mod",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["PlaterCore"] = 1,
					["Icon"] = "",
					["Time"] = 1554127923,
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 96,
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local preset = MethodDungeonTools:GetCurrentPreset()\n            local isTeeming = MethodDungeonTools:IsPresetTeeming(preset)\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Hooks"] = {
						["Destructor"] = "		function (self, unitId, unitFrame, envTable)\n			--insert code here\n			\n		end\n	",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local preset = MethodDungeonTools:GetCurrentPreset()\n            local isTeeming = MethodDungeonTools:IsPresetTeeming(preset)\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["__TrashAt"] = 1554128080,
					["Name"] = "M+ MDT MobPercentage",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Added",
					["Time"] = 1552129458,
					["Icon"] = 254292,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["HooksTemp"] = {
					},
					["Author"] = "Altieri-Proudmoore",
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1554929243,
					["Name"] = "New Mod",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["PlaterCore"] = 1,
					["Icon"] = "",
					["Time"] = 1554929239,
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 105,
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local preset = MethodDungeonTools:GetCurrentPreset()\n            local isTeeming = MethodDungeonTools:IsPresetTeeming(preset)\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local preset = MethodDungeonTools:GetCurrentPreset()\n            local isTeeming = MethodDungeonTools:IsPresetTeeming(preset)\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["__TrashAt"] = 1554929280,
					["Name"] = "M+ MDT MobPercentage",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554929274,
					["Icon"] = 254292,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 164,
					["HooksTemp"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 10;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 1, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming = MethodDungeonTools:GetEnemyForces(npcId)\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend\n\n\n\n",
					},
					["__TrashAt"] = 1554929283,
					["Name"] = "M+ MDT MobPercentage",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1554929275,
					["Icon"] = 254292,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["role"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [5]
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura - Buff Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Blink Time Left"] = 1,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Explosion Affix M+"] = 3,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Color Change"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["target_highlight_color"] = {
				1, -- [1]
				1, -- [2]
				0.9803921568627451, -- [3]
			},
			["target_highlight_height"] = 15,
			["aura_timer_text_size"] = 7,
			["aura_alpha"] = 0.89999997615814,
			["aggro_modifies"] = {
				["actor_name_color"] = true,
				["health_bar_color"] = false,
			},
			["number_region_first_run"] = true,
			["patch_version"] = 12,
			["cast_statusbar_use_fade_effects"] = false,
			["range_check_alpha"] = 0.5,
			["health_statusbar_texture"] = "PlaterHealth",
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["castbar_target_font"] = "EXPRESSWAY",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.1000000238419,
				},
			},
			["semver"] = "1.0.0",
			["aura_stack_font"] = "EXPRESSWAY",
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateGlobalScale"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.1",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateMinScale"] = "0.85",
				["nameplateMaxDistance"] = "40.764099121094",
				["nameplateOtherTopInset"] = "0.08",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "0.15",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateShowEnemyMinions"] = "0",
				["NamePlateVerticalScale"] = "1",
			},
			["show_health_prediction"] = false,
			["aura_timer_text_font"] = "EXPRESSWAY",
			["aura_frame1_anchor"] = {
				["y"] = 9.8333129882813,
				["side"] = 7,
			},
			["captured_spells"] = {
				[259277] = {
					["type"] = "DEBUFF",
					["source"] = "–ö–∞—Ä–∞—Å–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128547,
				},
				[326419] = {
					["source"] = "–û—Ä—Ö–µ–π–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245990] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121975,
				},
				[335151] = {
					["source"] = "–ö–∏–Ω–¥–∂–∞–∑–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260643] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264667] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–∞—Å–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128547,
				},
				[271049] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[253595] = {
					["source"] = "–î–∫—à–µ–Ω—å–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[328136] = {
					["source"] = "–ö–∏–Ω–¥–∂–∞–∑–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210320] = {
					["source"] = "–¢–µ–π–¥–µ–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244912] = {
					["encounterID"] = 2063,
					["source"] = "–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 122532,
				},
				[256739] = {
					["source"] = "–ú—è—É–¥–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262161] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268956] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227847] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268893] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22888] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270323] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263275] = {
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134012,
				},
				[260249] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "–ö–∏–Ω–¥–∂–∞–∑–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295248] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192225] = {
					["source"] = "–í–µ—á–Ω–æ—Å–æ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263276] = {
					["source"] = "–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134012,
				},
				[1464] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272678] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268865] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["npcID"] = 136934,
				},
				[1459] = {
					["source"] = "–î—ç—Ñ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["source"] = "–ú—è—É–¥–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "–ì–∏—Ä—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292361] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244693] = {
					["encounterID"] = 2063,
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 121975,
				},
				[186289] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186258] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280170] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259489] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[65081] = {
					["source"] = "–ê–ª—å—Ö–∞–º—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208086] = {
					["type"] = "DEBUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12294] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294935] = {
					["source"] = "–¶–∞—Ä—å–≤–æ–¥–≤–æ—Ä—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262794] = {
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133430,
				},
				[317859] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–π–º—Ä—ç–¥",
					["npcID"] = 0,
				},
				[186257] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244901] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121985,
				},
				[280583] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268362] = {
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130653,
				},
				[199483] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[335152] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–π–º—Ä—ç–¥",
					["npcID"] = 0,
				},
				[268712] = {
					["source"] = "–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130653,
				},
				[262268] = {
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133432,
				},
				[259491] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281000] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297034] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–π–º—Ä—ç–¥",
					["npcID"] = 0,
				},
				[17253] = {
					["encounterID"] = 2063,
					["source"] = "–ö–∞—Ä–∞—Å–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128547,
				},
				[61684] = {
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–∞—Å–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128547,
				},
				[265888] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[297162] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[270335] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268810] = {
					["source"] = "–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133963,
				},
				[295258] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115804] = {
					["type"] = "DEBUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["source"] = "–ê–ª—å—Ö–∞–º—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266779] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274431] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2645] = {
					["source"] = "–ü—Ç–∞—Ö—à–µ–ø—Å–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262811] = {
					["source"] = "–ö–∞–ø–ª—è-–ø–∏—è–≤–∫–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133753,
				},
				[6788] = {
					["source"] = "–ê–ª—å—Ö–∞–º—É–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "–Ø–∫—É–º–∞—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316814] = {
					["source"] = "–ì–∞–∞—Ä—Ä–æ—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[7384] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318216] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109304] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199854] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262940] = {
					["source"] = "–ö–∞–ø–ª—è-–ø–∏—è–≤–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133753,
				},
				[2580] = {
					["source"] = "–Ø–∫—É–º–∞—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268846] = {
					["source"] = "–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136934,
				},
				[114282] = {
					["source"] = "–†–∞–º–ø—Å–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280654] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268815] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞",
					["npcID"] = 133963,
				},
				[107574] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298343] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["source"] = "–ê–ª—å—Ö–∞–º—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298837] = {
					["source"] = "–ì–∏—Ä—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[126664] = {
					["encounterID"] = 2063,
					["source"] = "–≠—Ñ–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271579] = {
					["source"] = "–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130661,
				},
				[262115] = {
					["type"] = "DEBUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275540] = {
					["type"] = "BUFF",
					["source"] = "–≠—Ñ–∏–¥–∂",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203539] = {
					["source"] = "–¶–∞—Ä—å–≤–æ–¥–≤–æ—Ä—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270332] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263262] = {
					["source"] = "–°–ª–∞–Ω—Ü–µ–µ–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134005,
				},
				[186265] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[243431] = {
					["encounterID"] = 2063,
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 121975,
				},
				[43308] = {
					["source"] = "–§—Ä–æ–∑–±—É–ª–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54861] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270661] = {
					["source"] = "–ì–∏—Ä—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259285] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269279] = {
					["source"] = "–ö–∏–Ω–¥–∂–∞–∑–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245686] = {
					["source"] = "–§—Ä–æ–∑–±—É–ª–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203538] = {
					["source"] = "–¶–∞—Ä—å–≤–æ–¥–≤–æ—Ä—Ü–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262270] = {
					["source"] = "–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 133432,
				},
				[316744] = {
					["source"] = "–ì–∏—Ä—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[72968] = {
					["source"] = "–ú—è—É–¥–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277969] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259387] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[245631] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121985,
				},
				[271045] = {
					["encounterID"] = 2063,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292364] = {
					["source"] = "–ö–∏–Ω–¥–∂–∞–∑–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[262804] = {
					["source"] = "–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133430,
				},
				[21562] = {
					["source"] = "–ù–µ–æ–∫–æ—Ä—Ç–µ–∫—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268887] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244894] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121975,
				},
				[259388] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268702] = {
					["source"] = "–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130635,
				},
			},
			["cast_statusbar_bgtexture"] = "Details Vidro",
			["cast_statusbar_texture"] = "Skyline",
			["show_shield_prediction"] = false,
			["not_affecting_combat_enabled"] = true,
			["indicator_raidmark_scale"] = 0.69999998807907,
			["cast_statusbar_spark_width"] = 11,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator6",
		},
		["MyNewProfile1"] = {
			["aura_cooldown_edge_texture"] = "Interface\\Cooldown\\edge",
			["extra_icon_use_blizzard_border_color"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1578638862,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = false,
					["Revision"] = 421,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["NpcNames"] = {
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["Name"] = "Aura - Buff Alert [Plater]",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1578638861,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = false,
					["Revision"] = 263,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1580231392,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 163,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Prio"] = 99,
				}, -- [3]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1578638977,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Enabled"] = false,
					["Revision"] = 101,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["Name"] = "Aura - Border Color [Plater]",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.NameplateSizeOffset = 8 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.7 --amount of alpha in the outside glow effect\n    envTable.UnitType = Plater.GetUnitType (unitFrame)\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    \n    local hsize = 1\n    local wsize = 1\n    \n    if envTable.UnitType == \"minus\" then\n        hsize =Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif envTable.UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight+envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1580208205,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.NameplateSizeOffset = 8 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.7 --amount of alpha in the outside glow effect\n    envTable.UnitType = Plater.GetUnitType (unitFrame)\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    \n    local hsize = 1\n    local wsize = 1\n    \n    if envTable.UnitType == \"minus\" then\n        hsize =Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif envTable.UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend",
					["Icon"] = "INTERFACE\\ICONS\\Achievement_Dungeon_Drak'Tharon",
					["Enabled"] = true,
					["Revision"] = 670,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"131009", -- [8]
						"137591", -- [9]
						"135169", -- [10]
						"137627", -- [11]
						"135903", -- [12]
						"151166", -- [13]
						"152549", -- [14]
						"154685", -- [15]
						"150834", -- [16]
						"153377", -- [17]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Important Units [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight+envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n    \nend\n\n\n",
					["Prio"] = 99,
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n        else\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n        if (Plater:GetPlayerRole() == \"TANK\") then\n            Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n        else\n            Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n        end\n    else\n        if (color) then\n            Plater.SetNameplateColor (unitFrame, color)\n        else\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.noaggro)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n        else\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1573281063,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = 841380,
					["Enabled"] = true,
					["Revision"] = 686,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change color of nameplate that cannot be tracked normally. Using Infos from Npc Colors Tab. Add the unit name or NpcID into the trigger box to add more.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n        else\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n        else\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    \n    local color = Plater.GetNpcColor(unitFrame)\n    \n    if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n        if (Plater:GetPlayerRole() == \"TANK\") then\n            Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.aggro)\n        else\n            Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n        end\n    else\n        if (color) then\n            Plater.SetNameplateColor (unitFrame, color)\n        else\n            if (Plater:GetPlayerRole() == \"TANK\") then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n            else\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.noaggro)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "M+ Tracking Aggro [Plater]",
					["NpcNames"] = {
						"148716", -- [1]
						"148893", -- [2]
						"135007", -- [3]
						"144311", -- [4]
						"136549", -- [5]
						"138465", -- [6]
						"148894", -- [7]
						"134390", -- [8]
						"137103", -- [9]
						"134389", -- [10]
						"155434", -- [11]
						"151613", -- [12]
						"152703", -- [13]
						"155645", -- [14]
						"150547", -- [15]
						"153196", -- [16]
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.BlinkSpeed = 0.5; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.8; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        \n        envTable.ChangeNameplateColor = false; --set to 'true' to enable nameplate color change\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true --envTable.TimeLeftToBlink = 0.3; --in seconds, affects the blink effect only\n        \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n        envTable.remainingTime = { -- this group using fixed time not pandemic\n            [12] = true, --use a simple comma here\n        }        \n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    local Duration = envTable._Duration\n    local perc = timeLeft/Duration\n    local fixed = (envTable.remainingTime [envTable._SpellID] ~= nil and true) or false\n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (not fixed and perc <= 0.3) or \n        (fixed and timeLeft <= envTable.remainingTime [envTable._SpellID]) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n",
					["Time"] = 1579001642,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.BlinkSpeed = 0.5; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.8; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        \n        envTable.ChangeNameplateColor = false; --set to 'true' to enable nameplate color change\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true --envTable.TimeLeftToBlink = 0.3; --in seconds, affects the blink effect only\n        \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n        envTable.remainingTime = { -- this group using fixed time not pandemic\n            [12] = true, --use a simple comma here\n        }        \n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 604,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    local Duration = envTable._Duration\n    local perc = timeLeft/Duration\n    local fixed = (envTable.remainingTime [envTable._SpellID] ~= nil and true) or false\n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (not fixed and perc <= 0.3) or \n        (fixed and timeLeft <= envTable.remainingTime [envTable._SpellID]) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						980, -- [1]
						265412, -- [2]
						157736, -- [3]
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.auraWidth = 22\n    envTable.auraHeight = 22\n    \n    local profile = Plater.db.profile\n    envTable.fontsize = profile.aura_timer_text_size\n    envTable.ratio = envTable.auraWidth/profile.aura_width\n    -- local auraHeight = profile.aura_height\n    \n    envTable.updateIcon = function(self)\n        self:SetSize (envTable.auraWidth, envTable.auraHeight)\n        self.Icon:SetSize (envTable.auraWidth-2, envTable.auraHeight-2)\n        Plater:SetFontSize (self.TimerText, envTable.fontsize*envTable.ratio)\n    end\n    \n    envTable.resetIcon = function(self)\n        local auraWidth, auraHeight = Plater.db.profile.aura_width, Plater.db.profile.aura_height\n        self:SetSize (auraWidth, auraHeight)\n        self.Icon:SetSize (auraWidth-2, auraHeight-2)\n        Plater:SetFontSize (self.TimerText, envTable.fontsize)\n    end\n    \n    envTable.glowSpellID = {--these spell icons will glow\n        [80240] = true, \n        [48181] = true,\n    }\n    \n    envTable.glowType = \"Ants\" -- \"Ants\", \"Button\", \"Pixel\"\n    \n    envTable.button = {\n        color = {0.95, 0.95, 0.32}, -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n    }\n    \n    envTable.pixel = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1.2,\n        yOffset = 1.2, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n    }\n    \n    envTable.ants = {\n        color = \"yellow\",\n        N = 4, -- number of particle groups. Each group contains 4 particles. Defaul value is 4;\n        frequency = 0.3, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 1.2,\n        yOffset = 1.2, -- offset of glow relative to region border;\n    }\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.resetIcon(self)\n    Plater.StopGlow(self.Cooldown)\n    self.glowStarted = false\nend\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateIcon(self)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateIcon(self)\n    \n    if envTable.glowSpellID [envTable._SpellID] then\n        if envTable.glowType == \"Button\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartButtonGlow(self.Cooldown, nil, envTable.button)\n            end\n        elseif envTable.glowType == \"Ants\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartAntsGlow(self.Cooldown, nil, envTable.ants)\n            end\n        elseif envTable.glowType == \"Pixel\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartPixelGlow(self.Cooldown, nil, envTable.pixel)\n            end\n        else\n            if self.glowStarted then\n                self.glowStarted = false\n                Plater.StopGlow(self.Cooldown)\n            end\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopGlow(self.Cooldown)\n        end\n    end\n    \nend",
					["Time"] = 1579001644,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.auraWidth = 22\n    envTable.auraHeight = 22\n    \n    local profile = Plater.db.profile\n    envTable.fontsize = profile.aura_timer_text_size\n    envTable.ratio = envTable.auraWidth/profile.aura_width\n    -- local auraHeight = profile.aura_height\n    \n    envTable.updateIcon = function(self)\n        self:SetSize (envTable.auraWidth, envTable.auraHeight)\n        self.Icon:SetSize (envTable.auraWidth-2, envTable.auraHeight-2)\n        Plater:SetFontSize (self.TimerText, envTable.fontsize*envTable.ratio)\n    end\n    \n    envTable.resetIcon = function(self)\n        local auraWidth, auraHeight = Plater.db.profile.aura_width, Plater.db.profile.aura_height\n        self:SetSize (auraWidth, auraHeight)\n        self.Icon:SetSize (auraWidth-2, auraHeight-2)\n        Plater:SetFontSize (self.TimerText, envTable.fontsize)\n    end\n    \n    envTable.glowSpellID = {--these spell icons will glow\n        [80240] = true, \n        [48181] = true,\n    }\n    \n    envTable.glowType = \"Ants\" -- \"Ants\", \"Button\", \"Pixel\"\n    \n    envTable.button = {\n        color = {0.95, 0.95, 0.32}, -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n    }\n    \n    envTable.pixel = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 8, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1.2,\n        yOffset = 1.2, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n    }\n    \n    envTable.ants = {\n        color = \"yellow\",\n        N = 4, -- number of particle groups. Each group contains 4 particles. Defaul value is 4;\n        frequency = 0.3, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 1.2,\n        yOffset = 1.2, -- offset of glow relative to region border;\n    }\nend",
					["Icon"] = 413591,
					["Enabled"] = true,
					["Revision"] = 224,
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Resizes the Aura Icon for the triggering spell if \"envTable.conditionCheck\" is set to true. This variable can be used to check for selected talents / spec. As exaplle setup for Affli-Lock + Absolute Corruption",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateIcon(self)\n    \n    if envTable.glowSpellID [envTable._SpellID] then\n        if envTable.glowType == \"Button\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartButtonGlow(self.Cooldown, nil, envTable.button)\n            end\n        elseif envTable.glowType == \"Ants\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartAntsGlow(self.Cooldown, nil, envTable.ants)\n            end\n        elseif envTable.glowType == \"Pixel\" then\n            if not self.glowStarted then\n                self.glowStarted = true\n                Plater.StartPixelGlow(self.Cooldown, nil, envTable.pixel)\n            end\n        else\n            if self.glowStarted then\n                self.glowStarted = false\n                Plater.StopGlow(self.Cooldown)\n            end\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopGlow(self.Cooldown)\n        end\n    end\n    \nend",
					["SpellIds"] = {
						80240, -- [1]
						48181, -- [2]
						205179, -- [3]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.resetIcon(self)\n    Plater.StopGlow(self.Cooldown)\n    self.glowStarted = false\nend\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateIcon(self)\nend\n\n\n",
					["Name"] = "Resize/Glow Aura Icon",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 1.5\n    envTable.GlowAlpha = .7\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1    \n    --envTable.HealthBarColor = \"gold\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local hsize = 1\n    local wsize = 1\n    \n    if envTable.UnitType == \"minus\" then\n        hsize =Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif envTable.UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    Plater.SetNameplateSize (unitFrame, envTable.OriginalWidth, envTable.OriginalHeight)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    --increase the cast bar size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    envTable.OriginalHeight = nameplateHeight\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    envTable.OriginalWidth = nameplateWidth\n    Plater.SetNameplateSize (unitFrame, envTable.OriginalWidth, envTable.OriginalHeight*envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = envTable.OriginalHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    --Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \nend\n\n\n",
					["Time"] = 1580231405,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 1.5\n    envTable.GlowAlpha = .7\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = 1    \n    --envTable.HealthBarColor = \"gold\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local hsize = 1\n    local wsize = 1\n    \n    if envTable.UnitType == \"minus\" then\n        hsize =Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif envTable.UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 32\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 15\n    envTable.topArrow.height = 15\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend",
					["Icon"] = 2065634,
					["Enabled"] = true,
					["Revision"] = 976,
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["Prio"] = 99,
					["SpellIds"] = {
						240446, -- [1]
						296080, -- [2]
						296522, -- [3]
						291613, -- [4]
						169803, -- [5]
						293861, -- [6]
						300129, -- [7]
						310766, -- [8]
						314309, -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Explosive [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    --increase the cast bar size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    envTable.OriginalHeight = nameplateHeight\n    local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n    envTable.OriginalWidth = nameplateWidth\n    Plater.SetNameplateSize (unitFrame, envTable.OriginalWidth, envTable.OriginalHeight*envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = envTable.OriginalHeight + 60\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --decrease the nameplate size\n    Plater.SetNameplateSize (unitFrame, envTable.OriginalWidth, envTable.OriginalHeight)\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the health bar color coloring from yellow to red\n    -- Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    --Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-8, -2)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-6, 2)\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        self.Spark:SetHeight (envTable.OriginalSpark)        \n        envTable.OriginalSpark = nil\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        self.Spark:SetHeight(envTable.OriginalSpark)        \n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    local spark = self.Spark:GetHeight()\n    envTable.OriginalSpark = spark\n    local text = Plater:GetFontSize(self.Text)\n    envTable.OriginalText = text\n    \n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    self.Spark:SetHeight(spark * envTable.CastBarHeightAdd)\n    Plater:SetFontSize (self.Text,text * envTable.CastBarHeightAdd)    \n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1580231401,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 1, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Racial_OrbitalStrike",
					["Enabled"] = true,
					["Revision"] = 2040,
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce when an important cast is happening. Add spell in the Add Trigger field.",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        self.Spark:SetHeight (envTable.OriginalSpark)        \n        envTable.OriginalSpark = nil\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n",
					["Prio"] = 99,
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						274569, -- [3]
						278020, -- [4]
						261635, -- [5]
						272700, -- [6]
						268030, -- [7]
						265368, -- [8]
						264520, -- [9]
						265407, -- [10]
						278567, -- [11]
						278602, -- [12]
						258128, -- [13]
						257791, -- [14]
						258938, -- [15]
						265089, -- [16]
						272183, -- [17]
						256060, -- [18]
						257397, -- [19]
						269972, -- [20]
						270901, -- [21]
						270492, -- [22]
						263215, -- [23]
						268797, -- [24]
						262554, -- [25]
						253517, -- [26]
						255041, -- [27]
						252781, -- [28]
						250368, -- [29]
						258777, -- [30]
						278504, -- [31]
						266106, -- [32]
						257732, -- [33]
						268309, -- [34]
						269302, -- [35]
						263202, -- [36]
						257784, -- [37]
						278755, -- [38]
						272180, -- [39]
						263066, -- [40]
						267273, -- [41]
						265912, -- [42]
						274438, -- [43]
						268317, -- [44]
						268375, -- [45]
						276767, -- [46]
						264105, -- [47]
						265876, -- [48]
						270464, -- [49]
						278961, -- [50]
						265468, -- [51]
						256897, -- [52]
						280604, -- [53]
						268702, -- [54]
						255824, -- [55]
						253583, -- [56]
						250096, -- [57]
						278456, -- [58]
						262092, -- [59]
						257270, -- [60]
						267818, -- [61]
						265091, -- [62]
						262540, -- [63]
						263318, -- [64]
						263959, -- [65]
						257069, -- [66]
						256849, -- [67]
						267459, -- [68]
						253544, -- [69]
						268008, -- [70]
						267981, -- [71]
						272659, -- [72]
						264396, -- [73]
						257736, -- [74]
						264390, -- [75]
						255952, -- [76]
						257426, -- [77]
						274400, -- [78]
						272609, -- [79]
						269843, -- [80]
						269029, -- [81]
						272827, -- [82]
						269266, -- [83]
						263912, -- [84]
						264923, -- [85]
						258864, -- [86]
						256955, -- [87]
						265540, -- [88]
						260793, -- [89]
						270003, -- [90]
						270507, -- [91]
						257337, -- [92]
						268415, -- [93]
						275907, -- [94]
						268865, -- [95]
						260669, -- [96]
						260280, -- [97]
						253239, -- [98]
						265541, -- [99]
						250258, -- [100]
						256709, -- [101]
						277596, -- [102]
						276268, -- [103]
						265372, -- [104]
						263905, -- [105]
						265781, -- [106]
						257170, -- [107]
						268846, -- [108]
						270514, -- [109]
						258622, -- [110]
						258199, -- [111]
						256627, -- [112]
						257870, -- [113]
						259711, -- [114]
						258917, -- [115]
						263891, -- [116]
						268027, -- [117]
						268348, -- [118]
						269313, -- [119]
						272711, -- [120]
						271174, -- [121]
						268260, -- [122]
						269399, -- [123]
						268239, -- [124]
						264574, -- [125]
						261563, -- [126]
						257288, -- [127]
						257757, -- [128]
						267899, -- [129]
						255741, -- [130]
						264757, -- [131]
						260894, -- [132]
						263365, -- [133]
						260292, -- [134]
						263583, -- [135]
						276292, -- [136]
						272874, -- [137]
						264101, -- [138]
						264407, -- [139]
						271456, -- [140]
						262515, -- [141]
						275192, -- [142]
						256405, -- [143]
						270084, -- [144]
						257785, -- [145]
						267237, -- [146]
						266951, -- [147]
						267433, -- [148]
						255577, -- [149]
						255371, -- [150]
						270891, -- [151]
						267357, -- [152]
						258338, -- [153]
						257169, -- [154]
						270927, -- [155]
						273995, -- [156]
						260926, -- [157]
						264027, -- [158]
						267257, -- [159]
						253721, -- [160]
						265019, -- [161]
						260924, -- [162]
						263309, -- [163]
						266206, -- [164]
						260067, -- [165]
						274507, -- [166]
						276068, -- [167]
						263278, -- [168]
						258317, -- [169]
						256594, -- [170]
						268391, -- [171]
						268230, -- [172]
						260852, -- [173]
						267763, -- [174]
						268706, -- [175]
						264734, -- [176]
						288693, -- [177]
						288694, -- [178]
						270590, -- [179]
						290787, -- [180]
						275922, -- [181]
						269282, -- [182]
						274389, -- [183]
						258054, -- [184]
						259165, -- [185]
						269090, -- [186]
						277805, -- [187]
						282699, -- [188]
						278711, -- [189]
						268184, -- [190]
						268212, -- [191]
						257741, -- [192]
						266209, -- [193]
						270289, -- [194]
						267639, -- [195]
						268278, -- [196]
						258628, -- [197]
						266512, -- [198]
						260773, -- [199]
						269926, -- [200]
						268203, -- [201]
						265161, -- [202]
						256044, -- [203]
						257458, -- [204]
						294660, -- [205]
						300650, -- [206]
						300777, -- [207]
						300171, -- [208]
						299588, -- [209]
						299475, -- [210]
						299164, -- [211]
						298669, -- [212]
						300436, -- [213]
						297254, -- [214]
						301629, -- [215]
						284219, -- [216]
						285020, -- [217]
						283421, -- [218]
						294290, -- [219]
						294324, -- [220]
						291946, -- [221]
						291973, -- [222]
						297128, -- [223]
						293986, -- [224]
						295169, -- [225]
						293729, -- [226]
						298940, -- [227]
						296331, -- [228]
						298718, -- [229]
						295299, -- [230]
						300188, -- [231]
						265001, -- [232]
						299689, -- [233]
						294890, -- [234]
						314406, -- [235]
						314411, -- [236]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        self.Spark:SetHeight(envTable.OriginalSpark)        \n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    local spark = self.Spark:GetHeight()\n    envTable.OriginalSpark = spark\n    local text = Plater:GetFontSize(self.Text)\n    envTable.OriginalText = text\n    \n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    self.Spark:SetHeight(spark * envTable.CastBarHeightAdd)\n    Plater:SetFontSize (self.Text,text * envTable.CastBarHeightAdd)    \n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "M+ Important Spells [Plater]",
					["NpcNames"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Sunfire = self.Sunfire or Plater.CreateIconGlow (self)\n    envTable.Sunfire = self.Sunfire\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Sunfire:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.Sunfire:Show() \n        \n        \n    else\n        envTable.Sunfire:Hide()\n    end\n    \nend",
					["Time"] = 1581159076,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Sunfire = self.Sunfire or Plater.CreateIconGlow (self)\n    envTable.Sunfire = self.Sunfire\n    \n    \n    \nend\n\n\n",
					["Icon"] = 236216,
					["Enabled"] = true,
					["Revision"] = 117,
					["Author"] = "Ludw√¨g-Blackmoore",
					["Desc"] = "",
					["NpcNames"] = {
					},
					["Prio"] = 99,
					["SpellIds"] = {
						93402, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Sunfire Pandemic Glow",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Sunfire:Hide()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.Sunfire:Show() \n        \n        \n    else\n        envTable.Sunfire:Hide()\n    end\n    \nend",
				}, -- [11]
			},
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator4",
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = -13,
			["first_run3"] = true,
			["cast_statusbar_spark_width"] = 8,
			["aura_border_colors_by_type"] = true,
			["auto_toggle_stacking"] = {
				["cities"] = true,
			},
			["transparency_behavior"] = 3,
			["hover_highlight_alpha"] = 0.5,
			["aura_alpha"] = 1,
			["cast_statusbar_fadein_time"] = 0.01999999955296516,
			["aura_stack_anchor"] = {
				["y"] = -2,
				["x"] = 9,
				["side"] = 13,
			},
			["debuff_show_cc_border"] = {
				0, -- [1]
				1, -- [2]
				0, -- [3]
			},
			["indicator_raidmark_scale"] = 0.9999999403953552,
			["cast_statusbar_spark_alpha"] = 0.7999999523162842,
			["aura_stack_color"] = {
				nil, -- [1]
				0.92156862745098, -- [2]
				0, -- [3]
			},
			["aura2_y_offset"] = -20,
			["ui_parent_buff_level"] = 1,
			["aura_timer_text_anchor"] = {
				["x"] = 0.5,
			},
			["aura_show_enrage"] = true,
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["mana_incombat"] = {
						104, -- [1]
						8, -- [2]
					},
					["percent_text_enabled"] = false,
					["cast"] = {
						104, -- [1]
					},
					["percent_text_ooc"] = false,
					["percent_show_health"] = false,
					["spellpercent_text_enabled"] = false,
					["percent_text_show_decimals"] = false,
					["castbar_enabled"] = false,
					["power_percent_text_enabled"] = false,
					["cast_incombat"] = {
						104, -- [1]
					},
					["health_incombat"] = {
						102, -- [1]
						6, -- [2]
					},
					["health"] = {
						102, -- [1]
						6, -- [2]
					},
					["percent_show_percent"] = false,
					["buff_frame_y_offset"] = -50.56999969482422,
					["percent_text_anchor"] = {
						["y"] = 2,
					},
					["mana"] = {
						104, -- [1]
						8, -- [2]
					},
					["healthbar_color"] = {
						0, -- [1]
						1, -- [2]
						0.3764705882352941, -- [3]
					},
				},
				["friendlyplayer"] = {
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["level_text_size"] = 8,
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["cast"] = {
						86, -- [1]
						12, -- [2]
					},
					["percent_text_ooc"] = true,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.6323171257972717, -- [4]
					},
					["fixed_class_color"] = {
						1, -- [1]
						0.4, -- [2]
						0.1, -- [3]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["percent_text_alpha"] = 0.8499999642372131,
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						106, -- [1]
						14, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						0.75, -- [4]
					},
					["big_actorname_text_size"] = 13,
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 13,
					["mana"] = {
						85, -- [1]
					},
					["percent_text_color"] = {
						0.8823529411764706, -- [1]
						0.8823529411764706, -- [2]
						0.8823529411764706, -- [3]
					},
					["actorname_text_font"] = "Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["quest_color"] = {
						0.5, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["percent_text_enabled"] = true,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						105, -- [1]
					},
					["spellname_text_size"] = 11,
					["big_actorname_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["actorname_text_anchor"] = {
						["y"] = 2,
					},
					["all_names"] = true,
					["use_playerclass_color"] = true,
					["health_incombat"] = {
						106, -- [1]
						16, -- [2]
					},
					["percent_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["actorname_text_outline"] = "NONE",
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["percent_show_percent"] = false,
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 12,
					["only_damaged"] = false,
					["buff_frame_y_offset"] = 0,
					["actorname_guild_color"] = {
						0.3686274509803922, -- [1]
						[3] = 0,
					},
					["quest_enabled"] = true,
					["big_actortitle_text_size"] = 13,
					["percent_text_size"] = 10,
					["percent_show_health"] = true,
					["relevance_state"] = 3,
					["health"] = {
						86, -- [1]
					},
					["only_names"] = true,
					["spellname_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["big_actorname_text_outline"] = "NONE",
					["spellpercent_text_size"] = 11,
					["only_thename"] = true,
				},
				["friendlynpc"] = {
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["show_guild_name"] = false,
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["cast"] = {
						86, -- [1]
						12, -- [2]
					},
					["percent_text_ooc"] = true,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.6323171257972717, -- [4]
					},
					["fixed_class_color"] = {
						1, -- [1]
						0.4, -- [2]
						0.1, -- [3]
					},
					["big_actorname_text_color"] = {
						0, -- [1]
						nil, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_alpha"] = 0.8499999642372131,
					["cast_incombat"] = {
						106, -- [1]
						14, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["percent_text_color"] = {
						0.8823529411764706, -- [1]
						0.8823529411764706, -- [2]
						0.8823529411764706, -- [3]
					},
					["actorname_text_font"] = "Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["quest_color"] = {
						0.09803921568627451, -- [1]
						nil, -- [2]
						0.4901960784313725, -- [3]
						1, -- [4]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						105, -- [1]
						3, -- [2]
					},
					["percent_text_enabled"] = true,
					["use_playerclass_color"] = true,
					["big_actortitle_text_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["percent_show_health"] = true,
					["percent_text_size"] = 10,
					["actorname_text_spacing"] = 12,
					["percent_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["actorname_text_size"] = 13,
					["big_actorname_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["percent_show_percent"] = false,
					["actorname_text_anchor"] = {
						["y"] = 2,
					},
					["big_actortitle_text_size"] = 13,
					["spellname_text_size"] = 11,
					["health_incombat"] = {
						106, -- [1]
					},
					["health"] = {
						86, -- [1]
						2, -- [2]
					},
					["big_actorname_text_size"] = 13,
					["spellpercent_text_size"] = 11,
					["mana"] = {
						85, -- [1]
						3, -- [2]
					},
					["big_actorname_text_outline"] = "NONE",
					["spellname_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
				},
				["enemyplayer"] = {
					["big_actorname_text_size"] = 13,
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["cast"] = {
						86, -- [1]
						12, -- [2]
					},
					["spellpercent_text_size"] = 11,
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.6323171257972717, -- [4]
					},
					["percent_text_alpha"] = 0.8499999642372131,
					["cast_incombat"] = {
						106, -- [1]
						14, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["percent_text_color"] = {
						0.8823529411764706, -- [1]
						0.8823529411764706, -- [2]
						0.8823529411764706, -- [3]
					},
					["actorname_text_font"] = "Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["big_actorname_text_outline"] = "NONE",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						105, -- [1]
						3, -- [2]
					},
					["big_actorname_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["all_names"] = true,
					["actorname_text_anchor"] = {
						["y"] = 2,
						["side"] = 8,
					},
					["spellpercent_text_enabled"] = false,
					["percent_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["quest_enabled"] = true,
					["actorname_text_size"] = 13,
					["percent_show_percent"] = false,
					["spellname_text_size"] = 11,
					["health_incombat"] = {
						106, -- [1]
					},
					["health"] = {
						86, -- [1]
						2, -- [2]
					},
					["percent_text_size"] = 10,
					["big_actortitle_text_size"] = 13,
					["mana"] = {
						85, -- [1]
						3, -- [2]
					},
					["spellname_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["quest_color_enemy"] = {
						nil, -- [1]
						0.3686274509803922, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["show_guild_name"] = false,
					["big_actortitle_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["cast"] = {
						86, -- [1]
						14, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.6323171257972717, -- [4]
					},
					["fixed_class_color"] = {
						1, -- [1]
						0.4, -- [2]
						0.1, -- [3]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["percent_text_alpha"] = 0.8499999642372131,
					["cast_incombat"] = {
						106, -- [1]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0.75, -- [4]
					},
					["percent_text_color"] = {
						0.8823529411764706, -- [1]
						0.8823529411764706, -- [2]
						0.8823529411764706, -- [3]
					},
					["actorname_text_font"] = "Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["big_actorname_text_outline"] = "NONE",
					["quest_color_neutral"] = {
						nil, -- [1]
						0.6509803921568628, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["mana_incombat"] = {
						106, -- [1]
						3, -- [2]
					},
					["big_actorname_text_font"] = "[WoW] Îç∞ÎØ∏ÏßÄ Í∏ÄÍº¥",
					["use_playerclass_color"] = true,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["percent_text_size"] = 11,
					["actorname_text_spacing"] = 12,
					["percent_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["spellname_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
					["percent_show_percent"] = false,
					["actorname_text_size"] = 13,
					["spellpercent_text_enabled"] = false,
					["spellname_text_size"] = 11,
					["health_incombat"] = {
						106, -- [1]
					},
					["health"] = {
						86, -- [1]
						2, -- [2]
					},
					["big_actortitle_text_size"] = 13,
					["actorname_text_anchor"] = {
						["y"] = 2,
						["side"] = 8,
					},
					["big_actorname_text_size"] = 13,
					["mana"] = {
						86, -- [1]
						3, -- [2]
					},
					["level_text_enabled"] = false,
				},
			},
			["health_selection_overlay"] = "Wglass",
			["aura_y_offset"] = 9,
			["extra_icon_width"] = 34,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						nil, -- [1]
						0.6274509803921569, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["anothertank"] = {
						0.7294117647058823, -- [1]
						0.9176470588235294, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["aggro"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["noaggro"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["nocombat"] = {
						0.2588235294117647, -- [1]
						0, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["pulling"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["health_statusbar_texture"] = "ElvUI Norm",
			["aura_tracker"] = {
				["buff_tracked"] = {
					[270882] = true,
					[209859] = true,
				},
				["debuff_tracked"] = {
					[260066] = true,
					[268931] = true,
					[265755] = true,
					[278467] = true,
					[268706] = true,
					[268206] = true,
					[271867] = true,
					[272905] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Aura Reorder"] = 1,
				["Jaina Encounter"] = 6,
				["Attacking Specific Unit"] = 1,
				["Targetting Alpha"] = 3,
				["Extra Border"] = 2,
				["Combo Points"] = 3,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Blockade Encounter"] = 1,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color_nointerrupt"] = {
				0.772549019607843, -- [1]
				0.772549019607843, -- [2]
				0.772549019607843, -- [3]
				0.96000000089407, -- [4]
			},
			["cast_statusbar_color"] = {
				nil, -- [1]
				0.701960784313726, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["first_run2"] = true,
			["aura_width_personal"] = 25,
			["color_override_colors"] = {
				[3] = {
					1, -- [1]
					0, -- [2]
					0, -- [3]
				},
				[4] = {
					1, -- [1]
					1, -- [2]
					0, -- [3]
				},
				[5] = {
					0, -- [1]
					1, -- [2]
					0, -- [3]
				},
			},
			["transparency_behavior_use_division"] = true,
			["aura_show_tooltip"] = true,
			["color_lerp_speed"] = 13,
			["color_override"] = false,
			["health_animation_time_dilatation"] = 2.649999856948853,
			["npc_cache"] = {
				[151027] = {
					"Í∞ÄÏãúÎ∞©Ïñ¥Î≥ë Î≤ÑÌäº", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[36877] = {
					"ÏÑ±ÎÇúÌï¥Í≥® Î≥ëÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139766] = {
					"Ï†ÑÏßÅ Ìï≠Ìï¥ÏÇ¨ ÎçîÎ∏îÎ¶∞", -- [1]
					"", -- [2]
				},
				[16523] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê ÏïºÎßåÏ†ÑÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[151028] = {
					"Í∞ÄÏãúÏ∂îÏ†ÅÏûê ÎÇòÏù¥ÎèÑÎùº", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135160] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ Î≥¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[139767] = {
					"\"ÎßùÏõêÍ≤Ω\" ÎßàÎ¶¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[34190] = {
					"Í∞ïÌôîÎêú Î¨¥Ïá† Í≥®Î†ò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[76810] = {
					"Í∞ÄÏó¥Î°ú Í∏∞Ïà†Ïûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[154612] = {
					"Î∞©Ï∂úÎêú ÏïÖÎ™Ω", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[151029] = {
					"Í∞ÄÏãúÏòàÏñ∏Ïûê ÌÉÄÎ≤†Î¶¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135161] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ ÏÇ∞ÏïÖÍ≤ΩÎπÑÎåÄ", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[29768] = {
					"Î∂àÍµ¥Ïùò Î±Ä", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[29832] = {
					"ÎìúÎùºÏπ¥Î¶¨ Í≥®Î†ò", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[55689] = {
					"Ìè≠ÌíçÏà†ÏÇ¨ ÌïòÍ∞ÄÎùº", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[25865] = {
					"ÏñºÏñ¥Î∂ôÏùÄ Ìïµ", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[124159] = {
					"Ïú°Ï§ëÌïú Î†àÏò§", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[124927] = {
					"Ï§ÄÌã∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139769] = {
					"Ïù¥Îì±Ìï≠Ìï¥ÏÇ¨ Î∞îÎÇòÎπÑ", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[136186] = {
					"ÌååÎèÑÌòÑÏûê Ïã¨Î†πÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[76811] = {
					"ÌíÄÎ¨¥ Ï°∞ÏûëÍ∏∞ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[36494] = {
					"Ï†úÎ†®Ïû•Ïù∏ Í∞ÄÌîÑÎ°úÏä§Ìä∏", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[18315] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÏÇ¨Ïà†ÏÇ¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[140794] = {
					"ÌùâÌÑ∞Í∞àÌÄ¥", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[103685] = {
					"Ìã∞ÏΩòÎìúÎ¶¨Ïö∞Ïä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[135164] = {
					"ÏôÄÏùºÎìúÌï¥Î®∏ ÏïΩÌÉàÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[34191] = {
					"Í≥†Î¨ºÎ°úÎ¥á", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[145402] = {
					"Í¥ëÌè¨Ìïú Í±∞ÏπúÏã¨Ïû•", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[110340] = {
					"Ï≤úÍ≥µ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[135165] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[127488] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ ÌôîÏóºÏà†ÏÇ¨", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[28297] = {
					"ÏÇ¥Ïæ°Ïù¥", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[146940] = {
					"ÌÉúÏ¥àÏùò ÌôòÍ∞ÅÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[36879] = {
					"Ïó≠Î≥ëÏÇ¥Ïù¥ Í¥¥Î¨º", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[140798] = {
					"Î∞îÏúÑÍπåÏïÖ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[20875] = {
					"ÏùåÏ†ÑÏûê ÎπÑÎ™ÖÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[147965] = {
					"Î∂àÏïàÏ†ïÌïú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[34192] = {
					"Ìè≠ÏïΩÎ°úÎ¥á XP-500", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[54795] = {
					"ÎπõÏùò ÏÉò", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[54923] = {
					"Î¨¥ÌïúÏùò Í∞êÎèÖÍ¥Ä", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[17356] = {
					"ÎÅàÏ†ÅÍ±∞Î¶¨Îäî ÏàòÏï°Í¥¥Î¨º", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[17420] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Ïù¥ÍµêÎèÑ", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[131586] = {
					"Ïó∞Ìöå ÏßëÏÇ¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[127490] = {
					"Í∏∞ÏÇ¨ÎåÄÏû• Î∞úÎ¶¨Î¶¨", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[140800] = {
					"ÏÇ¥Ìï¥ÏïΩÌÉà Íµ¨Î¶ÑÎÇ†Í∞ú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[43662] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ ÎåÄÏßÄÏ†ÑÎ≥µÏûê", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[142336] = {
					"ÎÇúÏüÅÏù¥ Î¨∏Ïñ¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[155645] = {
					"ÏõåÌÇ§ Ï∂©Í≤©Í∏∞ X2", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[147967] = {
					"7Íµ∞Îã® Ìï¥Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[56587] = {
					"Ìô©ÌòºÏùò Í∞ïÏäµ ÎπÑÎ£°", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[76815] = {
					"ÏõêÏãúÏùò Ï†ïÎ†πÏà†ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[147968] = {
					"Ìù•Î∂ÑÌïú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"", -- [2]
				},
				[146945] = {
					"Îì§ÎÅìÎäî Í≥µÌóàÏùò ÌîºÏ°∞Î¨º", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[34193] = {
					"ÌÉúÏóΩÎèåÏù¥ Í≥µÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[130307] = {
					"Î∂àÏïàÏ†ïÌïú ÌÉúÌíç", -- [1]
					"", -- [2]
				},
				[151041] = {
					"Ï¢ÖÏÜçÎêú Ïù¥Ìä∏Î£®ÎπÑÏä§", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[55308] = {
					"Ïû•Íµ∞ Ï°¥Ïò§Ï¶à", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[111112] = {
					"ÏõêÍ∏∞", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[134150] = {
					"Î£¨Ï°∞Í∞ÅÏÇ¨ ÏÜåÎ•∏", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[139269] = {
					"Ïñ¥ÎëêÏö¥ Í≥µÌè¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[140293] = {
					"ÎààÏÜ°Ïù¥ÌÑ∏ ÎäëÎåÄ", -- [1]
					"", -- [2]
				},
				[153090] = {
					"Ïó¨Íµ∞Ï£º Î≤†ÎÜàÌÖÖ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[146436] = {
					"Ïú†ÌòπÏ†ÅÏù∏ ÏÑ∏Ïù¥Î†å", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[36881] = {
					"Ìï¥Í≥® ÎÖ∏Ïòà", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[32914] = {
					"Ïû•Î°ú ÎèåÎÇòÎ¨¥ÍªçÏßà", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140294] = {
					"ÎààÏÜ°Ïù¥ÌÑ∏ ÎäëÎåÄ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[153091] = {
					"ÏÑ∏Î†àÎÇò Ïä§Ïπ¥Ïä§ÏºÄÏùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[149508] = {
					"ÏñºÏùåÏóê Í∞áÌûå ÎÇòÌÉÄÎÖ∏Ïä§", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138247] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÏûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140295] = {
					"ÏÉàÎÅº ÎààÏÜ°Ïù¥ÌÑ∏", -- [1]
					"", -- [2]
				},
				[153092] = {
					"Î≤†ÎÇò Ïî®Ïä§ÌÜ∞", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[17357] = {
					"ÎÅàÏ†ÅÍ±∞Î¶¨Îäî ÏàòÏï°", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[29834] = {
					"ÎìúÎùºÏπ¥Î¶¨ Í¥ëÌè¨Ïñ¥", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[136713] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[145927] = {
					"Î≥ÑÎπÑÎ™ÖÍæº ÏóòÎùºÎÇò", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140297] = {
					"ÎÖ∏ÌÅ¨ÏïÑÎùºÌÅ¨", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136714] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[145928] = {
					"Ïä§Ïπ¥ÎπÑÏä§ ÎÇòÏù¥Ìä∏Ïä§ÌÜ†Ïª§", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[18317] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÏÇ¨Ï†ú", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[126983] = {
					"Ìï†ÎûÄ Ïä§ÏúÑÌä∏", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[26763] = {
					"ÏïÑÎÖ∏ÎßêÎ£®Ïä§", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[140299] = {
					"Ïú†Î†πÏÜ°Í≥≥Îãà", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[72981] = {
					"ÏïÑÍ∑∏Î°†", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134157] = {
					"Ïñ¥Îë†ÌÉúÏÉù Ï†ÑÏÇ¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[5925] = {
					"ÎßàÎ≤ïÌù°Ïàò ÌÜ†ÌÖú", -- [1]
					"ÏåçÎë•Ïù¥ Î¥âÏö∞Î¶¨", -- [2]
				},
				[43537] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä ÎåÄÏßÄÏ∞ΩÏ°∞Ïûê", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[134158] = {
					"Ïñ¥Îë†ÌÉúÏÉù Ïö©ÏÇ¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[39954] = {
					"Ìô©ÌòºÏùò ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[140301] = {
					"ÌùâÌÑ∞Î∞ú", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56718] = {
					"Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[145932] = {
					"ÏÖÄÎ†àÏä§Ìä∏Îùº Î∏åÎùºÏù¥Ìä∏Î¨∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138254] = {
					"Î¨¥Ïá†ÌååÎèÑ ÌôîÏïΩÏÇ¨Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[123146] = {
					"Ï∞¢Í∏¥ ÏòÅÌòº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136207] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú ÏàòÌò∏Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[149516] = {
					"ÍπúÏû•Î∞ú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[138255] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í¥ÄÏ∏°Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[131089] = {
					"Í∑∏Î¶ºÏûêÏπºÎÇ† Ï∂îÏ†ÅÏûê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[131601] = {
					"Ï¥ùÏ£ºÎ∞©Ïû• Îã§ÎãàÏóò", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136208] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[34196] = {
					"Î£¨Í∞ÅÏù∏ ÌååÏàòÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[72983] = {
					"ÌÉÄÎùΩÌïú Ìï¥Í≥®ÌååÏáÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[25740] = {
					"ÏïÑÌõà", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[136721] = {
					"ÏùòÌöå Ï£ºÎ¨∏Ïà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[137233] = {
					"Ïó≠Î≥ë ÎëêÍ∫ºÎπÑ", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[124171] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë Ï†ïÎ≥µÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[21901] = {
					"Î∏îÎü¨ÎìúÎäîÏà†ÏÇ¨ÎãòÏù¥", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[30283] = {
					"Îñ†ÎèåÏïÑÎã§ÎãàÎäî Ïó≠Î≥ëÍ¥¥Î¨º", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[144912] = {
					"Îî±Ï¥ùÍ∞ÄÏßÄ", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[72728] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÌïèÎπõÎèÑÎÅºÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[57231] = {
					"Ìô©ÌòºÏùò Ï∞®ÏõêÎ¨∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[135699] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í∞ÑÏàò", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[26764] = {
					"ÏùºÏÇ¨ Îã§Ïù¥Ïñ¥Î∏åÎ£®", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[151056] = {
					"ÏúÑÎåÄÌïú Î∞îÎûëÌÅ¨Ïö∏", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[112655] = {
					"Ï≤úÍ≥µÏùò ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[54544] = {
					"Ìã∞ÎûÄÎç∞Ïùò ÌôòÏòÅ", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[34197] = {
					"ÎåÄÍ∏∞Ïã§ Í∞êÏãúÏûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139284] = {
					"Ïó≠Î≥ë ÏùòÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[74009] = {
					"Í±∞ÎØ∏ ÏßÄÎ¢∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151058] = {
					"Î∂ÄÍ∏ÄÍ±∞Î¶¨Îäî Ìîº", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[39956] = {
					"Ìô©ÌòºÏùò ÏßëÌñâÏûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[76057] = {
					"Ï≤≠ÏÜåÎ∂Ä Î≤åÎ†à", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[136214] = {
					"Î∞îÎûåÏòàÏñ∏Ïûê Ìó¨ÎîîÏä§", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[137238] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[72986] = {
					"ÏÉ§ÎÇò Ïä§ÌååÌÅ¨ÌîºÏ¶à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[150547] = {
					"Í≥†Ï≤†Îºà Í≤åÍ±∏ÏüÅÏù¥", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[151059] = {
					"ÏòÅÏõêÏùò ÏàòÌò∏Ïûê", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[127757] = {
					"ÎêòÏÇ¥ÏïÑÎÇú Í∑ºÏúÑÎ≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[33430] = {
					"Ïñ¥ÎØ∏ Îç©Íµ¥ÏÜê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[135192] = {
					"Î™ÖÏòàÎ°úÏö¥ Îû©ÌÑ∞", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139799] = {
					"ÏïÑÏù¥Ïñ∏Ìóê ÏàòÏäµÏÉù", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[117264] = {
					"Ïö©ÎßπÏùò Ïó¨Ïã†", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[34198] = {
					"Î¨¥Ïá† ÏπòÏú†ÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[155156] = {
					"Ï†úÏù¥ÎÇò ÌîÑÎùºÏö∞ÎìúÎ¨¥Ïñ¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139800] = {
					"Í∞ïÌíçÏà†ÏÇ¨ ÏàòÏäµÏÉù", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[29836] = {
					"ÎìúÎùºÏπ¥Î¶¨ Ï†ÑÌà¨ Í∏∞Ïàò", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[26125] = {
					"ÎïÖÎ≤åÎ†àÌÉêÏöïÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[30284] = {
					"Ìï¥Í≥®Î∂ÑÏáÑÏûê", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[129550] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÌèâÎ∞úÏó¨Ïö∞", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[140825] = {
					"Í∞ÄÏãúÏàòÌíÄ ÏöîÏà†ÏüÅÏù¥", -- [1]
					"", -- [2]
				},
				[130318] = {
					"Î±ÄÍ∞àÌÄ¥ ÏòàÏñ∏Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[118289] = {
					"Í≤ΩÍ≥ÑÏùò Ïó¨Ïã†", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[155158] = {
					"Ï≤´ Î≤àÏß∏ ÎπÑÏ†ÑÏà†ÏÇ¨ ÌÉàÎ¶¨Ïä§Îùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[94231] = {
					"Í¥ëÍ∏∞Ïùò Î∂àÏû•ÎÇúÍæº", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[127503] = {
					"Í∞êÎèÖÍ¥Ä ÏΩîÎ•¥Í±∞Ïä§", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[140826] = {
					"Í∞ÄÏãúÏàòÌíÄ ÏöîÎßà", -- [1]
					"", -- [2]
				},
				[33431] = {
					"ÏÉàÎÅº Îç©Íµ¥ÏÜê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[80411] = {
					"Í∞ïÏ≤† Î™ÖÏÇ¨Ïàò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[34199] = {
					"Î≤àÍ∞úÏ∂©Ï†Ñ Î¨¥Ïá† ÎìúÏõåÌîÑ", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[137244] = {
					"ÏµúÏ†ïÏòà ÏÇ¨Ï†ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[130319] = {
					"Î±ÄÍ∞àÌÄ¥ Í≤∞ÏÇ¨Îã®Ïõê", -- [1]
					"", -- [2]
				},
				[134173] = {
					"ÏõÄÏßÅÏù¥Îäî Î∞©Ïö∏", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[139804] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Ï°∞ÏÇ¨Í¥Ä", -- [1]
					"", -- [2]
				},
				[132126] = {
					"Ìò∏ÌôîÎ°úÏö¥ Ïó¨ÏÇ¨Ï†ú", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[140828] = {
					"ÏïÑÏπ®Ïù¥Ïä¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134174] = {
					"Ïñ¥Îë†ÌÉúÏÉù ÏùòÏà†ÏÇ¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[134686] = {
					"Îã§ ÏûêÎûÄ ÌÅ¨Î°§Îü¨Ïä§ÌÅ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[139805] = {
					"Í∏∞Í≥Ñ Í≤ΩÎπÑÍ≤¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[129552] = {
					"Î™¨Ï£ºÎØ∏", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[140829] = {
					"Í∞ÄÏùÑÎ∞îÎûå", -- [1]
					"", -- [2]
				},
				[76829] = {
					"ÏûøÍ∞ÄÎ£® Ï†ïÎ†π", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[133663] = {
					"Í¥ëÏã†Ï†ÅÏù∏ Ïù∏Í∞ÑÏÇ¨ÎÉ•Íæº", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[130832] = {
					"ÏÜåÍ∏àÎàà ÏπºÎ∂ÄÎ¶¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[151579] = {
					"Î≥¥Ìò∏Îßâ ÏÉùÏÑ±Í∏∞", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139806] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Ìè≠Ìåå Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[136735] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ìï¥Î≥ë", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[33432] = {
					"Í±∞ÎåÄ Ï†ÑÏ∞® ÎßàÌÅ¨ II", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[20879] = {
					"ÏóêÎ†àÎã§Î•¥ ÏòÅÌòºÏÇ¨ÎÉ•Íæº", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[151068] = {
					"Ï¥âÏàò Îã¨Î¶∞ Í≥µÌóàÏÇ¨Ï†ú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[120851] = {
					"ÌûàÌè¨Í∑∏Î¶¨ÌîÑ Íµ∞Ï£º Î∞îÎùº", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139807] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Ï∏°ÎüâÏÇ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[136224] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Ï£ºÎ¨∏Ïà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[151581] = {
					"Í≥µÌè¨Ïùò ÌôòÏòÅ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139808] = {
					"Ìà¨ÏûêÌöåÏÇ¨ ÎØ∏Î†®ÌâÅÏù¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[43286] = {
					"ÏàòÏ†ï Ï°∞Í∞Å", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[133666] = {
					"ÎîîÏßÄÏùò ÎØ∏ÎÅº", -- [1]
					"", -- [2]
				},
				[124947] = {
					"Í≥µÌóà Ï†àÎã®Ïûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[30285] = {
					"ÌÉàÎã§ÎûåÏùò Îàà", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[44566] = {
					"Ïò§Ï£ºÎßàÌä∏", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[49045] = {
					"Ïò§Ïö∞", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[139810] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Ï§ëÍ∞Ñ Í¥ÄÎ¶¨Ïûê", -- [1]
					"", -- [2]
				},
				[132644] = {
					"ÏÉàÎÅº ÎäëÎåÄ", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[57875] = {
					"Í≥†ÎùºÏä§Ïùò Îàà", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[135204] = {
					"ÏÇ¨Ïà† ÏÇ¨Ï†ú Ïú†Î†π", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139811] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Î∂ÄÏÑ†ÏûÑ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[125460] = {
					"ÏÑ±ÎÇúÎ™®Îûò Ìè≠Î†•Îã®Ïõê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140835] = {
					"ÍµêÌôúÌïú ÌôîÏóº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137764] = {
					"Ï†ïÏòà ÎßàÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138276] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ Í≥µÏÑ±ÌååÍ¥¥Ïûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[139812] = {
					"Ìà¨ÏûêÌöåÏÇ¨ ÏÉùÏÇ∞Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140324] = {
					"ÎèåÏóÑÎãà ÏàòÌôïÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140836] = {
					"Î∞ùÏùÄÎ∂àÍ∏∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[137765] = {
					"Ï†ïÏòà ÏÇ¨Ï†ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[43927] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[39960] = {
					"Ïã¨Ìï¥ Î©ÄÎ°ù ÏùºÍæº", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[135718] = {
					"ÏÉàÎÅº Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[24207] = {
					"ÏÇ¨ÏûêÏùò Íµ∞ÎåÄ", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[40600] = {
					"ÏñºÍµ¥ ÏóÜÎäî ÌÉÄÎùΩÏûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[73250] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Î∂àÍΩÉÏÇ¨Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[131112] = {
					"Î∞îÎã§Í∞ÄÎ¶Ñ Í≥µÍ≤©Î≥ë", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[135719] = {
					"Í∑∏ÎäòÍ∏∏Ïû°Ïù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[16593] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Ìà¨ÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[20880] = {
					"ÏóêÎ†àÎã§Î•¥ Ï£ΩÏùåÏùò Ïù∏ÎèÑÏûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[112665] = {
					"Î∞§Ïùò ÏöîÏÉà ÏàòÌò∏Ïûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[135720] = {
					"Îã¨Îπõ ÍπÉÎì† ÏïîÏÇ¨ÎÉ•Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[21136] = {
					"Î¨¥ÌïúÏùò ÏãúÍ∞ÑÏà†ÏÇ¨", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[140839] = {
					"Î¨ºÏùò ÏòÅÌòº", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[130325] = {
					"Ïã¨Ìï¥ ÏïºÎ¨ºÏßëÍ≤åÎ∞ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130581] = {
					"Î™®ÎûòÎààÏù¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135721] = {
					"ÏïÑÏÉ§ÎÑ§", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[29838] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏΩîÎøîÏÜå", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[74787] = {
					"ÎÖ∏ÏòàÍ∞êÏãúÏûê ÌÅ¨Îü¨Ïâ¨ÌÜ†", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[138281] = {
					"ÏñºÍµ¥ ÏóÜÎäî ÌÉÄÎùΩÏûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[131115] = {
					"ÏêêÍ∏∞Îç©Íµ¥ ÏöîÏà†ÏüÅÏù¥", -- [1]
					"", -- [2]
				},
				[135722] = {
					"Ìô©Ìòº Î∞∞ÌöåÏûê", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140841] = {
					"ÌÇ§ÎìùÍ±∞Î¶¨Îäî ÌååÏû•", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[130582] = {
					"Ïã§ÏùòÏóê Îπ†ÏßÑ ÎßêÏçΩÍæº", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[155686] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ ÎßπÎèÖÍ∞êÏãúÏûê", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139818] = {
					"Î≥¥Ïïà Ïû•Íµê ÎçîÌÅ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[115226] = {
					"ÎùºÎ≤†ÎãàÏïà", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140842] = {
					"Ïó°", -- [1]
					"", -- [2]
				},
				[141354] = {
					"Ïä§ÌÜ∞ÏÜ° ÏßïÏßëÎ≥ë", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[154663] = {
					"ÎÖ∏ÏõÄ Î®πÎäî Î∞©Ïö∏", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[87841] = {
					"Í∑∏Î°¨Ïπ¥Î•¥ ÌôîÏóºÏπòÏú†ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[129047] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Î™ÖÏÇ¨Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[135724] = {
					"ÏàòÌíÄÏ∂îÏ†ÅÏûê", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129559] = {
					"Î∞îÎã§Í∞ÄÎ¶Ñ Í≤∞Ìà¨ÏÇ¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[140843] = {
					"Î∞îÎûåÏùò ÏòÅÌòº", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[134701] = {
					"ÌîºÏùò ÏûÖÏÉÅ", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[63508] = {
					"Ïâ¨Ïóî", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[78116] = {
					"Î¨ºÏùò Ï†ïÎ†π", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[148522] = {
					"ÏñºÏùå Îç©Ïñ¥Î¶¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[39450] = {
					"Ìä∏Î°úÍ∑∏ Ï£ºÎØº", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[155689] = {
					"ÏûîÏßÄÎ•¥ Í≤ÄÌà¨ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140845] = {
					"Ïû•ÎÇúÍæ∏Îü¨Í∏∞ ÎèåÌíç", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[125977] = {
					"ÎêòÏÇ¥Î¶¨Í∏∞ ÌÜ†ÌÖú", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[130584] = {
					"Í∞ÄÏãúÎ∞ïÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[89890] = {
					"ÏßÄÏò• Íµ∞Ï£º ÏûêÏø†Ïö¥", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[36891] = {
					"ÏñºÏùåÏÇ¥Ïù¥ ÏõêÏãúÎπÑÎ£°", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[140334] = {
					"Î∞§ÎπÑÎäò Îò¨Î¶¨ÏÜ°Í≥≥Îãà", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[16594] = {
					"Ïñ¥Îë†Îã¨ ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[20881] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ ÌååÎ©∏Ïûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[155691] = {
					"ÏûîÏßÄÎ•¥ ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[21137] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[144942] = {
					"Î∂àÍΩÉÎ¥á", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140336] = {
					"Î∞§ÎπÑÎäò Ï≤úÎë•Îß§", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[17938] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Í∞êÏãúÏûê", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[30287] = {
					"ÏïΩÌÉàÏûê Ïô∏ÎààÍπ®ÎπÑ", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[140337] = {
					"ÏÉàÎÅº Î∞§ÎπÑÎäò", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[144944] = {
					"Í∞àÏ¶ù ÎÇú Ìù°ÌòàÎ∞ïÏ•ê", -- [1]
					"", -- [2]
				},
				[113694] = {
					"ÏãúÏõîÏù¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[69161] = {
					"Îç∞ÎπåÏÇ¨Ïö∞Î£®Ïä§", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[36892] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Ï£ΩÏùåÏùò ÏÇ¨Ïûê", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[152623] = {
					"ÏßÄÌïòÏöîÏÉà Í∑∏Îü∞Ìä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140850] = {
					"Ï¶êÍ≤ÅÍ≤å Îõ∞ÎÖ∏Îäî Ìùô Ï°±ÏÜç", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[112671] = {
					"Ìô©ÌòºÍ∞êÏãúÎåÄ Ï†ÑÌà¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[9547] = {
					"Ïà† Ï∑®Ìïú ÏÜêÎãò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[133685] = {
					"ÎçîÎüΩÌòÄÏßÑ ÏòÅÌòº", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[95268] = {
					"ÏàúÎ°ù", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[71466] = {
					"Í∞ïÏ≤†Ïùò Í±∞ÎåÄÍ¥¥Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[125213] = {
					"ÏÉàÎÅº ÌÑ±ÌååÍ¥¥Ïûê", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136246] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Ïã†Î¥âÏûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[28368] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Í∞ïÎ†πÏà†ÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[125981] = {
					"Ï°∞Í∞ÅÎÇú Í≥µÌóàÍ¥¥Î¨º", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[122398] = {
					"ÏïΩÌôîÎêú Í≥µÌóàÍµ∞Ï£º", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[36893] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ ÌôîÏóºÏßÄÍ∏∞", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[144949] = {
					"ÌÅ∞ÎÇ†Í∞ú Ï∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[149556] = {
					"ÏòÅÏõêÏùò ÏßëÌñâÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146485] = {
					"ÎÑ§Î∞îÎùº ÎÇòÏù¥Ìä∏ÏÖ∞Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[33822] = {
					"Ìô©ÌòºÏùò ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[135736] = {
					"ÌòàÎ±Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140343] = {
					"ÏπºÎÇ†ÎÇ†Í∞ú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140855] = {
					"ÎÇôÏàòÎ†π", -- [1]
					"", -- [2]
				},
				[137784] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[130589] = {
					"Îñ†ÎèÑÎäî ÏïºÍ∏àÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[17427] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Í∂ÅÏàò", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[119072] = {
					"Ìô©ÌèêÏùò ÏàôÏ£º", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[136249] = {
					"ÏàòÌò∏Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[144951] = {
					"Ï∞ΩÎ∞±ÌÑ∏ Ìè¨ÏãùÏûê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[145975] = {
					"ÎèåÍªçÏßà ÏàúÎ°ù", -- [1]
					"", -- [2]
				},
				[72236] = {
					"Íµ¨Ï≤¥ÌôîÎêú ÏùòÏã¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140857] = {
					"ÎπÑÏ∑®ÏÑ¨Í¥ë", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137786] = {
					"ÏïÑÎùºÏÜåÎ•¥ ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[32927] = {
					"Î£¨Ïà†ÏÇ¨ Î™∞Í∞ÄÏûÑ", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140858] = {
					"ÌôîÏóºÏ°±ÏÜç", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[145977] = {
					"Í±∞ÎåÄÌïú ÎèåÍªçÏßà ÏàúÎ°ù", -- [1]
					"", -- [2]
				},
				[151096] = {
					"ÌïòÌã∞", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[112675] = {
					"Ìô©ÌòºÍ∞êÏãúÎåÄ ÌååÏàòÍæº", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[144954] = {
					"ÌîºÏùò ÌÉêÏãùÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[130335] = {
					"ÎèåÏû•Í∞ë ÏàòÏ†ïÎààÎ∞îÏã§Î¶¨Ïä§ÌÅ¨", -- [1]
					"", -- [2]
				},
				[122401] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë ÏöîÏà†ÏüÅÏù¥", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[144955] = {
					"ÌîºÌè≠ÏãùÏûê ÏûòÏßÄ", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[146491] = {
					"ÏùëÏßïÏùò Ïú†Î†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[151098] = {
					"ÏïîÌùëÏùò Ï¥âÏàò", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[112676] = {
					"Í∑ÄÏ°±ÌòàÌÜµ ÏôúÍ≥°Ïà†ÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[136254] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Í∏∞ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140861] = {
					"ÌùôÎñ®Ïù¥", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[154682] = {
					"Í≥µÌè¨Ïùò Î©îÏïÑÎ¶¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[135231] = {
					"Ìà¨ÏÇ¨ Ïú†Î†π", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[144957] = {
					"ÏÉ¨ÎùºÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[146493] = {
					"ÏÇ¥Ïú°Ïùò Ïú†Î†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[33824] = {
					"Ìô©ÌòºÏùò Í∑∏Î¶ºÏûêÏπºÎÇ†", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[21139] = {
					"Î¨¥ÌïúÏùò Ï†úÏïïÏûê", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[140863] = {
					"Î£®ÎπÑÎ∞îÎûå ÏïÖÎèô", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[81197] = {
					"Í∞ïÏ≤† ÏïΩÌÉàÏûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[122403] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë Ïö©ÏÇ¨", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[29713] = {
					"Ïä¨ÎùºÎìúÎûÄÏùò Î±Ä", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[154685] = {
					"Ï∞©ÎûÄÏùò Î©îÏïÑÎ¶¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[43934] = {
					"ÏòÅÌòºÏùò ÌååÌé∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[135234] = {
					"Î≥ë Í±∏Î¶∞ ÌååÏàòÍ≤¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[140353] = {
					"Î∞ùÏùÄÎπÑÎäò Îò¨Î¶¨ÏÜ°Í≥≥Îãà", -- [1]
					"", -- [2]
				},
				[72496] = {
					"Í∞êÎèÖÍ¥Ä ÌÉÄÌâÅ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[154174] = {
					"Í≥µÌè¨Ïùò ÏÜåÌôòÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[122404] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë Í≥µÌóàÏà†ÏÇ¨", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[138818] = {
					"ÌïèÎπõÍ∞ÅÏÑ± Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135235] = {
					"ÏïºÏàòÏ°∞Î†®ÏÇ¨ Ïú†Î†π", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[140354] = {
					"Î∞ùÏùÄÎπÑÎäò Ï≤úÎë•Îß§", -- [1]
					"", -- [2]
				},
				[154175] = {
					"Í≥µÌè¨Ïùò ÏÜåÌôòÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[138819] = {
					"ÌïèÎπõÍ∞ÅÏÑ± ÏïΩÌÉàÏûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[152128] = {
					"Ïò¨Í≥†Ï°∞ÏïÑ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140355] = {
					"Î∞ùÏùÄÎπÑÎäò ÎπÑÎ™ÖÎèÖÏÇ¨", -- [1]
					"", -- [2]
				},
				[129827] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò Î∂ÑÏáÑÏûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[149569] = {
					"Îã§ÏûêÎ¶¨ Ïà≠Î∞∞Ïûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[122405] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë Ï∞ΩÏ°∞Ïà†ÏÇ¨", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[138820] = {
					"ÌïèÎπõÍ∞ÅÏÑ± Î∏åÎ¶¨Ïø®", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140356] = {
					"ÏÉàÎÅº Î∞ùÏùÄÎπÑÎäò", -- [1]
					"", -- [2]
				},
				[19668] = {
					"Ïñ¥Îë†Ïùò ÎßàÍ∑Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[134214] = {
					"Í∑†Ïó¥ÏπºÎÇ† ÏºàÎ†àÏù∏", -- [1]
					"", -- [2]
				},
				[138821] = {
					"ÌïèÎπõÍ∞ÅÏÑ± Ïó¨Ï†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140357] = {
					"ÎßπÎèÖÏ†àÎã®Ïûê", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[72498] = {
					"ÌÖåÎùºÎ™®Ïñ¥ ÏãúÎØº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134215] = {
					"Í∑∏ÎäòÍ∏∏Ïû°Ïù¥ Î°úÎ¶¨ÎÇòÏä§", -- [1]
					"", -- [2]
				},
				[138822] = {
					"ÌïèÎπõÍ∞ÅÏÑ± ÏûëÏÇ¥ÏÇ¨Ïàò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135239] = {
					"Ïú†Î†π ÏùòÏà†ÏÇ¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[32930] = {
					"ÏΩúÎ°úÍ∞Ñ", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140358] = {
					"ÎπÑÌÉÑÎ∂ÄÎ¶Ñ", -- [1]
					"", -- [2]
				},
				[33186] = {
					"ÏπºÎÇ†ÎπÑÎäò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[134216] = {
					"ÏïîÌùëÏà†ÏÇ¨ ÏûêÎùº", -- [1]
					"", -- [2]
				},
				[71475] = {
					"Î£®ÌÅ¨ Ïä§ÌÜ§ÌÜ†", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[135240] = {
					"ÏòÅÌòºÏùò Ï†ïÏàò", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136264] = {
					"Î∞òÏØ§ ÏôÑÏÑ±Îêú ÎØ∏Îùº", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[122407] = {
					"Ï∞®ÏõêÏùò Ï∂îÏ†ÅÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[138824] = {
					"Ìï†ÌîºÎìú ÏïÑÏù¥Ïñ∏ÏïÑÏù¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135241] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® Í∞ïÌÉàÏûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140360] = {
					"ÌÉúÏñëÎì±", -- [1]
					"", -- [2]
				},
				[17621] = {
					"Ïù¥ÍµêÎèÑ Í≤ΩÎπÑÎ≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[141896] = {
					"Ïó¨Íµ∞Ï£º ÌïòÌã∞", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[138825] = {
					"Ïù∏Í∞ÄÌÜ†Îùº Î∏îÎü¨ÎìúÎìúÎßÅÏª§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139337] = {
					"ÏñºÏùåÏóÑÎãà Ìù°ÌòàÏ†ÑÏÇ¨", -- [1]
					"", -- [2]
				},
				[140361] = {
					"ÌùâÏ°∞Ïùò Í≤ÄÏùÄÍ∑∏Î¶ºÏûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[129830] = {
					"Í±∞Ïàò Îî∏Í∞ÅÎ∞úÌÜ±", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[73012] = {
					"ÌÅ¥ÎùΩÏãú Ï≤ôÌõÑÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[122408] = {
					"Í∑∏Î¶ºÏûê Ï∂îÏ†ÅÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[138826] = {
					"Ïö©Í∞êÌïú Î†àÏù¥ÌÅ¨ÎãàÎ•¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[139338] = {
					"ÏñºÏùåÏóÑÎãà ÏòàÏñ∏Ïûê", -- [1]
					"", -- [2]
				},
				[152135] = {
					"Í≥µÌóàÏóê Î¨ºÎì† Ï£ºÎ¨∏Ïà†ÏÇ¨", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140362] = {
					"Î∞òÏßùÎÇ†Í∞ú", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[128551] = {
					"Î¨¥Ïá†ÌååÎèÑ ÌååÏàòÍ≤¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[33699] = {
					"Ìè≠ÌíçÏúºÎ°ú ÎπöÏùÄ Î¨∏ÏßÄÍ∏∞", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139339] = {
					"ÏñºÏùåÏóÑÎãà Î∞©Ïñ¥Î≥ë", -- [1]
					"", -- [2]
				},
				[144970] = {
					"ÏπºÎèÑÎ†àÏù¥ Í∂ÅÏàò", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[130087] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÎã®", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[138828] = {
					"Ïö©ÎßπÌïú Î≤†Î•¥ÌûêÎìú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135245] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÌååÍ¥¥Ïûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[144971] = {
					"Í∞ÄÏßÄÏùò ÎìúÎ£®Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[137805] = {
					"Í≤ÄÏùÄ Ìîº", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[138829] = {
					"ÍµêÌôúÌïú ÏûâÍ≤î", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135246] = {
					"\"ÏÇ¨ÎÇòÏö¥\" Î°úÌã∞", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136270] = {
					"Î∂ÄÎåÄÏû• ÎÇòÏù¥ÏñºÏä§", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[144972] = {
					"ÏπºÎèÑÎ†àÏù¥ ÏÇ¨ÎÉ•Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[56862] = {
					"Ïà† Ï∑®Ìïú Ìò∏Ï†† Ïã∏ÏõÄÍæº", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[142413] = {
					"ÏúÑÏäµ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138830] = {
					"Î≥ÑÏùò Ïù∏ÎèÑÎ•º Î∞õÎäî Ìä∏Î°úÎ∞îÏä§Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139342] = {
					"ÏñºÏùåÏóÑÎãà Ï†ÑÏÇ¨", -- [1]
					"", -- [2]
				},
				[135759] = {
					"ÎåÄÏßÄ Î∞©Î≤Ω ÌÜ†ÌÖú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[144973] = {
					"ÏπºÎèÑÎ†àÏù¥ ÌååÏàòÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[33572] = {
					"Í∞ïÏ≤†Î°ú Î≤ºÎ†§ÎÇ∏ ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138831] = {
					"ÌôÄÎ≤åÎìú Ïò§ÏÖòÏÇ¨Ïù¥Îìú", -- [1]
					"", -- [2]
				},
				[139343] = {
					"ÏñºÏùåÏóÑÎãà ÎÖ∏Ïó≠Íæº", -- [1]
					"", -- [2]
				},
				[135760] = {
					"7Íµ∞Îã® Ìï¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[54687] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Î≥¥Î≥ë", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[139344] = {
					"ÎìúÎùºÏπ¥Îãà Ï£ΩÏùåÎ∂ÄÌå®Ïûê", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135761] = {
					"Ï≤úÎë•ÏπòÎäî ÌÜ†ÌÖú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[17622] = {
					"Î™ÖÏÇ¨Ïàò Í≤ΩÎπÑÎ≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[71480] = {
					"Ïë® ÌÖêÎçîÌïòÌä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151630] = {
					"Í≥µÌóà ÏàòÏï°", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[131667] = {
					"ÏòÅÌòºÍ≤∞ÏÜç Í±∞Ìïú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[30419] = {
					"ÏÜçÎ∞ïÎêú Î¨ºÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[56863] = {
					"Ïû†Íæ∏Îü¨Í∏∞ Ìò∏Ï†† Ïã∏ÏõÄÍæº", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[89652] = {
					"Î≥¥Ïã†ÌÉï", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[134739] = {
					"Ï†ïÌôî ÌîºÏ°∞Î¨º", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[127019] = {
					"ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[135763] = {
					"Í≥µÌóàÍ¥¥Î¨º", -- [1]
					"", -- [2]
				},
				[111151] = {
					"ÏïºÎ∞§Ïùò Ï∞©Ï∑®Ïûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[103217] = {
					"ÏàòÏ†ï Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[71481] = {
					"Íµ¨Ï≤¥ÌôîÎêú Ïä¨Ìîî", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139347] = {
					"Í¥ëÏ†ÑÏÇ¨ Í≥®Îùº", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[131669] = {
					"ÏÇêÏ£ΩÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[72249] = {
					"Í∞àÎùºÌÅ¨ÎùºÏä§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[54688] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[142419] = {
					"Ïö∞Î†àÏùò Í±∞Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138836] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139348] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139860] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎïÖÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[138837] = {
					"ÏûêÎùºÌã∞ÌÅ¨ Ìò∏Î∞ïÏÑùÎßàÏà†ÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139349] = {
					"Î¨¥Îç§ÏÜåÌôòÏÇ¨ Î¨¥Ïûê", -- [1]
					"", -- [2]
				},
				[139861] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎÇ†Î≤åÎ†à", -- [1]
					"", -- [2]
				},
				[140373] = {
					"Ïó¨Ïôï Î™®ÎûòÍªçÏßà", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[40484] = {
					"ÏóêÎ£®Îã•Ïä§", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[65310] = {
					"ÌõàÎ†®Ïö© ÏàúÎ¨¥", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138838] = {
					"ÏûêÎùºÌã∞ÌÅ¨ ÏÇ¨ÎßàÍ∑Ä", -- [1]
					"", -- [2]
				},
				[139350] = {
					"ÏïÑÎÇòÌïò ÏúÑÎçîÎ∏åÎ†àÏä§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139862] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎÇ†Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[140374] = {
					"Îë•ÏßÄ ÏàòÌò∏Ïûê ÏùµÏä§Îãê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[149588] = {
					"ÏïºÏàò", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[134232] = {
					"Í≥†Ïö©Îêú ÏïîÏÇ¥Ïûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138839] = {
					"ÏûêÎùºÌã∞ÌÅ¨ Ï£ΩÏùåÎ∂ÄÎ¶ÑÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139351] = {
					"Ïñ¥Îë†ÏòàÏñ∏Ïûê ÏïàÍ≥†Î°ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[34086] = {
					"Ïö©Ïïî Í¥ëÏ†ÑÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138840] = {
					"ÏûêÎùºÌã∞ÌÅ¨ Í¥ÄÌÜµÏûê", -- [1]
					"", -- [2]
				},
				[139352] = {
					"Ï£ΩÏùåÏÜåÌôòÏÇ¨ ÎßàÏ§ÑÎ¶¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[140376] = {
					"Î™®ÎûòÍªçÏßà Îî±Ï†ïÎ≤åÎ†à", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[17623] = {
					"ÌïôÏÇ¥Ïûê Í≤ΩÎπÑÎ≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[137817] = {
					"Îñ†ÎèÑÎäî Î¨ºÏùò Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[17879] = {
					"ÏãúÍ∞ÑÏùò Íµ∞Ï£º Îç∞Ïûê", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[151638] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ ÎåÄÏßÄÏ†ÑÎ≥µÏûê", -- [1]
					"ÎÑ¨ÌÉÄÎ¶¨Ïò®Ïùò Îë•ÏßÄ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[135770] = {
					"Ï†ïÏòà ÌïòÏÇ¨Í¥Ä Ïä¨Î†àÏù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140377] = {
					"Î™®ÎûòÍªçÏßà ÏàòÌôïÏûê", -- [1]
					"", -- [2]
				},
				[149591] = {
					"ÎùºÏä§ÌÉÄÎ¶¨ Î™ÖÏÇ¨Ïàò", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138842] = {
					"Í≥µÎ™ÖÏÉùÏÑ±Ïûê ÌÉÄÌÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[151639] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ ÏÜåÏö©ÎèåÏù¥Î≤åÎ†à", -- [1]
					"ÎÑ¨ÌÉÄÎ¶¨Ïò®Ïùò Îë•ÏßÄ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140378] = {
					"Î™®ÎûòÍªçÏßà Î¨¥Î¶¨Í∞êÏãúÏûê", -- [1]
					"", -- [2]
				},
				[137819] = {
					"Îñ†ÎèÑÎäî Ï≤úÎë• Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138843] = {
					"ÎÇ†Í∞úÏßÄÎèÑÏûê Ïä§ÎùºÌÇ§ÌÅ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139355] = {
					"ÏÑúÎ¶¨Í≤ÄÏÇ¨ Íµ¨ÎûÄ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139867] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎßπÎèÖÏà†ÏÇ¨", -- [1]
					"", -- [2]
				},
				[148569] = {
					"Î¨ºÍ∞ÄÎ¶Ñ Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[54690] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÏÇ¨Ï†ú", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[137820] = {
					"Îñ†ÎèÑÎäî Î∞îÏúÑ Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[42789] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Ïö©ÏïîÍµ∞Ï£º", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[138844] = {
					"Ìô©Ï†úÏùò ÏπºÎÇ† ÏïºÎπÑÌÅ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139868] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎÑ§Î£®ÎπÑÏïà", -- [1]
					"", -- [2]
				},
				[136797] = {
					"Ï°∞ÏïΩÎèå ÎºàÎßùÏπòÏû°Ïù¥", -- [1]
					"", -- [2]
				},
				[138845] = {
					"ÏÇ¨Î†πÍ¥Ä Ï°∞Î∞îÌÅ¨", -- [1]
					"", -- [2]
				},
				[139357] = {
					"ÏñºÏùåÏóÑÎãà ÎπÑÌãÄÍ¥¥Î¨º", -- [1]
					"", -- [2]
				},
				[121138] = {
					"Í≥†ÌÜµÎ∞õÎäî ÌååÌé∏", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[136798] = {
					"Ï°∞ÏïΩÎèå ÎºàÎã§Í∑ÄÏã∏ÏõÄÍæº", -- [1]
					"", -- [2]
				},
				[138846] = {
					"Ìò∏Î∞ïÏÑùÎÇ†Í∞ú Ï†ïÏã†ÎÖ∏ÎûòÍæº", -- [1]
					"", -- [2]
				},
				[135263] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í¥ÄÏ∏°Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139870] = {
					"Î≥¥Î£®Ïπ¥Î•¥ Î¨¥Î¶¨Í≤ΩÎπÑÎ≥ë", -- [1]
					"", -- [2]
				},
				[140382] = {
					"Î≥¥ÏÑù Î∞ïÌûå ÏàòÌôïÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[45477] = {
					"ÎèåÌíç Î≥ëÏÇ¨", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[57890] = {
					"Í≥†ÎùºÏä§Ïùò Î∞úÌÜ±", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[138847] = {
					"Ï†ÑÌà¨ ÏπòÏú†ÏÇ¨ Ïπ¥Î∞îÏ¶à", -- [1]
					"", -- [2]
				},
				[76094] = {
					"ÌÉúÏñëÏùò Ïû•Ïã†Íµ¨", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[140383] = {
					"Î≥¥ÏÑù Î∞ïÌûå Îî±Ï†ïÎ≤åÎ†à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[54691] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Ïó¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[151133] = {
					"ÌïòÌã∞", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[139360] = {
					"ÎêòÏÇ¥ÏïÑÎÇú ÏñºÏùåÏóÑÎãà Ìà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[140384] = {
					"Î≥¥ÏÑù Î∞ïÌûå Î¨¥Î¶¨Í∞êÏãúÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[103224] = {
					"Î∂àÏïàÏ†ïÌïú Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[17816] = {
					"ÏàòÎ†ÅÎßàÌÅ¨Î£®Îùº", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[138849] = {
					"Îë•ÏßÄÍµ∞Ï£º ÎπÖÏä§ÏùµÌÅ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[72768] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ï†ÑÌà¨ÎäëÎåÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138338] = {
					"ÎêòÏÇ¥ÏïÑÎÇú ÏàòÌò∏Ïûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[152159] = {
					"Ï°∞ÏïÑÌä∏Î°úÏù¥Îìú", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[144993] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ Í∞ÄÏãúÍ≥∞", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[131685] = {
					"Î£¨ Ïã†ÎèÑ", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136804] = {
					"ÏûêÍ∞àÏ≤ôÏ∂î", -- [1]
					"", -- [2]
				},
				[122421] = {
					"ÏïîÏòÅ Ï†ÑÌà¨ ÏàôÎ†®Í∞Ä", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[151649] = {
					"Î∞©Ïñ¥ Î°úÎ¥á ÎßàÌÅ¨ I", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[136805] = {
					"Î∞îÏúÑÎåïÍ∞ï", -- [1]
					"", -- [2]
				},
				[115767] = {
					"Ïó¨Íµ∞Ï£º ÏÇ¨Ïä§Ï¶àÏù∏", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[152162] = {
					"Í≥µÌóàÏóê Î¨ºÎì† Ï∞ΩÍ≥µÏ†ÑÏÇ¨", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[144996] = {
					"Ï†ÄÌé∏Ïùò ÌôòÏòÅ", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[76865] = {
					"ÏïºÏàòÍµ∞Ï£º Îã§Î•¥ÎßàÌÅ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[137830] = {
					"Ï∞ΩÎ∞±Ìïú ÌÉêÏãùÏûê", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[73538] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ï†ÑÌà¨ÎäëÎåÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[32938] = {
					"ÏàúÍ∞Ñ ÎπôÍ≤∞ ÏñºÏùå", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136295] = {
					"Í∞ÄÎùºÏïâÏùÄ ÌÜ†Ï∞©ÏòÅÌòº", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[140902] = {
					"ÏäπÏ≤úÏûê Î≥¥Í∑∏Î¶¨Ïâ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[121399] = {
					"Ïã¨Î¨∏Í¥Ä ÏÑ∏ÎπåÎ£®Ïä§", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[132713] = {
					"Î™®Íµ¥ ÎùºÏ¶àÎç©ÌÅ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[137320] = {
					"ÏµúÏ†ïÏòà Î∞©Ïñ¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[122423] = {
					"ÎåÄÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[73539] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Î¨¥Î¶¨ Ïñ¥ÎØ∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151653] = {
					"Í≥µÌóàÏùò Ï¥âÏàò", -- [1]
					"Ïö∏ÎîîÎ•¥ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[59684] = {
					"Ìù•Ï≤≠ÎßùÏ≤≠ Ìò∏Ï††", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[137321] = {
					"ÏïÑÎùºÏÜåÎ•¥Ïùò Í∏∞ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[17817] = {
					"ÏÉÅÍ∏â ÏàòÎ†ÅÎßàÌÅ¨Î£®Îùº", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[17881] = {
					"ÏïÑÏóêÎàÑÏä§", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[121400] = {
					"ÎπÑÎÇúÏûê Í∑∏ÎÇòÏ¶à", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[136810] = {
					"Ï°∞ÏïΩÎèå ÎåÄÏßÄÏ†ÑÎ≥µÏûê", -- [1]
					"", -- [2]
				},
				[141929] = {
					"ÏßÄÌòúÎ°úÏö¥ Ìà¨ÏïÑÏπ¥", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[134251] = {
					"ÏÇ¨Î¨¥Ïû• ÏùåÎ∞îÎùº", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[45096] = {
					"Í∏∏Îì§Ïù∏ ÌÜ®ÎπÑÎ•¥ Ìò∏ÎûëÏù¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[148584] = {
					"ÎåÄÎßàÎ≤ïÏÇ¨ Î™®Îì†Ìä∏ Ïù¥Î∏êÏÖ∞Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[145001] = {
					"ÎùºÎÇòÎùº Î¨∏ÏÖ∞Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[137835] = {
					"ÌùâÌè¨Ìïú Í≤ÄÏùÄÍ≥∞", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[151144] = {
					"ÌïòÌã∞", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[112955] = {
					"Í∑∏ÎäòÎπÑÎäò Í≥†Î£°", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[136812] = {
					"Ï°∞ÏïΩÎèå ÌùôÏ†êÏüÅÏù¥", -- [1]
					"", -- [2]
				},
				[73541] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏÉàÎÅº ÎäëÎåÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151657] = {
					"Ìè≠ÌÉÑ ÌÜµÌÜµ Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[111164] = {
					"Ìô©ÌòºÏùò Î≥ÑÎ¨¥Ïö©Ïàò", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[149098] = {
					"ÎßàÏù¥ÏóêÎ∏å ÏÑÄÎèÑÏÜ°", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[138349] = {
					"Î≥¥Î≥µÏùò Ïú†Î†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134766] = {
					"ÌååÎèÑÎ±âÍ∏∞Í≤å", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[151658] = {
					"ÌÉÄÏ°∞ ÌÜµÌÜµ Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[112956] = {
					"ÎπõÎÇòÎäî ÎßàÎÇòÎèåÍ∏∞Í±∞Î∂Å", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[153194] = {
					"ÏóºÏàò Î¨ºÎ∞©Ïö∏", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[149611] = {
					"Ïö∞ÎÅºÎÅºÏ∞åÎ¶øÎ¥á 3000", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[137838] = {
					"Í≤©Î∂ÑÌïú Ïò¨ÎπºÎØ∏ÏïºÏàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[44841] = {
					"Ïó≠Î≥ë ÏïºÏàò", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[151147] = {
					"ÌïòÌã∞", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[151659] = {
					"Î°úÏºì ÌÜµÌÜµ Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[151148] = {
					"ÌïòÌã∞", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[129337] = {
					"ÏπºÏóÑÎãà", -- [1]
					"", -- [2]
				},
				[153196] = {
					"Í≥†Ï≤†Îºà Í≤åÍ±∏ÏüÅÏù¥", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[137328] = {
					"ÎπõÎ≤ºÎ¶º Ïö©ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[141935] = {
					"ÏöîÎèôÏπòÎäî ÌÅ¨Î°úÍ∑∏", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[134769] = {
					"ÌÜ±Îãà Î∞úÌÜ±", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[111166] = {
					"Íµ≥Í±¥Ìïú Í∂ÅÏ†ïÎ≥ëÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139889] = {
					"Î≥¥Îü¨Ïä§ÏïÑÎùºÌÅ¨", -- [1]
					"", -- [2]
				},
				[18394] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÎßùÎ†π", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[143985] = {
					"Ìù°ÏàòÎ°úÎ¥á", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[26776] = {
					"Îã§Ïù¥Ïñ¥Î∏åÎ£® ÏïûÏû°Ïù¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[141938] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ï†ÄÍ≤©Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[76104] = {
					"Í∏∞Í¥¥Ìïú ÏãúÏ≤¥ Í±∞ÎØ∏", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[141939] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í¥ÄÏ∏°Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[155760] = {
					"Ï†ÑÏ∞® ÌÉÄÍ≤©Í∏∞ ÎßàÌÅ¨2", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[136821] = {
					"Íµ¥ÎûÄ Îæ∞Ï°±ÎøîÌà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[139381] = {
					"ÎäêÎùºÌÇ§ ÌååÍ¥¥Ïûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[136822] = {
					"Íµ¥ÎûÄ Ï∞Ω Ìà¨Ï≤ôÏûê", -- [1]
					"", -- [2]
				},
				[44715] = {
					"ÌùâÌè¨Ìïú Ï†ïÏã†Ìï¥Ï≤¥Ïûê", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[130620] = {
					"ÎÉâÍ∏∞Í≤ÄÏÇ¨ ÏÑ∏ÎùºÌîº", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[57384] = {
					"ÏïîÏ≤≠ÏÉâ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[119103] = {
					"Ïπ†ÌùëÏùò ÏßëÌñâÏûê", -- [1]
					"", -- [2]
				},
				[136823] = {
					"Íµ¥ÎûÄ Ìà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[95813] = {
					"Î¨¥Í∏∞Íµ∞Ï£º Î©úÌÇ§Ïò§Î•¥", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[155763] = {
					"ÌùëÎßàÏà†ÏÇ¨ Ïπ¥ÎìúÎ†àÏä§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[33966] = {
					"Î∂ÑÏáÑÏùò Ï¥âÏàò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136824] = {
					"Íµ¥ÎûÄ Î∂àÍΩÉÏÜåÌôòÏÇ¨", -- [1]
					"", -- [2]
				},
				[130621] = {
					"ÎèåÌíçÏà†ÏÇ¨ Î∏åÎùºÏù¥Ïä®", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[21466] = {
					"ÏÑ†Íµ¨Ïûê Ïä§ÌÇ§Î¶¨Ïä§", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[139384] = {
					"Î±ÄÍ∞àÌÄ¥ Í≥µÍ≤©Î≥ë", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[111170] = {
					"Î≥ÑÏùò ÏÑ†Í≤¨Ïûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[136825] = {
					"Íµ¥ÎûÄ ÏÑúÏïΩÏàòÌò∏Ïûê", -- [1]
					"", -- [2]
				},
				[129598] = {
					"ÏûêÏú†ÏßÄÎåÄ ÏßêÎÖ∏ÏÉà", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136826] = {
					"Íµ¥ÎûÄ Î∂àÏòàÏñ∏Ïûê", -- [1]
					"", -- [2]
				},
				[130622] = {
					"ÎèåÌíçÏà†ÏÇ¨ ÏïÑÏö∞ÎûÄ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139386] = {
					"Î±ÄÌòìÎ∞îÎã•", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136315] = {
					"ÌÉÄÎùΩÏùò ÏûîÏû¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[150136] = {
					"ÏñºÍµ¥ ÏóÜÎäî Î∂ÑÏáÑÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[146553] = {
					"Ïø® Ìã∞ÎûÄ Ï£ºÎ®πÍæº", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139387] = {
					"ÎÉâÌòàÌïú ÎÇòÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[129599] = {
					"Î∞îÎã§Í∞ÄÎ¶Ñ ÏπºÎ∂ÄÎ¶ºÍæº", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136828] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ Ï†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[150137] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ï†ïÎ≥µÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[154744] = {
					"ÎèÖÏÑ± ÌùâÎ¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139388] = {
					"Ï†úÏä§ÏóêÏ¶à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136829] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ ÎèÑÎÅº Ìà¨Ï≤ôÎ≥ë", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[39854] = {
					"ÌïòÎäòÏÇ¥Ïù¥ ÏàòÌò∏Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[151674] = {
					"Íµ∞ÎÇ¥ÌÑ∏ ÏÉàÎÅº", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129600] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÏÜåÍ∏àÎπÑÎäò", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136830] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ Ïù∏Í∞ÑÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[76877] = {
					"Í∑∏Î£∞", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[150139] = {
					"Í≥µÌóà ÏÇ¨ÎÉ•Íæº ÌÅ¨Ïä§Ï¶à", -- [1]
					"Ïö∏ÎîîÎ•¥ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[57386] = {
					"ÏßÑÌôçÏÉâ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[28825] = {
					"ÏÜåÏö©ÎèåÏù¥", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[136831] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ ÏùòÏà†ÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[151676] = {
					"Íµ∞ÎÇ¥ÌÑ∏ ÎÇúÎèôÍæº", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129601] = {
					"Î∞îÎã§Í∞ÄÎ¶Ñ ÏûëÏÇ¥ÏÇ¨Ïàò", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136832] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ Í¥ëÏ†ÑÏÇ¨", -- [1]
					"", -- [2]
				},
				[150653] = {
					"Í≤ÄÏùÄÎ∞îÎã§ Í±∞Ïàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[21467] = {
					"ÏÑ†Íµ¨Ïûê Ïä§ÌÇ§Î¶¨Ïä§", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[139392] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ ÏÇ¨Ïö∞Î°ù", -- [1]
					"", -- [2]
				},
				[136833] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ ÎßπÎèÖ ÏÇ¨Ï†ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[150142] = {
					"Í≥†Ï≤†Îºà Ïì∞Î†àÍ∏∞Ìà¨Ï≤ôÍæº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[138369] = {
					"Ï∂ïÍµ¨ÌÉÑ ÎÇúÎèôÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[108359] = {
					"Î∂àÏïàÏ†ïÌïú Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139393] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ ÏÜêÏïÑÍ∑ÄÎ≥ë", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[129602] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏßëÌñâÏûê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136834] = {
					"Î¨¥ÎëêÏû•Ïù¥ Î∞îÏ£ºÏö∏Î£®", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72784] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏÇ¨Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[150143] = {
					"Í≥†Ï≤†Îºà Í≥†Í∏∞Í∞àÏù¥Íæº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[134787] = {
					"Í∞ÄÏãúÏßëÍ≤å ÍΩÉÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[151679] = {
					"Íµ∞ÎÇ¥ÌÑ∏ Î∞úÏ∞®Í∏∞Íæº", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[152703] = {
					"ÏõåÌÇ§ Ï∂©Í≤©Í∏∞ X1", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[136835] = {
					"ÌÇ®ÌÜ†Í∞Ä ÎπÑÏä§Ìä∏Î≤†Ïù∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134788] = {
					"Í∞ÄÏãúÏßëÍ≤å ÎèåÍªçÏßà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139395] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Îä™ÏßÄÍ∏∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[145026] = {
					"ÎÇ†Î†µÍº¨Î¶¨ Ï≤≠ÏÜåÎ∂Ä", -- [1]
					"", -- [2]
				},
				[154240] = {
					"ÏïÑÏ¶àÏÉ§ÎùºÏùò Ïã¨Î≥µ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[134789] = {
					"Í¥¥Î¨º Í∞ÄÏãúÏßëÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[151681] = {
					"Ìà¨Ï≤ôÍæº Ïß§Îî∏Íº¨Î¶¨", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[148610] = {
					"Í∞ÄÏßÄÏùò ÎìúÎ£®Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[132742] = {
					"ÌôîÏóºÎπÑÎäò ÏÑ±ÌÅºÍ±∏Ïù¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[150146] = {
					"Í≥†Ï≤†Îºà Ï£ºÏà†ÏÇ¨", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[108361] = {
					"ÏàòÏ†ï Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139397] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Ïû†Î≥µÍæº", -- [1]
					"", -- [2]
				},
				[148611] = {
					"ÏöîÎ£®Ï∞®", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136838] = {
					"ÏïºÎßåÏ†ÑÏÇ¨ Ï¶àÍ≥†Î•¥ÎèÑ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[149635] = {
					"ÌîºÏñ¥ÎÇòÎäî ÏàòÌò∏Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[32665] = {
					"ÏàòÏ†ï Ïò¨Í∞ÄÎØ∏ Îç©Íµ¥ÏÜê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[134791] = {
					"ÏòÅÎ°±Ìïú ÏóâÍ∏àÍ≤å", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[57388] = {
					"Í∑∏ÎäòÏßÑ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[28826] = {
					"Ìè≠ÌíçÍ≤©ÎÖ∏ ÎßùÎ†π", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[136839] = {
					"ÎØÄÎ°úÍ±¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134280] = {
					"Íµ¨ÏõêÏûê Î∞îÏïÑÌà¥", -- [1]
					"", -- [2]
				},
				[138887] = {
					"ÌïèÎπõÍ∞ÅÏÑ± ÎπÑÏà†ÏÇ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139399] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Ï†ÑÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135816] = {
					"Ïç©ÏùÄÎßàÍ∑Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[148613] = {
					"ÏÇ¨Î†πÍ¥Ä Î∏åÎ°úÎìúÏÇ¨Ïù¥Îìú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[54701] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Ïó¨ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[72787] = {
					"Î∞± Í±∏ÏùåÏùò ÏπºÎÇ†", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138888] = {
					"ÌïèÎπõÍ∞ÅÏÑ± ÏòàÏñ∏Ïûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[151685] = {
					"Íµ∞ÎÇ¥ÌÑ∏ Íµ¥Ïñ¥ÎØ∏", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[135817] = {
					"ÎØ∏Ìíç Ï†ïÎ†π", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140424] = {
					"ÎÇ´ÎøîÏù¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[132746] = {
					"ÏÑúÎ¶¨ÎØ∏Îäò Î¨¥Î¶¨Ïñ¥ÎØ∏", -- [1]
					"", -- [2]
				},
				[17693] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Ï≤ôÌõÑÎ≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[138889] = {
					"ÏÑ†Í≤¨Ïûê Ïö∞Î∂àÎìú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[151686] = {
					"ÎèÑÎëë ÏïΩÏÇ≠Î∞úÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135818] = {
					"ÎèåÌíç Î≥ëÏÇ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[140425] = {
					"Îß§Ïö¥Î∞ú", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[126023] = {
					"Ìï≠Îßå ÏÇ¨Ïö∞Î¶¨Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[154758] = {
					"ÎèÖÏÑ± ÌùâÎ¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[138890] = {
					"ÏòÅÌòºÏàòÏÉâÏûê Îã§Î•¥Í±∏ÌîÑ", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[151687] = {
					"ÎπÑÎ™ÖÏüÅÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135819] = {
					"ÏÇ¥ÏïÑÏûàÎäî ÌöåÏò§Î¶¨Î∞îÎûå", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[140426] = {
					"Îã¨ÏàòÏóº", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145033] = {
					"Î∂ÅÍ∑π ÏÇ¨ÎÉ•Ïó¨Ïö∞", -- [1]
					"", -- [2]
				},
				[134284] = {
					"ÌÉÄÎùΩÌïú Ï£ΩÏùåÏòàÏñ∏Ïûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[155271] = {
					"Ïã¨Ïó∞ Ï∞ΩÏû°Ïù¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[151688] = {
					"Î©úÎ°†ÌååÍ¥¥Íæº", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[76116] = {
					"Î™∞ÏïÑÏπòÎäî Ï∞®ÌÅ¨Îûå Ï∂§Íæº", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[148617] = {
					"ÎèÖÏã§Ìïú ÏïÑÏø§Îã§", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136844] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[76884] = {
					"ÏûîÌòπÏÜ°Í≥≥Îãà", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[114251] = {
					"Í∞àÎ¶∞Îçî", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[134797] = {
					"Ìï¥Î≥Ä Í∑∏ÎäòÍ≤å", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[127048] = {
					"ÎßàÎ•∏ÏàòÏóº Ï±ÑÍµ¥Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[5913] = {
					"ÏßÑÎèôÏùò ÌÜ†ÌÖú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[148618] = {
					"ÎåÄÎìúÎ£®Ïù¥Îìú ÏïàÎìúÎ†àÎãàÏö∞Ïä§", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[145035] = {
					"ÎÇ†Î†µÍº¨Î¶¨ ÏÇ¨ÎÉ•Ïó¨Ïö∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[78932] = {
					"ÌúòÎ™∞ÏïÑÏπòÎäî Í∞ïÌíçÏà†ÏÇ¨", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[150154] = {
					"ÎºàÎìúÎìù ÏÇ¨Ïö∞Î°úÎ¶¨Ïä§ÌÅ¨", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[134286] = {
					"ÎåÄÎßàÎ≤ïÏÇ¨ ÌÉÄÎ¨¥Ïö∞Îùº", -- [1]
					"", -- [2]
				},
				[155273] = {
					"Ï†úÏïïÏûê Í∞ÄÎ•¥Î∞ú", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139405] = {
					"ÌååÎèÑÏù∏ÎèÑÏûê ÏÑ∏Ï†úÏä§Ïïà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[152202] = {
					"Î°úÏôÄ Î∏îÎü¨ÎìúÏä§Ìä∏ÎùºÏù¥ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140429] = {
					"Ïû¨Îπ†Î•∏ Í∏âÎ•òÌè¥ÏßùÏù¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136846] = {
					"Î™®ÎûòÎëêÌîº Ìù°ÌòàÏ†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[32666] = {
					"ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134799] = {
					"Ïã¨Ïó∞ÏßëÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139406] = {
					"ÌïèÎπõÎπÑÎäò ÌïòÏÇ∞", -- [1]
					"", -- [2]
				},
				[131728] = {
					"ÏßëÏöîÌïú ÎùºÏö∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140430] = {
					"ÏÇ∞ÏïÖÎ∞úÍµΩ ÌéÑÏ©çÏù¥", -- [1]
					"", -- [2]
				},
				[136847] = {
					"Î™®ÎûòÎëêÌîº Ïñ¥Îë†ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[78933] = {
					"Ìï¥ÎèãÏù¥Ïùò Ï†ÑÎ†π", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[120651] = {
					"Ìè≠Î∞úÎ¨º", -- [1]
					"", -- [2]
				},
				[139407] = {
					"ÏÜ°Í≥≥ÎãàÍ≥µÌè¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[112973] = {
					"Ìô©ÌòºÍ∞êÏãúÎåÄ Ïó≠Ïà†ÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[140431] = {
					"ÏÇ∞ÏïÖÎ∞úÍµΩ ÏóºÏÜå", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[136848] = {
					"Î™®ÎûòÎëêÌîº ÏòàÏñ∏Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72791] = {
					"ÏûîÏ°¥ÌïòÎäî ÌÉÄÎùΩ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[155276] = {
					"Ìè≠Î∞úÌïòÎäî Î∞îÏúÑÍ∞ÄÎ¶¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[148622] = {
					"ÌÇ¥Î∂àÏùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[145039] = {
					"ÎààÏ∂îÏ†ÅÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[17694] = {
					"Ïñ¥Îë†Îã¨ ÏïîÌùëÏà†ÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[134802] = {
					"ÏπºÎÇ†Îì±ÍªçÏßà Í±∞Î∂Å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[112718] = {
					"Î≥ÑÏùò Ï∞ΩÏ°∞Î¨º", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[148623] = {
					"Í≥µÌÅ¨Ïùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[145040] = {
					"ÏòÅÎ¶¨Ìïú Î°úÎ¶∞", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[150159] = {
					"Ïôï Í≥†Î∞îÎßâ", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[155278] = {
					"Î≤àÎìùÍªçÏßà Î≥µÏñ¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139410] = {
					"Ï°∞Ïö©Ìïú ÏπºÎÇ†Ïùò ÎπÑÏä§Ï¶à", -- [1]
					"", -- [2]
				},
				[41139] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ï†ïÏã†ÏπòÏú†ÏÇ¨", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[140434] = {
					"ÏÇ∞ÏïÖÎ∞úÍµΩ Î∞îÏúÑÎøî", -- [1]
					"", -- [2]
				},
				[145041] = {
					"ÎÇ†Î†µÍº¨Î¶¨ Ï∂îÏ†ÅÏûê", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[150160] = {
					"Í≥†Ï≤†Îºà ÌòëÎ∞ïÍæº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[134804] = {
					"ÏòÅÍ≤ÅÏùò Î£¨ÍªçÏßàÍ±∞Î∂Å", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[155791] = {
					"Í≥µÌè¨Ïùò ÎπÑÎ™ÖÏà†ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140435] = {
					"Ìù¨ÎÅóÌÑ∏", -- [1]
					"", -- [2]
				},
				[136852] = {
					"Í∞ÄÎßàÏÜ•ÏßÄÍ∏∞ Ïò§ÎèÑ", -- [1]
					"", -- [2]
				},
				[130635] = {
					"Î∂ÑÎÖ∏ÏÑù", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[134805] = {
					"Îñ†ÎèÑÎäî Í±∞ÎåÄ Í±∞Î∂Å", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139412] = {
					"Í∞ÄÏÉ§Ïä§Ï¶à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135829] = {
					"Î®ºÏßÄÎ∞îÎûå", -- [1]
					"", -- [2]
				},
				[140436] = {
					"ÌÇÅÌÇÅÎ∞úÍµΩ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134806] = {
					"ÌîºÏ†àÎã®Í±∞Î∂Å", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139413] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Ïò§ÏïÑÏãúÏä§ÏòàÏñ∏Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135830] = {
					"Í∞ïÌíçÎ∂ÑÎÖ∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140437] = {
					"ÎäêÎ¶∞ Ïò¨Î°ú", -- [1]
					"", -- [2]
				},
				[136854] = {
					"Î∞îÎ£¨ ÌîåÎ¶∞Ìä∏ÌõÑÌîÑ", -- [1]
					"", -- [2]
				},
				[36661] = {
					"ÏÑúÎ¶øÎ∞úÏÜ°Í≥≥Îãà", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[134807] = {
					"Í≥†ÎåÄ Í∞ÄÏãúÍ∞ëÏò∑", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139414] = {
					"Îä™ ÏÇ¨Ï†ú Î∞îÏä§Ï¶à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140438] = {
					"ÎäôÏùÄ Í∏¥Ïù¥Îπ®", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[95061] = {
					"ÏÉÅÍ∏â Î∂àÏùò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[71515] = {
					"Ïû•Íµ∞ ÎÇòÏ¶àÍ∑∏Î¶º", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[71771] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÎåÄÎßàÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140439] = {
					"ÏÇ¨Ìñ•Î™∏ÌÜµ Î¨¥Î¶¨ÏßÄÎèÑÏûê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136856] = {
					"ÏûøÎ∂àÎøî", -- [1]
					"", -- [2]
				},
				[38453] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[150165] = {
					"ÏàòÏï° Ï†ïÎ†π", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139416] = {
					"Î≥ºÏÉ§Ïä§", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140440] = {
					"ÎøîÎÇú ÌïèÎπõÌÑ∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[17695] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê ÏïîÏÇ¥Ïûê", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[137881] = {
					"Î∂ÅÎ∂ÄÏäµÍ≥° Í∏∞ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[60208] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[116561] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ Î∂àÍΩÉÍµ∞Ï£º", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139417] = {
					"Ï†ÄÏ£ºÎ∞ïÏùÄ Î∂ÄÌå®ÎÇòÎ¨¥", -- [1]
					"", -- [2]
				},
				[135834] = {
					"Ïç©ÏùÄÍµ¨Î¶Ñ", -- [1]
					"", -- [2]
				},
				[140441] = {
					"ÏÉàÎÅº ÏÇ¨Ìñ•Î™∏ÌÜµ", -- [1]
					"", -- [2]
				},
				[136858] = {
					"ÏûîÎ¶¨", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[137882] = {
					"Î∂ÅÎ∂ÄÏäµÍ≥° ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[130638] = {
					"Î¨¥Ïá†ÌÑ±ÏïÖÏñ¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[44980] = {
					"ÎÑ§ÌéòÎ•¥ÏÑ∏Ìä∏ ÏÇ¨Ïà†ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[139418] = {
					"Î∂ÄÌå®Ìïú Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[148120] = {
					"Ïø® Ìã∞ÎûÄ Ìï¥Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136347] = {
					"ÌååÎèÑÌòÑÏûê ÏàòÏäµÏÉù", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[136859] = {
					"Î∂âÏùÄÎ®∏Î¶¨", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[45620] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Î≥ëÏÇ¨", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[150168] = {
					"ÎèÖÏÑ± ÌùâÎ¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[33719] = {
					"ÏóêÎ©îÎûÑÎìú Ïö© Î∞∞Ïö∞Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139419] = {
					"ÎåÄÏ†êÏüÅÏù¥ ÏïÑÏÇ¨Ïù¥Ïûê", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140443] = {
					"ÏÇ¨Ìñ•Î™∏ÌÜµ ÎèåÏßÑÏûê", -- [1]
					"", -- [2]
				},
				[136860] = {
					"Ï∂îÏ†ÅÏûê Î∂ÄÏπ¥", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[150169] = {
					"ÎßπÎèÖ Ïû†Î≥µÍæº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[130639] = {
					"Î¨¥Ïá†ÌÑ± Í∞ïÏ≤†Ïù¥Îπ®", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[147098] = {
					"Ïâ¨ÏóîÏùò ÏòÅÌòº", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139420] = {
					"Îä™ ÏàòÌò∏Ïûê Î∞îÏä§ÏûêÏâ¨", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135837] = {
					"ÏÜåÏö©ÎèåÏù¥ Î∂ÄÍ¥Ä", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140444] = {
					"ÏàòÏª∑ ÏÇ¨Ìñ•Î™∏ÌÜµ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[52019] = {
					"ÌïòÎäòÎ∂ïÍ¥¥ Î≥Ñ", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[116563] = {
					"Í≥†ÎåÄÏùò Ïã¨Ïû•Î∂Ä ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139421] = {
					"Ïù¥ÎÅºÎπÑÎäò Í≤åÏπ¥Ï¶à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135838] = {
					"Ïò§ÏóºÎ∞îÎûå", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136862] = {
					"Ïò¨Í≥†", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130640] = {
					"Î¨¥Ïá†ÌÑ± ÌÜ±Ïù¥Îπ®", -- [1]
					"", -- [2]
				},
				[130896] = {
					"ÏùòÏãùÏÉÅÏã§ ÌÜµ", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[135327] = {
					"ÎìúÏõåÌîÑ Î∞ïÍ≤©Ìè¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[135839] = {
					"Îä™Í∞ÄÏä§", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145053] = {
					"Í∏∞Í¥¥Ìïú ÌùâÎ¨º", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[153755] = {
					"ÎÑ§ÎÖ∏ Î©îÍ∞ÄÌÅ¨ÎûòÏâ¨", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[33720] = {
					"ÌùëÏöîÏÑù Ïö© Î∞∞Ïö∞Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140447] = {
					"ÌååÍ¥¥Ïùò Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136864] = {
					"Í≥µÌè¨Ïùò Ïö∞Íµ¨Ïö∞", -- [1]
					"", -- [2]
				},
				[114261] = {
					"ÌÜ†Ïö∞Îãà", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[135329] = {
					"ÎåÄÎ™® Î∏åÎ¶∞Îì§", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136353] = {
					"Í±∞ÎåÄÌïú Ï¥âÏàò", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[136865] = {
					"Î™®ÎûòÏïΩÌÉàÏûê Ïö∞Ïûî", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139425] = {
					"Í¥ëÌè¨Ìïú Î∂ÄÌôîÏûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[140449] = {
					"Î≠âÌà≠Î™∏ÌÜµ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[136866] = {
					"Ïö∞ÏõÄÍµø Î∂ÄÏ°±ÎØº", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[126291] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ Î≥¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[114262] = {
					"ÏÇ¨ÎÉ•Íæº Ïñ¥ÌäúÎ©ò", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[44982] = {
					"ÎÑ§ÌéòÎ•¥ÏÑ∏Ìä∏ ÏïîÌùëÏà†ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[127315] = {
					"ÎêòÏÇ¥Î¶¨Í∏∞ ÌÜ†ÌÖú", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[26782] = {
					"ÏàòÏ†ï ÏàòÌò∏Ïûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[136867] = {
					"Ïö∞ÏõÄÍµø ÏÇ¨Ïàò", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[75360] = {
					"Î∂àÌÉÄÎäî ÏûøÎ∂à", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[140451] = {
					"Ïï†Ï†ïÏñ¥Î¶∞ ÏÉàÎÅºÏñ¥ÎØ∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136868] = {
					"Ïö∞ÏõÄÍµø ÎÇúÎèôÍæº", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134821] = {
					"Ïç©ÏùÄÏùëÏãú ÎèåÎ∞îÏã§Î¶¨Ïä§ÌÅ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[122965] = {
					"Î≥ºÏπ¥Ïïå", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[140452] = {
					"Ïû†ÏûêÎäî Ï∞ΩÎøî", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[145059] = {
					"ÍµêÌôúÌïú Î∞§ÎÇ†Í∞ú", -- [1]
					"", -- [2]
				},
				[141988] = {
					"Ï†àÎ≤ΩÏßÄÍ∏∞ ÎïÖÍ±∞ÎØ∏", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[134822] = {
					"Ïö∞ÎëêÎ®∏Î¶¨ ÎèåÏû•Í∞ë", -- [1]
					"", -- [2]
				},
				[139429] = {
					"Î∞îÏúÑÏÜçÎ∞ï Ï†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135846] = {
					"Î™®ÎûòÎ≤îÎ≤Ö ÎèÖÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[140453] = {
					"ÎÇòÎ¨¥ÌÑ∏ Î¨¥Î¶¨ÏßÄÎèÑÏûê", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[145060] = {
					"Î¨¥ÏãúÎ¨¥ÏãúÌïú Í∑∏ÎäòÍπÉÌÑ∏", -- [1]
					"", -- [2]
				},
				[146596] = {
					"Ïñ¥Îë†ÎπÑÎäò ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[134823] = {
					"Íπ®ÏßÄÏßÄ ÏïäÎäî ÏàòÏ†ïÍ∞ÄÏãú", -- [1]
					"", -- [2]
				},
				[139430] = {
					"ÏòÅÏõêÌïú ÏÇ¨ÎÉ•Í∞ú ÏûòÎ¶¨Ï¶à", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140454] = {
					"ÎäôÏùÄ ÎïãÏùÄÎ®∏Î¶¨", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136871] = {
					"Ïö∞ÏõÄÍµø Ï£ºÏà†ÏÇ¨", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[20896] = {
					"ÏóêÌÖåÎ¶¨ÏõÄ ÌïôÏÇ¥Ïûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[33722] = {
					"Ìè≠ÌíçÏúºÎ°ú ÎπöÏùÄ Î¨∏ÏßÄÍ∏∞", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[147621] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† ÏÑ†Î¥âÎåÄ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140455] = {
					"ÏÉàÎÅº ÎÇòÎ¨¥ÌÑ∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[34234] = {
					"Î£¨ÏúºÎ°ú Î≤ºÎ†§ÎÇ∏ ÌååÏàòÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[114265] = {
					"Ï°∞ÏßÅ Íπ°Ìå®", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139432] = {
					"Î£®Ïãú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140456] = {
					"ÎÇòÎ¨¥ÌÑ∏ Î®∏Ïä§ÏºÑ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136873] = {
					"ÌÉÄÏï°ÏÇ¨Ïàò", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[29982] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏïΩÌÉàÏûê", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[155813] = {
					"Í∂ÅÏ†ï ÏàòÌñâÏõê", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[129366] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® Ìï¥Ï†ÅÎã®Ïõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140457] = {
					"ÎÇòÎ¨¥ÌÑ∏ ÎøîÏÜå", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136874] = {
					"Î¥âÌÅ¨", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[40633] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Í∑ºÏúÑÎ≥ë", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[114266] = {
					"Ìï¥Î≥ÄÍ∞Ä ÌååÎèÑÏòàÏñ∏Ïûê", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[114522] = {
					"Í∞ÄÎßàÏÜ• Î∂ÄÏù∏", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[122968] = {
					"ÏïºÏ¶àÎßà", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[139946] = {
					"Ïã¨Ïû•Î∂Ä ÏàòÌò∏Ïûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[140458] = {
					"ÏàòÏª∑ ÎÇòÎ¨¥ÌÑ∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[145065] = {
					"Ïñ¥Î¶∞ Î∞§ÎÇ†Í∞ú", -- [1]
					"", -- [2]
				},
				[120153] = {
					"ÏòÅÍ≤ÅÏùò Î∞©Ïñ¥Î≥ë", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[134828] = {
					"ÏïÑÏø†ÏïÑÎßÅ", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[129367] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® Ìè≠ÌíçÏö∞ÏÜåÌôòÏÇ¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136876] = {
					"Í≥µÌè¨Ïùò Ïñ¥ÏúΩ", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[122969] = {
					"ÏûîÏ∂îÎ¶¨ ÏùòÏà†ÏÇ¨", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[145067] = {
					"ÏÉàÎÅº Í∑∏ÎäòÍπÉÌÑ∏", -- [1]
					"", -- [2]
				},
				[139949] = {
					"Ïó≠Î≥ë ÏùòÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[136878] = {
					"Î®∏Î¶¨ÏÉÅÎ™®", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[40634] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ìè≠ÌíçÏö∞ ÎßàÎÖÄ", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[139438] = {
					"ÏòÅÌòºÏù∏ÎèÑÏûê ÌÜ†Í∞Ñ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140974] = {
					"ÏôïÍøÄÍ∫ΩÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[62005] = {
					"ÏïºÏàò", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[20897] = {
					"ÏóêÌÖåÎ¶¨ÏõÄ ÌååÎèôÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[139439] = {
					"Ìô©ÌòºÍ≤∞ÏÜçÏûê Ï£ºÏö¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[129369] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÎã®", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140975] = {
					"Ïñ¥Î¶∞ÏúÑÏû•", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[42810] = {
					"ÏàòÏ†ïÏÉùÏÑ± Í±∞Ïù∏", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[122971] = {
					"Îã§ÏûêÎ•¥ÏïÑÏù¥ ÎèåÍ≤©Ï†ÑÏÇ¨", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[140976] = {
					"Íµ¨Î©ç Î≤åÎ†à", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[133298] = {
					"ÏïÖÏ∑®ÎÇòÎäî Ìè¨ÏãùÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[150190] = {
					"HK-8 Í≥µÏ§ë ÏïïÎ∞ï Ïú†Îãõ", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[79462] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[104288] = {
					"Ìä∏Î¶¥Î¶¨ÏïÖÏä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[129370] = {
					"Î¨¥Ïá†ÌååÎèÑ Î¨ºÍ≤∞Íµ¨Ï≤¥Ïûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[56631] = {
					"ÏÉàÎÅº Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[140977] = {
					"ÎπÑÏ∑®ÎπÑÎäò Ïù¥Í∞àÏù¥", -- [1]
					"", -- [2]
				},
				[114526] = {
					"Ïú†Î†π ÎåÄÏó≠", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139442] = {
					"Ï≤ôÏ∂îÌååÏáÑÏûê Ï£ºÏπ∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140978] = {
					"ÌååÎ©∏ÎïÖÍµ¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[137395] = {
					"Ï†ïÏòà Î≥¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[79463] = {
					"ÎπõÎÇòÎäî Ï¥àÏã†ÏÑ±", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[71529] = {
					"ÌîºÏóê Íµ∂Ï£ºÎ¶∞ ÌÜ†ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139443] = {
					"Ï≤ôÏ∂îÏà†ÏÇ¨ Ïø§ÌÉÄÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129371] = {
					"ÏÑ±ÎÇúÌååÎèÑ ÌååÏáÑÍæº", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140979] = {
					"ÌÅ∞ÏÜ°Í≥≥Îãà", -- [1]
					"", -- [2]
				},
				[139444] = {
					"Í∞ïÎ†πÍµ∞Ï£º ÏßÄÏïà", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[140980] = {
					"ÎπÑÏ∑®ÎπÑÎäò Î≤åÎ†à", -- [1]
					"", -- [2]
				},
				[55864] = {
					"ÎààÎ∂ÄÏã† ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[120158] = {
					"Í∏âÏÑ± ÌÉÄÎùΩ", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139445] = {
					"Ìà¨ÎßàÌä∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[129372] = {
					"Í≤ÄÏùÄÌÉÄÎ•¥ Ìè≠ÌÉÑÎßà", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140981] = {
					"Ïù¥Îπ® Í∞ÄÎäî Í≥µÌè¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[72810] = {
					"Í≥µÎ™ÖÌïòÎäî Î¨ºÏùò ÏßÄÌå°Ïù¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[150195] = {
					"ÎÖ∏ÏõÄ Î®πÎäî ÏàòÏï°Í¥¥Î¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[140982] = {
					"ÏñºÏùåÌååÍ¥¥Ïûê", -- [1]
					"", -- [2]
				},
				[20898] = {
					"Í±∞ÎåÄÌïú Ïã¨Ïó∞", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[129373] = {
					"Î∂ÄÎëêÏÇ¨ÎÉ•Í∞ú Î¨¥Î¶¨Ï£ºÏù∏", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140983] = {
					"ÏÑúÎ¶¨Ï≤úÍ≥µ ÌååÏó¥Ïûê", -- [1]
					"", -- [2]
				},
				[141495] = {
					"Ïø® Ìã∞ÎûÄ Î≥¥Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146102] = {
					"ÏÇ¥ÏïÑÏûàÎäî Ìè≠ÌÉÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[130653] = {
					"ÌÜµÏ†úÎ∂àÍ∞Ä Í≥µÎ≥ë", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[130909] = {
					"ÏïÖÏ∑® ÎÇòÎäî Íµ¨ÎçîÍ∏∞", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[135353] = {
					"ÎÖ∏Î†®Ìïú Ìï¥ÌååÎ¶¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[136889] = {
					"ÏπºÎÇ†ÏÜåÌôòÏÇ¨ Ìà¨ÌÅ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146103] = {
					"ÏÇ¥ÏïÑÏûàÎäî Ìè≠ÌÉÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[79466] = {
					"Îñ†Ïò§Î•¥Îäî ÌÉúÏñëÏùò ÏàòÏäµÏÉù", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[136890] = {
					"Î¨¥Ïá† Ïò§Î•¥Ïπ¥Ïä§", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146104] = {
					"ÏÇ¥ÏïÑÏûàÎäî Ìè≠ÌÉÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[134331] = {
					"Ïôï ÎùºÌõÑÏïÑÏù¥", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[140986] = {
					"ÏÇ∞ÏÑ± ÎïÖÍµ¥Î≤åÎ†à", -- [1]
					"", -- [2]
				},
				[79467] = {
					"Ïó¨Î™ÖÏùò ÏàôÎ†®ÏÇ¨Ï†ú", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[131261] = {
					"ÎëêÎ•¥ÌÇ§Ïä§", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[33983] = {
					"ÏïïÏ∞©Ïùò Ï¥âÏàò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[148665] = {
					"ÎùºÏä§ÌÉÄÎ¶¨ ÏôïÏã§Í∑ºÏúÑÎ≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136892] = {
					"ÏïºÎßåÏ£ºÎë•Ïù¥", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[130655] = {
					"Î∞îÎπÑ ÌïòÏö∏Î¶¨Ïä§", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[74349] = {
					"ÌîºÎßùÏπò Ïö©ÏïîÍ≤∞ÏÜçÏÇ¨", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[140988] = {
					"Í∞ïÏ≤†ÌååÏáÑ", -- [1]
					"", -- [2]
				},
				[137405] = {
					"Ïò≠ÏïÑÎß§Îäî Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138429] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ Ìï¥ÏùºÍ≤∞ÏÜçÍæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[39870] = {
					"Ìô©ÌòºÏùò ÌôîÏóºÏû°Ïù¥", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[76141] = {
					"ÏïÑÎùºÌÅ¨ÎÇòÏä§", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[148667] = {
					"ÎùºÏä§ÌÉÄÎ¶¨ ÏùëÏßïÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140989] = {
					"ÎºàÎπÑÎäò Î≤åÎ†à", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130400] = {
					"Î¨¥Ïá†ÌååÎèÑ Î∂ÑÏáÑÏûê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[130912] = {
					"Í∑∏Î¶ºÏûêÏπºÎÇ† ÎùºÏßÄ", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[151739] = {
					"Î∂àÍµ¥Ïùò ÎßàÌïòÌä∏", -- [1]
					"ÎÑ¨ÌÉÄÎ¶¨Ïò®Ïùò Îë•ÏßÄ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140990] = {
					"ÎºàÎπÑÎäò ÎèÖÎ≤åÎ†à", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[28961] = {
					"Ìã∞ÌÉÄÎäÑ Í≥µÏÑ±ÌååÍ¥¥Ïûê", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[146109] = {
					"Î∞§ÎπõÍπî ÎèåÏßÑÏóòÌÅ¨", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138431] = {
					"Ìï¥ÏùºÏó¨Ï†ú ÎÇòÏ§ÑÎùº", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140991] = {
					"Í≥®ÏàòÏ≤úÍ≥µ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146110] = {
					"Ï∞®Ïò§Î¶ÑÎã¨", -- [1]
					"", -- [2]
				},
				[138432] = {
					"Ìï¥ÏùºÏó¨Ï†ú ÎÑ§ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140992] = {
					"ÏãúÏ≤¥ÌååÏó¥Ïûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[146111] = {
					"20 Ï†êÏßúÎ¶¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[138433] = {
					"Ìï¥ÏùºÏó¨Ï†ú Î≤†ÏÇ¨ÎÇò", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[17892] = {
					"Î¨¥ÌïúÏùò ÏãúÍ∞ÑÏà†ÏÇ¨", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[151742] = {
					"Í≥µÌóàÏóê Î¨ºÎì† Ïπ®ÎûµÏûê", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[76143] = {
					"Î£®ÌÅ¨ÎûÄ", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[140993] = {
					"Ïñ¥Îë†ÎïÖÍµ¥ Î≥µÎ≥ë", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146112] = {
					"Í≤ÄÏùÄÌÑ∏ Í±∞Ïàò", -- [1]
					"", -- [2]
				},
				[138434] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ Ìè≠ÌíçÏö∞ ÎßàÎÖÄ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[26722] = {
					"ÌïòÎäòÎπõ ÌïôÏûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[111463] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146113] = {
					"Ï≤úÎë•Î∞úÍµΩ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139459] = {
					"Î∞îÏúÑÏÜçÎ∞ï Î≥ëÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[33985] = {
					"Î∂ÄÌå®Ïùò Ï¥âÏàò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[148673] = {
					"Î∏åÏõêÏÇºÎîîÏùò Îß§Í∞úÏ≤¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140995] = {
					"ÌèêÌóàÏ∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[146114] = {
					"ÏáÑÎèÑÏùò Î∞îÎûå", -- [1]
					"", -- [2]
				},
				[138436] = {
					"Íµ∞Ï£º Í∞àÌÄ¥ÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[135365] = {
					"ÎåÄÎ™® ÏïåÎßà", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[140996] = {
					"Ïã¨Ïó∞Ï≤úÍ≥µ", -- [1]
					"", -- [2]
				},
				[39616] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ïπ®ÎûµÏûê", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[138437] = {
					"Ïπ®ÎûµÏûê Ïä§Ï†úÎ¶¨Ïä§", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139461] = {
					"Î∞îÏúÑÏÜçÎ∞ï ÎèåÏïÑÍ∑Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[76145] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[132807] = {
					"ÏßÄÏïà Ìã∞ Í∏∞Î†å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146116] = {
					"Í∞ÄÏãúÎì± Ï±ÑÏßëÍæº", -- [1]
					"", -- [2]
				},
				[138438] = {
					"ÌååÎèÑÏïΩÌÉàÏûê Í∞ïÏ≤†ÏÜ°Í≥≥Îãà", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139462] = {
					"Î∞îÏúÑÏÜçÎ∞ï ÌòàÏïîÏòàÏñ∏Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136391] = {
					"Ïã¨Ïû•Î∂Ä ÏàòÌò∏Ïûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[25756] = {
					"ÏïÑÌõÑÎÇòÏù¥Ìä∏ ÌïúÌåå", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[138439] = {
					"Î±ÄÏó¨Ïôï Î∞úÎùº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[73226] = {
					"ÌïòÍ∏â ÏÉ§ ÏõÖÎç©Ïù¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139463] = {
					"Î∞îÏúÑÏÜçÎ∞ï ÌååÎ©∏Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[76146] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[129124] = {
					"ÏïÑÎ°±Ïù¥", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[118374] = {
					"ÎåÄÏû• ÏïºÌÉÄÏù¥ Î¨∏Ïä§Ìä∏ÎùºÏù¥ÌÅ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[136883] = {
					"Îª£Îª£Í∞àÍ∏∞ Í∞ÄÏãúÏÜåÌôòÏÇ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146118] = {
					"ÏòÅÌÜ† Í∞ÄÏãúÎì±", -- [1]
					"", -- [2]
				},
				[138440] = {
					"Ïó¨Íµ∞Ï£º ÏïÑÏÇ¨ÎÇò", -- [1]
					"", -- [2]
				},
				[136893] = {
					"ÏßÄÎ©¥ÏßÑÎèôÏûê ÏïÑÍ∞Ñ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139464] = {
					"Ïö∏Î∂ÄÏßñÎäî ÏßÄÏïà Ìã∞ Í∏∞Î†å", -- [1]
					"", -- [2]
				},
				[144071] = {
					"Î¨¥Ïá†ÌååÎèÑ Î¨ºÍ≤∞Íµ¨Ï≤¥Ïûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[111210] = {
					"Î∂àÌÉÄÎäî ÏßÄÏò•Î∂àÏ†ïÎ†π", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[153285] = {
					"ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[139765] = {
					"Î∞∞ ÏóÜÎäî ÏßÄÎØ∏", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146119] = {
					"Í∞ÄÏãúÎì± Ìà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[138441] = {
					"Ïã¨Ïó∞Ïùò Ïó¨Í∞ÄÏàò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[39873] = {
					"Ìô©ÌòºÏùò Ïö©ÏÜåÌôòÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[155845] = {
					"Î∂ÑÏáÑÏùò Ïã¨Ïó∞", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[80242] = {
					"Ïä§ÎØ∏ÎßàÏÖç", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[56637] = {
					"Ïö∞ÎÅºÏö∞ÎÅº", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[136882] = {
					"Îª£Îª£Í∞àÍ∏∞ ÏàòÌò∏Î≥ë", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[122972] = {
					"Îã§ÏûêÎ•¥ÏïÑÏù¥ Ï†êÏà†Í∞Ä", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[133835] = {
					"ÏïºÏàò ÌòàÍ≥µÌè¨Í±∞ÎØ∏", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[138442] = {
					"ÌååÎèÑÎèåÍ≤©Î≥ë", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130918] = {
					"ÏïÑÎ•¥ÏºàÎ¶¨Ïò® Í±∞ÎåÄÍ±∞Î∂Å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139466] = {
					"ÏΩîÎ∞úÌä∏ Î∞îÏúÑÍ≤ΩÎπÑÎ≥ë", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[26723] = {
					"ÏºÄÎ¶¨Ïä§Ìä∏ÎùºÏûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[140490] = {
					"ÌîºÎ©çÏö∏ Ïú†Ï∂©", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[140838] = {
					"ÏßñÍ∂ÇÏùÄ ÌôçÏàòÏùò Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[140298] = {
					"ÌùâÌè¨Ìïú Í≥®Ïø§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[133836] = {
					"ÎêòÏÇ¥ÏïÑÎÇú ÏàòÌò∏Ïûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[138443] = {
					"ÎπÑÎäòÍ≤ΩÎπÑÎ≥ë Î∂àÎ†àÏä§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[155275] = {
					"ÌååÎèÑÍµ¨Ï≤¥Ïûê ÏΩîÎ•¥Î≤†Ïä§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139467] = {
					"ÌôîÍ∞ïÏïîÏ£ºÎ®π ÌÇ®Ïàò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[94802] = {
					"Í≥µÌóàÍ∞ÅÏù∏ÏÇ¨ ÏóêÏù¥ÌÉàÎ°úÏä§", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[127484] = {
					"Ï†úÏä§ ÌïòÏö∏Î¶¨Ïä§", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[139764] = {
					"Ïª§ÌãÄÎùºÏä§Íæº Ï†úÏûÑ", -- [1]
					"", -- [2]
				},
				[139403] = {
					"Ïπ®ÎûµÏûê ÏïÑÎùºÏÇ¨Ï¶à", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[76906] = {
					"Í∏∞Í¥ÄÏÇ¨ ÌÜ†Í∞ÄÎ•¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138444] = {
					"Ïû•Íµ∞ Î≤†Ïä§ÌååÎùºÌÅ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[132802] = {
					"Î∞îÏúÑÎøî ÏÑ§Ïù∏", -- [1]
					"", -- [2]
				},
				[139468] = {
					"Ï≤ôÏ∂îÏ†àÎã®Ïûê Ïø†ÏΩò", -- [1]
					"", -- [2]
				},
				[54920] = {
					"Î¨¥ÌïúÏùò ÏñµÏïïÏûê", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[145058] = {
					"Í∑∏ÎäòÍπÉÌÑ∏ ÍπåÎßàÍ∑Ä", -- [1]
					"", -- [2]
				},
				[136841] = {
					"Ï∂îÏïÖÌïú Ïë§Ï§Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[21148] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[140442] = {
					"ÏÇ¨Ìñ•Î™∏ÌÜµ ÏïºÌÅ¨", -- [1]
					"", -- [2]
				},
				[138445] = {
					"Í≥µÏûë Ïä§Ï§Ñ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[71542] = {
					"Ìîº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151754] = {
					"Í≥µÌóà Ïú†Î†π", -- [1]
					"ÏóêÎ©îÎûÑÎìúÏùò Íøà - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140427] = {
					"ÏÇ∞ÏïÖÎ∞úÍµΩ Î¨¥Î¶¨ÏïÑÎπÑ", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[129640] = {
					"ÏúºÎ•¥Î†ÅÍ±∞Î¶¨Îäî Î∂ÄÎëêÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151689] = {
					"ÎèÑÏïΩÍæº Ìï†ÌÄ¥Î∞úÌÜ±", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[34069] = {
					"Í±∞ÎåÄÌïú Ïö©ÏïîÍ±∞Ïù∏", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[135167] = {
					"Í¥ëÏ†ÑÏÇ¨ ÎßùÎ†π", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[138446] = {
					"Ïã¨Ìï¥ÏÜåÌôòÏÇ¨ Ï†§Î¶¨ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137880] = {
					"Î∂ÅÎ∂ÄÏäµÍ≥° ÏàòÌò∏Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[151755] = {
					"Í∑∏ÎäòÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏóêÎ©îÎûÑÎìúÏùò Íøà - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[122986] = {
					"ÏïºÏÉù ÎπÑÎ™ÖÏùµÎ£°", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[28835] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º ÌîºÏ°∞Î¨º", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[139411] = {
					"Ïö∞Í∏ÄÏÜ°Í≥≥Îãà", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139762] = {
					"Ï≤≠ÏÜåÎ∂Ä ÌéòÏù¥Ïä§", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[87411] = {
					"ÏûëÏóÖÏû• ÏàòÌò∏Î≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138447] = {
					"Ïó¨Ï†ÑÏÇ¨ ÏÇ¥ÎùºÎ¶¨ÏïÑ", -- [1]
					"", -- [2]
				},
				[71543] = {
					"ÏûøÎπõÎÑàÏö∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139471] = {
					"Ïú°Ï≤¥ÌååÍ¥¥Ïûê Î∂ÄÍ∞Ñ", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[33988] = {
					"Î∂àÎ©∏Ïùò ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[9545] = {
					"ÌóòÏÉÅÍ∂ÇÏùÄ ÏÜêÎãò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[40765] = {
					"ÏÇ¨Î†πÍ¥Ä Ïö∏ÌÜ°", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[136203] = {
					"Îã§ÎÇòÏä§ Ìä∏Î°§Î≤†Ïù∏", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[25755] = {
					"ÏïÑÌõÑÎÇòÏù¥Ìä∏ Ïö∞Î∞ï", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[155693] = {
					"Í≥†Î∂ÑÍ≥†Î∂ÑÌï¥ÏßÑ Ìà¨ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[114541] = {
					"Ïú†Î†π ÌõÑÏõêÏûê", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139472] = {
					"Î∞îÏúÑÍµ∞Ï£º ÌÇ®Ïáº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[72456] = {
					"ÏùåÌóòÌïú ÏΩúÍ∑∏Îùº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[133660] = {
					"Ìè≠ÌååÎ°úÎ¥á 9000", -- [1]
					"", -- [2]
				},
				[30279] = {
					"ÍπäÏùÄÍµ¥Í±∞ÎØ∏", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[147439] = {
					"Ïã¨Ïû•Î∂Ä ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[150222] = {
					"ÏßÑÏ∞ΩÏò§Î¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[132760] = {
					"ÌèâÏõêÌÉÄÎûÄÌà¥Îùº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[30179] = {
					"Ìô©ÌòºÏùò ÏÇ¨ÎèÑ", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[139473] = {
					"Î∞îÏúÑ Í∏∞Í≥ÑÍ≥µ ÎàÑÏã†", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[131726] = {
					"ÏÇ¨ÎÇòÏö¥ Í±∞ÎÜÄÌîÑ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[76407] = {
					"ÎÑ¨Ï•¥", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[132819] = {
					"ÏÉàÎÅº ÎÖπÏä®Î™®Ìîº", -- [1]
					"", -- [2]
				},
				[145616] = {
					"Ïôï ÎùºÏä§ÌÉÄÏπ∏", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[43658] = {
					"Í¥ëÌè¨Ìïú ÏïÖÏñ¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[28067] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† ÏñëÏ°∞Ïû•Ïù¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[114542] = {
					"Ïú†Î†π ÏûêÏÑ†Í∞Ä", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[45122] = {
					"Íµ≥ÏùÄÏÑúÏïΩ ÎåÄÏû•", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[131727] = {
					"ÍµêÌôúÌïú ÌéúÎ†àÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[45378] = {
					"Ïò§Ïö∞", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[132820] = {
					"ÏÉàÎÅº ÏßÑÌùôÏ£ºÎë•Ïù¥", -- [1]
					"", -- [2]
				},
				[140272] = {
					"Ïà≤ÏÑ±ÌÅºÍ±∏Ïù¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[134795] = {
					"Ïû•ÎßâÏùò ÏùÄÎëîÏûê Í≤å", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[155764] = {
					"Ïû¨Îπ†Î•∏ ÎùºÌÅ¨ÏÉ§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[134794] = {
					"Ïñ¥Îë†Ïû†Î≥µ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[18982] = {
					"Í≤ÄÏùÄ Ïû¨Í∑úÏñ¥", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[135892] = {
					"ÌíÄÎ†§ÎÇú ÏßÄÏò•Î∂àÏ†ïÎ†π", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[73223] = {
					"ÌÖåÎü¨Îã•Ïä§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[33216] = {
					"Í∏∞Í≥ÑÎÖ∏ÏõÄ Ï°∞Ï¢ÖÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[106317] = {
					"Ìè≠Ìíç ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[137940] = {
					"Î≥¥Ïïà ÏÉÅÏñ¥", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[72455] = {
					"Í∞êÎèÖÍ¥Ä ÏΩîÎßàÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[129529] = {
					"Í≤ÄÏùÄÏù¥Îπ® Ïã∏ÏõÄÍæº", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[139476] = {
					"Î∞îÏúÑÏÜçÎ∞ï ÌùâÎ¨º", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135893] = {
					"Î∂àÌÉÄÎäî ÏûøÎ∂àÏàòÌò∏Ïûê", -- [1]
					"", -- [2]
				},
				[71773] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ï†ÑÌà¨Ï£ºÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[75857] = {
					"Î∂àÏïàÏ†ïÌïú ÎßàÍ∑∏Îßà Ï†ïÎ†π", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[134798] = {
					"Ïã¨Ïó∞ ÏóâÍ∏àÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146131] = {
					"Ïû†Î≥µÏûê Î∞îÎ•¥ÌÜ†ÌÅ¨", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135368] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ Ìè¨Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[36907] = {
					"ÏÑ±ÎÇúÌï¥Í≥® Í≥µÏÑ±ÎåÄÏû•Ïû•Ïù¥", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[33716] = {
					"Î£®ÎπÑ Ïö© Î∞∞Ïö∞Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[135894] = {
					"Î∂àÏùò Ï†ïÎ†π", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139396] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ ÏàòÌò∏Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[28836] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º Î£¨ÏÑ∏Í≥µÏÇ¨", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[32908] = {
					"ÏÇ¨Î°úÏû°Ìûå Ïö©Î≥ë ÎåÄÏû•", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[45065] = {
					"ÌÜ®ÎπÑÎ•¥ ÏÉÅÏù∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[122478] = {
					"Í≥µÌóà Ï†êÏï°", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[57280] = {
					"Ìô©ÌòºÏùò Í≥µÏÑ±ÎåÄÏû•", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[123502] = {
					"Îç∞ÎπåÏÇ¨Ïö∞Î£®Ïä§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[135895] = {
					"ÌÉÄÏò§Î•¥Îäî Î∂àÍΩÉ", -- [1]
					"", -- [2]
				},
				[45379] = {
					"Ïò§Ïö∞", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[54693] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÏÜåÏ¥ùÎ≥ë", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[33350] = {
					"ÎØ∏ÎØ∏Î°†", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140339] = {
					"Í≥ÑÍ≥°Ïùò Í≥µÌè¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[16807] = {
					"ÎåÄÌùëÎßàÎ≤ïÏÇ¨ ÎÑ§ÎçîÏø†Î•¥Ïä§", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[138967] = {
					"Ï§Ñ", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[155859] = {
					"ÎπÑÏ¶àÏûêÎùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[76154] = {
					"ÌïòÎäòÌÉë ÍπåÎßàÍ∑Ä Ï†ÑÎ†π", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[132754] = {
					"Ï§ÑÎ¨¥Îä¨ Í≥†ÏõêÎû©ÌÑ∞", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[68476] = {
					"Í≥µÌè¨Îøî", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[146134] = {
					"ÎÇ†ÏåòÎèåÏù¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[42692] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Ìà¨ÏÇ¨", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[72198] = {
					"Í∞ïÌôîÎêú Ìô©ÌèêÌïú Î¨¥Í∏∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138968] = {
					"ÏßÄÏïà Ìã∞ Í∞ïÏ≤†ÏïÑÍ∑Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139480] = {
					"Î∞îÏúÑÏÜçÎ∞ï Î≥¥Ìò∏Ïûê", -- [1]
					"", -- [2]
				},
				[28231] = {
					"ÏàòÏ†ï Îú∞ÏßÄÍ∏∞", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[149144] = {
					"Ï†úÏù¥ÎÇòÏùò ÌååÎèÑ Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139457] = {
					"Î∞îÏúÑÏÜçÎ∞ï Í∏∞Î†å", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[73775] = {
					"ÎåÄÏû•Íµ∞ ÌÅ¨ÎûòÍ∑∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[148631] = {
					"Î∂àÎ∞úÌÉÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139391] = {
					"ÏïîÌùëÌååÎèÑ ÏïîÏÇ¥Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138969] = {
					"ÏßÄÏïà Ìã∞ ÏòÅÌòº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[17959] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà ÎÖ∏ÏòàÍ∞êÎèÖ", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[155767] = {
					"Í∑∏Î£∞ÌÉÄÏ¶à", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[152790] = {
					"ÏßÑÌùô ÎØºÎã¨ÌåΩÏù¥", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[127480] = {
					"ÎèÖÏπ® Í∏∞ÏÉùÏ∂©", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[72828] = {
					"Î∂àÌÉÄÎäî Î∂ÑÎÖ∏Ïùò Î∞úÌÜ±", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[42428] = {
					"ÎèÖÏã§Ìïú Ï∂îÏ¢ÖÏûê", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[18343] = {
					"ÌÉÄÎ∞îÎ°úÌÅ¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[138970] = {
					"Î≥µÏàòÏã¨Ïóê Î∂àÌÉÄÎäî ÏòÅÌòº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[114802] = {
					"Ïú†Î†π Ïû•Ïù∏", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[131578] = {
					"Îñ†ÎèÑÎäî Î∂àÏùò Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[20902] = {
					"ÏÇ¥Í≤åÎ°† ÏßÄÏò•ÏÜåÌôòÏÇ¨", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[139389] = {
					"Í∞ïÏ≤†ÎπÑÎäò Î≥ºÏÉ§ÏãúÏä§", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[54338] = {
					"Í∏∞Î†àÍ∏∞", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[137947] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134364] = {
					"Î∂ÄÏ†ïÌïú Í¥ÄÎ¶¨Ïù∏", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[138971] = {
					"ÏßÄÏïà Ìã∞ ÎèÖÏÇ¨", -- [1]
					"", -- [2]
				},
				[18983] = {
					"Í≤ÄÏùÄÏÜ°Í≥≥Îãà ÌÉÄÎûÄÌà¥Îùº", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[20901] = {
					"ÏÇ¥Í≤åÎ°† Í∂ÅÏàò", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[136684] = {
					"ÏôÄÏùºÎìúÌï¥Î®∏ Î∂àÍΩÉÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[129527] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® Ìï¥Ï†ÅÎã®Ïõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[139398] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ ÏïîÏÇ¥Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[124259] = {
					"Î∞ÄÎ¶º Ìò∏ÎûëÏù¥", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146650] = {
					"ÏµúÏ†ïÏòà ÌååÏàòÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[126832] = {
					"ÌïòÎäòÏÑ†Ïû• ÌÅ¨ÎùºÍ∑∏", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[114803] = {
					"Ïú†Î†π ÎßàÍµ¨Í∞ÑÏßÄÍ∏∞", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[132773] = {
					"ÎèåÏ£ºÎ®π ÏßëÌñâÏûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[148621] = {
					"Ï†úÌÅ¨ÏôÄ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136885] = {
					"Îª£Îª£Í∞àÍ∏∞ Í∞ÄÏãúÎç§Î∂àÏà†ÏÇ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[151680] = {
					"Ï£ºÌôçÏù¥Îπ®", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[146139] = {
					"Í∏àÎπõÍ∞ÄÏãú", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140375] = {
					"Î™®ÎûòÍªçÏßà Î¨¥Î¶¨Î≤åÎ†à", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140266] = {
					"Í≥†ÎåÄÏùò Î∂ÄÏÑúÏßÑÎøî", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[127799] = {
					"Îã§ÏûêÎ•¥ÏïÑÏù¥ Í∑ºÏúÑÎ≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[113012] = {
					"ÏßÄÏò•ÏÑúÏïΩ ÌòºÎèàÎßàÎ≤ïÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[147614] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† ÏõêÏãúÏà†ÏÇ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[28581] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º Ï†ÑÏà†Í∞Ä", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[142313] = {
					"ÏÇ¨Ïõê Î∞©Ïñ¥Î≥ë", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[146140] = {
					"Í∞ÄÏãúÎèÑÏ†Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[73342] = {
					"ÌÉÄÎùΩÌïú ÏõÖÎç©Ïù¥ÏßÄÍ∏∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[102263] = {
					"Ïä§ÏΩîÎ•¥ÌååÏù¥Î°†", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[114804] = {
					"Ïú†Î†π Ï§ÄÎßà", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[135903] = {
					"Ïã¨Ïó∞Ïùò ÌòÑÏã†", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[74366] = {
					"Ï†úÎ†®Ïû•Ïù∏ Í≥†Í∑∏Îçî", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[140428] = {
					"ÌòëÍ≥°ÎèÑÏïΩÏûê", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[28965] = {
					"Ìã∞ÌÉÄÎäÑ Ï≤úÎë•Î≥ë", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[76376] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[16808] = {
					"ÎåÄÏ°±Ïû• Ïπ¥Î•¥Í∞ÄÏä§ Î∏îÎ†àÏù¥ÎìúÌîºÏä§Ìä∏", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[72452] = {
					"Í¥ëÌè¨Ìïú ÏΩîÎ•¥ÌÅ¨Î°† ÎäëÎåÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[55863] = {
					"Í∑∏ÎäòÏßÑ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[113013] = {
					"ÏßÄÏò•ÏÑúÏïΩ Í∑∏Î¶ºÏûêÏπºÎÇ†", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[30278] = {
					"ÏïàÏπ¥ÌïòÎ•¥ Ï£ºÎ¨∏Ïà†ÏÇ¨", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[139415] = {
					"Î±ÄÎπÑÎäò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[133345] = {
					"Í≤ΩÏÜîÌïú Ï°∞Ïàò", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[77182] = {
					"Í¥ëÎ¨ºÎ®πÎ≥¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138464] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í∞ëÌåêÏõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[148619] = {
					"ÏïÑÏø§Îã§Ïùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[59458] = {
					"ÏÉàÎÅº Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[112709] = {
					"ÎåÄÏ†ïÏõê Í≤ΩÎπÑÎ≥ë", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[155810] = {
					"ÏñºÏñ¥Î∂ôÏùÄ Î≥¥Ï¥àÎ≥ë", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[151149] = {
					"ÌïòÌã∞", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[91259] = {
					"ÏßÄÏò• ÏûÑÌîÑ", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[146143] = {
					"ÏπºÍ∞ÄÏãú", -- [1]
					"", -- [2]
				},
				[138465] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ìè¨Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136869] = {
					"Ïö∞ÏõÄÍµø Î≥µÎ≥ë", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[17960] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà ÏòàÏñ∏Ïûê", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[29830] = {
					"ÏÇ¥ÏïÑÏûàÎäî Î™®Ï°∞", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[72492] = {
					"ÏâºÎùº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[132835] = {
					"Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà Î±Ä", -- [1]
					"", -- [2]
				},
				[137442] = {
					"Í≥†ÏúÑÎßàÏà†ÏÇ¨ ÎßàÎûÑÎùº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[123398] = {
					"Í∞ÄÎ°úÏãú ÌååÎ©∏Ïûê", -- [1]
					"ÏïàÌÜ†Îü¨Ïä§ - Î∂àÌÉÄÎäî ÏôïÏ¢å", -- [2]
				},
				[18344] = {
					"Ïó∞Ìï©ÏôïÏûê ÏÉ§ÌååÎ•¥", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[138978] = {
					"Îç©Ïπò ÌùôÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[103758] = {
					"Î≥Ñ Ï†êÏà†Í∞Ä ÏóêÌä∏Î†àÏö∞Ïä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[131812] = {
					"Ïã¨Ïû•ÌååÎ©∏ ÏòÅÌòºÎß§ÌòπÏÇ¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[127497] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í∞êÎèÖÍ¥Ä", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[105299] = {
					"Ïû¨Í∑ÄÏùò Ï†ïÎ†π", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[26918] = {
					"ÌòºÎèàÏùò Í∑†Ïó¥", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[18341] = {
					"Ìå¨ÎçîÎ™®ÎãàÏö∞Ïä§", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[146657] = {
					"Ï†ïÏòà ÌååÏàòÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[138979] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ ÌååÎèÑÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[155871] = {
					"Í≥µÌóàÍ≤∞ÏÜç Í≥µÌè¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[72451] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏïîÌùëÏ£ºÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140263] = {
					"ÏàòÏª∑ Î£¨Î∞úÍµΩ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[132837] = {
					"Ìï¥Î≥ÄÍ±∞Ïù∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139751] = {
					"Îí§Ï≤òÏßÑ Î¥âÏáÑÏûê", -- [1]
					"", -- [2]
				},
				[42695] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä ÌååÏàòÎ≥ë", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[138468] = {
					"ÌùëÏöîÏÑù Î∂àÍΩÉÏÜåÌôòÏÇ¨", -- [1]
					"", -- [2]
				},
				[138980] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[59459] = {
					"ÏÉàÎÅº Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[148194] = {
					"ÏñºÏùå Î∞©Î≤Ω", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[144611] = {
					"ÏÇ∞Ìò∏Îì± Îî∏ÍπçÏù¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[145123] = {
					"ÎßàÏù¥ÏïÑÎùº ÎÇòÏù¥Ìä∏ÏÜ°", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[130644] = {
					"ÏπºÎãàÏïÖÏñ¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[120182] = {
					"Í≥†ÌÜµÎ∞õÎäî Ïó¨ÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[138469] = {
					"ÌùëÏöîÏÑù ÌååÎ©∏ÎπÑÎäò", -- [1]
					"", -- [2]
				},
				[138981] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ Ï†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[155873] = {
					"ÏïîÌùëÏà†ÏÇ¨ ÌååÎ©∏Ïûê", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[100943] = {
					"ÎåÄÏßÄÏùò Î≤Ω ÌÜ†ÌÖú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[148582] = {
					"Ìè≠ÌíçÍ≤∞ÏÜç ÏàòÌò∏Ïûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136934] = {
					"Î¨¥Í∏∞ ÏãúÌóòÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[139858] = {
					"Î≥¥Î£®Ïπ¥Î•¥ ÎèÖÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[136845] = {
					"Î™®ÎûòÎëêÌîº ÎèÑÎÅº Ìà¨Ï≤ôÎ≥ë", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[138470] = {
					"ÌùëÏöîÏÑù ÎπÑÎ£°", -- [1]
					"", -- [2]
				},
				[138982] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ Î©ÄÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[111225] = {
					"ÌòºÎûÄÏà†ÏÇ¨ Î≤®Î†àÎ°†", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[140262] = {
					"Î£¨Î∞úÍµΩ ÏïîÏÇ¨Ïä¥", -- [1]
					"", -- [2]
				},
				[28838] = {
					"Ìã∞ÌÉÄÎäÑ ÏÑ†Î¥âÎåÄÏõê", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[32906] = {
					"ÌîÑÎ†àÏù¥Ïïº", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[45063] = {
					"ÎºàÏ†àÎã®Ï†ÑÍ∞à", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[41096] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ï†ïÏã†ÏπòÏú†ÏÇ¨", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[16809] = {
					"Ï†ÑÏüÅÏù∏ÎèÑÏûê Ïò§ÎØÄÎ°úÍ∑∏", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[138983] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ Î∞îÎã§ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[32933] = {
					"ÏôºÌåî", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[131817] = {
					"Í∞êÏóºÎêú ÎèåÏ©åÍ∑Ä", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[92523] = {
					"Î∞îÏßàÌååÏûêÍ∑∏", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[32517] = {
					"Î°úÌÅ¨ÎÇòÌïòÌÅ¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[73091] = {
					"Î∏îÎûôÌì®Ï¶à Ïö©Î≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[42696] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[138472] = {
					"ÌùëÏöîÏÑù ÎåÄÏû•Î£°", -- [1]
					"", -- [2]
				},
				[72770] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏïîÌùëÏÑ†Í≤¨Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[59460] = {
					"ÏÉàÎÅº Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[131818] = {
					"ÏßïÌëú Ï∞çÌûå ÏûêÎß§", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[111226] = {
					"ÏÜåÌôòÏÇ¨ ÏãúÎ∏å", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[140987] = {
					"ÌÉêÏöïÏùò ÏÇ¥Ï†êÏúµÌï¥Ïûê", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[78978] = {
					"Ïñ¥Îë†ÌååÌé∏ Í∞àÍ∞àÏù¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[39625] = {
					"Ïû•Íµ∞ ÏõÄÎ∏åÎ¶¨Ïä§", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[138473] = {
					"Ïä§Ìã∞ÏßÄÏïÑ", -- [1]
					"", -- [2]
				},
				[138985] = {
					"ÎäôÏùÄ Íµ∂Í∑∏Ïò≥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[17961] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà ÏöîÏà†ÏÇ¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[131819] = {
					"ÏÑúÏïΩÎã® ÏòàÏñ∏Ïûê", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[136297] = {
					"ÏûäÌòÄÏßÑ ÌÜ†Ï∞©ÏòÅÌòº", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[17447] = {
					"Ïã¨Ïû•Î∂Ä ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[148624] = {
					"ÌååÏø†Ïùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[75829] = {
					"ÎÇ†Î¶¨Ïâ¨", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[54320] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138986] = {
					"ÏàòÏÉâÏûê Î≥¥Í∏Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[155738] = {
					"ÏßëÍ≤∞ ÍπÉÎ∞ú", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[26727] = {
					"ÎßàÎ≤ïÏÇ¨ ÏÇ¨ÎÉ•Íæº ÏÉÅÍ∏âÏûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[111227] = {
					"Ìé†ÏúÑÎ≤Ñ ÌååÎùºÎØ∏Ïñ¥", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[71504] = {
					"Í≥µÏÑ±Í∏∞Ïà†Ïûê Î∏îÎûôÌì®Ï¶à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[152033] = {
					"ÎààÏóê ÎùÑÏßÄ ÏïäÎäî ÏãùÎ¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[128631] = {
					"Ìï¥Ïùº Îî∏ÍπçÏÜåÎùºÍ≤å", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[112251] = {
					"ÎπÑÏ†Ñ ÏàòÏï°Í¥¥Î¨º", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[75652] = {
					"Í≥µÌóàÏùò ÌîºÏ°∞Î¨º", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[134629] = {
					"ÎπÑÎäò ÌÅ¨Î°§Îü¨Ïä§ÌÅ¨ Í∏∞Ïàò", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[131821] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ïó¨Ïù∏", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[114284] = {
					"ÏóòÌîºÎùº", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[134139] = {
					"ÏÇ¨Ïõê Í∏∞ÏÇ¨Îã®Ïõê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[136801] = {
					"Ï∏°ÎüâÏÇ¨ Íº¨ÏßàÏÜåÍ∏à", -- [1]
					"", -- [2]
				},
				[150249] = {
					"Í∏∞Í≥ÑÎ®∏Î¶¨ Ïã∏ÏõÄÍæº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[73349] = {
					"Í≥†ÌÜµÎ∞õÎäî ÏàòÎ†®ÏÉù", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[77700] = {
					"Ïñ¥Îë†Îã¨ ÎèÑÍµ¥Íæº", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[59461] = {
					"ÏÉàÎÅº Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[135322] = {
					"Ìô©Í∏à ÎÇ†Î±Ä", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[54318] = {
					"ÏïÑÎ°±Ïù¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[77687] = {
					"Í∑∏Î°¨Ïπ¥Î•¥ Î¨¥Ïû•Î≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[21346] = {
					"Î≥¥Ïù¥ÏßÄ ÏïäÎäî Îàà", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[39626] = {
					"ÏßÑÌôçÏÇ¥Ïù¥ Ïû•Íµ∞", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[138477] = {
					"Í∞àÌÄ¥ÏàòÌò∏Î≥ë Î∏åÎ¶¨ÌÇ§Ïä§", -- [1]
					"", -- [2]
				},
				[138989] = {
					"Ïß≠Ïß§ÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[131311] = {
					"Î∞©Ï∂úÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"", -- [2]
				},
				[131823] = {
					"ÏûêÎß§ ÎßêÎùºÎîî", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[145399] = {
					"ÏïºÏÉù Î≥ÑÎπÑÎ™ÖÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139354] = {
					"ÎºàÏ†àÎã®Ïûê Î∂ÄÌà∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145644] = {
					"Î∏åÏõêÏÇºÎîî", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[150251] = {
					"Í∏∞Í≥ÑÎ®∏Î¶¨ Ï†ïÎπÑÍ≥µ", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[28583] = {
					"Í∏∞Ìè¨ÎÇòÎäî Î∂ÑÎÖ∏Ïùò Ï¶ùÍ∏∞", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[45001] = {
					"ÏÇ¨Î°úÏû°Ìûå Î¨¥Î≤ïÏûê", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[132745] = {
					"ÏÑúÎ¶¨ÎØ∏Îäò Î∞©ÎûëÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131824] = {
					"ÏûêÎß§ ÏÜîÎ†àÎÇò", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[148716] = {
					"ÎêòÏÇ¥ÏïÑÎÇú ÏòÅÌòº", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[148625] = {
					"ÌÅ¨ÎùºÍ∑∏ÏôÄÏùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[145645] = {
					"7Íµ∞Îã® Ìï¥Î≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[154347] = {
					"Í≥µÌóàÏóê Î¨ºÎì† ÌÉÄÎùΩÎπÑÎ£°", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[138479] = {
					"ÌùëÏöîÏÑù ÎåÄÍµ∞Ï£º", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138991] = {
					"Í≤îÍ≤îÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138841] = {
					"ÏûêÎùºÌã∞ÌÅ¨ Ï†ÑÌà¨ÏÜåÎ¶¨Íæº", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[131825] = {
					"ÏûêÎß§ Î∏åÎùºÏù¥Ïñ¥", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[74579] = {
					"ÎÖπÏïÑÎÇ¥Î¶∞ Ï†ïÎ†π", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[132849] = {
					"ÏÉàÎÅº ÌöåÏÉâÌÑ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[133361] = {
					"Ïì∏Î™®ÏóÜÎäî ÏãúÏ¢Ö", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[150253] = {
					"Î¨¥Ïû•Ìïú Í±∞ÎØ∏Ï†ÑÏ∞®", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[41095] = {
					"Ìô©ÌòºÏùò ÎπÑÎ£°", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[130937] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[45062] = {
					"Íµ≥ÏùÄÏÑúÏïΩ Ï†ÑÍ∞à ÏÇ¨Ïú°ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[138300] = {
					"Ï∂ïÎ≥µÎ∞õÏùÄ ÍπÉÎ∞ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134115] = {
					"Ï†úÎ¨ºÏö© ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[122450] = {
					"Í∞ÄÎ°úÏãú ÏÑ∏Í≥ÑÌååÍ¥¥Ïûê", -- [1]
					"ÏïàÌÜ†Îü¨Ïä§ - Î∂àÌÉÄÎäî ÏôïÏ¢å", -- [2]
				},
				[89] = {
					"ÏßÄÏò•Î∂àÏ†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[120188] = {
					"Ïö∏Î∂ÄÏßñÎäî ÏòÅÌòº", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[138993] = {
					"Í±∏ÎùΩ", -- [1]
					"", -- [2]
				},
				[134898] = {
					"ÎßπÎèÖÏÜ°Í≥≥Îãà Í∑∏ÎäòÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[17962] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Í≥µÎ™®Ïûê", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[135258] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÏûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[88708] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[30277] = {
					"ÏïàÏπ¥ÌïòÎ•¥ Í∞àÌÄ¥Í±∞ÎØ∏", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[137458] = {
					"Ïç©Ïñ¥Í∞ÄÎäî Ìè¨Ïûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[136793] = {
					"ÏùòÌöå ÏàòÏäµÏÉù", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[57159] = {
					"ÎåÄÏßÄ Î≥ëÏÇ¨", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[134899] = {
					"ÎßπÎèÖÏÜ°Í≥≥Îãà Î∞∞ÌöåÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[32845] = {
					"Ìò∏ÎîîÎ•¥", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[26728] = {
					"ÎßàÎ≤ïÏÇ¨ ÏÇ¨ÎÉ•Íæº ÏàòÏäµÏÉù", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[26792] = {
					"ÏàòÏ†ï ÏàòÌò∏Ï†ïÎ†π", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[76102] = {
					"Í≥µÍ∏∞ Ï†ÑÎ†π", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[145649] = {
					"ÎπÑÌñâÏÑ† ÎåÄÏõê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[139345] = {
					"Ï£ΩÏùåÏ†ÑÎ†π Ïø®Î£®", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[112255] = {
					"Ïä¨Îü¨ÏßÄÎùΩÏä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[138995] = {
					"Ïî®ÏïóÏßÄÍ∏∞ Ïö¥Í∞Ñ", -- [1]
					"", -- [2]
				},
				[122413] = {
					"Ïñ¥Îë†ÏàòÌò∏Î≥ë Í∑†Ïó¥Ï∂îÏ†ÅÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[135924] = {
					"ÌÉÄÏò§Î•¥Îäî Í≤©ÎÖ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152816] = {
					"Ìè≠ÌíçÏÜåÌôòÏàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[136836] = {
					"ÏïîÌùëÌååÍ¥¥Ïûê Ïö∞Î•¥Ï§ÑÎùº", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[43438] = {
					"ÏΩîÎ≥¥Î£®Ïä§", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[19306] = {
					"ÎßàÎÇò Í±∞Î®∏Î¶¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[134389] = {
					"ÎßπÎèÖ Î±Ä", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[138996] = {
					"ÎåÄÏßÄÏòàÏñ∏Ïûê Ï£ºÏôÄ", -- [1]
					"", -- [2]
				},
				[131318] = {
					"Ïû•Î°ú Î¶¨ÏïÖÏÇ¨", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[135925] = {
					"ÌôîÏóºÎ∂àÍΩÉ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[66187] = {
					"ÏÇ¥Ïæ°Ïù¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[33717] = {
					"ÌïòÎäòÎπõ Ïö© Î∞∞Ïö∞Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139341] = {
					"ÏñºÏùåÏóÑÎãà ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[43014] = {
					"ÏûÑÌîÑ", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[56136] = {
					"ÏñºÏñ¥Î∂ôÏùÄ ÏÜçÎ∞ïÏùò ÏàòÏ†ï", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[138997] = {
					"Í¥ëÍ∏∞Ïùò Í∑∏Î•¥Î†ÅÏ±ÑÏ∞ç", -- [1]
					"", -- [2]
				},
				[29637] = {
					"ÏïΩÏÇ≠Îπ†Î•∏ Î±Ä", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[135926] = {
					"Ïù¥Í∏ÄÏã¨Ïû•", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[40268] = {
					"Ìô©ÌòºÏùò Ï†ÑÏüÅÎßàÎ≤ïÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[132855] = {
					"Í∞ïÏ≤†Í∑∏Î¨º ÎïÖÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[133627] = {
					"ÌÉ§Î¶¨ ÏûΩÎÇ¥Î≤Ñ", -- [1]
					"", -- [2]
				},
				[73098] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∞êÏãúÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[28584] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ ÌôîÏóºÌè≠Ìíç", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[134903] = {
					"Ìù°Ìòà Í≥µÌè¨ Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[138823] = {
					"ÌïèÎπõÍ∞ÅÏÑ± Í∏∏Ïû°Ïù¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[45259] = {
					"ÏãúÏïÑÎßàÌä∏Ïùò ÌïòÏàòÏù∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[122410] = {
					"ÌïòÎäòÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[20906] = {
					"ÏúÑÏÉÅ ÏÇ¨ÎÉ•Íæº", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[91270] = {
					"Í≥µÌè¨Ïùò ÏßÄÏò•Î∂àÏ†ïÎ†π", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[120191] = {
					"ÏòÅÏõêÏùò ÏòÅÌòºÍ≤ΩÎπÑÎ≥ë", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[138487] = {
					"ÌùëÏöîÏÑù ÎÇ†Í∞ú Î∂ÑÎ¶¨Î≥ë", -- [1]
					"", -- [2]
				},
				[138999] = {
					"ÎäôÏùÄ Ïò§Î•¥Îèå", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[72191] = {
					"ÎåÄÍµ∞Ï£º Î£¨ÌÉÅ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[42188] = {
					"Ïò§Ï¶àÎ£©", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[76097] = {
					"ÌÉúÏñëÏùò Ï∞ΩÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[88967] = {
					"ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[129828] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò Îî∏ÍπçÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146492] = {
					"Î∂ÑÎÖ∏Ïùò Ïú†Î†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[150773] = {
					"Î≤àÎìùÍªçÏßà Î≥µÏñ¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139000] = {
					"ÎäôÏùÄ Ïú†Î•¥", -- [1]
					"", -- [2]
				},
				[59464] = {
					"Íπ°Ï∂©Ïù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[135929] = {
					"ÌôîÏóºÎÇ®Ïûë Î∏îÎ†àÏù¥Ï¶àÌï†Î°úÏö∞", -- [1]
					"", -- [2]
				},
				[17952] = {
					"Í≤ÄÏùÄÎ¨º ÏïÖÏñ¥", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[57382] = {
					"Í≤ÄÏùÄ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[55334] = {
					"Ï≤†ÌèêÏùò Í≥µÌóà", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[129119] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ Í∏∞ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[17835] = {
					"Î¨¥ÌïúÏùò ÏïîÏÇ¥Ïûê", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[139001] = {
					"Î∞îÎûåÏùò ÎïÖ Ïö∞Î•¥ÏÇ¨", -- [1]
					"", -- [2]
				},
				[17963] = {
					"Í±∞ÏπúÌô©Ïïº ÎÖ∏Ïòà", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[135930] = {
					"ÎùºÎ∞îÎ°úÌÅ¨", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[40269] = {
					"ÏÇ¨Î°úÏû°Ìûå Ï≤úÎë• Ï†ïÎ†π", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[138428] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135647] = {
					"Ïù¥Ìà¨ÏïÑÌÇ§", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129826] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò Ï†àÎã®Î∞úÌÜ±", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[143011] = {
					"Î™®ÎûòÌà¨ÏÑ±Ïù¥ Í∞êÏãúÎåÄ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[126847] = {
					"ÏÑ†Ïû• ÎùºÏö∏", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[130338] = {
					"Î®ºÏßÄÏÜ°Í≥≥Îãà", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[26729] = {
					"Ï≤≠ÏßÄÍ∏∞", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[26793] = {
					"ÏàòÏ†ï ÍªçÏßàÎç©Íµ¥ÏÜê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[153335] = {
					"Ïã†ÎπÑÌïú Ï†ÑÍ∏∞Î∂àÍΩÉ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[145976] = {
					"ÏàòÏª∑ ÎèåÍªçÏßà ÏàúÎ°ù", -- [1]
					"", -- [2]
				},
				[155814] = {
					"ÏúºÏä§Ïä§Ìïú ÏàòÏäµÎ≥ë", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[33453] = {
					"ÏïîÌùëÎ£¨ ÏàúÏ∞∞ÎåÄÏõê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139003] = {
					"Î∞îÎûåÏùò ÎïÖ Ï†ÑÏÇ¨", -- [1]
					"", -- [2]
				},
				[152538] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[152312] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ ÎßàÎÖÄ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[121473] = {
					"ÏïïÏ†úÏûê ÎãâÏÇ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[144948] = {
					"Í∞ÄÏ£ΩÎÇ†Í∞ú ÏÇ¨ÎÉ•Íæº", -- [1]
					"", -- [2]
				},
				[112678] = {
					"ÏÉ¨ÎèÑÎ†àÏù¥ Î∞ïÎ¨ºÌïôÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[19307] = {
					"Í≥µÌè¨Ïùò Í≤∞Ï†ïÏ≤¥", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[142587] = {
					"ÌÉêÏöïÏä§Îü¨Ïö¥ Íµ¨ÎçîÍ∏∞", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[126848] = {
					"ÏÑ†Ïû• Ïú†ÎèÑÎùº", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[130333] = {
					"ÎèåÏû•Í∞ë Î∞îÏã§Î¶¨Ïä§ÌÅ¨", -- [1]
					"", -- [2]
				},
				[152313] = {
					"Í≥µÌè¨Îò¨Î¶¨ Í¥¥Ïàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[71993] = {
					"ÏÑúÎü¨ÏõÄÏùò ÌîºÏ°∞Î¨º", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139002] = {
					"Î∞îÎûåÏùò ÎïÖ ÌÜ†ÌÖúÏà†ÏÇ¨", -- [1]
					"", -- [2]
				},
				[71479] = {
					"Ìóà ÏÜåÌîÑÌä∏Ìíã", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[120194] = {
					"Ïú†Î†π ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[138493] = {
					"Ï§ÑÏùò ÏàòÌïò", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139005] = {
					"Î∞îÎûåÏùò ÎïÖ Ï∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[71482] = {
					"Íµ¨Ï≤¥ÌôîÎêú ÏÑúÎü¨ÏõÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[117123] = {
					"Î¨ºÍ≤∞ÎπÑÎäò Ïö©ÏÇ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[40270] = {
					"Ìô©ÌòºÏùò Ï≤úÎë•Ïà†ÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[71476] = {
					"Íµ¨Ï≤¥ÌôîÎêú Í≥†ÌÜµ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[141565] = {
					"Ïø® Ìã∞ÎûÄ Î≥¥Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[147495] = {
					"ÎùºÏä§ÌÉÄÎ¶¨ ÏßëÌñâÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[28585] = {
					"ÌôîÏÇ∞Î∞îÏúÑ", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[139006] = {
					"Î∞îÎûåÏùò ÎïÖ ÌéÑÎ≥ºÍ∑∏", -- [1]
					"", -- [2]
				},
				[69943] = {
					"Ìè≠ÌíçÍ≥º", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[41166] = {
					"Ïã¨Ïû•Î∂Ä ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[140542] = {
					"ÌôîÏóºÍ∑∏Î¨º Í±∞ÎØ∏", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[132864] = {
					"Ïñ¥Î¶∞ Ï£ºÎ®πÏøµ", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[141566] = {
					"ÎºàÏÉàÍπÄ ÎèÑÏÇ¥Ïûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140338] = {
					"Íµ∞Ïßë Í≤ΩÎπÑÎ≥ë ÏßÑÏπºÎ°ú", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[37711] = {
					"Íµ∂Ï£ºÎ¶∞ Íµ¨Ïö∏", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139007] = {
					"ÏïºÏÉù Ï∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[155899] = {
					"ÏÇ¨ÌÅ¨Ïûê", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[108934] = {
					"Ïò§ÏóºÎêú Ìîº", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[71734] = {
					"ÍµêÎßåÏùò ÏÉ§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[9554] = {
					"ÏÜåÎûÄÏä§Îü¨Ïö¥ ÏÜêÎãò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[33823] = {
					"Ìô©ÌòºÏùò ÌïôÏÇ¥Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139008] = {
					"ÏõêÏãú Í≥∞", -- [1]
					"", -- [2]
				},
				[138496] = {
					"Ìô©ÌòºÏùò ÎìúÎùºÏΩîÎÇòÎ•¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134913] = {
					"ÏÉàÎÅº Îì§Ï∞Ω Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[155900] = {
					"ÏûòÎ¶¨Ïä§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[43214] = {
					"ÎèåÍ±∞Ï£Ω", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[134691] = {
					"Ï†ïÏ†ÑÍ∏∞ Ï∂©Ï†ÑÎêú Í¥ëÏã†Ïûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[138990] = {
					"ÎààÎ®º Ïö∞Î•¥Í∏Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137473] = {
					"Í≤ΩÎπÑÎåÄÏû• ÏïÑÌà¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139227] = {
					"Í∞ÑÏàò Ïö¥Îã§Î¶¨Ïö∞Ïä§", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138497] = {
					"Ìô©ÌòºÏùò ÎπÑÎäòÏã†ÎèÑ", -- [1]
					"", -- [2]
				},
				[134914] = {
					"Îì§Ï∞Ω Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[17964] = {
					"Í±∞ÏπúÌô©Ïïº ÏùºÍæº", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[139400] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Í∞ïÎ¨ºÏÜåÌôòÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[80526] = {
					"ÏôÑÍ∞ïÌïú Í∞ïÏ≤†Î∞úÍµΩ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[80782] = {
					"ÏñºÏùåÎì±Îºà ÏêêÍ∏∞ ÏπºÎÇ†Î∞úÌÜ±", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[137474] = {
					"Ïôï Ìã∞ÎßêÏßÄ", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[73104] = {
					"Î∂àÏïàÏ†ïÌïú Î∂àÍΩÉ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138498] = {
					"Ìô©ÌòºÏùò ÎπÑÎ£°", -- [1]
					"", -- [2]
				},
				[139010] = {
					"ÏÇ¨ÎÇòÏö¥ Îæ∞Ï°±Î∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[145064] = {
					"ÌôîÏóº Í∞àÍ∏∞", -- [1]
					"", -- [2]
				},
				[26730] = {
					"ÎßàÎ≤ïÏÇ¨ ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[26794] = {
					"Ï†ïÏõêÏÇ¨ Ïò§Î•¥Î™®Î°úÌÅ¨", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[141058] = {
					"ÌååÎèÑ Íµ∞Ï£º Ïä§Ï£ºÎãàÏä§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[119941] = {
					"ÏòÅÌòº ÏûîÎ•òÎ¨º", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[37584] = {
					"ÌÉÄÎùΩÌïú Ïö©ÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[37712] = {
					"Ï£ΩÏùåÏÜçÏÇ≠ÏûÑ ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139011] = {
					"ÏïºÏÉù Î≥¥Ìò∏Ïûê", -- [1]
					"", -- [2]
				},
				[113512] = {
					"ÎπÑÏ†Ñ ÏàòÏï°Í¥¥Î¨º", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[93068] = {
					"Ï§ÑÌò∏ÎùΩ", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[101002] = {
					"ÌÅ¨Î°úÏÑúÏä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[136964] = {
					"ÎÜíÏùÄ Í∞êÏãúÎåÄ ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[72849] = {
					"ÏÑ§ÏõêÎ∞©ÎûëÏûê ÎùºÏùºÎùºÌÅ¨", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[146178] = {
					"ÌïòÎäòÍ∞ÄÏãú", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138500] = {
					"Ìô©ÌòºÏùò ÎπÑÎäòÏûêÎß§", -- [1]
					"", -- [2]
				},
				[147202] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî ÏïÑÏ†úÎùºÏù¥Ìä∏ ÌååÌé∏", -- [1]
					"", -- [2]
				},
				[135716] = {
					"Ìè¨ÏãùÏûê Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[155161] = {
					"ÏÉ®ÎìúÎ¶¨Ïä§ ÌéòÎçîÎ¨∏", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[152833] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ Í±∞Ïù∏", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû•", -- [2]
				},
				[26693] = {
					"ÌïôÏÇ¥Ïûê Ïä§Ïπ¥Îîî", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[73724] = {
					"Ï≠à Ïù∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[137989] = {
					"Î∂àÎ≥ÄÏùò Ïï°Ï≤¥", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[138501] = {
					"Ìô©ÌòºÏùò ÏÉàÎÅºÏö©", -- [1]
					"", -- [2]
				},
				[139013] = {
					"Í¥ëÏ†ÅÏù∏ Îã¨ÎπõÏïºÏàò", -- [1]
					"", -- [2]
				},
				[44932] = {
					"Íµ≥ÏùÄÏÑúÏïΩ Í∏∏Ïû°Ïù¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[131847] = {
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ ÎÇúÎ¥âÍæº", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[40272] = {
					"ÏÉÅÍ∏â Î∞îÏúÑÌååÍ¥¥Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[152834] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ ÎïÖÍ±∞ÎØ∏", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû•", -- [2]
				},
				[137478] = {
					"Ïó¨Ïôï ÏôÄÏãú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[130436] = {
					"ÎπÑÎ≤à ÎÖ∏ÎèôÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[28586] = {
					"Ïû•Íµ∞ ÎπÑÏïºÎ•∏Í∑∏Î¶º", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[139014] = {
					"ÏïºÏÉùÏùò Îã¨ÏàòÏÉâÏûê", -- [1]
					"", -- [2]
				},
				[41040] = {
					"Îí§ÌãÄÎ¶∞ ÌôòÏòÅ", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[140038] = {
					"Ïã¨Ïó∞ Ïû•Ïñ¥", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[152835] = {
					"Í≤∞Ï†ïÌôîÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû•", -- [2]
				},
				[129553] = {
					"Í≥µÎ£°Ïà†ÏÇ¨ ÌÇ§Ïâ¨Ïò§", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[133384] = {
					"Î©îÎ†àÌÅ¨ÌÉÄ", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[150276] = {
					"Ï§ëÌòï Í≥†Ï≤†Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[37713] = {
					"Ï£ΩÏùåÏÜçÏÇ≠ÏûÑ Í≥†Î¨∏Í¥Ä", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139015] = {
					"ÏïºÏÉù Îã¨ÎπõÏïºÏàò", -- [1]
					"", -- [2]
				},
				[151812] = {
					"ÌÉêÏßÄÎ°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[131849] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ Î™ÖÏÇ¨Ïàò", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[152836] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ ÌÜ±ÎãàÎ≤åÎ†à", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû•", -- [2]
				},
				[155354] = {
					"ÏïÑÏ¶àÏÉ§ÎùºÏùò Î∂àÍµ¥Ïùò Î≥ëÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[135935] = {
					"Íµ∞Ï£º ÎßàÍ∑∏ÎßàÎ•¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[130437] = {
					"Í¥ëÏÇ∞ Ï•ê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138504] = {
					"Ïû•Íµ∞ Îã§Ïπ¥Î¶¨Ïò®", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[71715] = {
					"Ïò§Í∑∏Î¶¨Îßà Ïã†Î¥âÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[135642] = {
					"ÏÉàÎÅº Ìô©ÌòºÍ±∞Ï£Ω Ìò∏ÎûëÏù¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[131850] = {
					"Í¥ëÍ∏∞Ïùò ÏÉùÏ°¥Ï£ºÏùòÏûê", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[135130] = {
					"Í≥µÏÑ± ÌÉë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[17991] = {
					"Îî±Îî±Ïù¥ Î°úÌÅ¨ÎßàÎ•¥", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[20886] = {
					"Í≤©ÎÖ∏Ïùò Ï†êÏà†ÏÇ¨ ÏÜåÏΩîÎìúÎùºÌÖåÏä§", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[155162] = {
					"Î°úÎ•¥ÌÖåÎßàÎ•¥ ÌÖåÎ°†", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[138505] = {
					"ÏßÑÌôîÌïú Î¨¥Î¶¨Í∞êÎèÖÍ¥Ä", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[150712] = {
					"Ìä∏Î¶≠Ïãú ÌÖåÏù¥Ï†Ä", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139529] = {
					"Î¨¥ÌÅ¥ÎùºÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136665] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í¥ÄÏ∏°Î≥ë", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[40273] = {
					"ÏÉÅÍ∏â Î¨ºÏ±ÑÏ∞ç Ï†ïÎ†π", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[56781] = {
					"Í≥†Î¶¨Ïò§ÎÇò", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[49999] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[44752] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ìù°ÏûÖÏà†ÏÇ¨", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[138506] = {
					"ÏßÑÌôçÎπÑÎäò", -- [1]
					"", -- [2]
				},
				[139018] = {
					"Ïû†Îì† ÏÇ∞", -- [1]
					"", -- [2]
				},
				[139530] = {
					"ÎåÄÏßÄÏÑ∏Í≥µ Í≥µÏÑ±ÌååÍ¥¥Ïûê", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[26731] = {
					"ÎåÄÌïôÏûê ÌÖîÎ†àÏä§Ìä∏Îùº", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[138507] = {
					"Ï†ÑÏüÅÍµ∞Ï£º Ïö∏Ìä∏Î¶¨Ïä§", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[127879] = {
					"Ï§ÑÏùò Î∞©Ìå®Î≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[73723] = {
					"Ï§ÄÏõ®Ïù¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[120201] = {
					"Ïú†Î†π ÏàòÌò∏Ïûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[31146] = {
					"Í≥µÍ≤©ÎåÄÏõêÏùò ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[75820] = {
					"Î≥µÏàòÏã¨Ïóê Î∂àÌÉÄÎäî Ïö©Ïïî Ï†ïÎ†π", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[139809] = {
					"Ìà¨ÏûêÌöåÏÇ¨ Ïù∏Ïàò Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[133593] = {
					"Ï†ÑÎ¨∏ Í∏∞Ïà†Î≥ë", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[137246] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ Í≥µÏÑ± Ï†ÑÏ∞®", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[132877] = {
					"Ï∂ïÏ∂ïÎπÑÎäò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137484] = {
					"Ïôï ÏïÑÏïÑÏø®", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[146186] = {
					"Î∂àÍ∏∏Ïùò Ï†ÑÌà¨Î≤å", -- [1]
					"", -- [2]
				},
				[138508] = {
					"Î∂àÍµ¥Ïùò ÏÜåÏö©ÎèåÏù¥", -- [1]
					"", -- [2]
				},
				[139020] = {
					"ÎÇúÌè≠Ìïú ÏúºÎ•¥Î†ÅÏã¨Ïó∞", -- [1]
					"", -- [2]
				},
				[138314] = {
					"Ìå®ÏπòÏä§", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[129517] = {
					"ÎêòÏÇ¥ÏïÑÎÇú Îû©ÌÑ∞", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[131545] = {
					"Î∂ÄÏù∏ Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[140300] = {
					"ÌååÏáÑÏ∞¢Í∞ú", -- [1]
					"", -- [2]
				},
				[137485] = {
					"ÌòàÏÑúÏïΩ ÏöîÏõê", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[146187] = {
					"Î∂àÍ∏∏Ïùò ÌÜµÏÜîÏûê", -- [1]
					"", -- [2]
				},
				[138509] = {
					"Ïó≠Ïà†ÏÇ¨ Ïö∏Î£®Îùº", -- [1]
					"", -- [2]
				},
				[39890] = {
					"Ìô©ÌòºÏùò ÎåÄÏßÄÏ∞ΩÏ°∞Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[33670] = {
					"Í≥µÏ§ë ÏßÄÌúòÍ∏∞", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[130575] = {
					"Îñ†ÎèÑÎäî ÏπºÎ∂ÄÎ¶¨", -- [1]
					"", -- [2]
				},
				[145030] = {
					"Î∂ÅÍ∑π Î∞ÄÎ†µÏó¨Ïö∞", -- [1]
					"", -- [2]
				},
				[132879] = {
					"ÏàòÏ†ï Í±∞Ïù∏", -- [1]
					"", -- [2]
				},
				[137486] = {
					"Ïó¨Ïôï ÌååÌãÄÎùºÏïÑ", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[146188] = {
					"Î∂àÍ∏∏Ïùò ÌÜµÏÜîÏûê", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[28587] = {
					"Î≥ºÏπ∏", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[139022] = {
					"–®–∏–ø–æ—à–∫—É—Ä –ó–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129032] = {
					"Îí§Ï≤òÏßÑ ÏÑ†Ïõê", -- [1]
					"", -- [2]
				},
				[104534] = {
					"Í≤∞Î∞ïÏùò ÎìúÏ°∞Î¶¨ÌÅ¨Ïä§", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[20909] = {
					"ÏÑ§ÌçºÎ°† Ïö©ÏïîÌà¨Ï≤ôÎ≥ë", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[33236] = {
					"Í∞ïÏ≤†Î°ú Î≤ºÎ†§ÎÇ∏ ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[137487] = {
					"Ìï¥Í≥® ÏÇ¨ÎÉ• Îû©ÌÑ∞", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[37587] = {
					"ÌÉÄÎùΩÌïú Ïö©ÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[128649] = {
					"ÌïòÏÇ¨Í¥Ä Î≤†Ïù∏Î∏åÎ¶øÏßÄ", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139023] = {
					"ÏïºÏÉùÏùò ÌîºÏïÑÍ∑Ä", -- [1]
					"", -- [2]
				},
				[72485] = {
					"Í≥†Îßà", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[150254] = {
					"Í≥†Ï≤†ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[140559] = {
					"ÌôîÏÇ∞Í∞ú", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136976] = {
					"Ìä∏ÏûòÎùº", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[144952] = {
					"Í≥†Î¶¨ÏÜ°Í≥≥Îãà", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[94239] = {
					"Ïò¥ÎÑàÏä§", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[138512] = {
					"ÌÜ†Î¶¨ÏãúÏò§ÎÇò", -- [1]
					"", -- [2]
				},
				[127111] = {
					"Î¨¥Ïá†ÌååÎèÑ ÎÖ∏Íæº", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[139536] = {
					"ÏûêÎùºÌã∞ÌÅ¨ ÏùºÍæº", -- [1]
					"", -- [2]
				},
				[131858] = {
					"Í∞ÄÏãúÎ∞©Ïñ¥Î≥ë", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[140560] = {
					"Î∂àÍΩÉÏ∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[29931] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏΩîÎøîÏÜå", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[133079] = {
					"Îâ¥Ïä§ÌÖåÎìú ÎÜçÏû• ÏùºÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[33819] = {
					"Ìô©ÌòºÏùò ÏÑúÎ¶¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138513] = {
					"Î∞îÏù¥ÎûÄÌã∞Ïò®", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139025] = {
					"Îã¨ÎπõÎÖ∏Îûò", -- [1]
					"", -- [2]
				},
				[155917] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ Ìè≠ÌíçÏÜåÌôòÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140561] = {
					"ÏÉàÎÅº Ïú†Ìô©Í≤¨", -- [1]
					"", -- [2]
				},
				[80534] = {
					"Í≥†Ïßë ÏÑº Í∞ïÏ≤†Î∞úÍµΩ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[139012] = {
					"ÏïºÏÉù ÏàòÌò∏Ïûê", -- [1]
					"", -- [2]
				},
				[138511] = {
					"Ï≤≠Í∏àÎπÑÎäò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[134793] = {
					"Î∞òÏßùÍ∞ÄÏãú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[138514] = {
					"ÏïÑÌã∞Ïò§ÎÇò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139026] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139538] = {
					"Î≤ΩÌååÍ¥¥Ïûê ÌïòÎπÑÌÅ¨", -- [1]
					"", -- [2]
				},
				[138510] = {
					"Ìô©ÌòºÏùò ÌååÎ©∏ÏÜåÌôòÏÇ¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140562] = {
					"Ïú†Ìô© ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"", -- [2]
				},
				[57807] = {
					"Ìô©ÌòºÏùò ÏÑúÎ¶¨ Í∏∞ÏõêÏÇ¨", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[2630] = {
					"ÏÜçÎ∞ïÏùò ÌÜ†ÌÖú", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[37588] = {
					"ÌÉÄÎùΩÌïú Ïö©ÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[138515] = {
					"ÏóîÎã¨Î¶¨Ïò®", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[134932] = {
					"Ïç©ÏùÄÍ∑∏Î¨º Î¨¥Î¶¨Ïó¨Ïôï", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[155919] = {
					"Ìè≠ÌíçÏÜåÌôòÏàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[34085] = {
					"Ïö©Í¥ëÎ°ú ÌîºÏ°∞Î¨º", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140563] = {
					"Ïú†Ìô© Ï∂îÏ†ÅÏûê", -- [1]
					"", -- [2]
				},
				[132885] = {
					"Î∞îÎûåÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[126092] = {
					"Î±ÄÍ∞àÌÄ¥ Í≤ÄÌà¨ÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[155277] = {
					"Î∂ÑÏáÑÏûê Í≥†Î•¥Ï†úÏâ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[114319] = {
					"Ïó¨Íµ∞Ï£º ÏºÄÏù¥Îùº Î≤†Î¶¨Î≤Ö", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[147218] = {
					"Ìô©Í∏à ÏòÅÌòº", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[155920] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ ÎèåÌíçÏπºÎÇ†", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[146185] = {
					"Î∂àÍ∏∏Ïùò ÏùºÎ≤å", -- [1]
					"", -- [2]
				},
				[140564] = {
					"Ïú†Ìô© Ïö©ÏïîÏïÑÍ∑Ä", -- [1]
					"", -- [2]
				},
				[130435] = {
					"Îù®Îù®Ìïú Î∂àÎüâÎ∞∞", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[119950] = {
					"Ïú†Ìô© ÏßÄÏò•Î∂àÏ†ïÎ†π", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[114671] = {
					"Ï°∞Í∞ÅÎÇú ÏãúÍ∞Ñ ÏûÖÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[128652] = {
					"ÎπÑÌÅ¨Í≥†Ïä§", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[39892] = {
					"ÏÇ¨Î°úÏû°Ìûå ÌÉÄÏò§Î•¥Îäî Î∂àÏî®", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[3527] = {
					"ÏπòÏú†Ïùò ÌÜ†ÌÖú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[135958] = {
					"Í≥µÏûëÏÑù", -- [1]
					"", -- [2]
				},
				[136470] = {
					"ÏõêÍ∏∞ ÌöåÎ≥µ ÏùåÏãù ÏÉÅÏù∏", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[132887] = {
					"ÏÉàÎÅº Ï£ΩÏùåÏπ®", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[126093] = {
					"Î±ÄÍ∞àÌÄ¥ ÏÇ¨Ïö∞Î°ù", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[122605] = {
					"ÏÑùÌôîÎêú ÎåÄÏÉÅ", -- [1]
					"", -- [2]
				},
				[134423] = {
					"Ïã¨Ïó∞ ÏÑúÏãùÏûê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[134935] = {
					"Ïñ¥ÎØ∏ ÎπÑÏâ¨Ïä§", -- [1]
					"", -- [2]
				},
				[101398] = {
					"ÏòÅÌòºÏùò ÎßàÍ∑Ä", -- [1]
					"ÏùÄÎπõÏàòÏ†ï Í¥ëÏÇ∞", -- [2]
				},
				[135959] = {
					"Ïö∞Î†àÏ†ïÎ†π ÏßÑÎèôÎ∞ú", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[152311] = {
					"ÏûîÏßÄÎ•¥ ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[133912] = {
					"ÌòàÏÑúÏïΩ ÌååÎ©∏Ïûê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[144850] = {
					"Ïñ¥Îë†ÎπÑÎäò ÏÑ∏Ïù¥Î†å", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[150292] = {
					"Î©îÏπ¥Í≥§ Í∏∞Î≥ë", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[120463] = {
					"ÍπäÏùÄÎ∞îÎã§ Í¥ÄÎ¶¨Ïù∏", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[120719] = {
					"Îã¨Ïùò Ïó¨ÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[152852] = {
					"Í¥ëÏã†ÎèÑ ÌååÏâ¨Îßà", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[135960] = {
					"Íµ∞Ï£º ÏûêÍ∑∏Îü¨ÌÅ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[34134] = {
					"Í≤®Ïö∏ ÎßùÎ†π", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136984] = {
					"Î†àÎ∞ò", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[126094] = {
					"Î±ÄÍ∞àÌÄ¥ ÌååÎèÑÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[150293] = {
					"Î©îÏπ¥Í≥§ Ìò∏ÎûëÏù¥", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[138502] = {
					"ÎÇòÎ°úÎπÑÏïÖ Í≥†Î£°Ïà†ÏÇ¨", -- [1]
					"", -- [2]
				},
				[139032] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ ÎÑàÏö∏Í≤ΩÎπÑÎ≥ë", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[106643] = {
					"ÏóòÎ¶¨ÏÇ∞Îìú", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[135961] = {
					"Ïã¨Ìï¥ÏÑù Î∂ÑÏáÑÏûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[152853] = {
					"Ïó¥Í¥ëÏùò Ïã§Î¶¨Î∞îÏ¶à", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[39381] = {
					"ÏßÑÌôçÏÇ¥Ïù¥ ÏàòÌò∏Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[139034] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ Í¥ÄÌÜµÏûê", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[87448] = {
					"Í∞ïÏ≤†ÏùºÍæº", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[17839] = {
					"Í∑†Ïó¥Ïùò Íµ∞Ï£º", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[139033] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ Î¨ºÎßàÏà†ÏÇ¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[142802] = {
					"ÎÇòÏ¶àÎßàÎãà ÌÜµÏÜîÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[135962] = {
					"Î∞îÏúÑÏÇ∞ ÏõêÎ†π", -- [1]
					"", -- [2]
				},
				[127119] = {
					"ÏûêÏú†ÏßÄÎåÄ Í∞ëÌåêÏõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[113554] = {
					"Î≥ÑÏùò Î≥ÄÌòïÏ≤¥", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[126095] = {
					"ÎπåÎ¶¨Ïä§", -- [1]
					"", -- [2]
				},
				[150295] = {
					"Ï†ÑÏ∞® ÌÉÄÍ≤©Í∏∞ ÎßàÌÅ¨1", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[134427] = {
					"ÏÑ∏Ïä§ÎùΩ ÌïòÎäòÏÜåÌôòÏÇ¨", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[134939] = {
					"Îª£Îª£Í∞ÄÏãú ÏãùÏù∏Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[131356] = {
					"Î∞ÄÎ¶º Ï∂îÏ†ÅÏûê", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140058] = {
					"Ïö∞ÎëêÎ®∏Î¶¨ ÌöåÏÉâÌÑ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[138503] = {
					"Ìô©ÌòºÏùò Í∞êÎèÖÍ¥Ä", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[26861] = {
					"Ïôï Ïù¥ÎØ∏Î°†", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[159510] = {
					"Ïã¨Ïó∞Ïùò Îàà", -- [1]
					"Íπ®Ïñ¥ÎÇú ÎèÑÏãú ÎÇòÏù¥ÏïåÎ°úÏÇ¨", -- [2]
				},
				[113043] = {
					"Ïã¨Ïó∞ Í∞êÏãúÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[134428] = {
					"ÎßàÎ¶ÑÎ™®Î±Ä ÏπºÎÇ†ÏÑúÏïΩÎ≥ë", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[147225] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ Ï∂îÏ∂úÍ∏∞", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135452] = {
					"ÎßàÎçî", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[140059] = {
					"ÌöåÏÉâÌÑ∏ Ïã∏ÏõÄÍæº", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[76444] = {
					"Íµ¨ÏÜçÎêú ÏòÅÌòº", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[132893] = {
					"Î∂àÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[134941] = {
					"Îª£Îª£Í∞ÄÏãú Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[150297] = {
					"Î©îÏπ¥Í≥§ Ïû¨Í∑úÍ≤© ÏÑ§Í≥ÑÏÇ¨", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[134429] = {
					"ÎßàÎ¶ÑÎ™®Î±Ä Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[139036] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ Ìà¨Ï∞ΩÎ≥ë", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151833] = {
					"Î∞©ÎûëÌïòÎäî ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140060] = {
					"ÌöåÏÉâÌÑ∏ Í≥∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140292] = {
					"Ïö∞ÎëêÎ®∏Î¶¨ ÎààÏÜ°Ïù¥ÌÑ∏", -- [1]
					"", -- [2]
				},
				[136989] = {
					"Îâ¥Ïä§ÌÖåÎìú ÎØºÎ≥ëÎåÄÏõê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[73806] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∏∞Í≥ÑÍ≥µ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[142801] = {
					"ÎÇòÏ¶àÎßàÎãà ÌòàÎß§Îì≠Íæº", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[126216] = {
					"ÏßÄÏïà Ìã∞ ÌååÍ¥¥Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139037] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ ÏßÑÏúÑ", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[71712] = {
					"Ï†àÎßùÏùò ÌîºÏ°∞Î¨º", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140061] = {
					"ÌöåÏÉâÌÑ∏ ÏÜåÍµ¥Ïñ¥ÎØ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[72350] = {
					"Ïö©ÏïÑÍ∑Ä Ï†ïÏòà Í∑∏Îü∞Ìä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[73530] = {
					"Ïö©ÏïÑÍ∑Ä Í∑∏Îü∞Ìä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[131611] = {
					"Íµ¨Ïù¥ÏöîÎ¶¨ÏÇ¨ Î°†Îã§", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[126353] = {
					"Î∞ïÏ•ê", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[134431] = {
					"ÌòàÌä∏Î°§", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[139038] = {
					"Ïπ¥Ïù¥ÌõÑ", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[69791] = {
					"Í≤®ÌÑ∏Ï†ïÎ¶¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140062] = {
					"Í≥µÌè¨Ï≤†Ìá¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[57877] = {
					"Í≥†ÎùºÏä§Ïùò ÏàòÏ°±", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[136991] = {
					"ÌòàÏÇ¨ÎÉ•Íæº Îã§ÏûòÏïÑÏù¥", -- [1]
					"", -- [2]
				},
				[134144] = {
					"ÏÇ¥ÏïÑÏûàÎäî Í∏âÎ•ò", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[76446] = {
					"Ïñ¥Îë†Îã¨ Íµ¨ÏÜçÏûê", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[134432] = {
					"ÌòàÏÇ¨Ïà†ÏÇ¨", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[142800] = {
					"ÎÇòÏ¶àÎßàÎãà ÌòàÍ¥ÄÎ∂ÑÎ¶¨Ïûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[151836] = {
					"Í≥µÌóàÏùò Í≥µÌè¨", -- [1]
					"ÏóêÎ©îÎûÑÎìúÏùò Íøà - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140063] = {
					"ÏãùÏù∏ Î∞ïÏÇ¥ÏïÑÍ∑Ä", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[72351] = {
					"Ïö©ÏïÑÍ∑Ä Ï†ÑÏüÅÍ∏∞Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136955] = {
					"ÏûîÏ∂îÎ¶¨ Î∞∞Î∞òÏûê", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[38487] = {
					"Ï£ΩÏùÄ Ï†ÑÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[134338] = {
					"ÌååÎèÑÌòÑÏûê ÏßëÌñâÏûê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[134433] = {
					"ÌòàÌÅ¨Î°úÍ∑∏", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[151325] = {
					"Í≤ΩÎ≥¥Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[69792] = {
					"Í≤®ÌÑ∏Ï†ïÎ¶¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[148254] = {
					"ÎÉâÍ∏∞ ÌååÌé∏", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[17670] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê ÏÇ¨ÎÉ•Í∞úÏ°∞Î†®ÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[134283] = {
					"ÏàòÎèÑÏûê ÎùºÎÇò", -- [1]
					"", -- [2]
				},
				[140795] = {
					"Ïã∏ÎäòÌïú Î™®ÎûòÎπôÎπô", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135931] = {
					"ÏûøÎπõÎèå", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[138529] = {
					"ÏïîÌùëÏùò Î∂ÄÏÇ∞Î¨º", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[139041] = {
					"Ï†ïÎ†πÏÇ¨ Î£®Ïäà", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[114801] = {
					"Ïú†Î†π ÏàòÏäµÏÉù", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[144160] = {
					"ÎÇúÎèÑÏßàÍæº Î†àÎìúÌõÑÌÅ¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[72352] = {
					"Ïö©ÏïÑÍ∑Ä Ïπ†ÌùëÏ∂îÏ†ÅÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[151839] = {
					"Ïû† Î™ª ÎìúÎäî ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[126099] = {
					"Ìô©ÌòºÍ±∞Ï£Ω Î¨¥Î¶¨ Ïñ¥ÎØ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151840] = {
					"ÌÉÄÎùΩÌïú ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[72353] = {
					"Ïö©ÏïÑÍ∑Ä ÌôîÏóº Í∂ÅÏàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134947] = {
					"Îª£Îª£Í∞ÄÏãú Î¨¥Î¶¨Ïó¨Ïôï", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[26670] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Ïù∏Í∞ÑÏÇ¨ÎÉ•Íæº", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[135971] = {
					"Î∂ÄÏ†ïÌïú ÏßïÏßëÎ≥ë", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[33113] = {
					"Í±∞ÎåÄ ÌôîÏóºÏ†ÑÏ∞®", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[145185] = {
					"Î¨¥Ïûê. B. ÎÖ∏ÏõÄÏ†ÑÏ∞®", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[126100] = {
					"Ìô©ÌòºÍ±∞Ï£Ω Î∞∞ÌöåÏûê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[138019] = {
					"Ïø® Ìã∞ÎûÄ ÏÑ†Î¥âÎåÄÏõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138531] = {
					"Ïô∏ÎààÎ∞ïÏù¥ Í≥µÌè¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[134948] = {
					"ÏàòÌíÄ Ï∂îÏ†ÅÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[147745] = {
					"Î∂àÍµ¥Ìò∏", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140067] = {
					"ÎÖπÏä®Í∞ÄÏ£Ω Ïö∞ÎëêÎ®∏Î¶¨", -- [1]
					"", -- [2]
				},
				[34137] = {
					"Í≤®Ïö∏ ÏöîÎ•¥Î¨∏Í∞ÄÎ•¥", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[132901] = {
					"Íµ¥ÎûÄ ÏïºÏö¥Í≥®", -- [1]
					"", -- [2]
				},
				[58963] = {
					"Ïâ¨Î∞î", -- [1]
					"ÏùÄÎπõÏàòÏ†ï Í¥ëÏÇ∞", -- [2]
				},
				[151841] = {
					"Ï†ÑÎ†π Î≤ÑÍ∑∏ÌÜ°", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[134437] = {
					"ÏùòÎ¨¥Î≥ë Î°úÎ¥á", -- [1]
					"", -- [2]
				},
				[134949] = {
					"Ï†êÌåêÎïÖÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[127124] = {
					"ÏûêÏú†ÏßÄÎåÄ Ïà†Ïßë Ï¢ÖÏóÖÏõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[123285] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ Î≥ëÏÇ¨", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139004] = {
					"Î∞îÎûåÏùò ÎïÖ Ï£ºÏä¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[153377] = {
					"ÎÅàÏ†ÅÏù¥", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[71454] = {
					"ÎßêÏΩîÎ°ù", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[155629] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ Ìè≠ÌíçÏà†ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[67235] = {
					"Ïñ¥Îë†Ïùò ÎßàÍ∑Ä", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[139045] = {
					"ÏòàÏñ∏Ïûê Ï£ºÏπò", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[20208] = {
					"Î©òÎàÑÏùò ÏπòÏú†Ïùò ÏàòÌò∏Î¨º", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[140069] = {
					"ÎÖπÏä®Í∞ÄÏ£Ω ÎäëÎåÄ", -- [1]
					"", -- [2]
				},
				[152866] = {
					"Í∞ïÌôîÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû•", -- [2]
				},
				[132903] = {
					"ÎßàÎ•∏Í∞ÄÏßÄ Ï£ºÎØº", -- [1]
					"", -- [2]
				},
				[139433] = {
					"Í≥†ÎáåÏùò ÏûêÎß§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[151690] = {
					"Í∑∏Ïä¨Ïù¥Îπ®", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[114328] = {
					"ÏΩîÍ∏ÄÏä§ÌÜ§", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[114584] = {
					"Ïú†Î†π Ïù∏Î∂Ä", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[144637] = {
					"Í∑∏Î°±", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[123286] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ ÎèÑÎ∞ïÏÇ¨", -- [1]
					"", -- [2]
				},
				[136398] = {
					"ÏùºÎ¶¨Îã§Î¶¨ ÏÇ¨Ìã∞Î°úÏä§", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[132904] = {
					"Î™®ÎûòÎëêÌîº Ï£ºÎØº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137511] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÏûêÍ∞ù", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[57746] = {
					"ÏñºÍµ¥ ÏóÜÎäî ÌååÍ¥¥Ïûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[75426] = {
					"ÌîºÎßùÏπò Í∞êÎèÖÍ¥Ä", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[33754] = {
					"ÏïîÌùëÎ£¨ Ï≤úÎë•Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136181] = {
					"ÌôîÏÇ∞", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[21104] = {
					"Í∑†Ïó¥Ïùò Î¨∏ÏßÄÍ∏∞", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[138998] = {
					"ÎëêÍªçÍ∞ÄÏ£Ω", -- [1]
					"", -- [2]
				},
				[135932] = {
					"Î≥ºÏπ¥ÎÇòÎ•¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[58964] = {
					"ÏºÄÎ•¥ÏóêÏä§", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[122263] = {
					"Í∞ÄÏãúÍ∞ëÏò∑ ÏπºÎÇ†ÌÑ±Í±∞Î∂Å", -- [1]
					"", -- [2]
				},
				[114329] = {
					"Î£®ÎØ∏ÎÖ∏Î•¥", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[140072] = {
					"ÏïΩÌÉàÏûê Í≥µÌè¨Í±∏Ïùå", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[151845] = {
					"Î∂ÄÍ¥Ä ÎäêÏò§Ìä∏", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[148262] = {
					"Î∞ÄÎ¨º Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[122090] = {
					"ÏïΩÌÉàÏûê ÏÇ¨ÎùºÏÉ§Ïä§", -- [1]
					"", -- [2]
				},
				[141057] = {
					"ÌååÎèÑ Íµ∞Ï£º Î≥¥Î•¥ÏÉ§Ïä§Ï¶à", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139044] = {
					"Î¨ºÍ≤∞ÏπòÏú†ÏÇ¨ ÏïÑÏÉ§", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[17942] = {
					"Ïø†ÏïÑÍ∑∏ÎØ∏ÎûÄ", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[134442] = {
					"Î≤°Ìã∞Ïä§", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[138489] = {
					"Ï§ÑÏùò Í∑∏Î¶ºÏûê", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[129000] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ Ïã∏ÏõÄÍæº", -- [1]
					"", -- [2]
				},
				[140073] = {
					"Í¥ëÍ∏∞ÏïÑÍ∑Ä", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144680] = {
					"ÌîÑÎ¶¨Îã§ ÏïÑÏù¥Ïñ∏Î≤®Î°úÏö∞Ï¶à", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140432] = {
					"ÏÇ∞ÏïÖÎ∞úÍµΩ ÎèÑÏïΩÍæº", -- [1]
					"", -- [2]
				},
				[95072] = {
					"ÏÉÅÍ∏â ÎåÄÏßÄÏùò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[122264] = {
					"ÎäôÏùÄ Í∞ÄÏãúÍ∞ëÏò∑", -- [1]
					"", -- [2]
				},
				[114330] = {
					"Î∞∞Î∏îÎ¶ø", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[155869] = {
					"Ïâ¨ÎùºÏºÄÏä§ ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[123288] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ Ìè¨Î≥ë", -- [1]
					"", -- [2]
				},
				[140074] = {
					"Îæ∞Ï°±Îãà", -- [1]
					"", -- [2]
				},
				[134904] = {
					"Î∞§Î∞∞ÌöåÍ±∞ÎØ∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[45912] = {
					"Í±∞Ïπú ÏÜåÏö©ÎèåÏù¥", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[139051] = {
					"ÎÇòÏ¶àÎßàÎãà Î∂ÑÏáÑÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[55294] = {
					"Ïö∏Ìä∏ÎùΩÏãúÏò®", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[120473] = {
					"Î¨ºÍ≤∞ÎπÑÎäò Ï†ÑÌà¨Ïõê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[33755] = {
					"ÏïîÌùëÎ£¨ ÏïΩÌÉàÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[146890] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê Î£¨ÎßàÏà†ÏÇ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140075] = {
					"Ïπ¥ÎàÑÏä§", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[113307] = {
					"ÏãúÍ∞ÑÍ≤©ÎÖ∏", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[138483] = {
					"ÌùëÏöîÏÑù Í¥¥Î¨º", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[137516] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ïπ®ÎûµÏûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[81315] = {
					"Í∞ïÏ≤† Ìè≠Í≤©Î≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[103326] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[155432] = {
					"ÎßàÎ†•Ïóê Îπ†ÏßÑ ÏÇ¨Ï†à", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[151850] = {
					"ÏÇ¨Î†πÍ¥Ä ÎîúÎ¶¨ÌÅ¨", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140076] = {
					"Ï£ºÎ®πÏøµ ÏùÄÎπõÎì±", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136493] = {
					"ÌÉÄÎùΩÌïú Í∞êÏãúÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[132910] = {
					"Îª£Îª£Í∞àÍ∏∞ ÍΩ•ÍΩ•Ïù¥", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[137517] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ ÌååÍ¥¥Ïûê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[113052] = {
					"Í≥µÌè¨Í∑ºÏúÑÎ≥ë", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[146731] = {
					"Ï¢ÄÎπÑ Í∞ÄÎ£® ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[155433] = {
					"Í≥µÌóàÏóê Î¨ºÎì† ÏÇ¨Ï†à", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[135470] = {
					"Ï†ïÎ≥µÏûê ÏïÑÏπ¥ÏïåÎ¶¨", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[140077] = {
					"Ï£ºÎ®πÏøµ ÏÑ±ÌÅºÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72358] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÎåÄÌè¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[132911] = {
					"Ï°∞ÏïΩÎèå Ìä∏Î°úÍ∑∏", -- [1]
					"", -- [2]
				},
				[138484] = {
					"ÌùëÏöîÏÑù ÏòàÏñ∏Ïûê", -- [1]
					"", -- [2]
				},
				[133935] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî ÏàòÌò∏Ïûê", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[44704] = {
					"ÏãúÏïÑÎßàÌä∏Ïùò Î∂ÄÌïò", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[155434] = {
					"ÌååÎèÑÏùò ÏÇ¨Ï†à", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[139211] = {
					"ÏòÅÏõêÎßåÍ∞ú", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140078] = {
					"Ï£ºÎ®πÏøµ Í≥†Î¶¥Îùº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136495] = {
					"ÎÇòÏ¶àÎßàÎãà ÌïôÏÇ¥Ïûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[137007] = {
					"ÎÜíÏùÄ Í∞êÏãúÎåÄ ÏàòÌò∏Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[135715] = {
					"ÏÇ¨ÎÇòÏö¥ Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[71157] = {
					"ÎèÖÌïú ÎßàÏùåÏùò ÏûêÎ¶¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[83620] = {
					"ÌîºÎßùÏπò ÎåÄÏßÄÌååÍ¥¥Ïûê", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[128921] = {
					"Ìô©ÌòºÍ±∞Ï£Ω Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[135472] = {
					"ÌòÑÏûê ÏûêÎÇòÏûò", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[152364] = {
					"ÏïÑÏ¶àÏÉ§ÎùºÏùò Í¥ëÏ±Ñ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[136496] = {
					"ÏÑ†ÌÉùÎêú ÎÇòÏ¶àÎßàÎãà", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[132913] = {
					"Íµ∞ÎèÑ Í±∞Ïù∏", -- [1]
					"", -- [2]
				},
				[139750] = {
					"Îí§Ï≤òÏßÑ Ìà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[118172] = {
					"Íµ∞Ï£º ÌûàÎìúÎ°úÎãàÏø†Ïä§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[54700] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[140973] = {
					"Ï≤úÍ≥µ ÎïÖÍæº", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[124279] = {
					"ÏïÑÏù¥Ïú†", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[123291] = {
					"ÏÜåÍ∏àÍªçÏßà Í≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[30416] = {
					"ÏÜçÎ∞ïÎêú Î∂àÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[45007] = {
					"ÏÇ¨Î°úÏû°Ìûå Î¨¥Î≤ïÏûê", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[137521] = {
					"Î¨¥Ïá†ÌååÎèÑ ÌôîÏïΩÏÇ¨Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134942] = {
					"ÏÉàÎÅº Îª£Îª£Í∞ÄÏãú Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[83621] = {
					"ÌîºÎßùÏπò Ïö©ÏïîÍ≤∞ÏÜçÏÇ¨", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[139057] = {
					"ÎÇòÏ¶àÎßàÎãà ÌòàÏÇ¨Ïà†ÏÇ¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[135474] = {
					"ÏóâÍ≤ÖÌÄ¥ ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[30319] = {
					"Ìô©ÌòºÏùò ÏïîÌùëÏà†ÏÇ¨", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[76309] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[122088] = {
					"Î±ÄÍ∞àÌÄ¥ Ïû†Î≥µÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[83622] = {
					"ÌîºÎßùÏπò Ïò§Ïö∞Í±∞ÎßàÎ≤ïÏÇ¨", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[81318] = {
					"Í∞ïÏ≤† ÏÑ†ÏûÑ Ìè¨Î≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[9499] = {
					"ÌîåÎü¨Í±∞ Ïä§Ìå®Ï¶àÎßÅ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[40923] = {
					"Î∂àÏïàÏ†ïÌïú ÌÉÄÎùΩÏ†ïÎ†π", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[135475] = {
					"ÎèÑÏÇ¥Ïûê Ïø®Îùº", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[140082] = {
					"Í∏∞Î∏å", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[26800] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ Í¥ëÏ†ÑÏÇ¨", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[137012] = {
					"Îâ¥Ïä§ÌÖåÎìú ÏàòÎ†µÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[26928] = {
					"ÎåÄÌïôÏûê ÌÖîÎ†àÏä§Ìä∏Îùº", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[124316] = {
					"ÎèºÏßÄ", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[120477] = {
					"Ïã¨Ìï¥ Ï∂îÏ†ÅÏûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139059] = {
					"ÌîºÏóê Íµ∂Ï£ºÎ¶∞ ÌÅ¨Î°úÍ∑∏", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[18994] = {
					"Î¨¥ÌïúÏùò ÏßëÌñâÏûê", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[140083] = {
					"Ï≤úÎë•Î∞ú Ïø®Îùº", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144690] = {
					"Î©îÏä§Ìä∏Îùº", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[132917] = {
					"Ïö∞ÏõÄÍµø Ï†ïÏ∞∞Î≥ë", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[42691] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Í∑†Ïó¥Ïà†ÏÇ¨", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[134388] = {
					"Î±ÄÎì§Ïùò Îò¨Î¶¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[146887] = {
					"Ïç©ÏùÄ Ïûê Í≤åÎ•∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[71156] = {
					"Î∞∞ÌõÑÏûê Ïπ¥Ï¶àÌã∞ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[59479] = {
					"Îã¥Í∏∞ÏßÄ ÏïäÎäî ÏòåÏ£º", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[140084] = {
					"Î∞ïÏÇ¥Ï£ºÎ®π", -- [1]
					"", -- [2]
				},
				[152236] = {
					"Ïó¨Íµ∞Ï£º Ïï†Ïâ¨Î≤†Ïù∏", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[132918] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ ÏïΩÌÉàÏûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[133430] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ Î∞∞ÌõÑÏ°∞Ï¢ÖÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[81171] = {
					"ÏÑúÎ¶¨Ïã¨Ïó∞ ÎèôÍµ¥ÏÇ¥Ïù¥", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[83623] = {
					"ÌîºÎßùÏπò ÍµêÎèÑÍ¥Ä", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[39900] = {
					"ÏÇ¨Î°úÏû°Ìûå Î∞îÏúÑ Ï†ïÎ†π", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[131383] = {
					"Ìè¨ÏûêÏÜåÌôòÏÇ¨ ÏûîÏ∞®", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[140085] = {
					"ÏÜîÎ®πÏù¥ ÌÅ∞ÏÇ¨Ïä¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136502] = {
					"ÎÇòÏ¶àÎßàÎãà Ï†ÑÏüÅÏñ¥ÎØ∏", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[132919] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ Í¥¥Ïàò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[118175] = {
					"Ìè≠ÌíçÏùò Ï†ïÎ†π", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[133943] = {
					"Ï§ÑÏùò ÏàòÌïò", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[39961] = {
					"ÏÇ¨Î°úÏû°Ìûå Î¨ºÏùò Ï†ïÎ†π", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[83624] = {
					"ÌîºÎßùÏπò ÏßëÌñâÏûê", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[139208] = {
					"Í≥†ÎåÄ ÏàòÌò∏Î≥ë", -- [1]
					"", -- [2]
				},
				[140086] = {
					"ÏÜîÎ®πÏù¥ ÏàúÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144693] = {
					"Î∂àÍΩÉÏ£ºÎ®π Îß®Ïä§Î°úÏù¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[132920] = {
					"Í∑∏Î¶ºÏûê Î±Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[133432] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ Ïó∞Í∏àÏà†ÏÇ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[133944] = {
					"ÏïÑÏä§ÌîΩÏä§", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[87719] = {
					"Ïò§Í∑∏Î°† Ïö¥Î∞òÏûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[50138] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138992] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ Î≥¥Ï¥à", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140087] = {
					"ÏÜîÎ®πÏù¥ ÏïîÏÇ¨Ïä¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[21140] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[132921] = {
					"Ìï¥ÏùºÏó¨Ï†ú ÏÑ∏Î•¥ÏïÑ", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134796] = {
					"Í∞ÄÏãúÏßëÍ≤å ÏôïÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[118176] = {
					"Ï≤úÎë•Ï∂©Í≤©", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[132922] = {
					"ÏÇ¨Î°úÏû°Ìûå Î©ÄÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[29680] = {
					"Ïä¨ÎùºÎìúÎûÄ ÎèÖÏÇ¨", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[1860] = {
					"Ìó¨ÎÇòÌÅ¨", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[140088] = {
					"ÎèåÏßÑÏÇ¨Ïä¥ ÎèåÎøî", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[132410] = {
					"ÎÇ†Í∞ú Îã¨Î¶∞ ÎèÖÏÇ¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[149302] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[43612] = {
					"Í≥†ÏúÑ ÏÇ¨Ï†ú Î∞îÎ¶º", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[135406] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî Ìô©Í∏à", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139758] = {
					"Ï¥ùÏïåÎëò Ïï†Îãà", -- [1]
					"", -- [2]
				},
				[140799] = {
					"Í∏âÎ•òÏ∂îÏ†ÅÏûê", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151862] = {
					"ÏòÅÌòºÎ∞©ÎûëÏûê ÌéòÏÇ¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140089] = {
					"ÎäôÏùÄ Ìô©ÌòºÎ∞úÍµΩ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[33820] = {
					"Ìô©ÌòºÏùò ÌôîÏóºÏà†ÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[132923] = {
					"ÏãúÎ¶∞Îπõ Î©ÄÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[75506] = {
					"Ïñ¥Îë†Îã¨ Ï∂©ÏÑ±Ï£ºÏùòÏûê", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[71155] = {
					"ÏãúÏ¥àÏûê ÏΩîÎ•¥Î≤§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140090] = {
					"ÏïÑÎÇòÌÉÄÏâ¨", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[40925] = {
					"ÌÉÄÎùΩÌïú ÌååÏàòÎ≥ë", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[133436] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ ÌïòÎäòÎ∞©ÌôîÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[26737] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ ÎßàÎÇò Ï†ïÎ†π", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[136507] = {
					"ÏùëÍ≥†Îêú Ìîº", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[57817] = {
					"Ìè≠ÌíçÏÇ¥Ïù¥ Ï∂©Î≥µ", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[26929] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[112803] = {
					"Ï†êÏÑ±Ïà†ÏÇ¨ ÏûêÎ¶∞", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[135996] = {
					"Íµ∞Ï£º ÏΩúÏä¨Î†àÏù¥Ìä∏", -- [1]
					"", -- [2]
				},
				[117154] = {
					"ÏπºÎÇ†ÌÑ± ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[18995] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[140091] = {
					"ÎààÏÜ°Ïù¥Î∞úÍµΩ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[72365] = {
					"Ïö©ÏïÑÍ∑Ä Ìè¨Î≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[39390] = {
					"Ìô©ÌòºÏùò ÎπÑÎ£°", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[134599] = {
					"ÎßàÎ†• ÍπÉÎì† Ìè≠ÌíçÏÜåÌôòÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[133438] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Ïó¨ÎßàÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138556] = {
					"Î∂ÄÌå®Ìïú ÏàòÏï°Í¥¥Î¨º", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[122086] = {
					"Î±ÄÍ∞àÌÄ¥ Î¨¥Ïá†ÎπÑÎäò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138557] = {
					"Ïã§Ï≤¥ÌôîÎêú ÌÉÄÎùΩ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140092] = {
					"Í∏¥Í±∏ÏùåÏÇ¨Ïä¥", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136509] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî Î∂ÄÌå®Ï†êÏï°", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[145211] = {
					"ÏÉàÎÅº Ï≤úÎë•ÎπÑÎäò", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[91305] = {
					"Í∞ïÏ≤†Ïùò ÏßÄÏò•ÏÜåÌôòÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[140093] = {
					"ÏÜîÎ®πÏù¥ ÏÉàÎÅºÏñ¥ÎØ∏", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[120482] = {
					"Î¨ºÍ≤∞ÎπÑÎäò Î∞îÎã§ÏÜåÌôòÏÇ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[128928] = {
					"Í≤å Ïïå", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[112804] = {
					"Í∏∏Îì§Ïó¨ÏßÑ Í∑∏ÎäòÎπÑÎäò", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[76205] = {
					"ÌîºÏóê Ï†ñÏùÄ ÏπºÎÇ†ÍπÉÌÑ∏", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[136510] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ìè¨ÏãùÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[133439] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Í∑∏Î¶¨ÌïÄ Í∏∞Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[56922] = {
					"Ìô©ÌòºÏùò Ïπ®Ìà¨Ïûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[79505] = {
					"ÌÉúÏñëÏùò ÏÑ¨Í¥ë", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[138558] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[74158] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏÇ¨Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140094] = {
					"ÏßÑÌùôÏ£ºÎë•Ïù¥ Í∞ÄÏãúÎì±", -- [1]
					"", -- [2]
				},
				[135999] = {
					"Ìó¨Î¶¨Ïò§ÎèÑÎ•¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[71154] = {
					"Î©îÎöúÍ∏∞Ïôï Ïπ¥Î°úÏ¶à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[76307] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[140267] = {
					"Í±∞ÎåÄÎøî Ïö∞ÏôÄÎàÑ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[54552] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÌååÍ¥¥Ïûê", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[138559] = {
					"ÏûäÌòÄÏßÑ Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140095] = {
					"ÏßÑÌùôÏ£ºÎë•Ïù¥ ÎèåÏßÑÏûê", -- [1]
					"", -- [2]
				},
				[148797] = {
					"Ï£ΩÏùÄ ÏûêÏùò ÌïôÏûê", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[136000] = {
					"Î≤†Î¶¥Îü¨Ïä§", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[72367] = {
					"Ïö©ÏïÑÍ∑Ä ÌååÎèÑÏ£ºÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[58959] = {
					"ÏúÖÏã§Î¶∞", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138475] = {
					"ÌÉÄÏù¥Îü∞Ìã∞Ïò®", -- [1]
					"", -- [2]
				},
				[146238] = {
					"Í≤ÄÏùÄÏêêÍ∏∞", -- [1]
					"", -- [2]
				},
				[138560] = {
					"ÏñºÍµ¥ ÏóÜÎäî Í≥µÌè¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[92554] = {
					"Î©ïÎ∞îÎùºÏâ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[17941] = {
					"Î∞∞Î∞òÏûê Î©òÎàÑ", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[140096] = {
					"ÏßÑÌùôÏ£ºÎë•Ïù¥ Î©ßÎèºÏßÄ", -- [1]
					"", -- [2]
				},
				[75406] = {
					"Ïä¨ÎùºÍ∑∏ÎÇò", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[127906] = {
					"Ìô©ÌòºÏ†ÑÎ†π ÌÉÄÎ£®Ïö∏", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[43614] = {
					"ÌÜ±ÎãàÏïÑÍ∑Ä", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[37728] = {
					"ÏÑ±ÎÇúÌï¥Í≥® ÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[138561] = {
					"ÏñºÍµ¥ ÏóÜÎäî Ï†ïÏã†Ìï¥Ï≤¥Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136003] = {
					"Í∑∏Î†àÎ∏îÎü¨Ïä§", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[124580] = {
					"ÎèôÍµ¥ Í±∞Î∂Å", -- [1]
					"", -- [2]
				},
				[140097] = {
					"Í±∞ÎåÄ Î®ºÏßÄÎ∞∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140609] = {
					"ÌÉêÏöïÏùò ÎßàÏΩî", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137026] = {
					"Îâ¥Ïä§ÌÖåÎìú ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[56923] = {
					"Ìô©ÌòºÏùò Ìè≠ÌååÎ≥ë", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[61146] = {
					"ÌùëÏö∞ Ï°∞Í∞ÅÏÉÅ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[138562] = {
					"Í≥µÌóà Íµ¨ÎçîÍ∏∞", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[31233] = {
					"ÌäºÌäºÌïú ÎäëÎåÄ", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[73904] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∞ïÏ≤†ÌååÏàòÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[119205] = {
					"Îã¨Í∞àÌÄ¥", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[26802] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ ÏàúÏ∞∞Ïûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[149312] = {
					"ÌùâÌè¨Ìïú ÎÇ†ÏåòÎ∞úÌÜ±", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[141634] = {
					"Ïò¨Ïä® Î∏åÎùºÏù¥Ìä∏Ïã§Îìú", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[71409] = {
					"ÏÇ¨Î†πÍ¥Ä ÏûëÌÉÄÎ•¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146753] = {
					"Ïø® Ìã∞ÎûÄ Ìï¥Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[18331] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÏïîÌùëÏà†ÏÇ¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[151872] = {
					"Ï∞∏ÌòπÏùò ÏÜêÏïÑÍ∑Ä", -- [1]
					"ÏóêÎ©îÎûÑÎìúÏùò Íøà - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140099] = {
					"ÏãúÎÅÑÎü¨Ïö¥ Ï≤úÎë•Ï£ºÎë•Ïù¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129699] = {
					"Î£®ÎìúÎπÑÌûà Ìè∞ ÌÜ†Î•¥ÌÜ®ÎûÄ", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[132892] = {
					"Î∞©Ï†ïÎÇòÎ≠áÏûé", -- [1]
					"", -- [2]
				},
				[141635] = {
					"ÌîºÏ¶à Ïã§Î≤ÑÏΩîÍ∑∏", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[133957] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138564] = {
					"ÌÅ¨ÏäàÏö¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[106321] = {
					"ÏàúÌíç ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136643] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ Ï∂îÏ∂úÍ∏∞", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[136005] = {
					"ÎÇúÌè≠Ìïú Íµ¨Í≤ΩÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[141637] = {
					"ÌÅ¨Î°úÏö∏ Îã§ÌÅ¨Î©îÏù∏", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[137029] = {
					"Ìè¨Í≤© Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[141636] = {
					"ÏïåÎùºÎ¶¨ÏïÑ ÎÇòÏù¥Ìä∏ÏúàÎìú", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[142148] = {
					"Ï†ÑÏüÅÏñ¥ÎØ∏ ÎùºÏπºÎ¶¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[138565] = {
					"ÎØ∏Î¶¨Ïä§", -- [1]
					"", -- [2]
				},
				[146244] = {
					"Ï∞åÎ•¥Îäî ÎßàÍ∑Ä", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[71858] = {
					"ÌååÎèÑÍ≤∞ÏÜçÏÇ¨ ÏπºÎìúÎ¶¨Ïä§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140101] = {
					"Îä™ÎíπÍµ¥Ïù¥", -- [1]
					"", -- [2]
				},
				[146756] = {
					"Í∞ïÌôîÎêú Ìè≠Ìíç", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[44926] = {
					"Íµ≥ÏùÄÏÑúÏïΩ Î∞©ÎûëÏûê", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[56924] = {
					"Í≤©ÏïôÎêú Ìò∏Ï†† Ïã∏ÏõÄÍæº", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[142149] = {
					"Î≥ÄÎ≥ÄÏ∞ÆÏùÄ Îß§Í∞úÏ≤¥", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[44895] = {
					"Ïò§Ïö∞", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[33890] = {
					"ÏöîÍ∑∏ÏÇ¨Î°†Ïùò Îáå", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[78001] = {
					"Ìè≠Ïö∞Ïùò ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140102] = {
					"ÏπºÎãàÎ©ßÎèºÏßÄ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[142150] = {
					"ÎÇòÏ¶àÎßàÎãà ÌååÎ©∏Ïûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[37729] = {
					"ÏÑ±ÎÇúÌï¥Í≥® ÏïΩÌÉàÏûê", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[151876] = {
					"Îñ†ÎèÑÎäî ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[146245] = {
					"ÌååÎã•ÎÇ†Í∞ú", -- [1]
					"", -- [2]
				},
				[138567] = {
					"ÏùëÏßïÏûê ÏÉ§Ïä§Ìò∏Ïä§", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[71603] = {
					"ÏÉ§ ÏõÖÎç©Ïù¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[135496] = {
					"Ïπ¥ÎØ∏ ÏΩîÍ∑∏ÏúÑÏ¶ê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[145061] = {
					"ÎπÑÎ™Ö ÏßÄÎ•¥Îäî Î∞§ÎÇ†Í∞ú", -- [1]
					"", -- [2]
				},
				[113321] = {
					"ÌúòÏ≤≠Ïù¥Îäî Íµ∂Ï£ºÎ¶∞ Ïûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[146653] = {
					"ÏµúÏ†ïÏòà ÏÇ¨ÎÉ•Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[141639] = {
					"ÎùºÏùºÎùº ÏÑ†ÏõåÏª§", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146246] = {
					"ÎèÖÎ≤å Ïò§ÎπÖÏä§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138568] = {
					"Ï†ïÎ≥µÏÇ¨ ÏäàÌÅ¨ÏäàÍµ∞", -- [1]
					"", -- [2]
				},
				[139537] = {
					"ÏûêÎùºÌã∞ÌÅ¨ Ïø§Ï¥ù", -- [1]
					"", -- [2]
				},
				[131402] = {
					"Ïç©ÏùÄÍµ¥ ÏßÑÎìúÍ∏∞", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[124583] = {
					"ÌòàÎ•òÎì± Î≤åÎ†à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140616] = {
					"Î∂ÄÌå® ÍπÉÎì† ÎÇòÏ¶àÎßàÎãà", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[145223] = {
					"Ïñ¥Î¶∞ Ï≤úÎë•ÎπÑÎäò", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[71152] = {
					"Ìîº Ï∂îÏ†ÅÏûê Ïä§ÌÇ§Î•¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146247] = {
					"Î∞±ÏÉâÏ£ΩÏùå", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138569] = {
					"ÏÑ†Íµ¨Ïûê Î≥¥Î•¥ÏßÅÏä§", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[45917] = {
					"Íµ¨Î¶Ñ ÏôïÏûê", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[152390] = {
					"Ï†úÎ©ãÎåÄÎ°úÏù∏ Ïã§ÌóòÏ≤¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[136010] = {
					"Î∞îÏúÑÏñºÍµ¥ ÎåÄÏßÄÌååÍ¥¥Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72276] = {
					"ÌÉÄÎùΩÏùò Í≤∞Ï†ïÏ≤¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[145224] = {
					"Ï≤úÎë•ÎπÑÎäò ÎπÑÎ£°", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[33818] = {
					"Ìô©ÌòºÏùò Ïã†Î¥âÏûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[133963] = {
					"ÌîºÌóò ÎåÄÏÉÅ", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138570] = {
					"Ï†ÑÎ†π ÎùºÏûêÌÄ¥", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140106] = {
					"Ï£ΩÏùåÏπ® Î¨¥Î¶¨Í∞êÏãúÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[32867] = {
					"Í∞ïÏ≤†ÌååÍ¥¥Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136011] = {
					"ÌîºÎ∞îÏúÑ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[122851] = {
					"ÏïîÏòÅÏùò Í∂ÅÏàò", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[57821] = {
					"Î∂ÄÍ¥Ä ÏÉ§Îùº", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[147932] = {
					"Ìù•Î∂ÑÌïú ÏïÑÏ†úÎùºÏù¥Ìä∏ ÌååÌé∏", -- [1]
					"", -- [2]
				},
				[146366] = {
					"Ïã¨Ïû•Î∂Ä ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138571] = {
					"ÏÑ±Ï†ÑÏùò ÎπõÏùò ÏàòÌò∏Ïûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[147936] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÌååÌé∏Îì±", -- [1]
					"", -- [2]
				},
				[34147] = {
					"ÌôîÏû¨Í≤ΩÎ≥¥Î°úÎ¥á", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[140107] = {
					"Ï£ΩÏùåÏπ® Ï±ÑÏ∞çÏ†ÑÍ∞à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140619] = {
					"Ìï¥Ïïà Ïã¨Ïó∞ÌÑ±", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[121571] = {
					"ÏïÑÏù¥Ïú†", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[116574] = {
					"ÏùÄÏ†ú Ìè¨ÌÅ¨", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[26672] = {
					"ÌîºÏóê Íµ∂Ï£ºÎ¶∞ ÎèôÌÜ† ÎäëÎåÄ", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[134767] = {
					"Ï£ΩÏùåÎ∞úÌÜ± ÏïåÏñ¥ÎØ∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[138467] = {
					"ÌùëÏöîÏÑù Ïö©Ï°±", -- [1]
					"", -- [2]
				},
				[151881] = {
					"Ïã¨Ïó∞ ÏÇ¨Î†πÍ¥Ä ÏÇ¨Ïù¥Î∞îÎùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140108] = {
					"Ï£ΩÏùåÏπ® Ï†ÑÍ∞à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140620] = {
					"ÎÇ®Ï™Ω Î∞îÎã§ ÎèÖÏπ®Ìï¥ÌååÎ¶¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[20867] = {
					"Ï£ΩÏùåÏùò Í∞êÏãúÏûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[151773] = {
					"Í≥†Ï≤†Ïû• Í∞ú", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[146251] = {
					"ÏàòÎÖÄ Ï∫êÏÑúÎ¶∞", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[134478] = {
					"ÌÇ¥Î∂à", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[134990] = {
					"Ï∂©Ï†ÑÎêú Î®ºÏßÄ ÏïÖÎßà", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[147787] = {
					"7Íµ∞Îã® Ï†ÑÌà¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[54435] = {
					"Í∑ÄÏöîÎØ∏Ïï†", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[40290] = {
					"ÏßÑÌôçÏÇ¥Ïù¥ ÏòàÏñ∏Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[54543] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÎπÑÎ£°", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[144963] = {
					"ÌÇ¥Î∂àÏùò ÏúÑÏÉÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[131864] = {
					"Í≥†ÎùºÌÅ¨ Ìà¥", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[44897] = {
					"ÏÜåÏù∏Ï°± Ï†ïÏ∞∞Î≥ë", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[134991] = {
					"ÏÑ±ÎÇúÎ™®Îûò ÎèåÏ£ºÎ®π", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[131408] = {
					"Ìà¨ÏûêÏÇ¨ Í∑ºÏú°Îç©Ïñ¥Î¶¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[94185] = {
					"ÏÑ†Î¥âÏû• ÏïÑÏºàÎ¶¨Ïò®", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[131040] = {
					"Ïπ¥Ïò§Ìã∞Ïóî Î∂ÑÏáÑÏûê", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[29774] = {
					"ÎèÖÏï° ÏΩîÎ∏åÎùº", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[134418] = {
					"ÏùµÏÇ¨Ìïú Ïã¨Ïó∞Ïù∏ÎèÑÏûê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[146253] = {
					"ÏàòÏÇ¨ Ï°∞ÏÖâ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138575] = {
					"Ïû•Íµ∞ ÏäêÏïÑÏΩ∏", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[73742] = {
					"Ìè¨ÌÉë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[121003] = {
					"Î¨¥Îç§Í∞êÏãúÏûê Î†àÏ¶à", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[122022] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[76812] = {
					"Î≥¥Ïïà Í≤ΩÎπÑÎ≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[17462] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Í¥ëÏã†ÎèÑ", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[151886] = {
					"Î∂ÑÎ¶¨Îêú ÎßùÏÉÅ", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[138064] = {
					"Ìò∏ÌôîÎ°úÏö¥ ÌñâÎùΩÍ∞ù", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[146766] = {
					"ÏÉÅÍ∏â ÎèÖÏÇ¨ ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[134993] = {
					"Ïû•ÏùòÏÇ¨ ÏùåÏπ®Î∞î", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[131410] = {
					"Í±∞ÎåÄ ÎßπÎèÖÎπÑÎäò", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[140112] = {
					"Î∞îÏúÑÏ±ÑÏ∞ç", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[121004] = {
					"ÏπºÎÇ†ÌÑ± ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[119724] = {
					"ÍµΩÏù¥ÏπòÎäî ÌååÎèÑ Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[152910] = {
					"Ïó¨Ïôï ÏïÑÏ¶àÏÉ§Îùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[75191] = {
					"ÌîºÎßùÏπò ÎÖ∏ÏòàÏÇ¨ÎÉ•Íæº", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[138577] = {
					"Î∂ÑÏáÑÏùò Ï¥âÏàò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[134994] = {
					"Ïù∏Í∞ÑÏÇ¨ÎÉ•Íæº ÎßùÎ†π", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[131411] = {
					"ÎßπÎèÖÎπÑÎäò Í∞êÏãúÏûê", -- [1]
					"", -- [2]
				},
				[140113] = {
					"ÎßπÎèÖÏ±ÑÏ∞ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[40291] = {
					"ÌïòÎäòÏÇ¥Ïù¥ ÏòàÏñ∏Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[138066] = {
					"Ìò∏ÌôîÎ°úÏö¥ ÌñâÎùΩÍ∞ù", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[56927] = {
					"Ìù•Ï≤≠ÎßùÏ≤≠ Ìò∏Ï††", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[146256] = {
					"ÎùºÎØ∏ÎÇòÎ¶¨ÏïÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[44898] = {
					"ÏÜåÏù∏Ï°± Î∂àÍΩÉÎßàÏà†ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[152287] = {
					"Ï†ÑÏûêÍ±∞ÎØ∏", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136888] = {
					"ÌùôÏòàÏñ∏Ïûê Î∞îÎ£∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140114] = {
					"Ï±ôÍ∞ïÎ∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[20882] = {
					"Ïñ¥Îë†Ïùò ÎßàÎÖÄ", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[57823] = {
					"ÏàôÎ†® Ìè≠ÌíçÏà†ÏÇ¨", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[146769] = {
					"Î∞úÌÜ±Ïùò ÎìúÎ£®Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[133972] = {
					"ÎåÄÌòïÌè¨", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[138579] = {
					"Í±∞ÎåÄÌïú Î∞úÌÜ± Ï¥âÏàò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[26735] = {
					"ÌïòÎäòÎπõ ÎπÑÎäòÍ≤∞ÏÜçÏÇ¨", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[71865] = {
					"Í∞ÄÎ°úÏâ¨ Ìó¨Ïä§ÌÅ¨Î¶º", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[104881] = {
					"ÎßàÎ≤ïÍ≤ÄÏÇ¨ ÏïåÎ£®Î¶¨Ïóò", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[147928] = {
					"ÎåÄÏßÄÌååÌé∏", -- [1]
					"", -- [2]
				},
				[73197] = {
					"ÌïòÍ∏â ÏÉ§ ÏõÖÎç©Ïù¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[133461] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138068] = {
					"Ìò∏ÌôîÎ°úÏö¥ ÌñâÎùΩÍ∞ù", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[146770] = {
					"Î∞úÌÜ±Ïùò ÎìúÎ£®Ïù¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[72941] = {
					"Ïö©ÏïÑÍ∑Ä Í∑∏Îü∞Ìä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[59487] = {
					"Í±∞Ìíà Î≥¥Ìò∏Îßâ", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[138063] = {
					"Ìò∏ÌôîÎ°úÏö¥ ÌñâÎùΩÍ∞ù", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138972] = {
					"ÏßÄÏïà Ìã∞ Íµ¨Î¶ÑÌååÍ¥¥Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136806] = {
					"ÎèåÎßàÎ≤ïÏÇ¨ Î∞îÎ•¥Í∑∏", -- [1]
					"", -- [2]
				},
				[76306] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[75193] = {
					"ÌîºÎßùÏπò Í∞êÎèÖÍ¥Ä", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[43875] = {
					"ÏïÑÏÇ¨Îìú", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[45269] = {
					"ÏãúÏïÑÎßàÌä∏Ïùò ÌïòÏàòÏù∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[71405] = {
					"ÏÑ∏Ìä∏Ìã∞ÌÅ¨ Î∞îÎûåÏßÄÎ∞∞Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[29874] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏÑ†ÎèôÏûê", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[138566] = {
					"ÎãêÏÜåÏ¶à", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[149331] = {
					"ÏòÅÎ°±Ìïú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[133463] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ Ï†ÑÏüÅ Í∏∞Í≥Ñ", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138499] = {
					"Ìô©ÌòºÏùò Ïö©Ï°±", -- [1]
					"", -- [2]
				},
				[1933] = {
					"Ïñë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[126893] = {
					"Î™®Îûò Îî±Ï†ïÎ≤åÎ†à", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[134390] = {
					"Î™®ÎûòÎ≤îÎ≤Ö ÎèÖÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[127021] = {
					"Î¨¥ÎùºÎîò Î∏åÎ°†Ï¶àÎπÑÏñ¥Îìú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140630] = {
					"ÌôîÎ†§Ìïú Î≥µÏñ¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[20910] = {
					"Ìô©ÌòºÏùò ÎìúÎùºÏΩîÎÇòÎ•¥", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[73452] = {
					"Ïù¥ÏÉ§ÎùºÏ¶àÏùò ÏÑ†Íµ¨Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[75194] = {
					"Îæ∞Ï°±Îãà", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[123001] = {
					"ÏïîÌùëÏùò Î¨º Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[20883] = {
					"ÏõêÌïúÏùò ÏöîÎÖÄ", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[23795] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† Î∂àÌïúÎãπ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[129758] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìè≠ÌÉÑÎ≥ë", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[140631] = {
					"ÎÇ®Ï™Ω Î∞îÎã§ Í∞ÄÏò§Î¶¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[45268] = {
					"ÏãúÏïÑÎßàÌä∏Ïùò ÌïòÏàòÏù∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[44819] = {
					"ÏãúÏïÑÎßàÌä∏", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[139748] = {
					"ÎÇúÌååÎãπÌïú Î∞ÄÏàòÏóÖÏûê", -- [1]
					"", -- [2]
				},
				[146774] = {
					"ÏÉÅÎ•ôÏ†ï", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[55265] = {
					"Î™®Î•¥Ï¥àÌÅ¨", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[148615] = {
					"ÎîîÎ∏åÏòàÏù∏", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[417] = {
					"Ìë∏Ïö∞Îàî", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[140632] = {
					"ÎπÑÎäòÎì± Î¨¥Ïá†ÌÑ±Í±∞Î∂Å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[149334] = {
					"ÏßÄÏ∏µ ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[34135] = {
					"Í≤®Ïö∏ Ïö∞Î†àÏ†ïÎ†π", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[39909] = {
					"ÌïòÎäòÏÇ¥Ïù¥ Ïû•Íµ∞", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[56161] = {
					"ÌÉÄÎùΩÏ≤¥", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[139097] = {
					"Î™®ÎûòÎ∞õÏù¥ Î™ÖÏÇ¨Ïàò", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[80423] = {
					"Ï≤úÎë•Íµ∞Ï£º ÏïºÏàòÏπòÏú†ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[44260] = {
					"ÎèÖÎãàÏïÖÏñ¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[134800] = {
					"Í∞ïÌôîÎêú Î¨¥Ïá†ÌÑ±Í±∞Î∂Å", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[149335] = {
					"Í≤©ÎèôÏùò ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[148483] = {
					"ÏÑ†Ï°∞Ïùò Î≥µÏàòÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[3824] = {
					"Í∞úÍ≥†Í∏∞", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[137375] = {
					"ÎπõÎ≤ºÎ¶º Í∏∞Í∞ëÏ†ÑÌà¨Î≥µ", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[17940] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Í∏∞Ïà†Î≥ë", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[32871] = {
					"Í¥ÄÏ∞∞Ïûê ÏïåÍ∞àÎ°†", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[97285] = {
					"Î∞îÎûå ÏßàÏ£º ÌÜ†ÌÖú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[26805] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ ÏÑ±ÏßÅÏûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[149336] = {
					"ÌòÑÎ¨¥Ïïî ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[145753] = {
					"ÏÑ†Ïû• Í∑∏Î†àÏù∏Ï†Ä", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[75452] = {
					"Ìï¥Í≥®ÏïÑÍ∑Ä", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[45924] = {
					"ÌúòÎ™∞ÏïÑÏπòÎäî ÎèåÌíç", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[140553] = {
					"Ïó¨ÏôïÍ±∞ÎØ∏ ÏäàÏûêÏä§Ï¶à", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[75964] = {
					"ÎûÄÏßÄÌä∏", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[72427] = {
					"Ïò§Í∑∏Î¶¨Îßà ÏùºÍæº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[34133] = {
					"Ìò∏ÎîîÎ•¥Ïùò Ïö©ÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[145242] = {
					"ÎπÑÎäòÎßàÍ∑Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[72893] = {
					"Ïò§Í∑∏Î¶¨Îßà ÏùºÍæº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138576] = {
					"Ï†ïÏ≤¥Î∂àÎ™Ö Ï¥âÏàò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[151476] = {
					"ÏûëÎ†¨Î°úÎ¥á X-80", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[29742] = {
					"Î±Ä Ïò¨Í∞ÄÎØ∏", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[1817] = {
					"Í∞úÏÉà", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[56717] = {
					"ÌôâÌÉàÎ£®Ïä§", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[136541] = {
					"Îã¥Ï¶ô ÏàòÏï°Îç©Ïñ¥Î¶¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[149338] = {
					"Î∂àÏïàÏ†ïÌïú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135964] = {
					"Î∞úÍµ¥Î¶º ÎåÄÏßÄÏ†ïÎ†π", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[120720] = {
					"Îã¨Ïùò ÏàòÌò∏Î≥ë", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[56162] = {
					"ÌÉÄÎùΩÏ≤¥", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[155272] = {
					"Í≤ÄÏùÄÎ∞îÎã§ Ï†êÏüÅÏù¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[151898] = {
					"Íµ∞ÎÇ¥ÌÑ∏ ÏÉàÎÅº", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[44261] = {
					"Îæ∞Ï°±Î∞úÌÜ±ÎèÖÏàòÎ¶¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[42845] = {
					"ÎèåÍµ¨Î©çÍ±∞ÎØ∏", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[149339] = {
					"Ïä§Î©∞Îì† ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[47238] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[123292] = {
					"ÏÜåÍ∏àÍªçÏßà ÏßëÍ≤åÎ∞ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[73194] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∞ïÏ≤† Ï†ÑÍ∞à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[135007] = {
					"Î≥¥Ï£º ÏàòÌò∏Ïûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[141749] = {
					"ÏÇ¥ÏïÑÏûàÎäî Í∞êÏóº", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[140985] = {
					"ÏÇ∞ÏÑ± Î≤åÎ†à", -- [1]
					"", -- [2]
				},
				[21138] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[131863] = {
					"ÏãùÌÉêÍ∑Ä ÎùºÏïå", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[121011] = {
					"Î¨ºÍ≤∞ÎπÑÎäò ÎßàÎÖÄ", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[75198] = {
					"ÌîºÎßùÏπò ÌùôÏ†êÏüÅÏù¥", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[151900] = {
					"Í≥µÌè¨Ïùò ÏÜåÌôòÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[33768] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[75966] = {
					"ÎçîÎüΩÌòÄÏßÑ ÏòÅÌòº", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[126451] = {
					"ÏïÑÏûëÏßëÍ≤å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[54699] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[149341] = {
					"Ïú†Î¶¨ÌôîÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[26734] = {
					"ÌïòÎäòÎπõ ÏßëÌñâÏûê", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[135706] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÎÖ∏ÎûµÍæº", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[126642] = {
					"Î™®ÎûòÎì± Í≤å", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[17464] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Í≤ÄÌà¨ÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[151901] = {
					"Ïû† Î™ª ÎìúÎäî ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[134950] = {
					"Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[134908] = {
					"Î∂âÏùÄÏÜ°Í≥≥Îãà", -- [1]
					"", -- [2]
				},
				[137057] = {
					"Ïû•Î°ú Íµ¨Î•¥ÌÉÄÎãà", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140970] = {
					"Î∞îÏúÑÌååÏó¥Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[128434] = {
					"ÌÉêÏãùÏùò ÌïòÎäòÍ≥µÌè¨", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[43878] = {
					"ÎåÄÏû•Î°ú ÏóêÎ•¥ÌÉÑ", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[135366] = {
					"Í≤ÄÏùÄÏù¥Îπ® Î∞©ÌôîÎ≤î", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[151902] = {
					"ÏÇ¨ÏïÖÌïú ÏòÅÌòº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[40167] = {
					"Ìô©ÌòºÏùò ÌòÑÌòπÏà†ÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[155634] = {
					"ÏÜçÎ∞ïÎêú Ìè≠ÌíçÏùò Ï†ïÎ†π", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[149343] = {
					"Í¥ëÎûÄÏù¥ Ï£ºÏûÖÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"", -- [2]
				},
				[36840] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Î∂ÑÎÖ∏Ïùò ÏÇ¨Ïûê", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[73152] = {
					"Ï∞ΩÍ≥†ÏßÄÍ∏∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[26550] = {
					"Ïö©ÏïΩÌÉà Ï£ΩÏùåÏùòÏàòÏÉâÍæº", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[40935] = {
					"ÏïÑÍ∞ÄÎØ∏Í≥†Î∏îÎ¶∞ ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[124489] = {
					"Í≥†Ïõê Î≤åÎ™©Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134417] = {
					"ÍπäÏùÄÎ∞îÎã§ ÏùòÏãùÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[132797] = {
					"ÏÉàÎÅº ÏÜîÎ®πÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[149344] = {
					"Í¥ëÎûÄÏù¥ Ï£ºÏûÖÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139474] = {
					"ÎåÄÏßÄÏÜåÌôòÏÇ¨ ÏΩîÎ•¥Ïã†", -- [1]
					"", -- [2]
				},
				[128435] = {
					"ÎèÖÏÑ± ÏÇ¨Ïö∞Î¶¨Îìú", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[45926] = {
					"ÏïÑÏÇ¨ÎìúÏùò ÌïòÏàòÏù∏", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[36658] = {
					"Ïä§Ïª¨ÏßÄÍµ∞Ï£º Ìã∞ÎùºÎàÑÏä§", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[137713] = {
					"ÎèàÎ≤ºÎùΩ Í≤å", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[54553] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÏòàÏñ∏Ïûê", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[125620] = {
					"ÏÇ¨Î†πÍ¥Ä ÏïÑÌÉàÎùºÏïÑ", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[137060] = {
					"Î™®ÎûòÏà†ÏÇ¨ Î¨¥ÎÇò", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[29264] = {
					"ÎäëÎåÄ Ï†ïÎ†π", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[132299] = {
					"ÏÑ±ÎÇú ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[77504] = {
					"ÏûøÍ∞ÄÎ£® Í±∞Ïàò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[34793] = {
					"Ìà¨ÏÑùÍ∏∞", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[156000] = {
					"ÎùºÏù¥ÏïÑÎãà ÏâêÏù¥ÎìúÏä§ÌÜ†Ïª§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[135254] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÎã®", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[136549] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ìè¨Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[137061] = {
					"Î∞îÎûåÏ°∞Î†®ÏÇ¨ Ïà†Î£®Ï¶à", -- [1]
					"", -- [2]
				},
				[119990] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138085] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄ ÏÇ¨Ï†ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[116407] = {
					"ÌïòÎ•¥ÏûêÌÉÑ", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[75713] = {
					"Ïñ¥Îë†Îã¨ ÎºõÏ°∞Í∞ÅÏπòÏú†ÏÇ¨", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[131431] = {
					"ÏïàÏ†Ñ Ï†êÍ≤Ä Î°úÎ¥á", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[61245] = {
					"Ï∂ïÏ†Ñ ÌÜ†ÌÖú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[148137] = {
					"ÏõîÍ¥ë Î∞îÎã§ÏÇ¨ÎÉ•Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[137062] = {
					"ÌòàÏÇ¨ÎÉ•Íæº ÏïÑÏπº", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[146872] = {
					"Ï∂îÎ∞©ÎãπÌïú Ïπ¥Ï¥àÌÉÄ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[44922] = {
					"Íµ≥ÏùÄÏÑúÏïΩ ÎèÑÎÅºÏû°Ïù¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[138482] = {
					"Ïó∞Í∏àÏà†ÏÇ¨ ÏπºÎ£®Î¶¨ÏïÖ", -- [1]
					"", -- [2]
				},
				[139110] = {
					"Î∂àÍΩÉ Ïó≠Ïà†ÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[36476] = {
					"Ïù¥ÌÅ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[127882] = {
					"ÏàòÏßëÍ∞Ä ÎπÖÏä§", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[56848] = {
					"Ìô©ÌòºÏùò Ï†ïÏòà ÌïôÏÇ¥Ïûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[146552] = {
					"Ïø® Ìã∞ÎûÄ ÌååÎèÑÏà†ÏÇ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[76087] = {
					"ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[138485] = {
					"Ïã§ÌóòÍ∞Ä ÎàÑÏ°∞Î¶¨ÏïÖ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146863] = {
					"ÏïàÍ∞úÍ≤ΩÎ©∏ ÎÖ∏ÎûµÍæº", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[135016] = {
					"Ïó≠Î≥ë ÏúµÌï©Ï≤¥", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[139009] = {
					"ÏïºÏÉù ÏÇ¨ÎÉ•Íæº", -- [1]
					"", -- [2]
				},
				[72131] = {
					"ÎààÎ®º Í≤ÄÍ∑Ä", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[123289] = {
					"ÏÜåÍ∏àÍªçÏßà Ï£ΩÏùåÎ∞úÌÜ±", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[137064] = {
					"Î∞∏Îü¨ÏΩú Î™ÖÏÇ¨Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140834] = {
					"ÏõÉÎäî Î∂àÍ∏∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130485] = {
					"Í∏∞Í≥ÑÌôî ÌèâÌôîÍ∞êÏãúÎã®", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[124582] = {
					"ÌòëÍ≥°ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[32857] = {
					"Ìè≠ÌíçÏÜåÌôòÏÇ¨ Î∏åÎ£¨ÎîîÎ•¥", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[17465] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Î∞±Ïù∏ÎåÄÏû•", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[144231] = {
					"ÎÇúÌè≠Ìïú Íµ¨Í≤ΩÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[126215] = {
					"ÏßÄÏïà Ìã∞ ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139626] = {
					"Í±¥Ï†∏ Ïò¨Î¶∞ ÏÑ†Ïõê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[133482] = {
					"Í±∞ÎØ∏ ÏßÄÎ¢∞", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[154469] = {
					"Ï≤´ Î≤àÏß∏ ÎπÑÏ†ÑÏà†ÏÇ¨ ÌÉàÎ¶¨Ïä§Îùº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[75459] = {
					"Ïó≠Î≥ëÏóê Í±∏Î¶∞ Î∞ïÏ•ê", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[75715] = {
					"ÎêòÏÇ¥Î¶∞ ÏùòÏãù Ìï¥Í≥®", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[137067] = {
					"Î∞∏Îü¨ÏΩú ÏàòÌò∏Ïûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[144232] = {
					"ÎÇúÌè≠Ìïú Íµ¨Í≤ΩÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[73191] = {
					"Î¨ºÏùò ÏàòÌò∏Î≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[149351] = {
					"ÎßùÍ∞ÑÍ¥ë", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[44648] = {
					"Î∂àÍµ¥Ïùò Í±∞Ïàò", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[154470] = {
					"ÏÉ®ÎìúÎ¶¨Ïä§ ÌéòÎçîÎ¨∏", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[134507] = {
					"Í≥µÏÑ± Í¥¥Î£°", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[36842] = {
					"ÏÑ±ÎÇúÌï¥Í≥® ÏÑúÎ¶¨ ÎßùÎ†π", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[131436] = {
					"ÏÑ†ÌÉùÎ∞õÏùÄ ÌòàÏñ¥ÎØ∏", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[136043] = {
					"ÏóºÏàòÏ†ïÎ†π", -- [1]
					"", -- [2]
				},
				[145769] = {
					"7Íµ∞Îã® Ï†ÑÌà¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[149352] = {
					"ÏòÅÎ°±Ìïú ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏàòÏ†ïÎì±", -- [1]
					"", -- [2]
				},
				[45672] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Î≥ëÏÇ¨", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[57819] = {
					"ÌÉÄÎùΩÌïú ÌååÌé∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[45928] = {
					"ÌÜµÏπòÏûêÏùò ÏßëÌñâÍ¥Ä", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[26716] = {
					"ÌïòÎäòÎπõ ÏàòÌò∏Î≥ë", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[140760] = {
					"ÎåÄÏßÄÏÉùÎ™Ö Í±∞Ïù∏", -- [1]
					"", -- [2]
				},
				[136044] = {
					"ÎßπÎèÖÌåΩÏ∞Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140846] = {
					"ÏûÑÌîÑÏùò Î∞îÎûå", -- [1]
					"", -- [2]
				},
				[137068] = {
					"Î∞∏Îü¨ÏΩú Í∏∞Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[69947] = {
					"Î†àÏù¥Îìú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[134895] = {
					"Í∞ïÏ≤†Í∑∏Î¨º Í≥†ÏπòÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[43430] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Í¥ëÏ†ÑÏÇ¨", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[30622] = {
					"Ïò§ÌÅ¨Ï†ºÏÇ¨Îãò", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[149311] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[136045] = {
					"Î∂ÑÏáÑÌååÎèÑ", -- [1]
					"", -- [2]
				},
				[144747] = {
					"ÌååÏø†Ïùò ÏúÑÏÉÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[39392] = {
					"ÏñºÍµ¥ ÏóÜÎäî ÌÉÄÎùΩÏûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[145771] = {
					"Î∞îÎãê Î∏îÎûôÎ∞∞Îü¥", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[140847] = {
					"ÎåÄÏßÄÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[122984] = {
					"Îã§ÏûêÎ•¥ÏïÑÏù¥ Í±∞Ïàò", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[883] = {
					"ÏÇ¨Ïä¥", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[129208] = {
					"Í≥µÌè¨Ïùò ÏÑ†Ïû• Î°ùÏö∞Îìú", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146860] = {
					"ÏïàÍ∞úÍ≤ΩÎ©∏ ÏïΩÌÉàÏûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[26669] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ ÏïºÎßåÏ†ÑÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[149355] = {
					"Î≥ÄÏ¢Ö ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏàòÏ†ïÎì±", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[61029] = {
					"ÏõêÏãú Î∂àÏùò Ï†ïÎ†π", -- [1]
					"ÏùÄÎπõÏàòÏ†ï Í¥ëÏÇ∞", -- [2]
				},
				[130488] = {
					"Î°úÎ¥á Ï°∞Ï¢ÖÏÇ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[73414] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏÇ¨Ïã†", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[118715] = {
					"ÎêòÏÇ¥ÏïÑÎÇú Í∏∞ÏÇ¨Îã®Ïõê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[32876] = {
					"ÏïîÌùëÎ£¨ Ïö©ÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136047] = {
					"ÏñºÏùåÏã¨Ïû•", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[129802] = {
					"ÎåÄÏßÄÏ†ÑÎ≥µÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[149356] = {
					"Í≤©ÎÖ∏Ìïú ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏàòÏ†ïÎì±", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[33388] = {
					"ÏïîÌùëÎ£¨ ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[20857] = {
					"ÏïåÏπ¥Ìä∏ÎùºÏ¶à ÏàòÌò∏Î≥ë", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[114317] = {
					"Ïó¨Íµ∞Ï£º Ïπ¥Ìä∏Î¶¨Ïò§ÎÇò Î≥∏Ïù∏Îîî", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[33772] = {
					"ÏñºÍµ¥ ÏóÜÎäî Í≥µÌè¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[151916] = {
					"Ï†úÍ∑∏Îùº ÏÉ§ÌîÑÏï°Ïä§", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136160] = {
					"Ïôï Îã§ÏûêÎ•¥", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[148488] = {
					"Ï£ΩÏßÄ Î™ªÌïòÎäî Ï†êÏüÅÏù¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[73415] = {
					"Ïù¥ÏÉ§ÎùºÏ¶àÏùò ÏàòÏï°", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[72903] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í≥µÏÑ±Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[130489] = {
					"Îã§ÏûêÎ¶¨Ïïà Ï∂îÏ†ÅÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[118460] = {
					"ÏòÅÌòºÏùò Í∏∞Í≥Ñ", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[143215] = {
					"Î≤îÍ≥†Îûò", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151917] = {
					"ÌÉÄÎ•¥Ïïå Î≥∏Ïä§ÌîºÌÑ∞", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136049] = {
					"ÏïåÍ≤åÎÖº", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135247] = {
					"Î∞îÎ¶¨Í∑∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[149358] = {
					"Í±∞ÎåÄÌïú ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏàòÏ†ïÎì±", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137585] = {
					"Íµ¨ÏÜçÏùò ÌÜ†ÌÖú", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[123236] = {
					"Ï¢ÖÏ¢ÖÍ±∏Ïùå Í≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134514] = {
					"Ïã¨Ïó∞Ïùò Ïù¥ÍµêÎèÑ", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[151918] = {
					"Î∂ÅÎÖòÏùò ÎùºÏ¶àÏπ¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[75975] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[136050] = {
					"ÌïèÎπõÍ∏∞Î•ò", -- [1]
					"", -- [2]
				},
				[140657] = {
					"Î∞îÏúÑÎøî Í±∞Ïàò", -- [1]
					"", -- [2]
				},
				[149359] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏ Í±∞Ïàò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[127381] = {
					"ÏßÑÌùô Í≤å", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[138098] = {
					"ÏïÑÏù¥Ïñ∏Ìè¨ÏßÄÏùò Ï†ïÏòàÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[57749] = {
					"ÏñºÍµ¥ ÏóÜÎäî ÌÉÄÎùΩÏûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[45097] = {
					"Íµ≥ÏùÄÏÑúÏïΩ Ï°∞Î†®ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[32877] = {
					"ÏïîÌùëÎ£¨ Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136051] = {
					"ÌååÎèÑÎ®∏Ïä§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[111295] = {
					"Í∏∏Îì§Ïù∏ ÎßàÎÇòÌò∏ÎûëÏù¥", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[149360] = {
					"Îç©Ïπò ÌÅ∞ ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131445] = {
					"ÎèÖÎ∞© Í∞ÑÏàò", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[79303] = {
					"ÌôîÎ†§Ìïú ÏπºÎÇ†Í∞àÌÄ¥", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[45930] = {
					"Î∞îÎûåÏùò ÎåÄÏã†", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[75976] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[147825] = {
					"7Íµ∞Îã® ÏùòÎ¨¥Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[144754] = {
					"Í≥µÌè¨Ïùò ÌååÎëêÏö∏", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[140659] = {
					"Î∂ÑÎÖ∏ÏøµÏøµ", -- [1]
					"", -- [2]
				},
				[135997] = {
					"Íµ∞Ï£º ÏßÄÎ•¥ÏΩò", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[138100] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú Î≥¥Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134005] = {
					"ÌòàÏïîÍπ®Î¨ºÏù¥", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[118462] = {
					"ÏòÅÌòºÏùò Ïó¨Ïôï Îç∞ÏûêÎÇò", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[129832] = {
					"Îî∞Í∞úÎπÑÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[138101] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú ÎßàÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140148] = {
					"Í¥ëÎûÄÏùò ÌöåÏÉâÌÑ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140660] = {
					"Í±∞ÎåÄÎøî", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[119742] = {
					"ÏßÄÏò•ÏàòÌò∏Î≥ë Ïπ®ÎûµÏûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[144757] = {
					"ÏóêÎìúÍ∞ÄÎìú ÏÖ∞Ïù¥ÎìúÌÅ¥Î°ú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[75209] = {
					"ÎÖπÏïÑÎÇ¥Î¶∞ ÎåÄÏßÄÏùò Ï†ïÎ†π", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[32878] = {
					"ÏïîÌùëÎ£¨ Í∏∞ÏõêÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[16507] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Î≥¥Ï¥àÎ≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[147827] = {
					"7Íµ∞Îã® Ìï¥Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[144244] = {
					"Î∞±Í∏à ÎÇúÌÉÄÎ°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[140661] = {
					"Í≥®ÏßúÍ∏∞Ï≤úÎë•", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[33134] = {
					"ÏÇ¨Îùº", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[75210] = {
					"ÌîºÎßùÏπò ÍµêÎèÑÍ¥Ä", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[138102] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú ÏÇ¨Ï†ú", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134060] = {
					"Íµ∞Ï£º Ïä§ÌÜ∞ÏÜ°", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[114624] = {
					"ÎπÑÏ†Ñ Í∞êÎèÖÍ¥Ä", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[147828] = {
					"7Íµ∞Îã® Í∏∞ÎßàÎ≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[144245] = {
					"ÎÇ®Ï™Ω Î∞îÎã§ Í∞ÄÏò§Î¶¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140662] = {
					"ÎäôÏùÄ Í±∞ÎåÄÌÑ∏", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[145269] = {
					"Î∞òÏßùÍ∞ÄÏãú", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[137591] = {
					"ÏπòÏú†Ïùò Ìï¥Ïùº ÌÜ†ÌÖú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[138103] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìú ÏÑùÍ∂ÅÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140151] = {
					"ÏÉàÎÅº Ïç©ÏùÄÎ∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[29304] = {
					"Ïä¨ÎùºÎìúÎûÄ", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[29240] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º Î∂ÄÍ¥Ä", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[129469] = {
					"Ïã¨Ìï¥ ÏóâÍ∏àÍ≤å", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[17083] = {
					"ÌÉÄÎùΩÌïú Ïò§ÌÅ¨ Î≥ÄÏ†àÏûê", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[116549] = {
					"Î≥¥Ï°∞ Í∞ÄÏàò", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[135975] = {
					"ÎπÑÎ≤à ÎÖ∏ÎèôÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[75211] = {
					"ÎßàÍ∑∏Îßà Íµ∞Ï£º", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[57333] = {
					"ÏÇ∞ÏÑ± ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[114625] = {
					"Ïú†Î†π ÏÜêÎãò", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[138105] = {
					"Ïä§Ìä∏Î°¨Í∞ÄÎìúÏùò Ï†ïÏòàÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140152] = {
					"Ïç©ÏùÄÎ∞úÌÜ± Ìà¨ÏÇ¨", -- [1]
					"", -- [2]
				},
				[144759] = {
					"ÏàòÌò∏Ïûê Îã§Í∑∏Îã§", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[111554] = {
					"ÏßÄÏò•ÌôîÏóº ÎßàÍ∑Ä", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[21818] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[134010] = {
					"ÏõÖÏñºÍ±∞Î¶¨Îäî Í¥¥Î¨º", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[73188] = {
					"ÏÇ¨Î°úÏû°Ìûå ÎèôÍµ¥ Î∞ïÏ•ê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[129470] = {
					"Ïã¨Ìï¥ Í≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[129214] = {
					"ÎèôÏ†Ñ Ìà¨ÏûÖÏãù Íµ∞Ï§ë ÎÇúÌÉÄÍ∏∞", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[144248] = {
					"ÏàòÏÑù Í∏∞Í≥ÑÍ≥µ Ïä§ÌååÌÅ¨ÌîåÎü≠Ïä§", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139394] = {
					"ÏßÑÏ∞ΩÎß§Î≥µ Îä™ÏßÄ ÏÇ¨Ï†ú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[40166] = {
					"ÏÇ¨Î°úÏû°Ìûå Í∑∏Î°† Ìà¨ÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[144296] = {
					"Í±∞ÎØ∏ Ï†ÑÏ∞®", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[26553] = {
					"Ïö©ÏïΩÌÉà Í¥ëÏã†Ïûê", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[122560] = {
					"Í∑∏Î¶ºÏûê Ï∂îÏ†ÅÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[114626] = {
					"Ïô∏Î°úÏö¥ ÏòÅÌòº", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[144249] = {
					"Ïò§Î©îÍ∞Ä ÏÑ¨Î©∏Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[140154] = {
					"Ïö∞ÎëêÎ®∏Î¶¨ Ïç©ÏùÄÎ∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[114316] = {
					"ÎÇ®ÏûëÎ∂ÄÏù∏ ÎèÑÎ°úÏãúÏïÑ Î∞ÄÏä§ÌÉÄÏù¥ÌîÑ", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[145273] = {
					"Ïù∏ÏûêÏâ¨Ïùò ÏÜê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[134058] = {
					"Í∞ïÌíçÏà†ÏÇ¨ ÌååÏòà", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[134012] = {
					"ÏûëÏóÖÎ∞òÏû• ÏïÑÏä§Ïπ¥Î¶¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[45932] = {
					"ÌïòÎäòÎ∂ïÍ¥¥ Î≥Ñ", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[135764] = {
					"Ìè≠Î∞úÏùò ÌÜ†ÌÖú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[132868] = {
					"ÏùëÍ≤∞Îêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"", -- [2]
				},
				[129471] = {
					"Ïã¨Ìï¥ Î™®ÎûòÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144807] = {
					"Í±∏Ïã†Îì§Î¶∞ Ï∂îÏ†ÅÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[145274] = {
					"ÏñÑÎûèÏùò Î≥¥Î£®", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[29822] = {
					"ÎìúÎùºÏπ¥Î¶¨ Î∂àÎßàÏà†ÏÇ¨", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[32934] = {
					"Ïò§Î•∏Ìåî", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[124581] = {
					"Í∞ÄÏãúÍ∞ëÏò∑ Î¨¥Ïá†ÌÑ±Í±∞Î∂Å", -- [1]
					"", -- [2]
				},
				[146854] = {
					"Ïä§ÌÖîÎùº Îã§ÌÅ¨Ìè¨Ïö∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140854] = {
					"ÌùêÎ¶ÑÎ¨º", -- [1]
					"", -- [2]
				},
				[57259] = {
					"Ìô©ÌòºÏùò Í≥µÏÑ± ÌååÍ¥¥Ïûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[134768] = {
					"ÎÉâÌòπÌïú Î™®ÎûòÏßëÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[131670] = {
					"Ïã¨Ïû•ÌååÎ©∏ Îç©Íµ¥ÏôúÍ≥°ÏÇ¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[145787] = {
					"Í∞ïÏ≤†Í≥†Ï°∞ Ìè¨Î≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[112068] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[28920] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º Í±∞Ïù∏", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[131587] = {
					"ÌòºÏù¥ Îπ†Ï†∏ÎÇòÍ∞Ñ ÎåÄÏû•", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[20923] = {
					"ÌòàÌà¨ÏÇ¨ Ìè¨Î£Ω", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[140157] = {
					"ÏÉàÎÅºÌè¨ÏãùÏûê Ïç©ÏùÄÎ∞úÌÜ±", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140669] = {
					"Î∞îÏúÑÍ∞àÍ∏∞ Ïö∏ÏùåÏõ¨ÎîîÍ≥†", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[71395] = {
					"Î≥ÄÌòïÎêú Î†π Í≥®Î†ò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134056] = {
					"ÏïÑÏø†ÏãúÎ•¥", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[150396] = {
					"ÎπÑÌñâÏ≤¥ R-21/X", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[14465] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ Ï†ÑÌà¨ ÍπÉÎ∞ú", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[138623] = {
					"ÏïÑÎßàÏÖã Í∂ÅÏàò", -- [1]
					"", -- [2]
				},
				[132481] = {
					"Ïø® Ìã∞ÎûÄ ÏÑ†Î¥âÎåÄÏõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140158] = {
					"Îã¥Ï¶ôÏóê Ï†ñÏùÄ Ïç©ÏùÄÎ∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[33136] = {
					"ÏöîÍ∑∏ÏÇ¨Î°†Ïùò ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[131009] = {
					"Ìô©Í∏à ÏòÅÌòº", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[16700] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Íµ∞Îã®Î≥ë", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[20859] = {
					"ÏïåÏπ¥Ìä∏ÎùºÏ¶à Î≥¥Ï¥àÎ≥ë", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[146813] = {
					"ÌöåÏÉâÎπõÏùò Íµ∞ÌÑ∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[33776] = {
					"ÎòêÏπòÏÑ∏ÎÅº", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[135552] = {
					"Ï£ΩÏùåÏóê Î¨ºÎì† ÎÖ∏ÏòàÏÇ¨ÎÉ•Íæº", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[29305] = {
					"Î¨¥ÎùºÎπÑ", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[140671] = {
					"ÎÇúÌè≠Ìïú ÏïºÏÉùÎ∞úÌÜ±", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[72655] = {
					"ÍµêÎßåÏùò Ï°∞Í∞Å", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[77006] = {
					"ÏÉàÎÅº ÏãúÏ≤¥Í±∞ÎØ∏", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[142207] = {
					"Ï†ÑÎ†π Ïò§Î∞îÎùº", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[138624] = {
					"ÏïÑÎßàÏÖã Ïö©ÏÇ¨", -- [1]
					"", -- [2]
				},
				[114629] = {
					"Ïú†Î†π ÎãπÏõê", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[44981] = {
					"Íµ≥ÏùÄÏÑúÏïΩ Î¨¥ÎëêÏû•Ïù¥", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[140672] = {
					"ÏßÄÏ†ÄÎ∂ÑÌïú Î®ºÏßÄÍ∞ÄÏ£Ω", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[55659] = {
					"ÎÇ†Îõ∞Îäî ÏûÑÌîÑ", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[131666] = {
					"ÏÑúÏïΩÎã® Í∞ÄÏãúÏû•Ïù¥", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[139340] = {
					"ÏñºÏùåÏóÑÎãà Í∞ïÎ†πÏà†ÏÇ¨", -- [1]
					"", -- [2]
				},
				[131677] = {
					"Ïã¨Ïû•ÌååÎ©∏ Î£¨ÎßàÏà†ÏÇ¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[120516] = {
					"ÏπºÎÇ†ÌÑ± ÎÇ†ÏåòÎπÑÎäò", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[45922] = {
					"Ï∞ΩÍ≥µÏùò ÏïîÏÇ¥Ïûê", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[56427] = {
					"Ï†ÑÌà¨ÎåÄÏû• Î∏îÎûôÌòº", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[30329] = {
					"ÏïºÎßåÏùò ÎèôÍµ¥ ÏïºÏàò", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[140673] = {
					"Î∂ÑÎÖ∏ÏúºÎ•¥Î†Å", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[131785] = {
					"ÏúôÏúôÎåÄÎäî Î∞îÌÄ¥", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[138626] = {
					"ÏïÑÎßàÏÖã Í¥ëÏã†ÎèÑ", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[26554] = {
					"Ïö©ÏïΩÌÉà ÌòÑÏûê", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[146816] = {
					"Î∞îÌäº Î∏åÎ¶≠ÌñÑ Í≤Ω", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135043] = {
					"ÌùâÌè¨Ìïú ÌÜ±ÎãàÏù¥Îπ®", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[111303] = {
					"ÎÇòÏù¥Ìä∏Î≥∏ ÌòÑÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[111047] = {
					"Í∏∞ÏÉùÏ∂© Ïñ¥Îë† ÏïÖÎßà", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[140674] = {
					"ÍπäÏùÄÏö∏Ïùå", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137091] = {
					"ÎÜíÏùÄ Í∞êÏãúÎåÄ ÏàòÏäµÏÉù", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[138061] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ Î∂ÄÎëêÏùºÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[34802] = {
					"ÏàòÎ¶¨Í≤Ä Ìà¨Ï≤ôÍ∏∞", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[138627] = {
					"ÏïÑÎßàÏÖã Ï†úÏÇ¨Ïû•", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[135044] = {
					"Í≤åÍ±∏Ïä§Îü¨Ïö¥ Î∂ÑÏáÑÏïÑÍ∑Ä ÏïÖÏñ¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139651] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[135049] = {
					"Í≥µÌè¨ÎÇ†Í∞ú ÍπåÎßàÍ∑Ä", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[34161] = {
					"Í∏∞Í≥ÑÏ†ÑÌà¨Í∏∞ 54-A", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[137092] = {
					"Î∞∏Îü¨ÏΩú Ïã†Î¥âÏûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[131013] = {
					"Îã§ÏûêÎ¶¨Ïïà ÏßëÍ≤åÎ∞ú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146849] = {
					"ÏòÅÌòºÏùò ÎåÄÍ∞Ä Î°úÏõ®ÎÇò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138628] = {
					"ÏïÑÎßàÏÖã ÏÇ¨Ï†ú", -- [1]
					"", -- [2]
				},
				[135045] = {
					"Ï≤ôÏ∂îÎòëÎî±", -- [1]
					"", -- [2]
				},
				[139652] = {
					"ÏãúÎ¶∞Îπõ Ìï¥Ïïà Í∏∏Ïû°Ïù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[131974] = {
					"Î∂ÄÍ¥Ä Î∞úÎ†å", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[140676] = {
					"Í±∞ÎåÄÌïú ÎèåÎ∂ÄÎ¶¨", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[132998] = {
					"Í∑∏Ìõà", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[133510] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ ÏÑ±Í∏∞ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[71380] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî Î∞îÏúÑ Î™®Íµ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[71378] = {
					"Í∏∞Î†å ÏàòÌò∏Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[135046] = {
					"ÏóâÍ∏àÏïÖÏñ¥", -- [1]
					"", -- [2]
				},
				[45935] = {
					"ÏÇ¨Ïõê ÏàôÎ†®ÏÇ¨Ï†ú", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[138660] = {
					"ÏïàÍ∞ú ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144772] = {
					"Ïó¨Íµ∞Ï£º ÌÉÄÎßàÌÇ®", -- [1]
					"", -- [2]
				},
				[72658] = {
					"ÏúµÌï©Îêú Ïò§Îßå", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[73185] = {
					"ÏÑ±ÎÇú Î¨¥ÏÉ® ÏïºÏàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[118728] = {
					"ÏÑ¨Îú©Ìïú ÎºàÍ∞êÏãúÏûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[138630] = {
					"ÏÑ±ÏßÅÏûê Ïù¥ÏûêÎìú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[114632] = {
					"ÏàòÌñâÏõê Ïú†Î†π", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139654] = {
					"ÏïàÍ∞úÎπÑÎäò ÏßÑÌùôÎ∞úÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[18880] = {
					"Ìô©Ï≤úÏùò Í∞ÄÏò§Î¶¨", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[140678] = {
					"Ïö∏Î∂ÄÏßñÎäî ÏÑúÎ¶¨ÏàòÏóº Ïõ¨ÎîîÍ≥†", -- [1]
					"", -- [2]
				},
				[78801] = {
					"Ïñ¥Îë†ÌååÌé∏ ÏÇ∞ÏÑ±Îì±Îî±ÏßÄ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[87760] = {
					"ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[134024] = {
					"ÌÉêÏöïÏä§Îü¨Ïö¥ Íµ¨ÎçîÍ∏∞", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[138631] = {
					"Í∏∏Ïû°Ïù¥ ÏΩ∞Îî§", -- [1]
					"", -- [2]
				},
				[135048] = {
					"ÌîºÌà¨ÏÑ±Ïù¥ ÏÉàÎÅº Î©ßÎèºÏßÄ", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[139655] = {
					"ÏãúÎ¶∞Îπõ ÏòàÏñ∏Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[29306] = {
					"Í∞àÎã§Îùº", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[140679] = {
					"ÏÑúÎ¶¨ÏàòÏóº Ïõ¨ÎîîÍ≥†", -- [1]
					"", -- [2]
				},
				[105419] = {
					"ÌùâÌè¨Ìïú Î∞îÏã§Î¶¨Ïä§ÌÅ¨", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[136100] = {
					"Í∞ÄÎùºÏïâÏùÄ ÌÜ†Ï∞©ÏòÅÌòº", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[132491] = {
					"Ïø® Ìã∞ÎûÄ Î™ÖÏÇ¨Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138632] = {
					"ÏàòÌò∏Ïûê ÏïÑÏàòÎã§", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[114633] = {
					"Ïú†Î†π Ï¢ÖÏóÖÏõê", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139656] = {
					"ÏãúÎ¶∞Îπõ Ï†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140168] = {
					"ÎäôÏùÄ Í∞ÄÏä¥ÏæÖ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[114634] = {
					"Ï£ΩÏßÄ Î™ªÌïòÎäî ÌïòÏù∏", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[137097] = {
					"Î∞∏Îü¨ÏΩú Ï£ºÎ¨∏Ïà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[71393] = {
					"Î™®Íµ¨ Ïñ¥Îë† ÏùòÏãùÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138635] = {
					"ÏÇ¨Î†πÍ¥Ä ÌõÑÏÇ∞", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[138633] = {
					"ÏàòÏÇ¨ ÎßàÌä∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[135050] = {
					"Í≥µÌè¨Ïùò ÏÑ†Ïû• Î∞¥ÎìúÍ∑∏Î¶º", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[139657] = {
					"ÏãúÎ¶∞Îπõ Î∞îÎã§ÏïΩÌÉàÏûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[40177] = {
					"Ï†úÎ†®Ïû•Ïù∏ Ìä∏Î°±Íµ¨Ïä§", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[140681] = {
					"Í≤åÍ±∏Ïä§Îü¨Ïö¥ Íµ¨Î£®Îëê", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137098] = {
					"Î¶¨Ïä§ÏΩîÎùºÏä§", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[135052] = {
					"Ïó≠Î≥ë ÎëêÍ∫ºÎπÑ", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[143754] = {
					"Ìè¨Í±∞Ïä§ Ïï§ÎπåÎ†àÏù¥ÏßÄ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138634] = {
					"ÏòàÏñ∏Ïûê ÎùºÌîºÏÇ¨", -- [1]
					"", -- [2]
				},
				[18429] = {
					"ÎπÑÏ†Ñ ÎßàÍ∑Ä", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[41073] = {
					"Ìô©ÌòºÏùò Î¨¥Í∏∞Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[140171] = {
					"ÏïàÍ∞úÌÑ∏", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140682] = {
					"ÎπôÌïòÏ£ºÎ®π", -- [1]
					"", -- [2]
				},
				[142219] = {
					"Í∏∞Ïù¥Ìïú ÏÇ¨Ïûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[145801] = {
					"ÎπÑÌñâÏÑ† Í∏∞Ïà†Ïûê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[128455] = {
					"Ìä∏Î°†Ïûê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[33651] = {
					"VX-001", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[128967] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ï†ÄÍ≤©Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139659] = {
					"ÏïàÍ∞úÎπÑÎäò Ï†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136076] = {
					"Ìù•Î∂ÑÌïú ÎπõÍµ¨Î¶Ñ", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[140683] = {
					"Î∂ÄÏàòÎäî Ïûê Ïñ¥Îë†ÌÑ∏", -- [1]
					"", -- [2]
				},
				[72661] = {
					"Ïó¥Ï†ï", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139660] = {
					"ÏïàÍ∞úÎπÑÎäò Î©ÄÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[122313] = {
					"ÏäπÏ≤úÏûê Ï£ºÎùºÏïå", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[138636] = {
					"ÏôïÏûê ÏïÑÎ∞îÎ¶¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[118730] = {
					"ÏòÅÌòº ÏûîÎ•òÎ¨º", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[143755] = {
					"ÌïèÏßÄ Í∏∞Ïñ¥ÏõåÎ∏î", -- [1]
					"", -- [2]
				},
				[134916] = {
					"Îì§Ï∞Ω ÏÇ¨ÎÉ•Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[140684] = {
					"Î∂ÑÏáÑÏøµÏøµ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[56854] = {
					"Ìô©ÌòºÏùò Ï†ïÏòà ÎÉâÌòàÍ≤ÄÏÇ¨", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[130334] = {
					"ÎèåÏû•Í∞ë ÌÅ∞ÎààÎ∞îÏã§Î¶¨Ïä§ÌÅ¨", -- [1]
					"", -- [2]
				},
				[146827] = {
					"ÏïºÏÉù Í∞ú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[71382] = {
					"Ïú†Í≥® Îã®ÏßÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[116939] = {
					"Î™∞ÎùΩÌïú ÌôîÏã†", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139661] = {
					"ÏïàÍ∞úÎπÑÎäò Ï±ÑÏßëÍæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72150] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ïñ¥Îë†ÎßàÎ≤ïÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[40306] = {
					"Ìô©ÌòºÏùò Î¨¥Í∏∞Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[133007] = {
					"ÌíÄÎ†§ÎÇú ÌùâÎ¨º", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[137614] = {
					"ÌååÍ¥¥Ïùò Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136042] = {
					"Íµ∞Ï£º ÏïÑÏø†ÏïÑÎÖ∏Ïä§", -- [1]
					"", -- [2]
				},
				[146828] = {
					"ÏïºÏÉù Í∞ïÏïÑÏßÄ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[114636] = {
					"Ïú†Î†π Í≤ΩÎπÑÎ≥ë", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139662] = {
					"ÏïàÍ∞úÎπÑÎäò ÎπÑÏÜåÌôòÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[16699] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê ÌïôÏÇ¥Ïûê", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[137103] = {
					"ÌîºÏùò ÌôòÏòÅ", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[28923] = {
					"Î°úÏºÑ", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[146829] = {
					"Î∂àÎ©∏Ïùò ÏàòÌò∏Ïûê", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[71392] = {
					"Ïñ¥Îë† ÏùòÏãùÏà†ÏÇ¨Ïùò ÏÑ±Î¨ºÌï®", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[71383] = {
					"ÏΩîÎ•¥Ìã∞ÌÅ¨ Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[128969] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ ÏßÄÌúòÍ¥Ä", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139663] = {
					"ÏïàÍ∞úÎπÑÎäò Í∞àÎåÄÏóÆÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[29307] = {
					"ÎìúÎùºÏπ¥Î¶¨ Í±∞ÎåÄÍ≥®Î†ò", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[144782] = {
					"ÌòïÏ†ú Î∏åÎ£®Ïóî", -- [1]
					"", -- [2]
				},
				[136592] = {
					"ÌîåÎ¶∞ ÌéòÏñ¥ÏúàÎìú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[136006] = {
					"ÎÇúÌè≠Ìïú Íµ¨Í≤ΩÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[140849] = {
					"Ïó≠Î≥ëÏùò Îèå Ï°±ÏÜç", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[122571] = {
					"Í∑†Ïó¥ Í∞êÏãúÏûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[114637] = {
					"Ïú†Î†π Î≥¥Ï¥à", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[139664] = {
					"ÏïàÍ∞úÎπÑÎäò Í≥µÌè¨ÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[29819] = {
					"ÎìúÎùºÏπ¥Î¶¨ Ï∞ΩÍ∏∞Î≥ë", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[45919] = {
					"Ïñ¥Î¶∞ Ìè≠Ìíç Ïö©", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[136886] = {
					"ÍπÉÎ∞úÏö¥Î∞òÏûê ÏΩîÎûÑ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[73951] = {
					"ÏÇ¨Î†πÍ¥Ä Ìã∞ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134034] = {
					"Î¨¥Ï†ïÌòï ÌòπÎç©Ïñ¥Î¶¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[138641] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[146831] = {
					"Ïø® Ìã∞ÎûÄ Ìè≠ÌíçÏù∏ÎèÑÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146832] = {
					"Í∞ïÎ†πÏà†ÏÇ¨ ÏÇ¨ÎèÑ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[71385] = {
					"Ïä§ÎùºÌã∞ÌÅ¨ Ìè≠Í≤©Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[72408] = {
					"ÎåÄÍ≥µÌè¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[72927] = {
					"ÏΩîÎ≥¥ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[44658] = {
					"Ïã¨Ìï¥ Î©ÄÎ°ù Ïπ®ÎûµÏûê", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[146320] = {
					"Ï†ïÎ¨¥Í¥Ä ÏûòÎûÄ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138642] = {
					"ÌÅ¨Î∞úÎîîÎ•¥ ÎèåÍ≤©Î≥ë", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131018] = {
					"Ïû•Íµ∞ Ïπ¥ÎùºÎÇò", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[32885] = {
					"ÏÇ¨Î°úÏû°Ìûå Ïö©Î≥ë Î≥ëÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136083] = {
					"ÏûäÌòÄÏßÑ ÌÜ†Ï∞©ÏòÅÌòº", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[140690] = {
					"Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà ÎèÖÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139667] = {
					"ÏòàÏñ∏Ïûê Í∑∏Î•ºÍ∏ÄÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146834] = {
					"Í∞ïÎ†πÏà†Ïùò ÎåÄÍ∞Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[33525] = {
					"ÌôçÏàòÎ¶º ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[146833] = {
					"Í∞ïÎ†πÏà† Ï∞ΩÏ°∞Ïà†ÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[144286] = {
					"ÏûêÏÇ∞ Í¥ÄÎ¶¨Ïûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[129227] = {
					"ÏïÑÏ†úÎ°úÌÅ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[54512] = {
					"Îí§ÌãÄÎ¶∞ ÏãúÍ∞ÑÏùò ÌååÏàòÍæº", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[140691] = {
					"Í±∞ÎåÄÌïú Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[145298] = {
					"Íµ∂Ï£ºÎ¶∞ ÏïºÏÉùÏùò Ï°¥Ïû¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139679] = {
					"ÏïìÍ∑∏Î•º", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146322] = {
					"Í≥µÏÑ±ÌååÍ¥¥Ïûê Î°úÏπ¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138644] = {
					"ÌÅ¨Î∞úÎîîÎ•¥ Ï†ÄÏ£ºÎ∞©ÎûëÏûê", -- [1]
					"", -- [2]
				},
				[140692] = {
					"ÌîºÍµ¨Î†ÅÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139668] = {
					"ÌååÎèÑÍ≤∞ÏÜçÏÇ¨ Í≥†Î•¥Í∏Ä", -- [1]
					"", -- [2]
				},
				[140180] = {
					"ÎÇúÌè≠ÌïèÎ¨º", -- [1]
					"", -- [2]
				},
				[35189] = {
					"ÌäπÏπòÏïºÏ†ï", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[123853] = {
					"ÏñºÎùºÏù¥Ïñ∏Ïä§ ÎßàÏà†ÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[91349] = {
					"ÎßåÎÖ∏Î°úÏä§", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[87771] = {
					"ÏûøÍ∞ÄÎ£®ÏûëÏóÖÏû• ÏùºÍæº", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[138645] = {
					"ÌÅ¨Î∞úÎîîÎ•¥ ÏòÅÌòºÏïΩÌÉàÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[87515] = {
					"Í∞ïÏ≤† ÌôîÏóºÏ†ÑÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[139669] = {
					"Ï£ºÏà†ÏÇ¨ Í∞ÄÎ•¥ÎØà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[123287] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ ÏπºÏû°Ïù¥", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[140693] = {
					"Ïâ¨ÏùµÏπ¥ÎùºÏä§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[32886] = {
					"ÏïîÌùëÎ£¨ ÏàòÌñâÏÇ¨Ï†ú", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[146838] = {
					"Î∂ÄÏÑúÏßà ÎìØÌïú Ìï¥Í≥®", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[29308] = {
					"Í≥µÏûë ÌÉàÎã§Îûå", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[138646] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[146326] = {
					"Ïù∏Í∞ÑÏÇ¨ÎÉ•Íæº Í∞àÏôÄÎÇò", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139670] = {
					"Î™®Ïò≥Í≥°", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140182] = {
					"Î∞ÄÎ¶ºÏßÄÏßÑ ÎÇòÎ≠áÏûéÎÇ©ÏûëÏù¥", -- [1]
					"", -- [2]
				},
				[140694] = {
					"ÌÉêÏöïÏùò Ïö∞Í±±ÌÑ±", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[138648] = {
					"ÏàòÏùòÏûëÍ≥µ ÏãúÍ∑∏Î¶¨Îìú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[146844] = {
					"Í≥ÑÏïÖÏûê Ïò¨ÌîÑÌÅ¨Î¶¨Í∑∏", -- [1]
					"", -- [2]
				},
				[33526] = {
					"Î¨¥Ïá†ÎøåÎ¶¨Îç©Íµ¥ÏÜê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138647] = {
					"ÌûàÏïÑÎÇò Ìè¨Í∑∏Î∏åÎßÅÏñ¥", -- [1]
					"", -- [2]
				},
				[71388] = {
					"Ìò∏Î∞ïÏÑùÏóê Í∞áÌûå Ïø§Ï¥ù", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139671] = {
					"ÏÉÅÏñ¥ÌïôÏÇ¥Ïûê Î®∏Í∏ÄÎ£©", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[100820] = {
					"ÏòÅÌòº ÎäëÎåÄ", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[72411] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Î∞∞Í∏âÏõê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[105427] = {
					"ÌïòÎäòÍ≤©ÎÖ∏ ÌÜ†ÌÖú", -- [1]
					"ÏùÄÎπõÏàòÏ†ï Í¥ëÏÇ∞", -- [2]
				},
				[72412] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∑∏Îü∞Ìä∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134041] = {
					"Í∞êÏóºÎêú Ïù∏Î∂Ä", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[130765] = {
					"ÏÉàÎÅº Î∞ÄÎ¶º Ï∂îÏ†ÅÏûê", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[137626] = {
					"ÌååÍ¥¥Ïùò Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[73948] = {
					"ÏÇ¨Î†πÍ¥Ä Ïù¥ÌÅ¨ÌÉà", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[29820] = {
					"ÎìúÎùºÏπ¥Î¶¨ Ïã† ÏÇ¨ÎÉ•Íæº", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[140696] = {
					"Í≥µÌè¨Ïùò ÎÇòÏ£º", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[145303] = {
					"ÏπºÎèÑÎ†àÏù¥ ÏàòÎ¶¨Í≤Ä Ìà¨Ï≤ôÍ∏∞", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[137625] = {
					"ÌååÍ¥¥Ïùò Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[33271] = {
					"Ïû•Íµ∞ Î≤†ÏûëÏä§", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138649] = {
					"Î≤åÌîÑ Ïä§ÌÜ∞ÏáºÏñ¥", -- [1]
					"", -- [2]
				},
				[116689] = {
					"ÏïÑÌä∏Î¶¨Í∞Ñ", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139673] = {
					"Ïù¥Îπ®ÎßéÎ°ù", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139677] = {
					"Ïã¨Ïó∞ÏÜåÌôòÏÇ¨", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[44404] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ìè≠ÌíçÏö∞ ÎßàÎÖÄ", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[145304] = {
					"ÏïºÏÉùÏùò ÍµêÏÇ¥Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[81114] = {
					"Í∑∏Î°†ÎßÅ ÎÖ∏ÎèôÏûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[112596] = {
					"Ìô©ÌòºÍ∞êÏãúÎåÄ ÍµêÎèÑÍ¥Ä", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[146840] = {
					"Ìï¥Í≥® ÏàòÌò∏Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[18431] = {
					"ÏóêÌÖåÎ¶¨Ïñº Î¥âÌôî", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[139674] = {
					"Ïã¨Ïó∞ÎπÑÎäò", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146843] = {
					"Í∞ÄÏãú ÎèãÏπú Íµ¨Ïö∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[31228] = {
					"Ïà≤ÏßÄÍ∏∞ ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[145305] = {
					"ÏïºÏÉùÏùò Í±∞Ìïú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[137627] = {
					"Ï°∞Ïù¥Îäî Í≥µÌè¨", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[33527] = {
					"ÏûêÏó∞Ïùò Í≤ÄÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[138651] = {
					"Ïã§Î≤†Î¶¨ÏïÑ Î¶¨ÌîÑÏΩúÎü¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[112595] = {
					"ÏÉ¨ÎèÑÎ†àÏù¥ ÎåÄÎßàÎ≤ïÏÇ¨", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139675] = {
					"Ïã¨Ïó∞ÏàòÏÉâÏûê", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[69946] = {
					"ÏïºÏàò Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138848] = {
					"ÏπºÏ∂§Íæº Ï°∏ÎùºÌÅ¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[57158] = {
					"ÎåÄÏßÄ ÌååÍ¥¥Ïûê", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[114264] = {
					"Ï≤úÎë•Ïù¥", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[73949] = {
					"ÏÇ¨Î†πÍ¥Ä ÎÇòÏπ¥Ï¶à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138652] = {
					"ÌååÎèÑÏ†ÄÏ£º Ïó¨Íµ∞Ï£º", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[126928] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìï¥Ï†Å", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[131486] = {
					"ÎåÄÏ¥ùÎèÖ Ìà¨ÎûÑÎ¶¨Ïò®", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[139676] = {
					"ÌååÎèÑÏòàÏñ∏Ïûê ÏòÆÎ•¥Í∑∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[56865] = {
					"Î¨ºÏùò Ï∂§Íæº", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[39414] = {
					"ÏÉÅÍ∏â Î∞îÎûåÏà†ÏÇ¨", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[121567] = {
					"Íµ¨Íµ¨", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[129231] = {
					"Î¶≠ÏÇ¨ ÌîåÎü≠Ïä§ÌîåÎ†àÏûÑ", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[138653] = {
					"Î∂ÄÌå®ÌïòÎäî ÏÑ†Ï≤¥Ïùò Ìò∏Ïä§ÎπÑÎ•¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[116691] = {
					"Î≤®ÎùºÌÅ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[129232] = {
					"Î™®Íµ¥ ÎùºÏ¶àÎç©ÌÅ¨", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[76253] = {
					"ÏÉàÎÅº Í≥µÌè¨Ïùò ÍπåÎßàÍ∑Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[144796] = {
					"ÎïúÏû•Ïù¥Ïôï Î©ïÏπ¥ÌÜ†ÌÅ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138650] = {
					"ÌååÎèÑÏû†Ïãù Ïö©ÏÇ¨", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[48756] = {
					"Í∞àÍ≥†Î¶¨ Í∑∏Î¨º", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[122322] = {
					"Íµ∂Ï£ºÎ¶∞ Îí§ÌãÄÎ¶∞ Ïûê", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[93913] = {
					"ÏßÄÏò•Î∂àÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[99541] = {
					"ÎêòÏÇ¥ÏïÑÎÇú Ïû†Î≥µÍæº", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[139678] = {
					"Ïó¨Ïö∏Î∞©ÎûëÏûê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[140695] = {
					"Î∞±ÏÉâ Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140183] = {
					"ÎäôÏùÄ Îò•Í∞ÄÏ£Ω", -- [1]
					"", -- [2]
				},
				[138654] = {
					"ÎàÑÎçîÍ∏∞ ÎèõÏùò Î≤†Ïä§ÌÉÄÎ•¥", -- [1]
					"", -- [2]
				},
				[16704] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Î™ÖÏÇ¨Ïàò", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[33528] = {
					"ÏÉùÎ™ÖÏùò ÏàòÌò∏ÎπÑÎ£°", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[146845] = {
					"ÌÜ±ÎãàÏùò ÏûêÎ†àÎìú", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146835] = {
					"Íµ¨Ïö∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[143774] = {
					"ÌôúÎ†•ÏùÑ Ï∞æÏùÄ Î∂ÄÎëê ÌÜ†ÌÖú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[29309] = {
					"Ïû•Î°ú ÎÇòÎèÖÏä§", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[148893] = {
					"Í≥†ÌÜµÎ∞õÎäî ÏòÅÌòº", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[138643] = {
					"ÌÅ¨Î∞úÎîîÎ•¥ Í¥ëÏ†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[81117] = {
					"ÏûîÏù∏Ìïú Ïπ¥Î•¥ÎÜÄ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[18430] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÏàòÏäµÏÉù", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[140689] = {
					"Í≥µÌè¨Ïùò ÏÜ°Í≥≥Îãà ÎπÑÎã®Î±Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[133389] = {
					"Í∞àÎ∞îÏ¶àÌä∏", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[139680] = {
					"Ïñ¥ÎëêÏª¥Ïª¥ ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134546] = {
					"Ï¢ÖÍ≤∞Ïûê ÎØ∏Ïä§ÎùΩÏä§", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[148894] = {
					"Í∏∏ ÏûÉÏùÄ ÏòÅÌòº", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[39415] = {
					"ÏÉÅÍ∏â ÌôîÏóºÏ∂îÏ†ÅÏûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[43873] = {
					"ÏïåÌÉÄÏù¥Î£®Ïä§", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[148607] = {
					"ÏπºÏù¥ÏïÑ ÌååÏø†ÏïÑÏïº", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146847] = {
					"ÏÜåÌôòÏÇ¨ ÎùºÎãàÏóòÎùº", -- [1]
					"", -- [2]
				},
				[34164] = {
					"Í∏∞Í≥ÑÎÖ∏ÏõÄ Ï†ÑÌà¨Ï†ÑÏ∞®", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[139681] = {
					"Ïã∏ÎäòÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"", -- [2]
				},
				[56731] = {
					"Îß§Ïö¥Í≥†Ï∂î Îß•Ï£º", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[54431] = {
					"Î∞îÏù∏Ïùò ÌôòÏòÅ", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[72662] = {
					"ÌóàÏòÅ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[87762] = {
					"Í≥µÍ≤©ÎåÄÏõêÏùò ÌõàÎ†®Ïö© ÌóàÏàòÏïÑÎπÑ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[73184] = {
					"Íµ∂Ï£ºÎ¶∞ ÏÑ§Ïù∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146848] = {
					"ÏúºÏä§Ïä§Ìïú ÏúµÌï©Ï≤¥", -- [1]
					"", -- [2]
				},
				[140341] = {
					"Íµ¨Î¶ÑÎ∞ïÎ∞ïÏù¥", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131492] = {
					"Í∏∞ÏõêÏùò ÌòàÏÇ¨Ï†ú", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[152479] = {
					"Í≥µÌóàÏóê Î¨ºÎì† ÏÉàÎÅºÏö©", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[120777] = {
					"ÏàòÌò∏Ïùò Í∞êÏãúÏûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[87761] = {
					"ÎçòÏ†Ñ ÏÇ¨Ïö©ÏûêÏùò ÌóàÏàòÏïÑÎπÑ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[139658] = {
					"ÏãúÎ¶∞Îπõ ÎïÖÍæº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[126919] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìè≠ÌíçÏÜåÌôòÏÇ¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[138659] = {
					"ÎêòÏÇ¥ÏïÑÎÇú ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[26555] = {
					"Ïä§Ïª¨ÏßÄ Í¥¥Î¨º", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[144776] = {
					"ÏóêÏñ¥Î¶∞ Ïä§ÏúÑÌîÑÌä∏ÌîºÌä∏", -- [1]
					"", -- [2]
				},
				[132005] = {
					"Í∑∏Î†àÏù¥Ïä® Î≤®", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[135562] = {
					"ÎßπÎèÖ Î±Ä", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[118729] = {
					"ÌÉÄÎùΩÌïú Ïó¨ÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[72929] = {
					"Ïä§ÎùºÌã∞ÌÅ¨ Ìò∏Î∞ïÏÑù Ï†ÑÎ¨∏Í∞Ä", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[142243] = {
					"Ï†ÑÏüÅÏñ¥ÎØ∏ Î∞òÏßÄ", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[146850] = {
					"Í±∞Ïû• Ïö∏Î¶¨Ïπò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[32882] = {
					"ÏöîÎ•¥Î¨∏Í∞ÄÎ•¥ Í±∞Ïàò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[126918] = {
					"Î¨¥Ïá†ÌååÎèÑ Î™ÖÏÇ¨Ïàò", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[140677] = {
					"Îç©Ïπò ÌÅ∞ ÏÑúÎ¶¨ÏàòÏóº", -- [1]
					"", -- [2]
				},
				[138629] = {
					"ÏÑ±ÏßÅÏûê ÎìúÏ°∞ÏÇ¨", -- [1]
					"", -- [2]
				},
				[140675] = {
					"Î¨¥Î¶¨Ïñ¥ÎØ∏ Î¨¥Í≥†", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148243] = {
					"Ïì∞Îü¨ÏßÑ ÏÇ¨ÎèÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140984] = {
					"ÏÑúÎ¶¨Ï≤úÍ≥µ Î≤åÎ†à", -- [1]
					"", -- [2]
				},
				[104154] = {
					"Íµ¥Îã®", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[26746] = {
					"Í¥ëÍ∏∞ Ïñ¥Î¶∞ ÎßàÎÇò ÎßùÎ†π", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[144767] = {
					"Í≥µÌÅ¨Ïùò ÏúÑÏÉÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[122973] = {
					"Îã§ÏûêÎ•¥ÏïÑÏù¥ Í≥†Ìï¥ÏÇ¨Ï†ú", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[135765] = {
					"Í≤©Î•òÏùò ÌÜ†ÌÖú", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[138625] = {
					"ÏïÑÎßàÏÖã ÏßëÌñâÏûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[55866] = {
					"ÏïîÏ≤≠ÏÉâ ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[80677] = {
					"Í∞ïÏ≤† Ïû•Ïù∏", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[146852] = {
					"ÎÖ∏ÏòàÏÇ¨ÎÉ•Íæº ÏΩòÎùºÎìú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[65522] = {
					"Í±∞Ìíà Î≥¥Ìò∏Îßâ", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[150397] = {
					"Ïôï Î©îÏπ¥Í≥§", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[144293] = {
					"ÌèêÍ∏∞Î¨º Ï≤òÎ¶¨ Ïú†Îãõ", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[144765] = {
					"ÏïÑÏãúÏä§Îùº Îã§Ïù¥Ïñ¥ÏÜ°", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[28926] = {
					"ÏïÑÏù¥Ïò§ÎÇòÏùò Î∂àÍΩÉ", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[140670] = {
					"Îç©Ïπò ÌÅ∞ Î∞îÏúÑÍ∞àÍ∏∞", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[20864] = {
					"ÏïÖÎ™ΩÏùò ÎèåÏó∞Î≥ÄÏù¥Í¥¥Î¨º", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[146853] = {
					"ÌååÌó§Ï≥êÏßÑ ÏºÄÌè¥ÌÇ§Ïä§", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[114320] = {
					"Íµ∞Ï£º Î°úÎπà Îã§Î¶¨Ïä§", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[150818] = {
					"ÏÑ±ÎÇú ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö∏ÎîîÎ•¥ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[144294] = {
					"Î©îÏπ¥Í≥§ ÎïúÏû•Ïù¥", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[136863] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[123290] = {
					"ÏÜåÍ∏àÍªçÏßà Îî∏ÍπçÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[80400] = {
					"Í∞ïÏ≤† ÏÑ§ÎπÑ ÏãúÏÑ§ Í∞êÏãúÏûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[126422] = {
					"ÏÇ∞Ìò∏Îì± Îî∏ÍπçÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[29630] = {
					"ÏÜ°Í≥≥Îãà Íµ¨Îç©Ïù¥ÎèÖÏÇ¨", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[139460] = {
					"Î∞îÏúÑÏÜçÎ∞ï ÎåÄÏßÄÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[119000] = {
					"Í≥µÌè¨ÏàòÏóº", -- [1]
					"", -- [2]
				},
				[144295] = {
					"Î©îÏπ¥Í≥§ Í∏∞Ïà†Ïûê", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[59764] = {
					"ÏπòÏú†Ïùò Ìï¥Ïùº ÌÜ†ÌÖú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[145261] = {
					"Í∏àÏùÄÎ≥¥Ìôî", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140296] = {
					"ÏÇ¨Ìñ• Ï∂ïÏ∂ïÌÑ∏", -- [1]
					"", -- [2]
				},
				[87520] = {
					"ÏÇ¥ÏïÑ ÏõÄÏßÅÏù¥Îäî Ïö©ÏïîÏàòÏï°", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[146855] = {
					"ÏïÑÌÇ§ÎÇò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[125828] = {
					"Îã§ÌÅ¨ÎÇòÏù¥ÏÜå", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[88288] = {
					"ÎçòÏ†Ñ ÏÇ¨Ïö©ÏûêÏùò ÌóàÏàòÏïÑÎπÑ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[152486] = {
					"ÏßÄÌïòÏöîÏÉà Ï†ïÏòà Í≤ΩÎπÑÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[47720] = {
					"ÎÇôÌÉÄ", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[18177] = {
					"ÌÉÄÎùΩÌïú ÎèåÍ∞ÄÏ£Ω ÌÜ†ÌÖú", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[140153] = {
					"Ïç©ÏùÄÎ∞úÌÜ± Í≥∞", -- [1]
					"", -- [2]
				},
				[126423] = {
					"ÏÇ∞Ìò∏Îì± Í≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[75979] = {
					"ÎèÑÍµ¥Îêú ÏòÅÌòº", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[40953] = {
					"Ïπ¥Ìèº", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[139690] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò Î∞îÎã§ÏÜåÌôòÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[115905] = {
					"ÏßÄÏò• ÏòÅÌòº", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[39405] = {
					"ÏßÑÌôçÏÇ¥Ïù¥ ÏòàÏñ∏Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[140663] = {
					"ÏÇ∞Ïùò Ï†úÏôï Í∑∏Îüº", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[144246] = {
					"Ïø†.Ï°∞.", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[87521] = {
					"Í∞ïÏ≤† ÏûøÍ∞ÄÎ£®ÏÑ∏Í≥µÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[71397] = {
					"ÏûêÎ•¥Ìã∞ÌÅ¨ Ìò∏Î∞ïÏÑù ÏÇ¨Ï†ú", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[112603] = {
					"Ï†ïÏõê Ïà≤ÏßÄÍ∏∞", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139691] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò ÎèåÌíçÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144298] = {
					"Î∞©Ïñ¥ Î°úÎ¥á ÎßàÌÅ¨ III", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[72421] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∞êÏãúÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[144755] = {
					"ÎåÄÎ≥ÄÏûê ÏûëÏÇ¨ÏïÑÏ¶à", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[59426] = {
					"ÌçΩÌçΩÏù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[126424] = {
					"ÏÇ∞Ìò∏Îì± ÌååÎèÑÎ∞ú", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[131407] = {
					"Ìà¨ÏûêÏÇ¨ Íπ°Ìå®", -- [1]
					"", -- [2]
				},
				[147370] = {
					"ÏπºÎÇ†Í≤ΩÎπÑÎ≥ë Ïπ¥Ïûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139692] = {
					"ÎäôÏùÄ Î∞îÎã∑Î¨ºÎπÑÎäò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144299] = {
					"ÏûëÏóÖÏã§ Î∞©Ïñ¥Î≥ë", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[140658] = {
					"Îæ∞Ï°±ÌÑ∏", -- [1]
					"", -- [2]
				},
				[133379] = {
					"Ïï†ÎçîÎ¶¨Ïä§", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[23872] = {
					"ÏΩîÎ†å Îã§Ïù¥Ïñ¥Î∏åÎ£®", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[36841] = {
					"Ï£ΩÏùÄ Ï†ÑÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[146859] = {
					"ÏÇ¨Î°úÏû°Ìûå Î∞îÏúÑ Ï†ïÎ†π", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[114544] = {
					"Ìï¥Í≥® ÏïàÎÇ¥Ïù∏", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[151978] = {
					"ÏÜåÍ∏àÏüÅÏù¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[144300] = {
					"Î©îÏπ¥Í≥§ ÏãúÎØº", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[148907] = {
					"Îã§ÏÉâÏùò ÌôòÏòÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[133870] = {
					"Í∞êÏóºÎêú Îç©Íµ¥ÏÜê", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[44976] = {
					"ÎÑ§ÌéòÎ•¥ÏÑ∏Ìä∏ Ïó≠Î≥ëÏù∏ÎèÑÏûê", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[134063] = {
					"ÏàòÏÇ¨ ÏïÑÏù¥Ïñ∏Ìóê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[142765] = {
					"ÎßàÎßà Î†åÏπºÎùº", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[57751] = {
					"ÌååÎ©∏ Ï¥âÏàò", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[139694] = {
					"ÎÉâÌòπÍªçÏßà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[144301] = {
					"ÏÇ¥ÏïÑ ÏûàÎäî ÌèêÍ∏∞Î¨º", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[28580] = {
					"Í∞ïÌôîÎêú Í∞ïÏ≤† ÌïòÎäòÏÜåÌôòÏÇ¨", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[1553] = {
					"Î∞ïÏ•ê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139021] = {
					"ÌîºÏ∂îÏ†ÅÍæº", -- [1]
					"", -- [2]
				},
				[20865] = {
					"ÎèåÏó∞Î≥ÄÏù¥Í¥¥Î¨º", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[36830] = {
					"ÏÑ±ÎÇúÌï¥Í≥® ÏùºÍæº", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[104415] = {
					"ÏãúÍ∞Ñ Î≥ÄÌòïÏ≤¥", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139695] = {
					"ÏûΩÏûΩÏßëÍ≤å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[29311] = {
					"ÏÇ¨Ïûê Î≥ºÎùºÏ¶à", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[76518] = {
					"ÎºàÏùò ÏùòÏãù", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[54432] = {
					"Î¨¥Î•¥ÎèÑÏ¶àÎÖ∏", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[137579] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[130521] = {
					"ÏûêÏú†ÏßÄÎåÄ Í∞ëÌåêÏõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[146862] = {
					"ÏïàÍ∞úÍ≤ΩÎ©∏ Ï†ïÎ≥µÏûê", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[114312] = {
					"Î™®Î°úÏä§", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[127486] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ïû•Íµê", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[144303] = {
					"Í≤Ω.ÎπÑ.Í≤¨.", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[132530] = {
					"Ïø® Ìã∞ÎûÄ ÏÑ†Î¥âÎåÄÏõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[115844] = {
					"Í≥†Î°úÏä§", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[149349] = {
					"ÏÑùÌöåÌôîÎêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[126845] = {
					"ÏÑ†Ïû• Ï°∏Î¶¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[87780] = {
					"ÏûøÍ∞ÄÎ£®ÏûëÏóÖÏû• Ìà¨ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[134940] = {
					"Îª£Îª£Í∞ÄÏãú Í¥ÄÌÜµÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[139697] = {
					"Í≥†ÏúÑÏ£ºÏà†ÏÇ¨ ÌÅ¥ÎùΩÏãúÏπ¥Î•¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140344] = {
					"ÌïòÎäò ÎèÖÏÇ¨", -- [1]
					"", -- [2]
				},
				[155612] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ Ïó≠Ïà†ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[26930] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[122076] = {
					"ÎààÏùò Î≥¥Ï£º", -- [1]
					"", -- [2]
				},
				[130522] = {
					"ÏûêÏú†ÏßÄÎåÄ ÏÑ†Î∞ïÏõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[146864] = {
					"ÏïàÍ∞úÍ≤ΩÎ©∏ ÎåÄÏßÄÍ≤∞ÏÜçÏÇ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[147376] = {
					"Î≥¥Ìò∏Îßâ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[139698] = {
					"Ï†êÏüÅÏù¥ ÌÅ¥ÎûòÌÑ∞ÌÅ¨Î°ú", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[111071] = {
					"ÌéÑÏÇ¨Ïö∞Î°†", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[132532] = {
					"Ïø® Ìã∞ÎûÄ Î™ÖÏÇ¨Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134915] = {
					"Îì§Ï∞Ω Ïû†Î≥µÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[133556] = {
					"ÎùºÏûêÌÅ¨ ÏïÑÏù¥Ïñ∏ÏÇ¨Ïù¥Ï¶à", -- [1]
					"", -- [2]
				},
				[140643] = {
					"ÏÇ¨ÎÇòÏö¥ Î∞îÏúÑÎøî", -- [1]
					"", -- [2]
				},
				[132744] = {
					"ÏÑúÎ¶¨ÎØ∏Îäò ÌûàÎìúÎùº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[146885] = {
					"Íµ¨Î¶∞Ï†àÍ∑ú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[136250] = {
					"Ïñ¥Îë†ÎßàÎ≤ï ÏÇ¨Ïà†ÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[137059] = {
					"Î®∏Î¶¨ÏÇ¨ÎÉ•Íæº Í∞ÄÌïò", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129548] = {
					"Í≤ÄÏùÄÏù¥Îπ® Ìà¨ÏÇ¨", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[130011] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìï¥Ï†ÅÎã®Ïõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[133557] = {
					"ÎùºÏûêÌÅ¨ ÏïÑÏù¥Ïñ∏ÏÇ¨Ïù¥Ï¶à", -- [1]
					"", -- [2]
				},
				[134069] = {
					"ÏÜçÏÇ≠ÏûÑÏùò Î≥ºÏßÄÏä§", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[146866] = {
					"ÏÇ¨Î°úÏû°Ìûå ÏÑúÎ¶¨ Ï†ïÎ†π", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[56855] = {
					"Ìô©ÌòºÏùò Í∞ïÏäµ ÎπÑÎ£°", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[139700] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò Î∞îÎã§ Ï£ºÏà†ÏÇ¨", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[42333] = {
					"ÎåÄÏó¨ÏÇ¨Ï†ú ÏïÑÏßà", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[134902] = {
					"Í∑∏Î¶ºÏûêÏà†ÏÇ¨ Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[53006] = {
					"Ï†ïÏã†Ïùò Í≥†Î¶¨ ÌÜ†ÌÖú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[130299] = {
					"Î¨ºÎ∞©Ïö∏", -- [1]
					"", -- [2]
				},
				[120721] = {
					"Îã¨Ïùò Í∂ÅÏàò", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[146867] = {
					"ÏïàÍ∞úÍ≤ΩÎ©∏ Îæ∞Ï°±ÎøîÌà¨ÏÇ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139189] = {
					"Í≥†ÎåÄÏùò Î≤åÎ™©Î∞úÌÜ±", -- [1]
					"", -- [2]
				},
				[139701] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò ÏàòÎ†® Ï†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[152498] = {
					"Ïñ¥Îë† ÏàúÏ∞∞Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[76132] = {
					"ÏÜüÍµ¨ÏπòÎäî Ï∞®ÌÅ¨Îûå Îã¨Ïù∏", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[130012] = {
					"Î¨¥Ïá†ÌååÎèÑ ÏïΩÌÉàÏûê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[36477] = {
					"ÌÅ¨Î¶¨ÌÅ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[126429] = {
					"Îî±Îî±Ìïú ÏÇ∞Ìò∏Îì±", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[139817] = {
					"ÏÑ†ÏûÑÍ∏∞Ïà†Ïûê Ï†úÏßÄ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[36886] = {
					"Ïô∏ÎààÍπ®ÎπÑ Î≥µÎ≥ë", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[130661] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ ÎåÄÏßÄÏ∞ΩÏ°∞Ïûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[45915] = {
					"Î¨¥Ïû•Ìïú Í¥ëÌíç", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[137949] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"", -- [2]
				},
				[78233] = {
					"Ïñ¥Îë†ÌååÌé∏ ÏàòÏ†ïÎì±Îî±ÏßÄ", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[59551] = {
					"ÌçΩÌçΩÏù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[20866] = {
					"ÏòÅÌòº Ìè¨ÏãùÏûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[146869] = {
					"ÎßπÎèÖÏùò ÏûêÏù¥Î£∏", -- [1]
					"", -- [2]
				},
				[139191] = {
					"Îç§Î∂àÎûëÏù¥", -- [1]
					"", -- [2]
				},
				[135963] = {
					"ÎåÄÏßÄÏùò Ï†ïÎ†π", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[76266] = {
					"ÎåÄÌòÑÏûê ÎπÑÎ¶≠Ïä§", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[144822] = {
					"Ìô©Í∏à Î∂àÍΩÉÌòìÎ∞îÎã•", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[76778] = {
					"ÏÉùÎ™ÖÏúºÎ°ú Í≤∞ÏÜçÎêú ÎßàÍ∑Ä", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[131577] = {
					"Î∂àÏùò Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[73195] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÍµêÎèÑÍ¥Ä", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146870] = {
					"Ïó≠Ïà†ÏÇ¨ Ïò§ÎÇòÏû¨", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[122847] = {
					"ÏïîÏòÅÏùò Ïó¨ÏÇ¨Ï†ú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[139768] = {
					"Ìï¥Ï†ÅÎã®Ïõê Îã®", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144311] = {
					"Î≥¥Ï£º ÏàòÌò∏Ïûê", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[74475] = {
					"Ïö©ÏïîÏ£ºÎ®π", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[135002] = {
					"ÏïÖÎßà Ìè≠Íµ∞", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[75451] = {
					"ÎçîÎüΩÌòÄÏßÑ ÏòÅÌòº", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[137443] = {
					"ÌîÑÎùºÏù¥Ïñ¥ ÌååÏÉ§Ïù¥Ïñ¥", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[146871] = {
					"Ïó¨Íµ∞Ï£º ÎÇòÏä§ÎÇòÏïº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[17252] = {
					"ÏßÄÏò•ÏàòÌò∏Î≥ë", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[104676] = {
					"Ïù¥ÏßÄÎü¨ÏßÄÎäî ÏãúÍ∞Ñ ÏûÖÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[76267] = {
					"ÌÉúÏñëÍ¥ëÏã†ÎèÑ", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[144824] = {
					"Ï†êÏï°ÌîºÎ∂Ä ÎëêÍ∫ºÎπÑ", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[18179] = {
					"ÌÉÄÎùΩÏùò ÌöåÏò§Î¶¨ ÌÜ†ÌÖú", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[30414] = {
					"ÏûäÌòÄÏßÑ Ïûê", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[44577] = {
					"Ïû•Íµ∞ ÌõÑÏÇº", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[44924] = {
					"Íµ≥ÏùÄÏÑúÏïΩ ÏàòÌò∏Î≥ë", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[416] = {
					"ÌååÍ∑∏ÌååÎìú", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[132803] = {
					"Î∞îÏúÑÍ∞àÍ∏∞ Ïõ¨ÎîîÍ≥†", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[111075] = {
					"Ïπ¥Ïò§ÌÜ†Ïù¥Îìú", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[144825] = {
					"ÎßπÎèÖÎ±ÉÏÇ¥ Í∞úÍµ¨Î¶¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[145337] = {
					"Î™®ÎûòÏßëÍ≤å ÍΩÉÍ≤å", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[105301] = {
					"Í∞ÄÏÜçÌôîÏùò Ï†ïÎ†π", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[31104] = {
					"ÏïàÏπ¥ÌïòÎ•¥ Í∞êÏãúÏûê", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[146873] = {
					"ÌùâÏïÖÌïú Ìè≠ÌíçÏö∞ Ï†ïÎ†π", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[139813] = {
					"ÏÑ†ÏûÑ ÏÉùÏÇ∞Ïûê ÏßÅÏãú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[138427] = {
					"ÏõêÌïúÏßÄÎäêÎü¨ÎØ∏ ÏûëÏÇ¥ÏÇ¨Ïàò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[123293] = {
					"Ï†úÏôï Î™®Îûò Í≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[148921] = {
					"ÏπºÎèÑÎ†àÏù¥ ÏàòÎ¶¨Í≤Ä Ìà¨Ï≤ôÍ∏∞", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[138471] = {
					"ÌùëÏöîÏÑù Í≥†Î£°ÏàòÌò∏Î≥ë", -- [1]
					"", -- [2]
				},
				[145850] = {
					"Í∏∏ÎãàÏïÑÏä§ Ìè≠ÏÇ¨Íæº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[126432] = {
					"ÏöîÎèôÏπòÎäî Í±∞Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[146874] = {
					"Î∞îÎûåÏÜåÌôòÏÇ¨ ÎßàÎ¶¨ÏïÑ", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[155860] = {
					"Ïâ¨ÎùºÏºÄÏä§ Í≥µÌóàÏàòÌôïÏûê", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[72493] = {
					"Ìä∏ÎùΩÍ≤ê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[106319] = {
					"Î∂àÏî® ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[80409] = {
					"ÎßêÏΩîÍ∑∏ ÏïÑÎ∞îÎîîÎ•¥", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[30621] = {
					"Í≥†ÏπòÎÉ†ÎÉ†", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[145851] = {
					"ÏπºÎèÑÎ†àÏù¥ ÌûàÌè¨Í∑∏Î¶¨ÌîÑ Í∏∞Ïàò", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[122284] = {
					"Í±∞ÎåÄÌïú Î∞ÄÎ¶º Ï∂îÏ†ÅÏûê", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146875] = {
					"ÌùâÌè¨Ìïú Î∞úÎ¶¨Î™®ÌÅ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139197] = {
					"Ïã†Î°ùÏùò Îç©Íµ¥ÏÜê", -- [1]
					"", -- [2]
				},
				[111022] = {
					"ÎÇ¥Î©¥Ïùò ÏïÖÎßà", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[72484] = {
					"ÏûêÏ°∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[108360] = {
					"ÏÇ∞ÏÑ±ÏïÑÍ∑Ä Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[40446] = {
					"ÏÜåÌôòÏÇ¨ Ïä§Ïπ¥ÎîîÏä§", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[72942] = {
					"Ïö©ÏïÑÍ∑Ä Ï†ÑÏüÅÍ∏∞Ïàò", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139814] = {
					"Ìï©Î≥ë Ï†ÑÎ¨∏Í∞Ä ÌóàÏ¶ê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[146876] = {
					"ÏïºÎßåÏ†ÅÏù∏ ÎßàÏπòÌà¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[122850] = {
					"ÏïîÏòÅÏùò Í≤ΩÎπÑÎ≥ë", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[150859] = {
					"ÏûêÏø®", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[26796] = {
					"ÏÇ¨Î†πÍ¥Ä Ïä§ÌÉÄÏö∞Ìä∏ÎπÑÏñ¥Îìú", -- [1]
					"ÎßàÎ†•Ïùò ÌÉë", -- [2]
				},
				[144829] = {
					"Ï≤úÎë•Í∫ºÎπÑ", -- [1]
					"", -- [2]
				},
				[135248] = {
					"ÌîºÏóê Íµ∂Ï£ºÎ¶∞ Î∏åÎ¶¨Ïò§ÎÇò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[30286] = {
					"ÏÑúÎ¶¨Ïù∏ÎèÑÏûê", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[146365] = {
					"ÌÉÄÏò§Î•¥Îäî ÌôîÏóºÏàòÌò∏Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[138466] = {
					"ÌùëÏöîÏÑù ÏÉàÎÅºÏö©", -- [1]
					"", -- [2]
				},
				[139199] = {
					"Ïã†Î°ùÏùò Ìï≠ÏïÑÎ¶¨Îç©Íµ¥", -- [1]
					"", -- [2]
				},
				[132755] = {
					"Îî±Î∂ÄÎ¶¨ Ï≤≠ÏÜåÎ∂Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139040] = {
					"Ïã¨Ïó∞ Ï†êÏüÅÏù¥ Ïö∞ÎÇòÎãà", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144830] = {
					"Ìè¨ÏãùÏûê ÏïºÏûê", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[136012] = {
					"–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[72943] = {
					"Ïö©ÏïÑÍ∑Ä ÏõêÏãúÎπÑÎ£°", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[118244] = {
					"Ïó¨Ïö∞", -- [1]
					"ÏùÄÎπõÏàòÏ†ï Í¥ëÏÇ∞", -- [2]
				},
				[134593] = {
					"Ï¢ÖÍ≤∞Ïûê ÎØ∏Ïä§ÎùΩÏä§", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[139200] = {
					"Ïã†Î°ùÏùò ÌååÎ¶¨ÏßÄÏò•ÌíÄ", -- [1]
					"", -- [2]
				},
				[72354] = {
					"Ïö©ÏïÑÍ∑Ä Ìï¥Í≥®Î∂ÑÏáÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[44896] = {
					"ÏÜåÏù∏Ï°± Ìà¨ÏÇ¨", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[135717] = {
					"ÏïºÏÉù Î∞§Ìò∏ÎûëÏù¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[117596] = {
					"ÏπºÎÇ†ÌÑ± Í≤ÄÌà¨ÏÇ¨", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[125205] = {
					"Ìï¥Ïïà ÌÑ±ÌååÍ¥¥Ïûê", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[146367] = {
					"Ï∞®Î•¥Í≥®Î¶Ñ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[71408] = {
					"Ïø§Îã§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[57160] = {
					"Í≥†ÎåÄ Î¨º Íµ∞Ï£º", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[21395] = {
					"ÎèåÏó∞Î≥ÄÏù¥Í¥¥Î¨º Ïú†Ï∂©", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[139486] = {
					"ÌïòÎäòÌãàÏÉà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[40319] = {
					"ÎìúÎùºÍ∞Ä ÏÑÄÎèÑÎ≤ÑÎÑà", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[71859] = {
					"ÎåÄÏßÄÌååÍ¥¥Ïûê ÌïòÎ°úÏò¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[42808] = {
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä Î∞îÏúÑÍ∞àÌÄ¥", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[137449] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"", -- [2]
				},
				[146880] = {
					"ÏàòÏàòÍªòÎÅºÏùò Í≥®Î∏åÎûÄ", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139202] = {
					"Ïã†Î°ùÏùò Îú∞ÏßÄÍ∏∞", -- [1]
					"", -- [2]
				},
				[26690] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Ï†ÑÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[55312] = {
					"Ïû†Îì§ÏßÄ ÏïäÎäî ÏöîÎ•¥ÏÇ¨ÏßÄ", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[144833] = {
					"Ï∞∞ÏãπÌòÄ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140100] = {
					"Ï†ÑÏüÅÏ£ºÎë•Ïù¥", -- [1]
					"", -- [2]
				},
				[139753] = {
					"ÎÇúÌååÎãπÌïú Ï£ºÎ®πÍæº", -- [1]
					"", -- [2]
				},
				[71153] = {
					"Î¨¥Î¶¨ÏßÄÍ∏∞ ÌûàÏÑ∏ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146881] = {
					"ÏòàÏñ∏Ïûê Î∏åÎ¶∞Î∂àÌîÑ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[139203] = {
					"Ïã†Î°ùÏùò ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[71921] = {
					"Í≤ÄÏùÄÏÜ°Í≥≥Îãà", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[152512] = {
					"Ìè≠ÌíçÎßùÎ†π", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[138563] = {
					"Î∂ÄÎã•Ïä§", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[140098] = {
					"ÌùâÌè¨Ìïú ÌùâÌÑ∞Í∞ÄÏ£Ω", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[72945] = {
					"Ïö©ÏïÑÍ∑Ä Ìï¥Í≥®Î∂ÑÏáÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146370] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† ÏÑ†Î¥âÎåÄ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146882] = {
					"Í±∞ÎåÄÌïú Ìô©ÌèêÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[138516] = {
					"Ìô©ÌòºÏùò ÏßÑÌôîÎ°†Ïûê", -- [1]
					"", -- [2]
				},
				[2442] = {
					"ÏÜå", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[28582] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º ÏπòÏú†ÏÇ¨", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[43391] = {
					"Î∞ÄÌïòÏö∞Ïä§ ÎßàÎÇòÏä§ÌÜ∞", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[78832] = {
					"Í∑∏Î°¨Ïπ¥Î•¥ Î¨¥Ïû•Î≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[139422] = {
					"ÎπÑÎäò ÌÅ¨Î°§Îü¨Ïä§ÌÅ¨ Ï°∞Î†®ÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[146371] = {
					"Í≤ÄÏùÄÎ¨¥Ïá† ÏõêÏãúÏà†ÏÇ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[146883] = {
					"ÏÇ¨ÎÉ•Í∞úÏ°∞Î†®ÏÇ¨ ÏïµÍ∑∏Î≥ºÎìú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[134893] = {
					"Í∞ïÏ≤†Í∑∏Î¨º Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[131527] = {
					"Íµ∞Ï£º Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[113128] = {
					"Î©îÎßàÎ•∏ Ïû†Î≥µÏûê", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[72434] = {
					"Í∏àÍ≥† Í≤ΩÎπÑÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[40448] = {
					"Ìô©ÌòºÏùò ÏßëÌñâÏûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[126181] = {
					"Ïñ¥Îë†Ïùò ÎùºÎ¨¥Ìä∏", -- [1]
					"", -- [2]
				},
				[28546] = {
					"ÏïÑÏù¥Ïò§ÎÇò", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[130788] = {
					"ÌÉÄÍ∏∞Îùº", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[155586] = {
					"ÏïÑÎùºÏÜåÎ•¥ ÏÑ†Ï°∞", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[146884] = {
					"Ï†ÑÏüÅÍµ∞Ï£º Ìò§ÏäàÏπ¥Î•¥Ìä∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[111081] = {
					"Ï†ÑÍ≤©Ìè≠Ìíç", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[144837] = {
					"Ïñ¥Îë†Ìï¥Ïïà ÏàúÎ°ù", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[119969] = {
					"Ìô©Ï≤úÏùò Í∞ÄÏò§Î¶¨", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[72357] = {
					"Î∂ÄÍ¥Ä ÌÅ¨Î£®Í∑∏Îü≠", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[20868] = {
					"ÌòºÎèàÏùò Îàà", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[134600] = {
					"Î™®ÎûòÎ∞õÏù¥ Î™ÖÏÇ¨Ïàò", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[139207] = {
					"Í≥†ÎåÄ ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[71923] = {
					"ÌïèÎπõÎ∞úÌÜ±", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[138987] = {
					"ÌùôÏßÄÎäêÎü¨ÎØ∏ ÎåÄÏ†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134894] = {
					"Í∞ïÏ≤†Í∑∏Î¨º Ïã§Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[137160] = {
					"Î∞∏Îü¨ÏΩú Í∏∞Í≥ÑÍ≥µÌïôÏûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[72947] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÌååÍ¥¥Ï†ÑÏ∞®", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[150250] = {
					"Í∏∞Í≥ÑÎ®∏Î¶¨ ÏÇ¨Ïàò", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[146886] = {
					"ÏïÖÏ∑®ÎÇòÎäî ÌùêÎ°§ÏäàÏπºÌä∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[86000] = {
					"Ï†êÏûñÏùÄ Í∞àÎûòÎ∞úÍµΩ", -- [1]
					"FW Ìò∏Îìú Ï£ºÎëîÏßÄ 3Îã®Í≥Ñ", -- [2]
				},
				[33118] = {
					"Ïö©Í¥ëÎ°ú Íµ∞Ï£º Ïù¥Í∑∏ÎãàÏä§", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[29826] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏïΩÏÇ¨", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[144839] = {
					"Ìù∞Íº¨Î¶¨ÏïîÏÇ¨Ïä¥", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[17669] = {
					"Í¥ëÌè¨Ìïú Ï†ÑÌà¨ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[139470] = {
					"Ïö© Ï°∞Î†®ÏÇ¨ ÏãúÏáº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[154565] = {
					"Ï∂©ÏÑ±Ïä§Îü¨Ïö¥ ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[134602] = {
					"Í∞ÄÎ†§ÏßÑ ÏÜ°Í≥≥Îãà", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[135989] = {
					"Ï§ÑÏùò Î∞©Ìå®Î≥ë", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[28837] = {
					"Ìè≠ÌíçÎ≤ºÎ¶º ÌååÏàòÎ≥ë", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[30338] = {
					"ÏïàÏπ¥ÌïòÎ•¥ Î¨¥Î¶¨Í±∞ÎØ∏", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[144840] = {
					"Ï†êÎ∞ïÏù¥ ÏÉàÎÅº ÏÇ¨Ïä¥", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[136499] = {
					"ÎÇòÏ¶àÎßàÎãà ÏäπÏ≤úÏûê", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[40577] = {
					"ÎÇòÏ¶àÏûêÎ•¥ ÌååÏàòÍæº", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[18309] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÎèÑÍµ¥Íæº", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[151854] = {
					"Ï£ΩÏùåÏùòÏàòÏÉâÍæº Î°úÏÜåÌÅ¨", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[139210] = {
					"ÎßπÎèÖÎåÄÎëê", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[26691] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ ÏùòÏà†ÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[136139] = {
					"Í∏∞Í≥ÑÌôî ÌèâÌôîÍ∞êÏãúÎã®", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[153031] = {
					"Ï†ïÏòà Ï†ÑÌà¨ÎßàÎ≤ïÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[134900] = {
					"ÎßπÎèÖÏÜ°Í≥≥Îãà Í±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[145865] = {
					"ÎäëÎåÄÏù∏Í∞Ñ Ï¥ùÎ≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[138187] = {
					"Í¥¥Í∏∞Ìïú Í≥µÌè¨", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[146889] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê Ï£ΩÏùåÎ∞©ÎûëÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[143306] = {
					"Í∑ÄÏ°± Ìé≠Í∑Ñ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[127485] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÎÖ∏ÎûµÍæº", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[122266] = {
					"Í∞ÄÏãúÍ∞ëÏò∑ Í±∞Î∂Å", -- [1]
					"", -- [2]
				},
				[144842] = {
					"ÌååÎèÑÍ≤å", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[84978] = {
					"ÌîºÎßùÏπò ÏßëÌñâÏûê", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[122089] = {
					"Î±ÄÍ∞àÌÄ¥ Ï†êÏüÅÏù¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[58965] = {
					"ÌÅ¨ÌûêÍ≥†Î°úÎìú", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[122601] = {
					"ÏêêÍ∏∞Îç©Íµ¥ ÏöîÎßà", -- [1]
					"", -- [2]
				},
				[139212] = {
					"Ìè¨ÎèÑÏ±ÑÏ∞ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[152009] = {
					"Í≥†Ïû•ÎÇú Í≥†Ï≤†Î°úÎ¥á", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[152521] = {
					"Í±∞ÎÇòÏ¶à", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[20912] = {
					"ÏÑ†Íµ¨Ïûê Ïä§ÌÇ§Î¶¨Ïä§", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[135923] = {
					"Í∞ÄÏ¶àÎûÄÏùò ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[20885] = {
					"ÌååÎ©∏Ïùò ÏòàÏñ∏Ïûê Îã¨Î¶¨ÏïÑ", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[71158] = {
					"Ìï¥Î∂ÄÏûê Î¶¨ÌÅ¨Ïπº", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[75509] = {
					"ÏÉàÎã§ÎÇò Î∏îÎü¨ÎìúÌì®Î¶¨", -- [1]
					"Ïñ¥Îë†Îã¨ ÏßÄÌïòÎ¨òÏßÄ", -- [2]
				},
				[139213] = {
					"Ïó¥Îß§Ïøµ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140585] = {
					"Ï†ÅÍ∞àÏÉâ Ïû†Î≥µÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138486] = {
					"ÏïåÎ£®Î¶¨ÏïÖ", -- [1]
					"", -- [2]
				},
				[88818] = {
					"Î≥¥Ïïà Í≤ΩÎπÑÎ≥ë", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[130024] = {
					"Ï∂ïÏ∂ïÌïú Î∞∞Ï•ê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[126185] = {
					"ÏßÄÏïà Ìã∞ ÌùëÎßàÏà†ÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[28547] = {
					"Ìè≠ÌíçÏùò ÏÜåÏö©ÎèåÏù¥", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[146892] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê ÏïΩÌÉàÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[132170] = {
					"Ï§ÑÎ¨¥Îä¨ ÌååÏø†", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140071] = {
					"ÎäôÏùÄ Ïô∏ÏÜ°Í≥≥Îãà", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[152523] = {
					"Î¨¥Ïø†ÌÉÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[148940] = {
					"ÏπºÎèÑÎ†àÏù¥ ÌÇ§Î©îÎùº", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[140070] = {
					"Ï∂îÏ†ÅÏûê ÌïèÎÇ¥Ïùå", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[79093] = {
					"ÌïòÎäòÌÉë ÌÉúÏñëÍ∞àÌÄ¥", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[20869] = {
					"ÏïåÏπ¥Ìä∏ÎùºÏ¶à ÌååÏàòÎ≥ë", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[146893] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê ÎπÑÏà†ÏÇ¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131585] = {
					"ÎßàÎ≤ïÏóê Í±∏Î¶∞ Í≤ΩÎπÑÎ≥ë", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[127106] = {
					"Î¨¥Ïá†ÌååÎèÑ Ïû•Íµê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[109038] = {
					"ÌÉúÏñëÌïôÏûê ÌÖîÏïÑÎ•∏", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[140068] = {
					"ÎÖπÏä®Í∞ÄÏ£Ω ÎπóÏÜ°Í≥≥Îãà ÎäëÎåÄ", -- [1]
					"", -- [2]
				},
				[130025] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìè≠Î†•Îã®Ïõê", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[133585] = {
					"ÎîîÏßÄ ÎîîÎÇò", -- [1]
					"", -- [2]
				},
				[136483] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Í∞ëÌåêÏõê", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146894] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê Î∞ÄÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[146678] = {
					"Í≥†ÎåÄ ÏàòÌò∏Ï†ïÎ†π", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[134137] = {
					"ÏÇ¨Ïõê ÏàòÌñâÏõê", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[132050] = {
					"ÏÇ¨ÎÉ•ÏßÄÎ∞∞Ïûê ÏãúÏñ¥ÎèÑÏñ¥", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[118022] = {
					"ÏßÄÏò•Î∂à ÌòºÎèàÏù∏ÎèÑÏûê", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[141264] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[140541] = {
					"ÌôîÏóºÍ∑∏Î¨º Î∂àÍ±∞ÎØ∏", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[71160] = {
					"ÎòêÎ†∑Ìïú ÏùòÏãùÏùò Ïù¥ÏöîÏø†ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[146895] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê ÎÇúÎèôÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139217] = {
					"ÎäôÏùÄ ÎßâÌïÄÎÇòÎ¨¥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138495] = {
					"Ìô©ÌòºÏùò ÏßÄÌúòÍ¥Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[132051] = {
					"Ìù°Ìòà ÏßÑÎìúÍ∏∞", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[88820] = {
					"Í∞ÄÏó¥Î°ú Í∏∞Ïà†Ïûê", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[130026] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® Î∞îÎã§ÏòàÏñ∏Ïûê", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[40579] = {
					"Ïã¨Ìï¥ Î©ÄÎ°ù ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[17880] = {
					"ÌÖúÌçºÎ£®Ïä§", -- [1]
					"Ïñ¥Îë†Ïùò Î¨∏ Ïó¥Í∏∞", -- [2]
				},
				[77559] = {
					"ÌÉúÏñë ÌôïÎåÄÍ≤Ω", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[139218] = {
					"ÏÉùÎ™ÖÏßÄÍ∏∞ Ïò¨Î∞îÎ¶¨Ïö∞Ïä§", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[26692] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ ÏûëÏÇ¥Î≥ë", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[148432] = {
					"Ïç¨ÎçîÎûÄÏùò ÏßàÌíçÏùò ÌÜ†ÌÖú", -- [1]
					"Ï†ïÎ≥µÏùò ÏÑ¨", -- [2]
				},
				[144849] = {
					"Ïñ¥Îë†ÎπÑÎäò Ï†ïÏ∞∞Î≥ë", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[139035] = {
					"ÏπºÏßÄÎäêÎü¨ÎØ∏ ÏàòÎ≥ë", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[133588] = {
					"ÏûêÎèô Ìè≠ÌÉÑ ÏÇ¨Ï∂úÍ∏∞", -- [1]
					"", -- [2]
				},
				[71161] = {
					"ÏπºÎÇ†Î∞îÎûå ÌÇ¨Î£®ÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134612] = {
					"Í∞àÍ≥†Î¶¨ Ï¥âÏàò", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[139219] = {
					"ÎÇòÏãúÎùº Î™®ÎãùÌîÑÎ°úÏä§Ìä∏", -- [1]
					"", -- [2]
				},
				[139539] = {
					"Ïó¨Ï†úÏùò ÎßùÏπò ÌÉÄÎ≥¥ÌÅ¨", -- [1]
					"", -- [2]
				},
				[109040] = {
					"ÎπÑÏ†ÑÏà†ÏÇ¨ ÌÖîÏïÑÎ•∏", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[88821] = {
					"ÌíÄÎ¨¥ Ï°∞ÏûëÍ∏∞ÏÇ¨", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[130027] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ Ìï¥Î≥ë", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[151798] = {
					"Î≤°ÏãúÏò§ÎÇò", -- [1]
					"ÎèôÎ∂Ä ÏôïÍµ≠ - Ï£ºÌôçÎπõ Î≥¥Î£® - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[103822] = {
					"ÎÇòÎ¨¥Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[98035] = {
					"Í≥µÌè¨ÏÇ¨ÎÉ•Í∞ú", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[139220] = {
					"Î∞îÏù¥Ïïº ÌÅ¨Î¶¨Ïä§ÌÉàÎ∏îÎ£∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[59519] = {
					"ÏåâÏåÄÌïú Îß•Ï£º Ï£ºÎ†π", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[136799] = {
					"Ï†àÎ≤ΩÌååÍ¥¥Ïûê", -- [1]
					"", -- [2]
				},
				[152540] = {
					"ÎùºÏù¥ÏïÑÎãà ÏâêÏù¥ÎìúÏä§ÌÜ†Ïª§", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[135169] = {
					"ÏòÅÌòº Ìù°ÏàòÏùò ÌÜ†ÌÖú", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[128651] = {
					"ÌïòÎã¨ Îã§ÌÅ¨Ìå®Îç§", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[33237] = {
					"Ïö∏ÎëêÏïÑÎ•¥ Í±∞ÎåÄÍ¥¥Ïàò", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[129547] = {
					"Í≤ÄÏùÄÏù¥Îπ® Ï£ºÎ®πÏû°Ïù¥", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[145934] = {
					"ÎØ∏ÏπòÍ¥ëÏù¥ ÏïÑÏù¥Î∞ò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[30418] = {
					"ÏÜçÎ∞ïÎêú Î∞îÎûåÏùò Ï†ïÎ†π", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[109041] = {
					"Î∞ïÎ¨ºÌïôÏûê ÌÖîÏïÑÎ•∏", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[131607] = {
					"ÏÜåÏä§ÏöîÎ¶¨ÏÇ¨ ÏÇ¨Î¨¥Ïóò", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[130028] = {
					"Ïï†Ïâ¨Î≤†Ïù∏ ÏÇ¨Ï†ú", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[72954] = {
					"ÏΩîÎ•¥Ìã∞ÌÅ¨ Í∑ºÏúÑÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[127496] = {
					"Î™®Îûò ÏßëÍ≤åÎ∞ú", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[155090] = {
					"ÏñëÍ∑πÏÇ∞Ìôî ÏΩîÏùºÏßÄÍ∏∞", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139222] = {
					"Ïã†Î°ùÏùò ÏàòÌò∏Ïûê", -- [1]
					"", -- [2]
				},
				[147924] = {
					"ÎåÄÏßÄÏ°∞Í∞Å", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[132056] = {
					"Ìà¨ÏûêÍ∞úÎ∞úÌöåÏÇ¨ ÌïòÎäòÎ∞©ÌôîÍæº", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[72744] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ìï¥Í≥®ÌååÏáÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[72483] = {
					"ÏÇ¨Î°úÌÅ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[53889] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[20870] = {
					"ÏÜçÎ∞ï ÌíÄÎ¶∞ Ï†úÎ†àÏºÄÏä§", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[134616] = {
					"Ïñ¥Î¶∞ ÌÅ¨Î°§Îü¨Ïä§ÌÅ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[139223] = {
					"Ïã†Î°ùÏùò ÎìúÎ¶¨ÏïÑÎìú", -- [1]
					"", -- [2]
				},
				[121071] = {
					"Ïû•Î°ú Í±∞Î®πÎàà Î©ÄÎ°ù", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[21126] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà ÏπòÏú†ÏÇ¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[77605] = {
					"ÏÜåÏö©ÎèåÏù¥ÏπòÎäî Ï∂§Íæº", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[39962] = {
					"Ìô©ÌòºÏùò Ìè≠ÌíçÌååÍ¥¥Ïûê", -- [1]
					"Í∑∏Î¶º Î∞îÌÜ®", -- [2]
				},
				[126190] = {
					"ÏßÄÏïà Ìã∞ ÏïºÎßåÏ†ÑÏÇ¨", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72490] = {
					"Í∞êÎèÖÍ¥Ä Î™®Ï¶àÏπ¥", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[134617] = {
					"ÏÉàÎÅº ÌÅ¨Î°§Îü¨Ïä§ÌÅ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[139224] = {
					"ÎìúÎ¶¨ÏïÑÎìú Ïà≤ÏßÄÍ∏∞", -- [1]
					"", -- [2]
				},
				[59520] = {
					"ÌÜ° ÏèòÎäî Îß•Ï£º Ï£ºÎ†π", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[140248] = {
					"Ïû¨Îπ†Î•∏ Îã¨Ï∂îÏ†ÅÏûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[21702] = {
					"ÏóêÌÖåÎ¶¨ÏõÄ ÏÉùÎ™ÖÏà†ÏÇ¨", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[17671] = {
					"ÏúºÏä§Îü¨ÏßÑ ÏÜê Ïö©ÏÇ¨", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ: ÏúºÏä§Îü¨ÏßÑ ÏÜêÏùò Ï†ÑÎãπ", -- [2]
				},
				[136887] = {
					"Î∞îÎäòÍ∞àÍ∏∞", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[122412] = {
					"Íµ¨ÏÜçÎêú Í≥µÌóàÍµ∞Ï£º", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[71420] = {
					"Íµ∂Ï£ºÎ¶∞ Ïø§Ï¥ù", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[139225] = {
					"ÏòÅÏõêÏùò Ïà≤ÏßÄÍ∏∞", -- [1]
					"", -- [2]
				},
				[30276] = {
					"ÏïàÏπ¥ÌïòÎ•¥ Í±∞ÎØ∏Ï§Ñ Í∑∏Î¨ºÍ±∞ÎØ∏", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[140249] = {
					"Ï†êÌåêÍ∞ÄÏ£Ω", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[131099] = {
					"ÎÇÑÎÇÑÍ±∞Î¶¨Îäî ÏêêÍ∏∞Îç©Íµ¥ ÏöîÎßà", -- [1]
					"", -- [2]
				},
				[80422] = {
					"Í∞ïÏ≤† Î™ÖÏÇ¨Ïàò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[61056] = {
					"ÏõêÏãú ÎåÄÏßÄÏùò Ï†ïÎ†π", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[18311] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÎÇ©Í≥®Îãπ Ïπ®ÏûÖÏûê", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[155094] = {
					"Î©îÏπ¥Í≥§ Î∂ÄÎåÄÏõê", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[139226] = {
					"ÏûêÎß§ ÏïÑÎÇòÎÇò", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[135643] = {
					"Î†åÌÇ§Î¶¨", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140250] = {
					"ÏÜîÎ®πÏù¥ ÏÇ¨Ïä¥", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[71979] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Ï†ÑÏüÅÏù∏ÎèÑÏûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[45572] = {
					"Ïö∏Î∂ÄÏßñÎäî Í∞ïÌíç", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[53890] = {
					"ÌùâÏ∏°Ìïú ÏúµÌï©Ï≤¥", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[71474] = {
					"Íµ¨Ï≤¥ÌôîÎêú Ï†àÎßù", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136875] = {
					"Î¨¥Ïó≠ÏÉÅ Ïö∞Îëê", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[31236] = {
					"ÏñºÎ£© ÏÇ¨Ïä¥", -- [1]
					"Î∞îÏúÑÏã¨Ïû•Î∂Ä", -- [2]
				},
				[76310] = {
					"ÎåÄÌòï ÏàòÌò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[148441] = {
					"ÎÖ∏ÏõÄ ÏûêÏù¥Î°úÏΩ•ÌÑ∞ Í∏∞Ïà†Ïûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[34183] = {
					"ÌååÍ¥¥Ïûê Í±∞ÎØ∏Î°úÎ¥á", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[136870] = {
					"Ïö∞ÏõÄÍµø Ïö©ÏÇ¨", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136905] = {
					"Ï†ÑÎ∞© ÎßùÍæº", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[152199] = {
					"ÎßàÎ≤ïÌïôÏûê ÌïòÏÜåÎ†ê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[147957] = {
					"ÏïÑÏ†úÌÅ¨Î¶¨ÏÇ¥Î¶¨Ïä§", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[73725] = {
					"ÏãúÏïôÎ¶∞", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[59521] = {
					"Î∂ÄÍ∏ÄÍ±∞Î¶¨Îäî Îß•Ï£º Ï£ºÎ†π", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[148442] = {
					"ÎÖ∏ÏõÄ ÌäπÍ≥µÎåÄÏõê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[33838] = {
					"ÏÇ¨Î°úÏû°Ìûå Î∂àÏùò Ï†ïÎ†π", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[145371] = {
					"Ïö∞Ïö∞ÎÇòÌä∏", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[155688] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ ÏÑúÎ¶¨Í≤∞ÏÜçÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[71478] = {
					"Íµ¨Ï≤¥ÌôîÎêú Í≥†Îáå", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136807] = {
					"Ï°∞ÏïΩÎèå Ï†ïÏ∞∞Î≥ë", -- [1]
					"", -- [2]
				},
				[137785] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[135646] = {
					"Î∂ÑÏáÑÏùò ÌîºÏñºÎ£© Ìò∏ÎûëÏù¥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[148443] = {
					"Î∞©Ïñ¥Î¥á", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[140345] = {
					"Ìè≠ÌíçÎπÑÎ™Ö", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[145372] = {
					"ÏïºÏÉù Îã¨ÎπÑÎ™ÖÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[72958] = {
					"Ïö©ÏïÑÍ∑Ä ÌååÎèÑÏ£ºÏà†ÏÇ¨", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[126449] = {
					"Î¨¥ÏóáÏù∏Í∞Ä", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[56867] = {
					"Î∂àÌÉÄÎäî ÏöîÏà†ÏüÅÏù¥", -- [1]
					"Ïä§ÌÜ∞Ïä§ÌÉÄÏö∞Ìä∏ ÏñëÏ°∞Ïû•", -- [2]
				},
				[149555] = {
					"ÌùâÎ¨º", -- [1]
					"ÏåçÎë•Ïù¥ Î¥âÏö∞Î¶¨", -- [2]
				},
				[32904] = {
					"ÏïîÌùëÎ£¨ ÌïòÍ∏âÎ≥ëÏÇ¨", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[152539] = {
					"Ïñ¥Îë† ÏàúÏ∞∞Ïûê ÏÉåÎç∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[73745] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Í∞ïÏ≤†ÌååÏàòÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[33288] = {
					"ÏöîÍ∑∏ÏÇ¨Î°†", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[53891] = {
					"ÌÉÄÎùΩÏ≤¥", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[134112] = {
					"ÎåÄÎ™® ÌÅ¨Î¶¨Ïä§Ìã∞Ïïà", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[26536] = {
					"ÎÑã ÎÇòÍ∞Ñ ÌïòÏù∏", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[139231] = {
					"ÏßìÎ∞üÎäî ÎßàÏù¥Ïñ¥Ïö∞Îìú", -- [1]
					"", -- [2]
				},
				[147933] = {
					"ÎåÄÏßÄÌôúÏÑ± ÏïÑÏ†úÎùºÏù¥Ìä∏ ÌååÌé∏", -- [1]
					"", -- [2]
				},
				[21127] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ìè≠ÌíçÏö∞Ï†ÑÏÇ¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[34184] = {
					"ÌÉúÏóΩÎèåÏù¥ Ï†ïÎπÑÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[28695] = {
					"Ïö©Ïïî Í≥®Î†ò", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[141890] = {
					"Íµ∞Ï£º ÏïÑÏßÄ", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[29573] = {
					"ÎìúÎùºÏπ¥Î¶¨ Ï†ïÎ†π", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[146910] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê Ïó≠Î≥ëÍ∞àÌÄ¥Î∞úÌÜ±", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[102392] = {
					"Í≥µÎ™Ö ÌÜ†ÌÖú", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[135649] = {
					"ÏßàÌíçÎ∞úÌÜ±", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[29829] = {
					"ÎìúÎùºÏπ¥Î¶¨ ÏßÄÏßÑÏà†ÏÇ¨", -- [1]
					"Íµ∞ÎìúÎùΩ", -- [2]
				},
				[140768] = {
					"ÌÉúÏÇ∞ÌååÍ¥¥Ïûê Íµ¨Ïö∞Î£®", -- [1]
					"", -- [2]
				},
				[138827] = {
					"Í∞ïÌïú Î≥¥Îã¨ÌîÑ", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[155768] = {
					"ÎèåÌíçÏà†ÏÇ¨ ÎßêÎü¨Î•¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139346] = {
					"ÏòÅÌòºÏòàÏñ∏Ïûê Í∞àÎùºÎãà", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[146911] = {
					"Ïç©ÏùÄÏÇ¥Ï†ê Ìô©ÌèêÏÇ¨ÎÉ•Í∞ú", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[103225] = {
					"ÏÇ∞ÏÑ±ÏïÑÍ∑Ä Ï†ÑÍ∞à", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[147935] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏóâÍ∏àÏù¥", -- [1]
					"", -- [2]
				},
				[140792] = {
					"Îî±Î∂ÄÎ¶¨ ÎºàÎã§Í∑ÄÏ≤≠ÏÜåÎ∂Ä", -- [1]
					"", -- [2]
				},
				[140769] = {
					"Ìô©Í∏àÍ¥ëÎß•", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[137969] = {
					"Îß§Ïû•Îêú ÌîºÏ°∞Î¨º", -- [1]
					"ÏôïÎì§Ïùò ÏïàÏãùÏ≤ò", -- [2]
				},
				[139475] = {
					"ÎπÑÏ∑®ÌòïÏÑ± ÎºàÎã§Í∑ÄÏã∏ÏõÄÍæº", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[18312] = {
					"ÏóêÌÖåÎ¶¨Ïñº Ïó≠Ïà†ÏÇ¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[134627] = {
					"ÌòàÌä∏Î°§ Ï†ÑÏüÅÏñ¥ÎØ∏", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[126963] = {
					"Í∑∏ÏúàÎìúÎùº ÏôÄÏùºÎìúÌï¥Î®∏", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[26694] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Ìô©ÌòºÏùò Ï£ºÏà†ÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[73095] = {
					"Î∏îÎûôÌì®Ï¶à Í∏∞Ïà†Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[26822] = {
					"Ïö∏ÏäêÎùº Îã§Ïù¥Ïñ¥Î∏åÎ£®", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ ÎÇòÎùΩ", -- [2]
				},
				[141282] = {
					"Ïø® Ìã∞ÎûÄ Î≥¥Î≥ë", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[103673] = {
					"ÏïîÌùëÏãúÏÑ†", -- [1]
					"Ìè≠ÌíçÏùò ÏÇ¨Ïõê", -- [2]
				},
				[146401] = {
					"Ïñ¥Îë†ÎπÑÎäò Î∞úÍµ¥ÎÖ∏Ïòà", -- [1]
					"Í≤©Ï†ÑÏßÄ Ïñ¥Îë†Ìï¥Ïïà - Ìò∏Îìú", -- [2]
				},
				[139469] = {
					"Ï≤úÎë•Ïùò Ï£ºÏÇ∞", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[130404] = {
					"ÏïºÏÉù Îç´ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[139747] = {
					"ÎÇúÌååÎãπÌïú Ìï¥Ï†Å", -- [1]
					"", -- [2]
				},
				[140259] = {
					"Î£¨Î∞úÍµΩ ÌÅ∞ÏÇ¨Ïä¥", -- [1]
					"", -- [2]
				},
				[139869] = {
					"Î≥¥Î£®Ïπ¥Î•¥ Í∑∏Î¨ºÍ±∞ÎØ∏", -- [1]
					"", -- [2]
				},
				[141283] = {
					"Ïø® Ìã∞ÎûÄ ÎØ∏ÎäòÏ∞Ω", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[133605] = {
					"ÌÉàÏ∂úÌïú Î≤îÏ£ÑÏûê", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[144941] = {
					"ÏïÑÏø§Îã§Ïùò ÏúÑÏÉÅ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[118518] = {
					"Ïó¨ÏÇ¨Ï†ú Î£®ÎÇòÏä§ÌååÏù¥Ïñ¥", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[155616] = {
					"ÏûîÏßÄÎ•¥ Ìà¨ÏÇ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[147938] = {
					"ÏïÑÏ†úÎùºÏù¥Ìä∏Î≥¥ÏÑù ÏàòÏ†ïÎì±", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140260] = {
					"Î£¨Î∞úÍµΩ ÏàúÎ°ù", -- [1]
					"", -- [2]
				},
				[148962] = {
					"Í±∏Ïã†Îì§Î¶∞ Ï∂îÏ†ÅÏûê", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[141284] = {
					"Ïø® Ìã∞ÎûÄ ÌååÎèÑÏßÄÍ∏∞", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[136880] = {
					"Îª£Îª£Í∞àÍ∏∞ Í∞ÄÏãúÎ©ßÎèºÏßÄ", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[77942] = {
					"ÏõêÏãú Ìè≠ÌíçÏùò Ï†ïÎ†π", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[134801] = {
					"Íπ®ÏßÑ ÍªçÏßà Í±∞Î∂Å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[30111] = {
					"Ìô©ÌòºÏùò Ïà≠Î∞∞Ïûê", -- [1]
					"ÏïàÏπ¥Ìó§Ìä∏: Í≥†ÎåÄ ÏôïÍµ≠", -- [2]
				},
				[134764] = {
					"Îî∞Îã•Ïù¥ÍªçÏßà", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[72194] = {
					"Ìó¨Ïä§ÌÅ¨Î¶º ÌååÍ¥¥Ï†ÑÏ∞®", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[140773] = {
					"ÍπäÏùÄÎ∞îÎã§ ÌååÎèÑÏû°Ïù¥", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[141285] = {
					"Ïø® Ìã∞ÎûÄ Î™ÖÏÇ¨Ïàò", -- [1]
					"Î≥¥ÎûÑÎü¨Ïä§ Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[40584] = {
					"ÎÇòÏ¶àÏûêÎ•¥ Ïπ®ÎûµÏûê", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[17957] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ïö©ÏÇ¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[20904] = {
					"ÍµêÎèÑÍ¥Ä Î©úÎ¶¨Ï∞®Î•¥", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[155618] = {
					"ÏûîÏßÄÎ•¥ Ïó¨ÏÇ¨ÎÉ•Íæº", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[156130] = {
					"ÌïòÍ∏â Ï°∞ÏïÑÌä∏Î°úÏù¥Îìú", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[127477] = {
					"Î∞îÎã∑Î¨º Î¨¥Ïá†ÌÑ±Í±∞Î∂Å", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[153059] = {
					"Ïï†ÌÉÄÎÑ¨", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[28578] = {
					"Í∞ïÌôîÎêú Í∞ïÏ≤† ÌååÍ¥¥Ïûê", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[154083] = {
					"ÌõàÎ†®Î∞õÏùÄ ÎäëÎåÄ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[144956] = {
					"ÏÑ¨Îú©Ïù¥Îπ®", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[114260] = {
					"ÏïÑÏò≥Î¶¨ÏïÑ", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[155619] = {
					"ÏûîÏßÄÎ•¥ Í∑ºÏúÑÎ≥ë", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[156131] = {
					"ÏûîÏßÄÎ•¥ ÎØ∏Î•¥ÎØ∏Îèà", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[21128] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Í∞ÄÏò§Î¶¨", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[153060] = {
					"ÏãúÎùºÎàÑÏä§", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[136849] = {
					"Î™®ÎûòÎëêÌîº Í¥ëÏ†ÑÏÇ¨", -- [1]
					"", -- [2]
				},
				[17958] = {
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà ÌååÏàòÎ≥ë", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[113201] = {
					"Îß§ÏΩ§Ïû•ÏïÑÏ∞åÍπÄÎ∞•", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[132074] = {
					"Í∞êÎèÖÍ¥Ä ÌÅ¨Î¶≠Ïä§", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[151613] = {
					"ÎåÄÏù∏ Îã§ÎûåÏ•ê", -- [1]
					"ÏûëÏ†ÑÎ™Ö: Î©îÏπ¥Í≥§", -- [2]
				},
				[156132] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ ÎßàÎÖÄ", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[140264] = {
					"ÏÉàÎÅº Î£¨Î∞úÍµΩ", -- [1]
					"", -- [2]
				},
				[33846] = {
					"ÏïîÌùëÎ£¨ ÌååÏàòÎ≥ë", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[152282] = {
					"ÏßÄÌïòÏöîÏÉà Ï†ïÏòà Í≤ΩÎπÑÎ≥ë", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ - Ïø†Îç∞ÌÉÄ ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[31260] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ ÌïòÎäòÏÜåÌôòÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[142312] = {
					"ÎëêÍ∞úÍ≥®Ï†àÎã®Ïûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[134634] = {
					"Ïô∏ÎààÎ∞ïÏù¥ Í≥µÌè¨", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[71477] = {
					"Íµ¨Ï≤¥ÌôîÎêú Ïö∞Ïö∏", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[156133] = {
					"Í≥µÌè¨Îò¨Î¶¨ Í¥¥Ïàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[129526] = {
					"Ìï≠ÎßåÏùò ÏãúÍ∂ÅÏ•êÎã® ÏÑ†Ïõê", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[140777] = {
					"Î≥¥ÏÑùÌååÌé∏ Í±∞Ïù∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[136811] = {
					"Ï°∞ÏïΩÎèå ÎèåÌåîÎß§Î≥ë", -- [1]
					"", -- [2]
				},
				[72964] = {
					"Í≥†Î°úÎã®", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[18313] = {
					"ÏóêÌÖåÎ¶¨Ïñº ÎßàÏà†ÏÇ¨", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[134635] = {
					"ÏïîÌùëÏùò Î∂ÄÏÇ∞Î¨º", -- [1]
					"Ïö∏ÎîîÎ•¥", -- [2]
				},
				[36874] = {
					"ÏÑ±ÎÇú ÎπôÌïò ÎßùÎ†π", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139754] = {
					"ÎÇúÌååÎãπÌïú Ìï≠Ìï¥ÏÇ¨", -- [1]
					"", -- [2]
				},
				[127479] = {
					"Î™®Îûò Ïó¨Ïôï", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[148614] = {
					"Ïø® Ìã∞ÎûÄ Ìè¨Î≥ë", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[116550] = {
					"Ïú†Î†π ÌõÑÏõêÏûê", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[45704] = {
					"Ïà®Ïñ¥ÏûàÎäî Ìè≠ÌíçÏö∞", -- [1]
					"ÏÜåÏö©ÎèåÏù¥ ÎàÑÍ∞Å", -- [2]
				},
				[146409] = {
					"Ïó¨Íµ∞Ï£º Ï†úÏù¥ÎÇò ÌîÑÎùºÏö∞ÎìúÎ¨¥Ïñ¥", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[136190] = {
					"Ïñ¥Îë†Ïùò Í∑†Ïó¥", -- [1]
					"", -- [2]
				},
				[129015] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ ÏÇºÎì± Ìï≠Ìï¥ÏÇ¨", -- [1]
					"", -- [2]
				},
				[139755] = {
					"ÏùºÎì±Ìï≠Ìï¥ÏÇ¨ Îß•ÎÑ¨Î¶¨", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[76292] = {
					"ÌïòÎäòÌÉë Î≥¥Ìò∏ ÌîºÏ°∞Î¨º", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[153064] = {
					"Ï¥àÍ¥ëÏã†ÎèÑ Í¥¥Ïàò", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[5828] = {
					"ÌõÑÎßàÎ•¥", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[145898] = {
					"Î∂ÄÎ¶ÑÏùÑ Î∞õÏùÄ ÏÇ¨ÎèÑ", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[133852] = {
					"ÏÇ¥ÏïÑÏûàÎäî Î∂ÄÌå®Î¨º", -- [1]
					"Ïç©ÏùÄÍµ¥", -- [2]
				},
				[20900] = {
					"ÌíÄÎ†§ÎÇú ÌååÎ©∏Ïù∏ÎèÑÏûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[92514] = {
					"ÏÉ§Ïò§Íµ∞", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[139756] = {
					"ÏûêÍ∞ù Ïâ¥Îùº", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140268] = {
					"Ïà≤ÏßÄÍ∏∞ ÏïÑÎÖ∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139390] = {
					"ÎπÑÎäòÍ≤ΩÎπÑÎ≥ë ÏÇ¨Î¶¨Ïä§Ï¶à", -- [1]
					"", -- [2]
				},
				[140359] = {
					"Ï≤úÎë•Îß§ Ìè¨ÏãùÏûê", -- [1]
					"", -- [2]
				},
				[134786] = {
					"Í∞ÄÏãúÏßëÍ≤å Î™®ÎûòÍ≤å", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[132741] = {
					"ÌôîÏóºÎπÑÎäò ÌûàÎìúÎùº", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[71770] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† Î¨¥Ïá†ÏπºÎÇ†", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[129016] = {
					"ÎÇ®Ï™ΩÎ∞îÎã§ Ïû•Ï¥ùÎ≥ë", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[139757] = {
					"ÌôïÏù∏ÏÇ¨ÏÇ¥ Ï°¥Ïä®", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[140269] = {
					"Ïö∏Î£®ÌÖåÏùº", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144876] = {
					"Ïö∞ÎÅºÎÅºÏ∞åÎ¶øÎ¥á 3000", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[54445] = {
					"Ï†úÏù¥ÎÇòÏùò ÌôòÏòÅ", -- [1]
					"ÏãúÍ∞ÑÏùò ÎÅù", -- [2]
				},
				[40586] = {
					"Ïó¨Íµ∞Ï£º ÎÇòÏ¶àÏûêÎ•¥", -- [1]
					"ÌååÎèÑÏùò ÏôïÏ¢å", -- [2]
				},
				[28579] = {
					"Í∞ïÌôîÎêú Í∞ïÏ≤† Í¥ëÏ†ÑÏÇ¨", -- [1]
					"Î≤àÍ∞úÏùò Ï†ÑÎãπ", -- [2]
				},
				[118523] = {
					"Ïó¨ÏÇ¨ÎÉ•Íæº Ïπ¥Ïä§ÌååÎ¶¨Ïïà", -- [1]
					"ÏÇ¥Í≤åÎùºÏä§Ïùò Î¨¥Îç§", -- [2]
				},
				[126969] = {
					"Ìä∏Î°úÏÇ≠", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[147948] = {
					"ÏùëÍ≥†Îêú ÏïÑÏ†úÎùºÏù¥Ìä∏", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[140270] = {
					"ÏïºÏÉùÏÇ¨Ïä¥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[132740] = {
					"ÎßπÎèÖÎπÑÎäò ÌûàÎìúÎùº", -- [1]
					"", -- [2]
				},
				[104818] = {
					"ÏÑ†Ï°∞Ïùò Î≥¥Ìò∏ ÌÜ†ÌÖú", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[132743] = {
					"ÌôîÏóºÎπÑÎäò ÌååÎèÑÎèåÍ≤©Î≥ë", -- [1]
					"ÌÅ¨Î†àÏä§Ìä∏Ìè¥ (Íµ∞ÎèÑ 11)", -- [2]
				},
				[20873] = {
					"ÏùåÏ†ÑÏûê Ï¥àÍ≥µÍ∞Ñ ÏßÄÎ∞∞Ïûê", -- [1]
					"Ìè≠ÌíçÏö∞ ÏöîÏÉà: ÏïåÏπ¥Ìä∏ÎùºÏ¶à", -- [2]
				},
				[22181] = {
					"Îò•ÌÉ±Ï¶àÍ∑∏Ï¶àÍ∑∏", -- [1]
					"Ìè≠ÌíçÏùò Ïö©Í¥ëÎ°ú", -- [2]
				},
				[36788] = {
					"Ï£ΩÏùåÏÜçÏÇ≠ÏûÑ Í∞ïÎ†πÏÇ¨", -- [1]
					"ÏÇ¨Î°†Ïùò Íµ¨Îç©Ïù¥", -- [2]
				},
				[139759] = {
					"Î∞òÎûÄÏûê ÏûòÎ¶¨ÏïÑ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140271] = {
					"Ï†àÎã®Îøî", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136688] = {
					"Í¥ëÏã†Ï†ÅÏù∏ Ï≤úÍ≥µÎ≥ë", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[76806] = {
					"ÏÇ∞Ïùò Ï†ïÏàò", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[136840] = {
					"Ï°∞Í∞Ä", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[138224] = {
					"ÏÑ±Ï†ÑÏùò ÎπõÏùò ÏàòÌò∏Ïûê", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[57387] = {
					"ÎààÎ∂ÄÏã† ÌïèÎ∞©Ïö∏", -- [1]
					"Ïö©Ïùò ÏòÅÌòº", -- [2]
				},
				[155628] = {
					"ÏïÑÏ¶àÏÉ§Î¶¨ Ï†êÏüÅÏù¥", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[139760] = {
					"ÏÑ†ÏûÑ Ìï≠Ìï¥ÏÇ¨ ÌîÑÎû≠ÌÅ¥Î¶∞", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[127482] = {
					"ÌïòÏàòÍ¥Ä ÌÜ±ÎãàÏù¥Îπ®", -- [1]
					"ÌÜ® Îã§Í≥†Î•¥", -- [2]
				},
				[127049] = {
					"ÎßàÎ•∏ÏàòÏóº Ï∏°ÎüâÏÇ¨", -- [1]
					"Í≤©Ï†ÑÏßÄ ÏïÑÎùºÏãú - Ìò∏Îìú", -- [2]
				},
				[136330] = {
					"ÏòÅÌòº Í∞ÄÏãú", -- [1]
					"Ïõ®Ïù¥ÌÅ¨Î†àÏä§Ìä∏ Ï†ÄÌÉù", -- [2]
				},
				[145903] = {
					"Ïñ¥Îë†Î≤ºÎ¶º ÏÑ±Ï†ÑÏÇ¨", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[122963] = {
					"Î†àÏûî", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[131729] = {
					"ÎùºÏù¥ÏΩî", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[112638] = {
					"Î≥ÑÏùò ÏàòÌò∏Î≥ë", -- [1]
					"Î∞§Ïùò ÏöîÏÉà", -- [2]
				},
				[139761] = {
					"Î∂ÄÎëêÏ£ºÏûÑ Ïò§Î£®Ïñ¥ÌÅ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
				[140273] = {
					"Î£¨Î∞úÍµΩ ÏÜåÍµ¥ÏßÄÍ∏∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129786] = {
					"Î∞îÎã∑Î¨ºÎπÑÎäò ÎßàÌÅ¨Î£®Îùº", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[134865] = {
					"Î≤àÍ∞úÏùò Ï≤®ÌÉë", -- [1]
					"ÏûîÎã¨Îùº ÎåÄÎ•ô ÎßàÏßÄÎßâ Ïû•", -- [2]
				},
				[130298] = {
					"Î¨ºÏùò Ï†ïÎ†π", -- [1]
					"", -- [2]
				},
				[18314] = {
					"Ïó∞Ìï© Ï∂îÏ†ÅÏûê", -- [1]
					"ÏïÑÌÇ®Îëî: ÎßàÎÇò Î¨¥Îç§", -- [2]
				},
				[140827] = {
					"ÎÇÑÎÇÑÍ±∏Îäî Í∞ÄÏãúÏàòÌíÄ ÏöîÎßà", -- [1]
					"", -- [2]
				},
				[147440] = {
					"ÌÉÄÏò§Î•¥Îäî ÌôîÏóºÏàòÌò∏Ï†ïÎ†π", -- [1]
					"Îã§ÏûêÏïåÎ°ú Ï†ÑÌà¨", -- [2]
				},
				[26696] = {
					"Ïù¥ÎØ∏ÏïºÎ•¥ Í¥ëÏ†ÑÏÇ¨", -- [1]
					"Ïö∞Ìä∏Í∞ÄÎìú Ï≤®ÌÉë", -- [2]
				},
				[122716] = {
					"ÏùëÍ≤∞Îêú Í≥µÌóà", -- [1]
					"ÏÇºÎëêÏ†ïÏùò Í∂åÏ¢å", -- [2]
				},
				[25757] = {
					"ÏïÑÌõÑÎÇòÏù¥Ìä∏ ÏÑúÎ¶¨Î∞îÎûå", -- [1]
					"Í∞àÌÄ¥ÏÜ°Í≥≥Îãà Ï†ÄÏàòÏßÄ: Í∞ïÏ†ú ÎÖ∏Ïó≠ÏÜå", -- [2]
				},
				[33293] = {
					"XT-002 Ìï¥Ï≤¥Ïûê", -- [1]
					"Ïö∏ÎëêÏïÑÎ•¥", -- [2]
				},
				[71772] = {
					"ÏΩîÎ•¥ÌÅ¨Î°† ÏïîÏÇ¥Ïûê", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[75272] = {
					"ÌîºÎßùÏπò Ïò§Ïö∞Í±∞ÎßàÎ≤ïÏÇ¨", -- [1]
					"ÌîºÎßùÏπò ÏûøÍ∞ÄÎ£® Í¥ëÏÇ∞", -- [2]
				},
				[71433] = {
					"ÏÉùÎ™ÖÏùò Î∂àÍΩÉ", -- [1]
					"Ïò§Í∑∏Î¶¨Îßà Í≥µÏÑ±Ï†Ñ", -- [2]
				},
				[79469] = {
					"ÏÜåÏö©ÎèåÏù¥ÏπòÎäî Ï∂§Íæº", -- [1]
					"ÌïòÎäòÌÉë", -- [2]
				},
				[139763] = {
					"ÎåÄÌè¨Ï†ÑÎ¨∏Í∞Ä ÏïÑÎ•ºÎ¶∞", -- [1]
					"", -- [2]
				},
				[122967] = {
					"Ïó¨ÏÇ¨Ï†ú ÏïåÎ£¨Ïûê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[136855] = {
					"ÎÖπÏïÑÎÇ¥Î¶∞ Î≥¥Î•¥ÎèÑ", -- [1]
					"", -- [2]
				},
				[137204] = {
					"Ïñ¥Îë†ÎßàÎ≤ï ÏÇ¨Ïà†ÏÇ¨", -- [1]
					"ÏÑ∏Ïä§ÎûÑÎ¶¨Ïä§ ÏÇ¨Ïõê", -- [2]
				},
				[137716] = {
					"Î∞ëÎ∞îÎã• Ìè¨ÏãùÏûê", -- [1]
					"ÏôïÎÖ∏Îã§ÏßÄ Í¥ëÏÇ∞!!", -- [2]
				},
				[116562] = {
					"Î∂àÍΩÉÍº¨Î¶¨ Î∞±Ïù∏ÎåÄÏû•", -- [1]
					"Îã§Ïãú Ï∞æÏùÄ Ïπ¥ÎùºÏûî", -- [2]
				},
				[136884] = {
					"Îª£Îª£Í∞ÄÏãú Ï†ÑÌà¨Ìò∏ÏúÑÎ≥ë", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[139431] = {
					"Î¨¥Îç§ ÏàòÌò∏Ïûê", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[131574] = {
					"ÌùêÎ¶∞ÎπõÏßÄÎäêÎü¨ÎØ∏", -- [1]
					"ÏòÅÏõêÌïú Í∂ÅÏ†Ñ", -- [2]
				},
				[94724] = {
					"Î∏åÎ¶¨ÏïàÎã§", -- [1]
					"ÏßÄÏò•Î∂à ÏÑ±Ï±Ñ", -- [2]
				},
				[136881] = {
					"Îª£Îª£Í∞àÍ∏∞ Í∏∏Ïû°Ïù¥", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[151752] = {
					"Î¨¥Î¶¨Í≥µÌóà", -- [1]
					"ÏóêÎ©îÎûÑÎìúÏùò Íøà - ÏïÑÏ†úÎ°úÏä§Ïùò Ïã¨Ïû• ÏãúÎÇòÎ¶¨Ïò§", -- [2]
				},
				[140968] = {
					"ÌòàÎ•òÎì± ÏäµÍ≤©Ïûê", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[142324] = {
					"ÌååÎûëÏßÄÎäêÎü¨ÎØ∏ ÎèåÍ≥†Îûò", -- [1]
					"ÏïàÏãùÏùò Ïà≤ (ÏÑ¨ 2)", -- [2]
				},
				[122970] = {
					"Í∑∏Î¶ºÏûêÏπºÎÇ† Ï∂îÏ†ÅÏûê", -- [1]
					"ÏïÑÌÉàÎã§ÏûêÎ•¥", -- [2]
				},
				[136891] = {
					"ÌùâÌÑ∞ ÏûÖÏùÄ ÏóÑÎãàÎ∂ÑÏáÑÏûê", -- [1]
					"Ïö¥Í≥® ÌèêÌóà (ÏÑ¨ 1)", -- [2]
				},
				[147955] = {
					"ÎåÄÏßÄÎ≥¥Ï£º", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[142000] = {
					"ÏùåÏÇ∞Ìïú Ï¥âÏàò", -- [1]
					"ÏÇ¨ÎùºÏä§ ÏÑ¨", -- [2]
				},
				[129788] = {
					"Î¨¥Ïá†ÌååÎèÑ Ìï¥Í≥®ÌÜ±ÎÇ†", -- [1]
					"ÏûêÏú†ÏßÄÎåÄ", -- [2]
				},
				[76809] = {
					"ÌòÑÏû•Í∞êÎèÖ Ìé†ÎìúÏä§Ìåå", -- [1]
					"Í≤ÄÏùÄÎ∞îÏúÑ Ïö©Í¥ëÎ°ú", -- [2]
				},
				[126205] = {
					"ÏàòÏùµÎåÄÎ∞ïÌè¨", -- [1]
					"", -- [2]
				},
				[48906] = {
					"Ï≤úÏÉÅÏùò Î∂àÍΩÉ", -- [1]
					"ÌÜ®ÎπÑÎ•¥Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÎèÑÏãú", -- [2]
				},
				[140335] = {
					"Î∞§ÎπÑÎäò ÎπÑÎ™ÖÎèÖÏÇ¨", -- [1]
					"Ï°∞Î£¨Îã¨ (ÏÑ¨ 7)", -- [2]
				},
			},
			["captured_spells"] = {
				[167898] = {
					["source"] = "–î–æ–±—Ä–æ–≤–µ—â–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267511] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134280,
				},
				[1022] = {
					["encounterID"] = 2097,
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[228128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–ª–∞–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[198589] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[244880] = {
					["source"] = "–®–∏–ø–æ—à–∫—É—Ä –ó–∞—â–∏—Ç–Ω–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 139022,
				},
				[278767] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300762] = {
					["source"] = "–ö–∏–∞–¥–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[254472] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—É—Ä–∏—ç–ª–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[279793] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272888] = {
					["source"] = "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 137517,
				},
				[272121] = {
					["source"] = "–ú—è—Å–æ—Ä—É–±–±",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22842] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5215] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275192] = {
					["source"] = "–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å —É–ª—å—è –ò–∫—Å'–Ω–∏–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140374,
				},
				[254474] = {
					["source"] = "–•–æ–ª–ª–∏–Ω–∞–π—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270334] = {
					["source"] = "–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 132913,
				},
				[270590] = {
					["encounterID"] = 2100,
					["source"] = "–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140447,
				},
				[152175] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281844] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271103] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272382] = {
					["source"] = "–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–Ω–∏–ª–æ–π –ß–µ—à—É–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139660,
				},
				[308188] = {
					["source"] = "–£—Ä–æ—á–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255627] = {
					["source"] = "–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129000,
				},
				[279033] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[308189] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274942] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314585] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304611] = {
					["source"] = "–ö–µ–ª—å—Ç–∞–∏—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[136] = {
					["source"] = "Funkload-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304612] = {
					["source"] = "–ö–µ–ª—å—Ç–∞–∏—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257292] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 138019,
				},
				[236321] = {
					["source"] = "–ë–æ–µ–≤–æ–µ –∑–Ω–∞–º—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 119052,
				},
				[262161] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[200389] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193356] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162794] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273415] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215479] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44535] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193357] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188370] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271371] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146859,
				},
				[294133] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–º–ø–∞—Ä–∏–∫",
					["npcID"] = 0,
				},
				[113942] = {
					["source"] = "–ü—Ä—è—á—å—Å—è-–†–∞–∑—É–≤–∏–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313571] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273930] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141495,
				},
				[272140] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8936] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257168] = {
					["source"] = "–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135258,
				},
				[257424] = {
					["type"] = "BUFF",
					["source"] = "Sharoonah-Mannoroth",
					["encounterID"] = 2097,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81782] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[248473] = {
					["source"] = "–ò–Ω—Ç–∞—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289277] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257169] = {
					["source"] = "–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135245,
				},
				[51505] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199754] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257170] = {
					["source"] = "–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 129369,
				},
				[194384] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203975] = {
					["source"] = "–ê—Å—Ç—Ä–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33763] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[212800] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203849] = {
					["source"] = "–•–∞—Å–≤–µ–≥–∞—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[73920] = {
					["source"] = "–°—Ç–∏–ª–ª–∞–π—Å-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[206151] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318187] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317420] = {
					["source"] = "–î–∞–π–≥–≥–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301308] = {
					["encounterID"] = 2097,
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[210372] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–ª–∞–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[24858] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274968] = {
					["source"] = "–°–µ—Å—Ç—Ä–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139433,
				},
				[118038] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292360] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119381] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[131347] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292361] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300801] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77758] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300802] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48438] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[143625] = {
					["source"] = "–¢–µ–Ω–¥–µ—Ä–∫—Ä–∏—Å–ø",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[192090] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275742] = {
					["source"] = "–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140690,
				},
				[272418] = {
					["encounterID"] = 2109,
					["source"] = "–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135263,
				},
				[275743] = {
					["source"] = "–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140691,
				},
				[221886] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[235313] = {
					["source"] = "–ü–æ–ª—É–Ω–∏—Ü–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294926] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275745] = {
					["source"] = "–•–∏—Å—Å–∫–∞—Ä–∞—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140693,
				},
				[272421] = {
					["source"] = "–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 138255,
				},
				[285976] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272422] = {
					["source"] = "–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138255,
				},
				[101545] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266285] = {
					["source"] = "–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130638,
				},
				[285978] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138130] = {
					["source"] = "–î—É—Ö –∑–µ–º–ª–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69792,
				},
				[155777] = {
					["source"] = "–ò–Ω—Ç–∞—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77505] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137619] = {
					["source"] = "Sadoth-Emeriss",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204242] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302348] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298512] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115804] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296211] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275752] = {
					["source"] = "–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140691,
				},
				[8921] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272940] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294935] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–ø—É—Ö",
					["npcID"] = 0,
				},
				[77762] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277290] = {
					["source"] = "–ë–∞–Ω–¥–∏—Ç–∫–∞ –®–µ–π–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139756,
				},
				[255523] = {
					["source"] = "–ë–∞–Ω–¥–∏—Ç–∫–∞ –®–µ–π–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139756,
				},
				[100780] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116189] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285475] = {
					["type"] = "BUFF",
					["source"] = "Zerfiydaemon-Blackrock",
					["encounterID"] = 2109,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[633] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264760] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–ª–ª–∏–¥—É—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[264761] = {
					["source"] = "–í–µ–µ—Ä–æ–Ω—à–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228287] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303380] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268854] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[319237] = {
					["source"] = "–ê—Å—Ç—Ä–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269366] = {
					["encounterID"] = 2100,
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –∏–Ω–∂–µ–Ω–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139830,
				},
				[273714] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[209746] = {
					["source"] = "–õ–∏–∞—Ç—Ä–µ–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255909] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214222] = {
					["source"] = "G√∂tterd√§mmer-Ragnaros",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268856] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293664] = {
					["source"] = "–î–æ–±—Ä–∞–ª–∞—Å—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12294] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[179057] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277297] = {
					["source"] = "–®—É–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 123286,
				},
				[163201] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[155145] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[18562] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264767] = {
					["source"] = "–î–∂–∞–¥–µ—Å—É—Ä–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[25771] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267325] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208086] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267326] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267327] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[139546] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[62124] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316944] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267329] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289324] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267330] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116768] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267331] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45181] = {
					["type"] = "DEBUFF",
					["source"] = "Sharoonah-Mannoroth",
					["encounterID"] = 2097,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287280] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[105771] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273470] = {
					["encounterID"] = 2109,
					["source"] = "–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129208,
				},
				[100784] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318227] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[182387] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119582] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[6343] = {
					["source"] = "–•–æ—Ä—Å–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116705] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[245686] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315161] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194153] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270661] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124506] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8690] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285496] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274755] = {
					["source"] = "–î—É—Ö –º–æ–≥—É –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138969,
				},
				[275011] = {
					["source"] = "–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140067,
				},
				[257069] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 141285,
				},
				[275779] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[13877] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275013] = {
					["source"] = "–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140067,
				},
				[275014] = {
					["type"] = "DEBUFF",
					["source"] = "–í–∏–∫'–ì–æ—Ç",
					["encounterID"] = 2100,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128652,
				},
				[200166] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[240447] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316703] = {
					["source"] = "–ü–∞–ª–∫–∞–¥–∞–≤–∞–ª–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315681] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294966] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[226510] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280389] = {
					["encounterID"] = 2109,
					["source"] = "–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129208,
				},
				[61391] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[97463] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199658] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[226512] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137639] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204262] = {
					["source"] = "–ú–∏—Ä–∞—ç–ª—å—à–∞–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270419] = {
					["source"] = "–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135963,
				},
				[122783] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312107] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196718] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[216411] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[272979] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[86659] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275793] = {
					["source"] = "–û–≥–Ω–µ–∂–∞–ª-–≤–æ–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146186,
				},
				[315179] = {
					["source"] = "–•–æ–ª–ª–∏–Ω–∞–π—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202602] = {
					["source"] = "–ü—Ä–æ–∂–∞–ª—Å—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272471] = {
					["source"] = "–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 138255,
				},
				[68054] = {
					["source"] = "–î–∂–∏–≤—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 35642,
				},
				[274774] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302651] = {
					["source"] = "–ö–∏–∞–¥–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271194] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251836] = {
					["source"] = "–í–∞–Ω–∞—Ä–∏—è-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296003] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290121] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280404] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[16870] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31224] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[132403] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268898] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268899] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210152] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275038] = {
					["source"] = "–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140293,
				},
				[1459] = {
					["source"] = "–ú–æ–≥–∞–≤–∫–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20243] = {
					["source"] = "–•–æ—Ä—Å–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194424] = {
					["source"] = "–≠–Ω–Ω–∏ –î–≤–∞ –°—Ç–≤–æ–ª–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139758,
				},
				[107570] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116841] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[13750] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[302917] = {
					["source"] = "–ü–æ–ª—É–Ω–∏—Ü–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297035] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121253] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270438] = {
					["source"] = "–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136012,
				},
				[287062] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268904] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297037] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287063] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268905] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256957] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –ø—Ä–∏–ª–∏–≤–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141284,
				},
				[295248] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297039] = {
					["source"] = "–°–≤–æ—Ä–¥–ø—Ä–æ–¥–∂–∫—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313663] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276068] = {
					["encounterID"] = 2099,
					["source"] = "–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128651,
				},
				[115308] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108211] = {
					["source"] = "–í–∞–Ω–∞—Ä–∏—è-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1490] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197625] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä—é–Ω–∫–∞-–ü–æ–¥–∑–µ–º—å–µ",
					["npcID"] = 0,
				},
				[270444] = {
					["source"] = "–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140777,
				},
				[204019] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261947] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279397] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[122470] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280165] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280933] = {
					["source"] = "–¢—è–∂–µ–ª–æ–µ —è–¥—Ä–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 136975,
				},
				[298836] = {
					["source"] = "–°—Ç–∞—Ä–¥–µ–º–æ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116844] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298837] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[217832] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[236502] = {
					["source"] = "–î–æ–±—Ä–æ–≤–µ—â–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295258] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298839] = {
					["source"] = "–í—ç–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107574] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198013] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298841] = {
					["source"] = "–î–∞–π–≥–≥–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275568] = {
					["source"] = "–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140458,
				},
				[316744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ—é–±—ë–Ω–æ—á–µ–∫-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[768] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199804] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[78675] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20484] = {
					["encounterID"] = 2109,
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275826] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128969,
				},
				[258883] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231390] = {
					["source"] = "–ö–∏–Ω–¥—Ä—ç–¥-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124007] = {
					["encounterID"] = 2099,
					["source"] = "–°—é—ç–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 63508,
				},
				[774] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270457] = {
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140760,
				},
				[281711] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280177] = {
					["source"] = "–ó–≤–∏—Ä–∏–Ω–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300893] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270459] = {
					["source"] = "–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140760,
				},
				[277109] = {
					["source"] = "–ú–æ—Ä–≥–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139670,
				},
				[116847] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[781] = {
					["source"] = "Funkload-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119085] = {
					["source"] = "–°–æ–∑–∏–¥–∞—é—â–∏–π-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5225] = {
					["source"] = "–ê—Å—Ç—Ä–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[145205] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277623] = {
					["source"] = "–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 147936,
				},
				[317265] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[291150] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[251837] = {
					["source"] = "–ö–∏—á–º—ç–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244808] = {
					["source"] = "–ú–æ—Ä–≥–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139670,
				},
				[124009] = {
					["type"] = "BUFF",
					["source"] = "–°—é—ç–Ω—å",
					["encounterID"] = 2099,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 63508,
				},
				[275835] = {
					["source"] = "–ó–∞—Ö–≤–∞—Ç—á–∏—Ü–∞ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 137516,
				},
				[275573] = {
					["source"] = "–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140442,
				},
				[256456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–æ–±–∫–æ–º–∞–Ω–¥–∏—Ä",
					["npcID"] = 0,
				},
				[205523] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275836] = {
					["source"] = "–ó–∞—Ö–≤–∞—Ç—á–∏—Ü–∞ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 137516,
				},
				[190984] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279913] = {
					["source"] = "–ü—Ä—è—á—å—Å—è-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196741] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69792,
				},
				[298343] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[284277] = {
					["source"] = "–õ–∏–Ω—Ñ–µ–æ-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[157228] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281209] = {
					["source"] = "–£—Ä–æ—á–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260734] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312922] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188499] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196742] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[40120] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292463] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256460] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫–ª–∏–ø—Å–∏—â–µ-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[100] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274817] = {
					["source"] = "–°–µ—Å—Ç—Ä–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139433,
				},
				[186257] = {
					["source"] = "Funkload-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8676] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271713] = {
					["source"] = "–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 149331,
				},
				[298197] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[218164] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[250507] = {
					["source"] = "–ù–µ–±–æ–ª–æ–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139486,
				},
				[1604] = {
					["source"] = "–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–ª–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140430,
				},
				[275744] = {
					["source"] = "–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140690,
				},
				[186258] = {
					["source"] = "Funkload-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266286] = {
					["source"] = "–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 130639,
				},
				[286840] = {
					["source"] = "–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 132868,
				},
				[261428] = {
					["encounterID"] = 2097,
					["source"] = "–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128649,
				},
				[260384] = {
					["source"] = "–ê–Ω–µ—Ç–æ—á–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273286] = {
					["source"] = "–¢—Ä–µ—Ç–∏–≥–∞—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285811] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[97462] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317020] = {
					["source"] = "–≠–ª–ª–æ–∏—Å-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[126664] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286842] = {
					["source"] = "–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 147933,
				},
				[256314] = {
					["source"] = "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146118,
				},
				[275183] = {
					["source"] = "–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140377,
				},
				[286587] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[132169] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[81262] = {
					["source"] = "–ü–µ—Ä–∏–æ–¥ —Ü–≤–µ—Ç–µ–Ω–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 47649,
				},
				[19750] = {
					["encounterID"] = 2100,
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264082] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134280,
				},
				[72968] = {
					["source"] = "–ü–∞–ª–∫–∞–¥–∞–≤–∞–ª–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272874] = {
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128969,
				},
				[192106] = {
					["source"] = "–û–≤–µ—Ä—á–∞—Ä–¥–∂-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23922] = {
					["source"] = "–•–æ—Ä—Å–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[274569] = {
					["source"] = "–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129367,
				},
				[290372] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–µ–Ω–Ω–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[264764] = {
					["source"] = "–•–æ—Ä—Å–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201939] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[256337] = {
					["source"] = "–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146119,
				},
				[236645] = {
					["source"] = "–ó–≤–∏—Ä–∏–Ω–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197003] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Imhose-Krag'jin",
					["npcID"] = 0,
				},
				[275174] = {
					["source"] = "–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å —É–ª—å—è –ò–∫—Å'–Ω–∏–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140374,
				},
				[269456] = {
					["encounterID"] = 2100,
					["source"] = "–í–∏–∫'–ì–æ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128652,
				},
				[288217] = {
					["source"] = "–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–º–∞–≥–∏—Å—Ç—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146834,
				},
				[297168] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264086] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134280,
				},
				[6552] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[107428] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266505] = {
					["source"] = "–î–∏–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 139009,
				},
				[275340] = {
					["source"] = "–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140355,
				},
				[82326] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[1464] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275085] = {
					["source"] = "–Ø—Ä–æ—Å—Ç–Ω—ã–π –ö—Ä–æ–≤–æ–∑–µ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139023,
				},
				[275341] = {
					["source"] = "–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140353,
				},
				[272528] = {
					["source"] = "–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128967,
				},
				[57723] = {
					["source"] = "–ú–æ–Ω–∞—Ä—Ö–∏—Å—Ç–∫–∞-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275086] = {
					["source"] = "–î—Ä–µ–≤–Ω–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 139008,
				},
				[275342] = {
					["source"] = "–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140353,
				},
				[160029] = {
					["type"] = "DEBUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["encounterID"] = 2109,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281843] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113656] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[642] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193359] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[123725] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273298] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256468] = {
					["source"] = "–ß–µ—Ä–Ω–æ–µ –ñ–∞–ª–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146238,
				},
				[275171] = {
					["source"] = "–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140376,
				},
				[298703] = {
					["source"] = "–ò–ª–ª–∏–¥–∞—Ä–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[113746] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69792,
				},
				[273299] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272662] = {
					["source"] = "–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129369,
				},
				[101546] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[280205] = {
					["source"] = "–ú–∏—Ä–∞—ç–ª—å—à–∞–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275346] = {
					["source"] = "–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145060,
				},
				[277137] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146866,
				},
				[184092] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268953] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115767] = {
					["source"] = "–•–æ—Ä—Å–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287790] = {
					["source"] = "–õ–∏–∞—Ç—Ä–µ–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196608] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268954] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188389] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275090] = {
					["source"] = "–î—Ä–µ–≤–Ω–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 139008,
				},
				[270657] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268955] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53600] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264352] = {
					["source"] = "–°—ç—Ä–∏–∞–Ω–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57724] = {
					["source"] = "–í—ç–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164273] = {
					["source"] = "–ß–∏—á–∏–±–æ—Å—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275168] = {
					["source"] = "–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140376,
				},
				[272537] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268774] = {
					["encounterID"] = 2109,
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202636] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ä–∞–Ω–∏—Å—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[11426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–ª–∞—Ä–µ–Ω",
					["npcID"] = 0,
				},
				[147650] = {
					["source"] = "–î–∏–∫–∏–π —Ö–∏—â–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139007,
				},
				[34428] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264170] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199603] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288210] = {
					["source"] = "–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–º–∞–≥–∏—Å—Ç—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146834,
				},
				[279956] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277724] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[188443] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266288] = {
					["source"] = "–ö—Ä—É–ø–Ω—ã–π —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140259,
				},
				[102342] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[246021] = {
					["source"] = "–°–æ—Ä–≤–∏–≥–æ–ª–æ–≤–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 123287,
				},
				[29166] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275610] = {
					["source"] = "–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140457,
				},
				[315763] = {
					["source"] = "–§–∞—Ä—É—Ä-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2379] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124273] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["source"] = "–†–∞–¥–æ–≤–∏–¥—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[250208] = {
					["source"] = "–û—Å—Ç—Ä–æ—Å–ø–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134802,
				},
				[264103] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134280,
				},
				[296072] = {
					["source"] = "–¢—Ä—ç–º–±–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271374] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[258222] = {
					["source"] = "–û–≥–Ω–µ–∂–∞–ª-–ø–æ–∫–æ—Ä–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146187,
				},
				[272441] = {
					["source"] = "–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140260,
				},
				[294027] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267685] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["source"] = "–ü—Ä–æ—Ç–æ—Ç–∏–ø-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275037] = {
					["source"] = "–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140293,
				},
				[203407] = {
					["source"] = "–ò–Ω—Ç–∞—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288146] = {
					["source"] = "–î–∂–µ–Ω–∞–ª–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257882] = {
					["encounterID"] = 2099,
					["source"] = "–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128651,
				},
				[191034] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[259161] = {
					["source"] = "–ó—É–±–º—É–¥—Ä–æ—Å—Ç–∏-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115181] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[33697] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315176] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124274] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1725] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260057] = {
					["source"] = "–ñ—Ä–µ—Ü –ì–æ–Ω–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131809,
				},
				[186401] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279709] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295310] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[853] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295367] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244882] = {
					["source"] = "–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140768,
				},
				[185123] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267612] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203538] = {
					["source"] = "–õ—É—Ü–∏–∞–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297412] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277921] = {
					["source"] = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139026,
				},
				[185763] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260954] = {
					["encounterID"] = 2097,
					["source"] = "–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128649,
				},
				[124275] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31884] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "–ü–∞–ª–∫–∞–¥–∞–≤–∞–ª–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264112] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134280,
				},
				[279028] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[250213] = {
					["source"] = "–û—Å—Ç—Ä–æ—Å–ø–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134802,
				},
				[299662] = {
					["source"] = "–¢—Ä—ç–º–±–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61882] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300174] = {
					["source"] = "–ù–æ–≥–æ–π–≤—Ç–∞–±–ª–æ-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203539] = {
					["source"] = "–•–æ–ª–ª–∏–Ω–∞–π—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257886] = {
					["encounterID"] = 2099,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280433] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279715] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275597] = {
					["source"] = "–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140458,
				},
				[299664] = {
					["source"] = "–î–æ–±—Ä–æ–≤–µ—â–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275040] = {
					["source"] = "–ù–æ–∫-–∞—Ä–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140297,
				},
				[285854] = {
					["source"] = "–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147225,
				},
				[32216] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293142] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268769] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297108] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[216328] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[228537] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1766] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[12042] = {
					["source"] = "–°—ç—Ä–∏–∞–Ω–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288158] = {
					["source"] = "–î–∂–µ–Ω–∞–ª–ª–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17962] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272276] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57934] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203277] = {
					["source"] = "–ê–Ω—É–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101643] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[213644] = {
					["encounterID"] = 2097,
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270513] = {
					["source"] = "–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 147968,
				},
				[209261] = {
					["source"] = "–°—Ç–∞—Ä–¥–µ–º–æ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199854] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[783] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1776] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278954] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300693] = {
					["source"] = "–ö–∏–∞–¥–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270515] = {
					["source"] = "–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131311,
				},
				[256739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–º–±–∞–Ω—É–ª–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[256867] = {
					["source"] = "–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128649,
				},
				[257042] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210065] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298823] = {
					["source"] = "–ß–µ—Ä–Ω–æ–≤–æ–¥–Ω—ã–π-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304056] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275344] = {
					["source"] = "–ì—Ä–æ–∑–æ–≤–æ–π –∑–º–µ–π - –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140359,
				},
				[45182] = {
					["type"] = "BUFF",
					["source"] = "Sharoonah-Mannoroth",
					["encounterID"] = 2097,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[26573] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[96231] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[269239] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["source"] = "–õ–æ—Å—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260924] = {
					["source"] = "–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128649,
				},
				[290467] = {
					["source"] = "–°–æ–∑–∏–¥–∞—é—â–∏–π-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193358] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193315] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116670] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290468] = {
					["source"] = "–ú—è–≥–∫–∏–π–∑–≤–µ—Ä—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[266970] = {
					["source"] = "–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134283,
				},
				[120954] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48265] = {
					["source"] = "–õ–∏–Ω—Ñ–µ–æ-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297375] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115008] = {
					["source"] = "–°–æ–∑–∏–¥–∞—é—â–∏–π-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115072] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193316] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[254824] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1784] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201427] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[59628] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162243] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295842] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164545] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316814] = {
					["source"] = "–ú–∏—Ä–∞—ç–ª—å—à–∞–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275540] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[65081] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[62618] = {
					["source"] = "–¢—Ä—ç–º–±–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275895] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318219] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124280] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260708] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272827] = {
					["source"] = "–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135241,
				},
				[260069] = {
					["source"] = "–ñ—Ä–∏—Ü–∞ –ì–æ–Ω–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131809,
				},
				[262115] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198817] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–∞–∑—Ä–µ—Ö—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[299624] = {
					["source"] = "–¢—Ä—ç–º–±–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260881] = {
					["source"] = "–î–æ–±—Ä–æ–≤–µ—â–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277432] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164547] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260643] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[242551] = {
					["source"] = "–•–∏–Ω—á-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260070] = {
					["source"] = "–ñ—Ä–µ—Ü –ü–∞'–∫—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131834,
				},
				[87024] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257650] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂",
					["encounterID"] = 2097,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 128649,
				},
				[207386] = {
					["source"] = "–®–≤–∞–π–Ω—ç—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2645] = {
					["source"] = "–ú–∏—Ä–∞—ç–ª—å—à–∞–º-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257641] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141285,
				},
				[267461] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134280,
				},
				[258920] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109128] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279737] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268230] = {
					["source"] = "–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 138464,
				},
				[7384] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227847] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195630] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102351] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277181] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260072] = {
					["source"] = "–ñ—Ä–µ—Ü –ü–∞'–∫—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131834,
				},
				[286900] = {
					["source"] = "–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147936,
				},
				[272834] = {
					["source"] = "–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 135241,
				},
				[193456] = {
					["source"] = "–ü–æ–ª—É–±—Ä–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286902] = {
					["source"] = "–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 147936,
				},
				[194223] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102352] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115203] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20473] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[1856] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[54149] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–≤–∏–Ω–≥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[295343] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[160331] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[68529] = {
					["source"] = "–ß–µ—Ä–Ω–æ–≤–æ–¥–Ω—ã–π-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316826] = {
					["source"] = "–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 162764,
				},
				[277185] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195457] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199721] = {
					["source"] = "–ü–∞—É—ç—Ä–º–µ—Ç–∞–ª–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[90328] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 69946,
				},
				[275140] = {
					["source"] = "–ö—Ä—É–ø–Ω—ã–π —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140259,
				},
				[109132] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[286911] = {
					["source"] = "–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147936,
				},
				[193538] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221771] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[29893] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5176] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[232698] = {
					["source"] = "–≠–ª–ª–æ–∏—Å-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "–•–∞—Å–≤–µ–≥–∞—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279902] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[286907] = {
					["source"] = "–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147938,
				},
				[209693] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102417] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195627] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "–õ–æ—Å—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[93402] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[41425] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285630] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[772] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[31850] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290490] = {
					["source"] = "–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134280,
				},
				[165961] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272588] = {
					["source"] = "–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137511,
				},
				[80354] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195072] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[316823] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48108] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285981] = {
					["source"] = "–î–∞–π–≥–≥–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304603] = {
					["source"] = "–ö–µ–ª—å—Ç–∞–∏—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251894] = {
					["source"] = "–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145977,
				},
				[5487] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316835] = {
					["source"] = "–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162764,
				},
				[272581] = {
					["source"] = "–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129367,
				},
				[269266] = {
					["encounterID"] = 2100,
					["source"] = "–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137614,
				},
				[115078] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[22812] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197548] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["npcID"] = 0,
				},
				[164812] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268756] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295339] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277179] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256627] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141283,
				},
				[2098] = {
					["source"] = "Sharoonah-Mannoroth",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[266967] = {
					["source"] = "–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134283,
				},
				[117828] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267528] = {
					["source"] = "–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134283,
				},
				[277965] = {
					["source"] = "–¢—è–∂–µ–ª–æ–µ —è–¥—Ä–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 136975,
				},
				[266968] = {
					["source"] = "–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134283,
				},
				[272571] = {
					["source"] = "–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129367,
				},
				[256616] = {
					["source"] = "–ö–∏—à–∫–æ–¥–µ—Ä–∫–∞ –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141566,
				},
				[272144] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118779] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303943] = {
					["source"] = "–õ–∏–∞—Ç—Ä–µ–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318211] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287174] = {
					["source"] = "–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 145060,
				},
				[275154] = {
					["source"] = "–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140260,
				},
				[108366] = {
					["source"] = "–û–±–æ–∂–µ—á—Ç–æ—ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2823] = {
					["source"] = "–†–∞–¥–æ–≤–∏–¥—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[244787] = {
					["source"] = "–®–∏–ø–æ—à–∫—É—Ä –ó–∞—â–∏—Ç–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139022,
				},
				[164815] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[52174] = {
					["source"] = "–ü—Ä–æ—Ç–æ—Ç–∏–ø-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[278736] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256473] = {
					["source"] = "–û–≥–Ω–µ–∂–∞–ª-–ø–æ–∫–æ—Ä–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146187,
				},
				[288455] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318378] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115080] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[123986] = {
					["source"] = "Jaki-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318216] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210320] = {
					["source"] = "–°–≤–æ—Ä–¥–ø—Ä–æ–¥–∂–∫—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31935] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[298431] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ—É–ø—Å–æ—É-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[266974] = {
					["source"] = "–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134286,
				},
				[316036] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275012] = {
					["source"] = "–í–æ–ª—á–æ–Ω–æ–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140295,
				},
				[264673] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24870] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∫–µ—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[47536] = {
					["source"] = "–¢—Ä—ç–º–±–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275347] = {
					["source"] = "–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140353,
				},
				[272546] = {
					["source"] = "–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129366,
				},
				[974] = {
					["source"] = "–°–∞–Ω–≥—Ö–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280787] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ—É–ø—Å–æ—É-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[285853] = {
					["source"] = "–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147225,
				},
				[199600] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269279] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ—É–ø—Å–æ—É-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[1953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ç–ª–º–∏-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[263344] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146862,
				},
				[268956] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277920] = {
					["source"] = "–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139026,
				},
				[319919] = {
					["source"] = "–°–æ–∑–∏–¥–∞—é—â–∏–π-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271071] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275611] = {
					["source"] = "–°–∫–∞–ª—å–Ω—ã–π –ø—Ä—ã–≥—É–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140432,
				},
				[204301] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1680] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[124503] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[303041] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[102401] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313060] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1966] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298950] = {
					["source"] = "–°–∞—Ä–∞–∫—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272542] = {
					["source"] = "–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128967,
				},
				[123586] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295047] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–≥–µ–º–∏–ª",
					["npcID"] = 0,
				},
				[6788] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296138] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51723] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Imhose-Krag'jin",
					["npcID"] = 0,
				},
				[269029] = {
					["encounterID"] = 2109,
					["source"] = "–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129208,
				},
				[70774] = {
					["source"] = "–í–∞–Ω–∞—Ä–∏—è-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297162] = {
					["source"] = "Jaki-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204079] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[162264] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285836] = {
					["source"] = "–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147188,
				},
				[285835] = {
					["source"] = "–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 147188,
				},
				[275936] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270460] = {
					["source"] = "–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 140768,
				},
				[318391] = {
					["source"] = "–í–µ–ª–∏–∫–∏–π –ø–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —á–µ—Ä–≤—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 152550,
				},
				[299083] = {
					["source"] = "–í—ç–Ω–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268776] = {
					["source"] = "–ê–º–∞–Ω–∏–π—Å–∫–∏–π –±–æ–µ–≤–æ–π –º–µ–¥–≤–µ–¥—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 130257,
				},
				[271220] = {
					["source"] = "–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 146838,
				},
				[275569] = {
					["source"] = "–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140457,
				},
				[255614] = {
					["source"] = "–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 129000,
				},
				[192225] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Ç—ë—Ä–Ω–∞–ª–ª–∞–π—Ñ",
					["npcID"] = 0,
				},
				[298700] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–º—Å–æ–Ω—á—ë-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[21562] = {
					["source"] = "–°–≤–µ—Ç—É–Ω–¥—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33917] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275594] = {
					["source"] = "–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140458,
				},
				[83243] = {
					["source"] = "Funkload-Kazzak",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[270461] = {
					["source"] = "–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140777,
				},
				[256339] = {
					["source"] = "–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146119,
				},
				[257063] = {
					["source"] = "–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∞—è —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 141284,
				},
				[270058] = {
					["source"] = "–õ–æ—Å—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275429] = {
					["source"] = "–ü—Ä—è—á—å—Å—è-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77489] = {
					["source"] = "–ö–∏–∞–¥–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295378] = {
					["source"] = "–ö–∞–±–∏–±–∞—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202164] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–µ–π—Ä–∏–∫-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[8004] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ö–∞–Ω–æ–ª",
					["npcID"] = 0,
				},
				[2983] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["source"] = "–î–∞–π–≥–≥–µ—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197561] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274969] = {
					["source"] = "–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 126185,
				},
				[274991] = {
					["encounterID"] = 2100,
					["source"] = "–í–∏–∫'–ì–æ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 128652,
				},
				[190784] = {
					["source"] = "–õ–∞–Ω–µ—Å—Å–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285979] = {
					["source"] = "–ö—É–¥–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[88423] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[78674] = {
					["source"] = "–û—Ç–∂–∏–≥–∞–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267575] = {
					["source"] = "–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134286,
				},
				[279648] = {
					["source"] = "–ù–∏–º–∏–ª—ç–Ω–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275589] = {
					["source"] = "–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—Ä–æ–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 140434,
				},
				[288988] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268887] = {
					["source"] = "–ü—Ä—è—á—å—Å—è-–†–∞–∑—É–≤–∏–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[183752] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273232] = {
					["source"] = "Zerfiydaemon-Blackrock",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185311] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297429] = {
					["source"] = "–ë–µ–¥—É–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[288509] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∞–Ω—å—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[297034] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–Ω–∫–∫–≤–∏–∑–∏—Ç–æ—Ä-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[118922] = {
					["source"] = "Funkload-Kazzak",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195901] = {
					["source"] = "–ì–∞–ª–∞–∫—Ä–∞—Å—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[83245] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì—É–≥–µ–Ω—Ö–∞–π–º–µ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[138927] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–º—Å–æ–Ω—á—ë-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[212653] = {
					["source"] = "–ó–≤–∏—Ä–∏–Ω–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115546] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267560] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–º–±–∞–Ω—É–ª–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[267253] = {
					["source"] = "–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134286,
				},
				[167130] = {
					["source"] = "–ß–µ—Ä–Ω–æ–µ –ñ–∞–ª–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146238,
				},
				[292359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–º–ø–∞—Ä–∏–∫",
					["npcID"] = 0,
				},
				[257410] = {
					["source"] = "–≠–ª–ª–æ–∏—Å-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272126] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–ª–æ–π—Ö–∏–º–∏–∫-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[8220] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∫–µ—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[11327] = {
					["source"] = "Sharoonah-Mannoroth",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
			},
			["npc_colors"] = {
				[148893] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[131009] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[150547] = {
					true, -- [1]
					true, -- [2]
					"red", -- [3]
				},
				[153335] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[151579] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134388] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[148894] = {
					true, -- [1]
					true, -- [2]
					"mediumvioletred", -- [3]
				},
				[144311] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[135562] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[159510] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134389] = {
					true, -- [1]
					true, -- [2]
					"red", -- [3]
				},
				[135846] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135169] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129758] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[130896] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[150195] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134390] = {
					true, -- [1]
					true, -- [2]
					"red", -- [3]
				},
				[153377] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[135761] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155433] = {
					false, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[154685] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[136549] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[148716] = {
					true, -- [1]
					true, -- [2]
					"azure", -- [3]
				},
				[134612] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[155434] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[133361] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[136330] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[151581] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[126023] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[137627] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[153196] = {
					true, -- [1]
					true, -- [2]
					"red", -- [3]
				},
				[155432] = {
					false, -- [1]
					false, -- [2]
					"violet", -- [3]
				},
				[138465] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[152703] = {
					true, -- [1]
					true, -- [2]
					"dodgerblue", -- [3]
				},
				[137591] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135007] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[137103] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[133685] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135764] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[155645] = {
					true, -- [1]
					true, -- [2]
					"dodgerblue", -- [3]
				},
				[131402] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130325] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[135765] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135759] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[151613] = {
					true, -- [1]
					true, -- [2]
					"deepskyblue", -- [3]
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.8500000089406967, -- [4]
			},
			["indicator_extra_raidmark"] = false,
			["hide_friendly_castbars"] = true,
			["indicator_anchor"] = {
				["y"] = 0.5,
				["x"] = 0,
				["side"] = 6,
			},
			["number_region"] = "eastasia",
			["aura_show_debuffs_personal"] = false,
			["health_selection_overlay_alpha"] = 0.3299999833106995,
			["cast_statusbar_spark_color"] = {
				0.980392156862745, -- [1]
				[3] = 0.741176470588235,
			},
			["minor_height_scale"] = 0.9999999403953552,
			["minor_width_scale"] = 0.7999999523162842,
			["not_affecting_combat_alpha"] = 0.5999999642372131,
			["castbar_target_text_size"] = 12,
			["extra_icon_height"] = 24,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["script_banned_user"] = {
				["Player-205-059DE14B"] = true,
			},
			["aura_height"] = 24,
			["non_targeted_alpha_enabled"] = true,
			["aura_padding"] = 4,
			["target_highlight_alpha"] = 0.5,
			["aura2_x_offset"] = 67,
			["target_indicator"] = "NONE",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 89,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1573070086,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 398,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"khaki\", --monk statue npcID\n        [103822] = \"wheat\", --druid treant npcID\n        [61056] = \"tan\", --shamen elemental npcID\n        [95072] = \"tan\", \n    }\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1578996570,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 105,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1573073495,
					["PlaterCore"] = 1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 574574,
					["LastHookEdited"] = "Nameplate Added",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 210,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1573035811,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 204,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1573073492,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 110,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1573034886,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 65,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Time"] = 1573070086,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 198,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1573070036,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133689,
					["LastHookEdited"] = "Constructor",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 394,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"CENTER\", castBar.Text, \"LEFT\", -5, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"CENTER\", castBar.Text, \"LEFT\", -5, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1581159050,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Name"] = "Cast Icon Anchor",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 129,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 14\n    envTable.Anchor = {\n        side = 2, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1573075620,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon",
					["Name"] = "Extra Quest Icon",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 135,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border around the current target.",
					["Hooks"] = {
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 0.75\n    local borderColor = {255,255,200,0.85}\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1578996731,
					["PlaterCore"] = 1,
					["Name"] = "Target Border",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\CHATFRAME\\UI-ChatInputBorder",
					["LastHookEdited"] = "Constructor",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 451,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Can Modify Font, Size, Outline and Shadow of Name-Only nameplate's Title",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.ActorTitleSpecial:SetFont(envTable.FontPath, envTable.FontSize, envTable.Outline)\n    unitFrame.ActorTitleSpecial:SetShadowColor(envTable.ShadowColor)\n    --unitFrame.ActorTitleSpecial:SetShadowOffset(envTable.ShadowX,envTable.ShadowY)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.ActorTitleSpecial:SetFont(envTable.FontPath, envTable.FontSize, envTable.Outline)\n    unitFrame.ActorTitleSpecial:SetShadowColor(envTable.ShadowColor)\n    --unitFrame.ActorTitleSpecial:SetShadowOffset(envTable.ShadowX,envTable.ShadowY)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FontSize = 12\n    envTable.FontPath = unitFrame.ActorNameSpecial:GetFont()\n    envTable.Outline = \"\" --\"\", \"OUTLINE\", \"THICKOUTLINE\", \"MONOCHROME\"\n    envTable.ShadowColor = {0,0,0,1}\n    --envTable.ShadowX = 1\n    --envTable.ShadowY = -1\nend\n\n\n",
					},
					["Time"] = 1578996590,
					["PlaterCore"] = 1,
					["Name"] = "Name-Only Title Modifier",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 134330,
					["LastHookEdited"] = "Constructor",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 674,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Raidmark in the Unitname",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --normal Marker\n    envTable.Size = 20\n    envTable.Anchor = {\n        side = 2, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    --Name only Marker\n    envTable.SpecialSize = 22\n    envTable.SpecialAnchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    envTable.UpdateRaidMark = function (unitFrame, unitId)\n        local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n        local marker = plateFrame.unitFrame.PlaterRaidTargetFrame\n        if marker then\n            if plateFrame.IsFriendlyPlayerWithoutHealthBar or\n            plateFrame.IsNpcWithoutHealthBar then\n                marker:SetSize (envTable.SpecialSize, envTable.SpecialSize)\n                Plater.SetAnchor (marker, envTable.SpecialAnchor, unitFrame.ActorNameSpecial)\n            else\n                marker:SetSize (envTable.Size, envTable.Size)\n                Plater.SetAnchor (marker, envTable.Anchor, unitFrame.unitName)\n            end\n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateRaidMark (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1578996591,
					["PlaterCore"] = 1,
					["Name"] = "Raidmark in the Unitname",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878218,
					["LastHookEdited"] = "Constructor",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 195,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1578782302,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 133004,
					["Name"] = "Cast Icon Border",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 205,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1578782302,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 133004,
					["Name"] = "Cast Bar Border",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 1666,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Gold/Silvery Dragon,like blz original",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local profile = Plater.db.profile\n    --local plateFrame = unitFrame:GetParent()\n    local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n    local actorType = plateFrame.actorType    \n    \n    --unit reaction\n    local UNITREACTION_HOSTILE = 3\n    local UNITREACTION_NEUTRAL = 4\n    local UNITREACTION_FRIENDLY = 5\n    \n    local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n    local ACTORTYPE_FRIENDLY_NPC = \"friendlynpc\"\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local ACTORTYPE_ENEMY_NPC = \"enemynpc\"\n    local ACTORTYPE_PLAYER = \"player\" \n    \n    local MEMBER_UNITID = \"namePlateUnitToken\"\n    local MEMBER_GUID = \"namePlateUnitGUID\"\n    local MEMBER_NPCID = \"namePlateNpcId\"\n    local MEMBER_QUEST = \"namePlateIsQuestObjective\"\n    local MEMBER_REACTION = \"namePlateUnitReaction\"\n    local MEMBER_ALPHA = \"namePlateAlpha\"\n    local MEMBER_RANGE = \"namePlateInRange\"\n    local MEMBER_NOCOMBAT = \"namePlateNoCombat\"\n    local MEMBER_NAME = \"namePlateUnitName\"\n    local MEMBER_NAMELOWER = \"namePlateUnitNameLower\"\n    local MEMBER_TARGET = \"namePlateIsTarget\"\n    local MEMBER_CLASSIFICATION = \"namePlateClassification\"\n    \n    -- ~indicators\n    function Plater.UpdateChangeIndicators (plateFrame, actorType)\n        local actorType = plateFrame.actorType    \n        --print(\"1\",actortype)\n        --limpa os indicadores\n        Plater.ClearChangeIndicators (plateFrame)\n        local config = Plater.db.profile\n        \n        if (actorType == ACTORTYPE_ENEMY_PLAYER) then\n            if (config.indicator_faction) then\n                --Plater.AddChangeIndicator (plateFrame, UnitFactionGroup (plateFrame [MEMBER_UNITID]))\n                Plater.AddChangeIndicator (plateFrame, UnitFactionGroup (unitId))           \n            end\n            if (config.indicator_enemyclass) then\n                Plater.AddChangeIndicator (plateFrame, \"classicon\")\n            end\n            if (config.indicator_spec) then \n                --> check if the user is using details\n                if (Details and Details.realversion >= 134) then\n                    local spec = Details:GetSpecByGUID (plateFrame [MEMBER_GUID])\n                    --local spec = Details:GetSpecByGUID (unitId)\n                    if (spec) then\n                        local texture, L, R, T, B = Details:GetSpecIcon (spec)\n                        Plater.AddChangeIndicator (plateFrame, \"specicon\", texture, L, R, T, B)\n                    end\n                end\n            end\n            \n        elseif (actorType == ACTORTYPE_ENEMY_NPC) then\n            \n            --is a pet\n            local unitType = Plater.GetUnitType (plateFrame)\n            \n            --if (PET_CACHE [plateFrame [MEMBER_GUID]]) then\n            if (unitType == \"pet\" and config.indicator_pet) then\n                Plater.AddChangeIndicator (plateFrame, \"pet\")\n            else\n                --classification\n                local unitClassification = UnitClassification (plateFrame.namePlateUnitToken) --elite minus normal rare rareelite worldboss\n                if ((unitClassification == \"worldboss\" or (UnitLevel (unitId) == -1)) and envTable.showworldbossicon) then\n                    Plater.AddChangeIndicator (plateFrame, \"worldboss\")\n                    if (unitClassification == \"rareelite\" and (config.indicator_rare or config.indicator_elite)) and (not envTable.showworldbossonly) then\n                        if envTable.showbothRareAndElite then\n                            Plater.AddChangeIndicator (plateFrame, \"elite\")\n                        end\n                        Plater.AddChangeIndicator (plateFrame, \"rare\")\n                    else\n                        if (unitClassification == \"elite\" and config.indicator_elite) and (not envTable.showworldbossonly) then\n                            Plater.AddChangeIndicator (plateFrame, \"elite\")\n                        end\n                        if (unitClassification == \"rare\" and config.indicator_rare) and (not envTable.showworldbossonly) then\n                            Plater.AddChangeIndicator (plateFrame, \"rare\")\n                        end\n                    end\n                elseif (unitClassification == \"rareelite\" and (config.indicator_rare or config.indicator_elite))  then\n                    if envTable.showbothRareAndElite then\n                        Plater.AddChangeIndicator (plateFrame, \"elite\")\n                    end\n                    Plater.AddChangeIndicator (plateFrame, \"rare\")\n                else\n                    if (unitClassification == \"elite\" and config.indicator_elite) then\n                        Plater.AddChangeIndicator (plateFrame, \"elite\")\n                    end\n                    if (unitClassification == \"rare\" and config.indicator_rare) then\n                        Plater.AddChangeIndicator (plateFrame, \"rare\")\n                    end\n                end\n                \n                --quest boss\n                local isQuestBoss = UnitIsQuestBoss (plateFrame.namePlateUnitToken) --true false\n                if (isQuestBoss and config.indicator_quest) then\n                    Plater.AddChangeIndicator (plateFrame, \"quest\")\n                end\n                \n            end\n            \n        elseif (actorType == ACTORTYPE_FRIENDLY_NPC) then\n            if (plateFrame [MEMBER_QUEST] and envTable.friendlynpcquest) then\n                Plater.AddChangeIndicator (plateFrame, \"quest\")\n            end\n        end\n        \n        --custom indicators from scripts\n        for i = 1, #plateFrame.unitFrame.CustomIndicators do\n            Plater.AddChangeIndicator (plateFrame, \"custom\", unpack (plateFrame.unitFrame.CustomIndicators [i]))\n        end\n    end\n    \n    -- ~indicators--test mode:for ENEMY_NPC,show,quest,rare,elite,pet....\n    function Plater.TestModeUpdateChangeIndicators (plateFrame, actorType)\n        if  not envTable.TestMode then\n            return\n        end\n        local actorType = plateFrame.actorType    \n        Plater.ClearChangeIndicators (plateFrame)\n        if (actorType == ACTORTYPE_ENEMY_NPC) then\n            Plater.AddChangeIndicator (plateFrame, \"pet\")\n            Plater.AddChangeIndicator (plateFrame, \"worldboss\")\n            Plater.AddChangeIndicator (plateFrame, \"elite\")\n            Plater.AddChangeIndicator (plateFrame, \"rare\")\n            Plater.AddChangeIndicator (plateFrame, \"quest\")\n        end\n    end\n    \n    function Plater.AddChangeIndicator (plateFrame, indicator, ...)\n        \n        local thisIndicator = plateFrame.IconIndicators [plateFrame.IconIndicators.Next]\n        \n        if (not thisIndicator) then\n            local newIndicator = plateFrame.unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n            newIndicator:SetSize (envTable.IndicatorSize, envTable.IndicatorSize)\n            tinsert (plateFrame.IconIndicators, newIndicator)\n            thisIndicator = newIndicator\n        end\n        \n        thisIndicator:Show()\n        thisIndicator:SetTexCoord (0, 1, 0, 1)\n        thisIndicator:SetVertexColor (1, 1, 1)\n        thisIndicator:SetDesaturated (false)\n        thisIndicator:SetSize (envTable.IndicatorSize, envTable.IndicatorSize)\n        \n        -- ~icons\n        if (indicator == \"pet\") then\n            thisIndicator:SetTexture ([[Interface\\AddOns\\Plater\\images\\peticon]])\n            thisIndicator:SetTexCoord (0, 28/32, 3/32, 1)\n            \n        elseif (indicator == \"Horde\") then\n            thisIndicator:SetTexture ([[Interface\\PVPFrame\\PVP-Currency-Horde]])\n            thisIndicator:SetSize (envTable.IndicatorSize, envTable.IndicatorSize)\n            \n        elseif (indicator == \"Alliance\") then\n            thisIndicator:SetTexture ([[Interface\\PVPFrame\\PVP-Currency-Alliance]])\n            thisIndicator:SetTexCoord (4/32, 29/32, 2/32, 30/32)\n            thisIndicator:SetSize (envTable.IndicatorSize, envTable.IndicatorSize)\n            \n        elseif (indicator == \"elite\") then\n            thisIndicator:SetTexture ([[Interface\\TargetingFrame\\Nameplates]])\n            thisIndicator:SetTexCoord (0, 0.15, 0.24, 0.48)\n            thisIndicator:SetSize (envTable.IndicatorSize+1, envTable.IndicatorSize)\n            --print(\"elite\")\n            \n        elseif (indicator == \"rare\") then\n            thisIndicator:SetTexture ([[Interface\\TargetingFrame\\Nameplates]])\n            thisIndicator:SetTexCoord (0, 0.15, 0.5, 0.78)\n            thisIndicator:SetSize (envTable.IndicatorSize, envTable.IndicatorSize+1)\n            --print(\"rare\")\n            \n        elseif (indicator == \"quest\") then\n            thisIndicator:SetTexture ([[Interface\\TARGETINGFRAME\\PortraitQuestBadge]])\n            thisIndicator:SetTexCoord (1/32, 26/32, 1/32, 32/32)\n            \n        elseif (indicator == \"classicon\") then\n            local _, class = UnitClass (plateFrame [MEMBER_UNITID])\n            if (class) then\n                thisIndicator:SetTexture ([[Interface\\GLUES\\CHARACTERCREATE\\UI-CharacterCreate-Classes]])\n                thisIndicator:SetTexCoord (unpack (CLASS_ICON_TCOORDS [class]))\n            end\n            \n        elseif (indicator == \"specicon\") then\n            local texture, L, R, T, B = ...\n            thisIndicator:SetTexture (texture)\n            thisIndicator:SetTexCoord (L, R, T, B)\n            \n        elseif (indicator == \"worldboss\") then\n            thisIndicator:SetTexture ([[Interface\\TARGETINGFRAME\\ui-targetingframe-skull]])\n            thisIndicator:SetSize (envTable.IndicatorSize+6, envTable.IndicatorSize+2)\n            thisIndicator:SetTexCoord (0, 1, 0.05, 0.88)\n        elseif (indicator == \"custom\") then\n            local texture, width, height, color, L, R, T, B = ...\n            thisIndicator:SetTexture (texture)\n            thisIndicator:SetSize (width, height)\n            thisIndicator:SetTexCoord (L, R, T, B)\n            local r, g, b = DF:ParseColors (color)\n            thisIndicator:SetVertexColor (r, g, b)\n        end\n        \n        if (plateFrame.IconIndicators.Next == 1) then\n            Plater.SetAnchor (thisIndicator, Plater.db.profile.indicator_anchor)\n        else\n            local attachTo = plateFrame.IconIndicators [plateFrame.IconIndicators.Next - 1]\n            --se for menor que 4 ele deve crescer para o lado da esquerda, nos outros casos vai para a direita\n            if (Plater.db.profile.indicator_anchor.side < 4) then\n                PixelUtil.SetPoint (thisIndicator, \"right\", attachTo, \"left\", -2, 0)\n            else\n                PixelUtil.SetPoint (thisIndicator, \"left\", attachTo, \"right\", 1, 0)\n            end\n        end\n        \n        plateFrame.IconIndicators.Next = plateFrame.IconIndicators.Next + 1\n    end\n    \n    function Plater.ClearChangeIndicators (plateFrame)\n        for _, indicator in ipairs (plateFrame.IconIndicators) do\n            indicator:Hide()\n            indicator:ClearAllPoints()\n        end\n        plateFrame.IconIndicators.Next = 1\n    end\n    \n    --indictors\n    if  not envTable.TestMode then\n        Plater.UpdateChangeIndicators (plateFrame, actorType)\n    else\n        Plater.TestModeUpdateChangeIndicators (plateFrame, actorType)\n    end\n    \n    if envTable.RaidMark then\n        --RaidMark\n        --Plater.UpdateRaidMarkersOnAllNameplates()\n        envTable.size = 22\n        envTable.side = Plater.db.profile.indicator_raidmark_anchor.side\n        envTable.x = Plater.db.profile.indicator_raidmark_anchor.x\n        envTable.y = Plater.db.profile.indicator_raidmark_anchor.y\n        local anchor = {\n            side = envTable.side, \n            x = envTable.x,\n            y = envTable.y,\n        }; \n        if (not  unitFrame.healthBar.RaidMarkAdjustFrame) then\n            envTable.RaidMarkAdjustFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", Plater:GetTemplate (\"font\", \"OPTIONS_FONT_TEMPLATE\"));\n            Plater.SetAnchor (envTable.RaidMarkAdjustFrame, anchor);\n            unitFrame.healthBar.RaidMarkAdjustFrame = envTable.RaidMarkAdjustFrame\n        end\n        \n        unitFrame.healthBar.RaidMarkAdjustFrame:SetScale (Plater.db.profile.indicator_raidmark_scale)\n        local mark = GetRaidTargetIndex(unitId) \n        if mark then\n            unitFrame.healthBar.RaidMarkAdjustFrame:SetText (\"|TInterface\\\\TARGETINGFRAME\\\\UI-RaidTargetingIcon_\"..mark..\":\"..envTable.size..\":\"..envTable.size..\":3:1:|t\")\n        else\n            unitFrame.healthBar.RaidMarkAdjustFrame:SetText (\"\")\n        end\n        \n        if envTable.AdjustRaidMarkPosition then\n            unitFrame.PlaterRaidTargetFrame:Hide()\n            unitFrame.healthBar.RaidMarkAdjustFrame:Show()\n        else\n            unitFrame.PlaterRaidTargetFrame:Hide()\n            unitFrame.healthBar.RaidMarkAdjustFrame:Hide()\n            return\n        end\n        if not (Plater.db.profile.indicator_anchor.side == 2 and Plater.db.profile.indicator_raidmark_anchor.side == 2) then\n            unitFrame.PlaterRaidTargetFrame:Show()\n            unitFrame.healthBar.RaidMarkAdjustFrame:Hide()\n            return\n        else\n            unitFrame.PlaterRaidTargetFrame:Hide()\n            unitFrame.healthBar.RaidMarkAdjustFrame:Show()\n        end\n        \n        local config = Plater.db.profile\n        local index = GetRaidTargetIndex (plateFrame.namePlateUnitToken)\n        local xoffset = 0\n        \n        local show_indicator_faction = (envTable.indicator_faction and (not config.indicator_faction)) or config.indicator_faction\n        local show_indicator_enemyclass = (envTable.indicator_enemyclass and (not config.indicator_enemyclass)) or config.indicator_enemyclass\n        local show_indicator_spec = (envTable.indicator_spec and (not config.indicator_spec)) or config.indicator_spec\n        local show_indicator_elite = (envTable.indicator_elite and (not config.indicator_elite)) or config.indicator_elite\n        local show_indicator_rare = (envTable.indicator_rare and (not config.indicator_rare)) or config.indicator_rare\n        local show_indicator_quest = (envTable.indicator_quest and (not config.indicator_quest)) or config.indicator_quest\n        --get the config for this actor type\n        local plateConfigs = DB_PLATE_CONFIG [actorType]\n        --get the config key based if the player is in combat\n        local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n        \n        --get the width and height from what the user set in the options panel\n        local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n        local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n        \n        --calculate the size deviation for pets\n        local unitType = Plater.GetUnitType (plateFrame)\n        if (unitType == \"pet\") then\n            healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n            healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n            \n        elseif (unitType == \"minus\") then\n            healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n            healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n        end\n        \n        envTable.w2 = healthBarWidth\n        envTable.h2 = healthBarHeight\n        envTable.cw2 = castBarWidth\n        envTable.ch2 = castBarHeight\n        \n        if (UnitIsPlayer(unitId) and plateFrame [MEMBER_REACTION] < UNITREACTION_FRIENDLY) then\n            if (show_indicator_faction) then\n                xoffset = xoffset + envTable.IndicatorSize + 2\n            end\n            if (show_indicator_enemyclass) then\n                xoffset = xoffset + envTable.IndicatorSize\n            end\n            if (show_indicator_spec) then \n                --> check if the user is using details\n                if (Details and Details.realversion >= 134) then\n                    local spec = Details:GetSpecByGUID (plateFrame [MEMBER_GUID])\n                    if (spec) then\n                        xoffset = xoffset + envTable.IndicatorSize\n                    end\n                end\n            end\n            \n        elseif (plateFrame [MEMBER_REACTION] < UNITREACTION_FRIENDLY) then\n            \n            --is a pet\n            if (unitType == \"pet\" and config.indicator_pet)  then\n                xoffset = xoffset + envTable.IndicatorSize\n            end\n            \n            --classification\n            local unitClassification = UnitClassification (plateFrame.namePlateUnitToken) --elite minus normal rare rareelite worldboss\n            if ((unitClassification == \"worldboss\" or (UnitLevel (unitId) == -1)) and envTable.showworldbossicon) then\n                xoffset = xoffset + envTable.IndicatorSize + 2 + 2\n                if (unitClassification == \"rareelite\" and (show_indicator_rare or show_indicator_elite)) and (not envTable.showworldbossonly) then\n                    if envTable.showbothRareAndElite then\n                        xoffset = xoffset + envTable.IndicatorSize + 2\n                    end\n                    xoffset = xoffset + envTable.IndicatorSize + 2\n                else\n                    if (unitClassification == \"elite\" and show_indicator_elite) and (not envTable.showworldbossonly) then\n                        xoffset = xoffset + envTable.IndicatorSize + 2\n                    end\n                    if (unitClassification == \"rare\" and show_indicator_rare) and (not envTable.showworldbossonly) then\n                        xoffset = xoffset + envTable.IndicatorSize + 2\n                    end\n                end\n            elseif (unitClassification == \"rareelite\" and (show_indicator_rare or show_indicator_elite)) then\n                if envTable.showbothRareAndElite then\n                    xoffset = xoffset + envTable.IndicatorSize + 2\n                end\n                xoffset = xoffset + envTable.IndicatorSize + 2\n            else\n                if (unitClassification == \"elite\" and show_indicator_elite) then\n                    xoffset = xoffset + envTable.IndicatorSize + 2\n                end\n                if (unitClassification == \"rare\" and show_indicator_rare) then\n                    xoffset = xoffset + envTable.IndicatorSize + 2\n                end\n            end\n            \n            --quest boss\n            local isQuestBoss = UnitIsQuestBoss (plateFrame.namePlateUnitToken) --true false\n            if (isQuestBoss and show_indicator_quest) then\n                xoffset = xoffset + envTable.IndicatorSize\n            end\n            \n        elseif (plateFrame [MEMBER_REACTION] >= UNITREACTION_FRIENDLY) then\n            if (plateFrame [MEMBER_QUEST]) then\n                xoffset = xoffset + envTable.IndicatorSize\n            end\n        end\n        \n        if envTable.TestMode then\n            xoffset = envTable.IndicatorSize * 5 + 8\n        end\n        \n        envTable.x = -1 - xoffset + Plater.db.profile.indicator_raidmark_anchor.x\n        \n        envTable.y = Plater.db.profile.indicator_raidmark_anchor.y\n        envTable.side = Plater.db.profile.indicator_raidmark_anchor.side\n        if (index and not plateFrame.isSelf) then\n            Plater.SetAnchor (unitFrame.healthBar.RaidMarkAdjustFrame, envTable)\n        end\n    end\nend",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    --TEST\n    if envTable.RaidMark and envTable.AdjustRaidMarkPosition then\n        unitFrame.PlaterRaidTargetFrame:Show()\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --both elite and rare,show both gold and silvery dragon,\n    --true = both,false = only silvery dragon\n    envTable.showbothRareAndElite = false\n    --show worldboss icon only when worldboss and elite/rare both,default-false\n    envTable.showworldbossonly = true\n    --true:show worldboss icon\n    envTable.showworldbossicon = true\n    \n    --IndicatorSize,default 10\n    envTable.IndicatorSize = 18\n    --test mode,for enemy npc,show quest,rare,elite,worldboss,pet ,default:false\n    envTable.TestMode = false\n    \n    --Adjust Indictors and RaidMard,the Anchor should select Left.\n    --this option let RaidMark always on indictors' left insted of overlap sometimes.\n    envTable.RaidMark = false\n    envTable.AdjustRaidMarkPosition = false\n    \n    --show friendlynpc quest icon--default:true\n    envTable.friendlynpcquest = false --Plater.db.profile.plate_config.friendlynpc.quest_enabled\nend",
					},
					["Time"] = 1578782682,
					["PlaterCore"] = 1,
					["Name"] = "Extra X Gold/Silvery Dragon",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "INTERFACE\\ICONS\\Ability_DeathKnight_NecroticStrike",
					["LastHookEdited"] = "Constructor",
				}, -- [16]
				{
					["Enabled"] = true,
					["Revision"] = 1160,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Show specific unit's target",
					["Hooks"] = {
						["Destructor"] = "function (self, unitId, unitFrame, envTable) \n    unitFrame.unitTarget.text = \"\"\nend\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if (not unitFrame.IsSelf) then\n        if UnitExists(unitId) and UnitExists(unitId .. \"target\") then\n            if (unitFrame.namePlateNpcId and (envTable.unitList[unitFrame.namePlateNpcId] or envTable.unitList[unitFrame.namePlateUnitNameLower] or envTable.unitList[unitFrame.namePlateUnitName])) then\n                envTable.Anchoring(unitFrame)\n                if UnitGroupRolesAssigned(unitId .. \"target\") and UnitGroupRolesAssigned(unitId .. \"target\") == \"TANK\" then\n                    unitFrame.unitTarget.text = \"\"\n                end\n                unitFrame.unitTarget.text = select(1, UnitName(unitId .. \"target\"))\n                unitFrame.unitTarget.textcolor = envTable.Color(unitId .. \"target\")\n            else\n                unitFrame.unitTarget.text = \"\"\n            end\n        else\n            unitFrame.unitTarget.text = \"\"\n        end\n    else\n        unitFrame.unitTarget.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.unitList = {--name or npcId\n        [134600] = true, \n        [133835] = true, \n        [122963] = true, \n        [138493] = true, \n        [133943] = true, \n        [129802] = true, \n        [133482] = true, \n        [129758] = true, \n    }\n    \n    envTable.auraFrame2 = true\n    -- When BuffFrame2 is enabled and located right side of healthbar, true\n    \n    local FontSize = 18\n    local Outline = \"Outline\"\n    \n    local xoffset = 10\n    local width = Plater.db.profile.aura_width + Plater.db.profile.aura_padding\n    local offset = {\n        side = 6, \n        x = xoffset, \n        y = 0,\n    }\n    \n    envTable.Color = function(unit)\n        local r, g, b = 0, 1, 0\n        if UnitExists(unit) then\n            if select(1, strsplit(\"-\",UnitGUID(unit))) and select(1, strsplit(\"-\",UnitGUID(unit))) == \"Player\" then\n                r,g,b = GetClassColor(select(2,UnitClass(unit)))    \n            end\n        end\n        return {r, g, b}  \n    end\n    \n    envTable.Anchoring = function(unitFrame)\n        if unitFrame then\n            local profile = Plater.db.profile\n            if (profile.buffs_on_aura2) and envTable.auraFrame2 then           \n                offset.x = xoffset + width * unitFrame.BuffFrame2.amountAurasShown\n            end\n            Plater.SetAnchor (unitFrame.unitTarget, offset, unitFrame.healthBar)\n        end\n    end\n    \n    if not unitFrame.unitTarget then\n        envTable.unitTarget = Plater:CreateLabel(unitFrame)\n        unitFrame.unitTarget = envTable.unitTarget\n        unitFrame.unitTarget.textsize = FontSize\n        unitFrame.unitTarget.outline = Outline\n    end\n    \nend",
					},
					["Time"] = 1578796441,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 132212,
					["Name"] = "Unit Target Name [Unit]",
				}, -- [17]
				{
					["Enabled"] = false,
					["Revision"] = 115,
					["HooksTemp"] = {
					},
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Test mod for custom glows on the target healthbar.",
					["Hooks"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)    \n    \n    local options = {\n        --glowType = \"ants\",\n        glowType = \"pixel\",\n        --glowType = \"button\",\n    }\n    \n    --local color = \"orange\"\n    \n    -- the original plater glow, similar to \"button\"\n    unitFrame.healthBar.custGlowEffect = unitFrame.healthBar.custGlowEffect or Plater.CreateIconGlow (unitFrame.healthBar)\n    \n    local frame = unitFrame.healthBar\n    \n    if unitFrame.namePlateIsTarget then\n        --plater glow (similar to \"button\")\n        --unitFrame.healthBar.custGlowEffect:Show()\n        \n        --LibCustomGlow\n        Plater.StartGlow(frame, color, options, key) -- start glow effect according to options, defaults to \"button\"\n        --Plater.StartAntsGlow(frame, color, options, key) -- start \"ants\" glow\n        --Plater.StartPixelGlow(frame, color, options, key) -- start \"pixel\" glow\n        --Plater.StartButtonGlow(frame, color, options, key) -- start \"button\" glow\n    else\n        --plater glow (similar to \"button\")\n        unitFrame.healthBar.custGlowEffect:Hide()\n        \n        --LibCustomGlow\n        Plater.StopGlow(unitFrame.healthBar, glowType, key) -- stop all glow effects or a specific one\n        --Plater.StopAntsGlow(frame, key) -- stop an ants glow\n        --Plater.StopPixelGlow(frame, key) -- stop a pixel glow\n        --Plater.StopButtonGlow(frame, key) -- stop a button glow\n    end\n    \n    --[[ options can be used to create different glow types, see https://www.curseforge.com/wow/addons/libcustomglow\n        --type \"pixel\"\n        options = {\n            glowType = \"pixel\",\n            color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n            N = 8, -- number of lines. Defaul value is 8;\n            frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n            length = 4, -- length of lines. Default value depends on region size and number of lines;\n            th = 2, -- thickness of lines. Default value is 2;\n            xOffset = 0,\n            yOffset = 0, -- offset of glow relative to region border;\n            border = false, -- set to true to create border under lines;\n            key = \"\", -- key of glow, allows for multiple glows on one frame;\n        }\n        \n        -- type \"ants\"\n        options = {\n            glowType = \"ants\",\n            color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n            N = 8, -- number of lines. Defaul value is 8;\n            frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n            scale = 1, -- scale of particles\n            xOffset = 0,\n            yOffset = 0, -- offset of glow relative to region border;\n            key = \"\", -- key of glow, allows for multiple glows on one frame;\n        }\n        \n        -- type \"button\"\n        options = {\n            glowType = \"button\",\n            color = \"white\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n            frequency = 0.125, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        }\n    --]]\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1573239992,
					["PlaterCore"] = 1,
					["Name"] = "LibCustomGlow Tests",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 1029587,
					["LastHookEdited"] = "Target Changed",
				}, -- [18]
				{
					["Enabled"] = true,
					["Revision"] = 1092,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Show Altpower bar for some units.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.Bar then\n        local Bar = unitFrame.Bar\n        if envTable.SpecificNpcs [unitFrame.namePlateNpcId] then\n            Bar:SetSize(unitFrame.healthBar:GetWidth(), envTable.Height)\n            Bar:SetValue(UnitPower(unitId, 10))\n            if Bar.text then     \n                Bar.text:SetText(UnitPower(unitId, 10)..\"%\") \n            end\n            Bar:Show()\n        else\n            Bar:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.Bar then\n        unitFrame.Bar:Hide()\n    end\nend\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SpecificNpcs = {\n        [133389] = true, -- Í∞àÎ∞îÏ¶àÌä∏\n        [152236] = true, -- Ïó¨Íµ∞Ï£º Ïï†Ïâ¨Î≤†Ïù∏\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 4, \n        x = 0, \n        y = 0,\n    }\n    --power bar percent text\n    envTable.textEnabled = true\n    envTable.textAnchor = {\n        side = 5, \n        x = 4, \n        y = 0,\n    }\n    envTable.textSize = 10\n    \n    --power bar height\n    envTable.Height = 3\n    \n    unitFrame.Bar = unitFrame.Bar or CreateFrame('StatusBar', nil, unitFrame)\n    local Bar = unitFrame.Bar\n    Plater.SetAnchor (Bar, envTable.Anchor, unitFrame.healthBar)\n    Bar:SetStatusBarTexture(unitFrame.healthBar:GetTexture())\n    Bar:SetSize(unitFrame.healthBar:GetWidth(), envTable.Height)\n    Bar:SetMinMaxValues(0, 100)\n    Bar:SetBackdrop ({bgFile = \"Interface\\\\Tooltips\\\\UI-Tooltip-Background\", tile = true, tileSize = 16})\n    Bar:SetBackdropColor (0.2, 0.2, 0.2, 1)\n    \n    Bar.border = Bar.border or CreateFrame ('frame', nil, Bar, \"NamePlateFullBorderTemplate\")\n    Bar.border:SetBorderSizes (1, 1, 1, 1)\n    Bar.border:UpdateSizes()\n    Bar.border:SetVertexColor (0, 0, 0, 1)\n    \n    Bar.text = Bar.text or Bar:CreateFontString(nil, 'OVERLAY')\n    Bar.text:SetFont(unitFrame.powerBar.percentText:GetFont(),envTable.textSize,\"OUTLINE\")\n    Plater:SetFontColor (Bar.text, \"gold\" )\n    Plater.SetAnchor (Bar.text, envTable.textAnchor)    \n    \nend\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1578996571,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 254885,
					["Name"] = "Alt-Power Bar",
				}, -- [19]
				{
					["Enabled"] = true,
					["Revision"] = 1212,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Change Target Name Color",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    if self.TargetName then\n        Plater:SetFontColor (self.TargetName, envTable.Color(unitId .. \"target\"))\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Color = function(unit)\n        local r, g, b, a = 0, 1, 0, 1\n        if UnitExists(unit) then\n            if select(1, strsplit(\"-\",UnitGUID(unit))) and select(1, strsplit(\"-\",UnitGUID(unit))) == \"Player\" then\n                r, g, b = GetClassColor(select(2,UnitClass(unit)))    \n            else\n                if UnitIsEnemy(\"player\", unit) then\n                    r, g, b = 1, 0, 0    \n                end\n            end\n        end\n        return r, g, b, a\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1573523106,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 237556,
					["Name"] = "Targetname Custom Color",
				}, -- [20]
				{
					["Enabled"] = true,
					["Revision"] = 1209,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Emphasize specific Nameplate's spell target name",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    if self.TargetName then\n        if envTable.spellList[self.SpellID] or envTable.spellList[self.SpellName] then\n            if UnitExists(unitId) and UnitExists(unitId .. \"target\") then\n                envTable.Anchoring(unitFrame)\n                Plater:SetFontSize (self.TargetName, envTable.FontSize)\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.spellList = {--name or spellId\n        [263318] = true, \n        [272820] = true, \n        [274642] = true, \n        [263309] = true, \n        [268061] = true, \n        [265019] = true, \n        [265377] = true, \n        [260879] = true, \n        [265568] = true, \n        [265625] = true, \n        [278961] = true, \n        [253239] = true, \n        [256138] = true, \n        [254959] = true, \n        [252781] = true, \n        [273185] = true, \n        [256846] = true, \n        [265541] = true, \n        [250096] = true, \n        [265773] = true, \n        [270927] = true, \n        [270920] = true, \n        [270865] = true, \n        [270502] = true, \n        [269231] = true, \n        [271555] = true, \n        [267702] = true, \n        [267618] = true, \n        [270506] = true, \n        [270487] = true, \n        [270492] = true, \n        [270507] = true, \n        [266231] = true, \n        [266951] = true, \n        [268403] = true, \n        [268932] = true, \n        [280604] = true, \n        [263202] = true, \n        [268797] = true, \n        [262794] = true, \n        [260669] = true, \n        [271456] = true, \n        [257036] = true, \n        [256897] = true, \n        [272662] = true, \n        [256639] = true, \n        [272542] = true, \n        [260954] = true, \n        [261428] = true, \n        [272571] = true, \n        [257777] = true, \n        [258313] = true, \n        [257028] = true, \n        [256039] = true, \n        [257739] = true, \n        [258338] = true, \n        [256106] = true, \n        [256979] = true, \n        [257478] = true, \n        [257784] = true, \n        [264166] = true, \n        [264560] = true, \n        [268050] = true, \n        [268050] = true, \n        [268233] = true, \n        [268322] = true, \n        [264390] = true, \n        [264105] = true, \n        [263891] = true, \n        [264038] = true, \n        [264456] = true, \n        [260741] = true, \n        [266225] = true, \n        [261440] = true, \n        [268202] = true, \n        [265346] = true, \n        [264695] = true, \n        [264923] = true, \n        [299460] = true, \n        [284219] = true, \n        [301629] = true, \n        [300764] = true, \n        [300650] = true, \n        [293827] = true, \n        [294195] = true, \n        [202682] = true, \n        [292264] = true, \n        [291928] = true, \n        [300188] = true, \n        [302274] = true, \n        [303885] = true,    \n        [314411] = true,\n        [314406] = true,  \n    }\n    \n    envTable.auraFrame2 = true\n    -- When BuffFrame2 is enabled and located right side of healthbar, true\n    \n    envTable.FontSize = 18\n    \n    local xoffset = 8\n    local width = Plater.db.profile.aura_width + Plater.db.profile.aura_padding\n    local offset = {\n        side = 6, \n        x = xoffset, \n        y = 0,\n    }\n    \n    envTable.Anchoring = function(unitFrame)\n        if unitFrame then\n            local profile = Plater.db.profile\n            if (profile.buffs_on_aura2) and envTable.auraFrame2 then           \n                offset.x = xoffset + width * unitFrame.BuffFrame2.amountAurasShown\n            end\n            Plater.SetAnchor (unitFrame.castBar.TargetName, offset, unitFrame.healthBar)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1580231690,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 132173,
					["Name"] = "Unit Target Name [Spell]",
				}, -- [21]
				{
					["Enabled"] = false,
					["Revision"] = 221,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Time"] = 1573722422,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Updated",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Name"] = "Jaina Encounter [Plater]",
				}, -- [22]
				{
					["Enabled"] = true,
					["Revision"] = 318,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
					["Hooks"] = {
						["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowAbsorb = true\n    envTable.Separator = \" / \"\n    envTable.Separator2 = \"|cffb8d8ff +\"    \n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        --build the string text with current health\n        local healthString = \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (unitFrame.ActorType and Plater.db.profile.plate_config[unitFrame.ActorType].percent_show_health) then\n            healthString = healthString .. Plater.FormatNumber (currentHealth)\n        end\n        \n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (unitFrame.ActorType and Plater.db.profile.plate_config[unitFrame.ActorType].percent_show_percent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                if (unitFrame.ActorType and Plater.db.profile.plate_config[unitFrame.ActorType].percent_show_health) then\n                    healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n                else\n                    healthString = healthString .. format (fraction, percent) .. \"%\"\n                end\n            end\n        end\n        \n        \n        if (envTable.ShowAbsorb) and unitFrame.namePlateUnitToken and \n        UnitGetTotalAbsorbs(unitFrame.namePlateUnitToken) > 0 then\n            local absorb = UnitGetTotalAbsorbs(unitFrame.namePlateUnitToken) or 0\n            healthString = healthString .. envTable.Separator2 .. Plater.FormatNumber (absorb)\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
					},
					["Time"] = 1578996589,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 237031,
					["Name"] = "Health Text Customization",
				}, -- [23]
				{
					["Enabled"] = true,
					["Revision"] = 233,
					["HooksTemp"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- settings:\n    \n    -- for old-fashioned glows:\n    envTable.GlowColor = \"yellow\"\n    envTable.AntsColor = \"yellow\"\n    \n    -- for the LibCustomGlow implementation (default):\n    envTable.options = {\n        glowType = \"pixel\",\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 6, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1.5,\n        yOffset = 1.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- as the information for the steal/purge is not available for buff special, this is based on the border color for Buff Special \"Dispellable\"\n    -- because of this, it might not be accurate. Enable only if you're using dedicated colors on the Buff Special settings tab!\n    local buffSpecialGlow = false\n    \n    \n    -- functions --\n    local function round(x)\n        x = x*1000\n        x = x + 0.5 - (x + 0.5) % 1\n        x = x / 1000\n        return x\n    end\n    \n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if not Plater.StartGlow then\n                auraIcon.purgeGlowEffect = auraIcon.purgeGlowEffect or Plater.CreateIconGlow (auraIcon)\n                if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                    auraIcon.purgeGlowEffect:SetColor( envTable.AntsColor, envTable.GlowColor)\n                    auraIcon.purgeGlowEffect:Show()\n                else\n                    auraIcon.purgeGlowEffect:Hide()\n                end\n            else\n                if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                    Plater.StartGlow(auraIcon, envTable.AntsColor, envTable.options)\n                else\n                    Plater.StopGlow(auraIcon)\n                end                \n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                local canStealOrPurge = false\n                local bdbColorR, bdbColorG, bdbColorB, bdbColorA = auraIcon:GetBackdropBorderColor()\n                local settingsColor = Plater.db.profile.extra_icon_show_purge_border\n                \n                --round values for comparison...\n                bdbColorR, bdbColorG, bdbColorB, bdbColorA = round(bdbColorR), round(bdbColorG), round(bdbColorB), round(bdbColorA)\n                settingsColor[1], settingsColor[2], settingsColor[3], settingsColor[4] = round(settingsColor[1]), round(settingsColor[2]), round(settingsColor[3]), round(settingsColor[4])\n                --print(\"round\", bdbColorR, bdbColorG, bdbColorB, bdbColorA)\n                --print(\"settings\", settingsColor[1], settingsColor[2], settingsColor[3], settingsColor[4])\n                \n                if bdbColorR == settingsColor[1] and bdbColorG == settingsColor[2] and bdbColorB == settingsColor[3] and bdbColorA == settingsColor[4] then\n                    canStealOrPurge = true\n                end\n                \n                if not Plater.StartGlow then\n                    auraIcon.purgeGlowEffect = auraIcon.purgeGlowEffect or Plater.CreateIconGlow (auraIcon)\n                    if (auraIcon:IsShown() and canStealOrPurge) then\n                        auraIcon.purgeGlowEffect:SetColor( envTable.AntsColor, envTable.GlowColor)\n                        auraIcon.purgeGlowEffect:Show()\n                    else\n                        auraIcon.purgeGlowEffect:Hide()\n                    end\n                else\n                    if (auraIcon:IsShown() and canStealOrPurge) then\n                        Plater.StartGlow(auraIcon, envTable.AntsColor, envTable.options)\n                    else\n                        Plater.StopGlow(auraIcon)\n                    end                \n                end\n            end\n        end\n    end\n    \nend",
					},
					["Time"] = 1578996594,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
					["Name"] = "Steal/Purge Aura Glow",
				}, -- [24]
				{
					["Enabled"] = true,
					["Revision"] = 178,
					["HooksTemp"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "Shows the m+ mob percentage on the nameplate. REQUIRES MDT \"Method Dungeon Tools\" TO WORK!",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame, true)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateMobPercentage(unitFrame)\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 8;\n    \n    -- text to show\n    envTable.showPercent = true\n    envTable.showCount = false\n    envTable.showTotal = false\n    \n    -- positioning\n    local anchor = {\n        side = 3, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = -2, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the %\n    if (not  unitFrame.healthBar.mobPercentageTextFrame) then\n        envTable.mobPercentageTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.mobPercentageTextFrame, anchor);\n        unitFrame.healthBar.mobPercentageTextFrame = envTable.mobPercentageTextFrame\n        envTable.mobPercentageTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    envTable.isTeeming = function()\n        local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n        for _, affixID in ipairs(affixes) do\n            if affixID == 5 then\n                return true\n            end\n        end\n        return false\n    end\n    \n    --update the target percentage\n    function envTable.UpdateMobPercentage(unitFrame, clearText)\n        if (not unitFrame or not unitFrame.healthBar or not unitFrame.healthBar.mobPercentageTextFrame) then return end\n        \n        -- update the anchor for better configuration\n        Plater.SetAnchor (unitFrame.healthBar.mobPercentageTextFrame, anchor);\n        \n        if (clearText) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        local _, _, difficultyID= GetInstanceInfo()\n        local _, _, _, isChallengeMode = GetDifficultyInfo(difficultyID)\n        \n        --isChallengeMode = true\n        if (not isChallengeMode) then\n            unitFrame.healthBar.mobPercentageTextFrame:SetText(\"\")\n            return\n        end\n        \n        if MethodDungeonTools ~= nil and MethodDungeonTools.GetEnemyForces ~= nil then\n            local mobPercentageString = \"\"\n            local weight = nil;\n            local isTeeming = envTable.isTeeming()\n            local npcId = unitFrame.namePlateNpcId\n            local count, max, maxTeeming, teemingCount = MethodDungeonTools:GetEnemyForces(npcId)\n            if teemingCount then\n                count = teemingCount\n            end\n            if (count ~= nil and max ~= nil and maxTeeming ~= nil) then\n                if (isTeeming) then\n                    weight = count / maxTeeming\n                else\n                    weight = count / max\n                end\n                weight = weight * 100\n            end\n            \n            if (weight and weight > 0) then\n                if envTable.showPercent then\n                    mobPercentageString = string.format(\"%.2f%%\", weight)\n                end\n                if envTable.showCount then\n                    if  mobPercentageString ~= \"\"  then\n                        mobPercentageString = mobPercentageString .. \" | \"\n                    end\n                    mobPercentageString = mobPercentageString .. count\n                    if envTable.showTotal then\n                        if (isTeeming) then\n                            mobPercentageString = mobPercentageString .. \"/\" ..  maxTeeming\n                        else\n                            mobPercentageString = mobPercentageString .. \"/\" ..  max\n                        end\n                    end\n                end\n                \n                unitFrame.healthBar.mobPercentageTextFrame:SetText(\"(\"..mobPercentageString..\")\")\n            end\n        end\n    end\nend",
					},
					["Time"] = 1578693485,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 254292,
					["Name"] = "M+ MDT MobPercentage",
				}, -- [25]
				{
					["Enabled"] = true,
					["Revision"] = 943,
					["HooksTemp"] = {
					},
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.customShieldHookNeedsUpdate then\n        unitFrame.healthBar:UNIT_MAXHEALTH()\n        unitFrame.healthBar.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        if curHealthTotal > currentHealthMax then\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues (0, curHealthTotal)\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                self.shieldAbsorbIndicator:Hide()\n                self.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1578698388,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135940,
					["Name"] = "Absorb Shields in Healthbar",
				}, -- [26]
				{
					["Enabled"] = true,
					["Revision"] = 506,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            \n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        if (growDirection ~= 2) then --it's growing to left or right\n            \n            --first icon is where the row starts\n            local firstIcon = aurasShown[1] and aurasShown[1][1]\n            \n            if (not firstIcon or not firstIcon:IsShown()) then\n                return\n            end\n            \n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n        else\n            local iconAmount = 0\n            local horizontalLength = 0\n            local firstIcon\n            local previousIcon\n            local anchorPoint\n            \n            for i = 1, #aurasShown do\n                local auraIcon = aurasShown [i][1]\n                if (auraIcon:IsShown()) then\n                    iconAmount = iconAmount + 1\n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                    auraIcon:ClearAllPoints()\n                    \n                    if (not firstIcon) then\n                        firstIcon = auraIcon\n                        anchorPoint = firstIcon:GetParent()\n                        firstIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                        previousIcon = firstIcon\n                    else\n                        auraIcon:SetPoint (\"bottomleft\", previousIcon, \"bottomright\", padding, 0)\n                        previousIcon = auraIcon\n                    end\n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end\n            end\n            \n            if (not firstIcon) then\n                return\n            end\n            \n            --remove 1 icon padding value\n            horizontalLength = horizontalLength - padding\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n        end \n        \n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = Plater.db.profile.aura_padding\n    \n    --space between each row of icons\n    envTable.rowPadding = Plater.db.profile.aura_breakline_space\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 0\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = Plater.db.profile.aura_consolidate\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"ÎπÑÏ†ÑÏùò Ïó¨Ìåå\"] = 25,\n        [\"Î∂àÌÉÄÎäî ÎÇôÏù∏\"] = 25,\n        [\"Ïú†Î†π Ï∂úÎ™∞\"] = 25,\n        [\"ÎåÄÌòºÎûÄ\"] = 25,\n        [\"Î∂ÄÌå®Ïùò Ïî®Ïïó\"] = 24,\n        [\"Ï†úÎ¨º\"] = 22,\n        [\"Î∂ÄÌå®\"] = 22,\n        [\"Í≥†ÌÜµ\"] = 21,\n        [\"ÏÉùÎ™ÖÎ†• Ï∞©Ï∑®\"] = 20,\n        [\"Î∂àÏïàÏ†ïÌïú Í≥†ÌÜµ\"] = 19,\n        [\"Ïú†Î†π ÌäπÏù¥Ï†ê\"] = 23,\n        [\"ÏÇ¨ÏïÖÌïú ÌÉÄÎùΩ\"] = 23,\n        [\"ÏòÅÌòº Ìù°Ïàò\"] = 18,\n        [\"ÏÉùÎ™ÖÎ†• Ìù°Ïàò\"] = 18,\n    }    \n    \nend \n\n\n\n\n",
					},
					["Time"] = 1579001627,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [27]
				{
					["Enabled"] = true,
					["Revision"] = 451,
					["HooksTemp"] = {
					},
					["Author"] = "????????-Illidan",
					["Desc"] = "Modify aura borders and change Timer Color by time",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --change timer color by remainingtime/duration\n    envTable.colorbytime = true\n    \n    --aura border thickness\n    envTable.Size = 1.2\n    \n    --change aura 2 frame size\n    envTable.changeaura2 = false\n    envTable.aura2size = 2\n    \n    --variables\n    local profile = Plater.db.profile\n    local fontsize = profile.aura_timer_text_size\n    local size = envTable.Size\n    local auraWidth = profile.aura_width\n    local auraHeight = profile.aura_height\n    \n    envTable.auramodifier = function()\n        for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n            if (auraIcon:IsShown()) then\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                -- auraIcon:SetSize(auraWidth-size,auraHeight-size)\n                \n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                auraIcon.PixelPerfectBorder:UpdateSizes()\n                \n                auraIcon.Icon:ClearAllPoints()\n                auraIcon.Icon:SetAllPoints()\n                \n                auraIcon.Border:Hide() --hide plater default border\n                if envTable.colorbytime and auraIcon.Cooldown._occ_duration then\n                    local perc = auraIcon.RemainingTime/auraIcon.Cooldown._occ_duration\n                    \n                    if (perc >= 0.3) then\n                        Plater:SetFontColor (auraIcon.TimerText, {0,1,0})\n                    elseif (perc >= 0.25) then\n                        local r = 6 - (20 * perc)\n                        Plater:SetFontColor (auraIcon.TimerText, {r,1,0})\n                    elseif (perc >= 0.1) then\n                        local g = (perc - 0.1) * 10\n                        Plater:SetFontColor (auraIcon.TimerText, {1,g,0})\n                    else\n                        Plater:SetFontColor (auraIcon.TimerText, {1,0,0})\n                    end\n                end    \n            end\n        end\n        \n        for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n            if (auraIcon:IsShown()) then\n                \n                if (not auraIcon.PixelPerfectBorder) then\n                    auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n                end\n                \n                local r, g, b = auraIcon:GetBackdropBorderColor()\n                auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n                if envTable.changeaura2 then\n                    auraIcon:SetSize(auraWidth + envTable.aura2size ,auraHeight + envTable.aura2size)\n                end\n                \n                auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n                auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n                auraIcon.PixelPerfectBorder:UpdateSizes()            \n                \n                auraIcon.Icon:ClearAllPoints()\n                auraIcon.Icon:SetAllPoints()\n                \n                auraIcon.Border:Hide() --hide plater default border\n            end\n        end    \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.auramodifier()\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.auramodifier()\nend",
						["Player Logon"] = "function()\n    -- time formatting function:\n    Plater.FormatTime = function (s)\n        if s < 3 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%.d\"):format(s)\n        elseif s < 3600 then\n            if _G.LOCALE_koKR then\n                return (\"%dÎ∂Ñ\"):format(s/60%60)\n            else\n                return (\"%dm\"):format(s/60%60)\n            end\n        elseif s < 86400 then\n            if _G.LOCALE_koKR then\n                return (\"%dÏãúÍ∞Ñ\"):format(s/(60*60))\n            else    \n                return (\"%dh\"):format(s/(60*60))\n            end\n        else\n            if _G.LOCALE_koKR then\n                return (\"%dÏùº\"):format(s/86400)\n            else    \n                return (\"%dd\"):format(s/86400)\n            end\n        end\n    end\n    \n    \n    -- change time formatting for the Buff Special icons\n    local DF = _G [\"DetailsFramework\"]\n    \n    DF.IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText)\n        \n        local spellName, _, spellIcon\n        \n        if (not forceTexture) then\n            spellName, _, spellIcon = GetSpellInfo (spellId)\n        else\n            spellIcon = forceTexture\n        end\n        \n        if (spellIcon) then\n            local iconFrame = self:GetIcon()\n            iconFrame.Texture:SetTexture (spellIcon)\n            iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n            \n            if (borderColor) then\n                iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n            else\n                iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n            end    \n            \n            if (startTime) then\n                CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                \n                if (self.options.show_text) then\n                    iconFrame.CountdownText:Show()\n                    \n                    local formattedTime = Plater.FormatTime (startTime + duration - GetTime())\n                    \n                    \n                    iconFrame.CountdownText:SetText (formattedTime)\n                    iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                else\n                    iconFrame.CountdownText:Hide()\n                    iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                end\n            else\n                iconFrame.CountdownText:Hide()\n            end\n            \n            if (descText and self.options.desc_text) then\n                iconFrame.Desc:Show()\n                iconFrame.Desc:SetText (descText.text)\n                iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n            else\n                iconFrame.Desc:Hide()\n            end\n            \n            if DFPixelUtil then\n                DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n            else\n                PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n            end\n            iconFrame:Show()\n            \n            --> update the size of the frame\n            self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n            self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n            \n            --> show the frame\n            self:Show()\n            \n            return iconFrame\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1579001630,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133006,
					["Name"] = "Aura Appearance",
				}, -- [28]
				{
					["Enabled"] = true,
					["Revision"] = 387,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    local enabled = false\n    local percent = 0.2\n    local srs = 1\n    local sre = 1\n    \n    local classLoc, class = UnitClass (\"player\")\n    local spec = GetSpecialization()\n    if (spec and class) then\n        if (class == \"MAGE\") then\n            local specID = GetSpecializationInfo (spec)\n            if (specID and specID ~= 0) then\n                if (specID == 62) then \n                    enabled = true\n                    percent = 0.35\n                elseif (specID == 63) then \n                    local _, _, _, using_Firestarter = GetTalentInfo (1, 1, 1)\n                    if (using_Firestarter) then\n                        enabled = true\n                        srs = 0.999\n                        sre = 0.9\n                    end\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            local specID = GetSpecializationInfo (spec)\n            if (specID and specID ~= 0) then\n                if (specID == 265) then \n                    local _, _, _, using_Souldrain = GetTalentInfo (1, 2, 1)\n                    if (using_Souldrain) then\n                        enabled = true\n                        percent = 0.2\n                    end\n                end\n            end\n        end\n    end\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = enabled\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = percent\n    envTable.ExcuteAlertPercent = 0.1\n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = srs\n    envTable.SecondRangeEnd = sre\n    \n    \n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"fuchsia\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if UnitPlayerControlled (unitId) or not UnitIsTapDenied (unitId) then\n            if (percent <= envTable.ExecutePercent) then\n                envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n                envTable.InExecuteRange = true\n                \n            elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n                envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n                envTable.InExecuteRange = true\n                \n            else\n                if (envTable.InExecuteRange) then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.executeRange:Hide()\n                    Plater.RefreshNameplateColor (unitFrame)\n                    Plater.SetBorderColor (unitFrame)\n                    envTable.InExecuteRange = false\n                end\n            end\n        end\n        \n        if (percent - envTable.ExcuteAlertPercent <= envTable.ExecutePercent and percent > 0) then\n            envTable.UnitInExecuteAlertRange (unitFrame, envTable.ExecutePercent)   \n            envTable.InExecuteAlertRange = true\n            envTable.InExecuteRange = false\n        else\n            if (envTable.InExcuteAlertRange) and not (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExcuteAlertRange = false\n            end\n        end\n        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1580231383,
					["PlaterCore"] = 1,
					["Name"] = "Advanced Execute Range",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "Constructor",
				}, -- [29]
				{
					["Enabled"] = true,
					["Revision"] = 771,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show power bar for some units.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = false\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [129208] = true, -- Î°ùÏö∞Îìú\n        [128651] = true, -- Îã§ÌÅ¨Ìå®Îç§\n        [133379] = true, -- Ïï†ÎçîÎ¶¨Ïä§\n        [133944] = true, -- ÏïÑÏä§ÌîΩÏä§\n        [133389] = true, -- Í∞àÎ∞îÏ¶àÌä∏\n        [131817] = true,  -- ÎèåÏ©åÍ∑Ä\n        [131383] = true, -- ÏûîÏ∞®\n        [133007] = true, -- ÌùâÎ¨º\n        [122967] = true, -- ÏïåÎ£¨Ïûê\n        [122968] = true, -- ÏïºÏ¶àÎßà\n        [131823] = true, -- ÎßêÎùºÎîî\n        [131824] = true, -- ÏÜîÎ†àÎÇò\n        [131825] = true, -- Î∏åÎùºÏù¥Ïñ¥\n        [131864] = true, -- Í≥†ÎùºÌÅ¨ Ìà¥\n        [129214] = true, -- ÎÇúÌÉÄÍ∏∞\n        [129227] = true, -- ÏïÑÏ†úÎ°úÌÅ¨\n        [129231] = true, -- Î¶≠ÏÇ¨\n        [134063] = true, -- ÏïÑÏù¥Ïñ∏Ìóê\n        [134058] = true, -- ÌååÏòà\n        [134069] = true, -- Î≥ºÏßÄÏä§\n        \n        --4ÏãúÏ¶å\n        [159320] = true, \n        [159321] = true,  \n        [161745] = true, \n        [161746] = true,        \n        [156523] = true, -- ÎßàÏö∞Ìä∏\n        [156650] = true, -- Ïñ¥Îë†Ïùò Ïã§Ï≤¥\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 4, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 3\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = true\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2.5, \n        y = 0,\n    }\n    \n    envTable.PercentTextSize = 8.5\n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        local powerType, powerToken, altR, altG, altB = UnitPowerType(unitFrame.namePlateUnitToken)\n        local info = PowerBarColor[powerToken];\n        \n        if (info) then\n            r, g, b = info.r, info.g, info.b;\n        else\n            if (not altR) then\n                info = PowerBarColor[powerType] or PowerBarColor[\"MANA\"];\n                r, g, b = info.r, info.g, info.b;\n            else\n                r, g, b = altR, altG, altB;\n            end       \n        end\n        \n        powerBar:SetColor(r,g,b,1)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            --Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater:SetFontSize (powerBar.percentText, envTable.PercentTextSize)\n            Plater:SetFontColor (powerBar.percentText, \"gold\" )\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar)then\n            \n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1580231389,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface/Addons/Plater/Media/fire_64",
					["Name"] = "Power Bar",
				}, -- [30]
			},
			["last_news_time"] = 1564997989,
			["auto_toggle_stacking_enabled"] = true,
			["cast_statusbar_fadeout_time"] = 0.07999999821186066,
			["aura_timer_text_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
			["aura_stack_size"] = 13,
			["use_health_animation"] = true,
			["target_shady_alpha"] = 0.199999988079071,
			["disable_omnicc_on_auras"] = true,
			["tap_denied_color"] = {
				0.901960784313726, -- [1]
				0.901960784313726, -- [2]
				0.901960784313726, -- [3]
				1, -- [4]
			},
			["aura_width"] = 25,
			["aura_timer_text_size"] = 12,
			["target_highlight_height"] = 8,
			["health_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0.0392156862745098, -- [3]
				0.5, -- [4]
			},
			["castbar_target_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0, -- [4]
			},
			["no_spellname_length_limit"] = true,
			["login_counter"] = 45,
			["patch_version"] = 9,
			["click_space_friendly"] = {
				108, -- [1]
				32, -- [2]
			},
			["pet_width_scale"] = 0.8999999761581421,
			["aura_border_colors"] = {
				["enrage"] = {
					0.8509803921568627, -- [1]
					[3] = 0.1019607843137255,
				},
			},
			["aura_stack_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
			["ui_parent_cast_strata"] = "LOW",
			["castbar_target_anchor"] = {
				["side"] = 6,
				["x"] = 2,
			},
			["quick_hide"] = true,
			["ui_parent_base_strata"] = "LOW",
			["hook_data_trash"] = {
				{
					["Enabled"] = true,
					["Revision"] = 2,
					["HooksTemp"] = {
					},
					["Author"] = "–û—Ç–∂–∏–≥–∞–π-–†–µ–≤—É—â–∏–π —Ñ—å–æ—Ä–¥",
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1581159067,
					["Name"] = "New Mod",
					["PlaterCore"] = 1,
					["Time"] = 1581159049,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Prio"] = 99,
				}, -- [1]
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura - Buff Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura Border Color"] = 1,
				["Cast - Very Important"] = 2,
				["Explosion Affix M+"] = 3,
				["Aura - Debuff Alert"] = 3,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Color Change"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["target_highlight_color"] = {
				1, -- [1]
				1, -- [2]
				0.7843137254901961, -- [3]
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateShowSelf"] = "0",
				["NamePlateVerticalScale"] = "1",
			},
			["extra_icon_anchor"] = {
				["y"] = 0,
				["x"] = 0,
				["side"] = 2,
			},
			["extra_icon_wide_icon"] = false,
			["ui_parent_buff2_strata"] = "LOW",
			["number_region_first_run"] = true,
			["cast_statusbar_bgtexture"] = "ElvUI Norm",
			["indicator_faction"] = false,
			["resources"] = {
				["scale"] = 0.6499999761581421,
				["y_offset_target"] = -36,
				["y_offset_target_withauras"] = 0,
			},
			["click_space"] = {
				108, -- [1]
				32, -- [2]
			},
			["castbar_target_font"] = "[WoW] Í∏∞Î≥∏ Í∏ÄÍº¥",
			["aura2_grow_direction"] = 3,
			["ui_parent_cast_level"] = 1,
			["update_throttle"] = 0.05000000074505806,
			["extra_icon_border_color"] = {
				1, -- [1]
				0.0392156862745098, -- [2]
			},
			["ui_parent_buff2_level"] = 1,
			["dps"] = {
				["colors"] = {
					["notontank"] = {
						1, -- [1]
						0.6274509803921569, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["aggro"] = {
						nil, -- [1]
						0, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["noaggro"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["pulling"] = {
						nil, -- [1]
						1, -- [2]
						nil, -- [3]
						1, -- [4]
					},
				},
			},
			["cast_statusbar_bgcolor"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.5, -- [4]
			},
			["health_statusbar_bgtexture"] = "ElvUI Norm",
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
			},
			["ui_parent_buff_strata"] = "LOW",
			["cast_statusbar_texture"] = "ElvUI Norm",
			["aura_timer_text_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.536145687103272, -- [4]
			},
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark7",
			["auto_toggle_friendly_enabled"] = true,
			["indicator_enemyclass"] = true,
			["auto_toggle_friendly"] = {
				["arena"] = true,
			},
		},
		["Default"] = {
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["ScriptType"] = 3,
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 399,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
				}, -- [2]
				{
					["Enabled"] = true,
					["Revision"] = 391,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [5]
				{
					["Enabled"] = true,
					["Revision"] = 574,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [6]
				{
					["Enabled"] = true,
					["Revision"] = 376,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [7]
				{
					["Enabled"] = true,
					["Revision"] = 106,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["PlaterCore"] = 1,
					["Name"] = "Color Change [Plater]",
					["ScriptType"] = 3,
					["NpcNames"] = {
						"141851", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
				}, -- [9]
				{
					["Enabled"] = true,
					["Revision"] = 157,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["PlaterCore"] = 1,
					["Name"] = "Aura - Border Color [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["PlaterCore"] = 1,
					["Name"] = "UnitPower [Plater]",
					["ScriptType"] = 3,
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["ScriptType"] = 2,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["ScriptType"] = 1,
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["ScriptType"] = 3,
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [15]
			},
			["aura2_y_offset"] = 5,
			["npc_cache"] = {
				[99358] = {
					"–ì–Ω–∏–ª–æ—Å–µ—Ä–¥–Ω–∞—è –¥—Ä–∏–∞–¥–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[63106] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[96609] = {
					"–ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π –æ–ª–µ–Ω—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[60197] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[26550] = {
					"–°–º–µ—Ä—Ç–µ–ª—é–± –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[46962] = {
					"–ë–∞—Ä–æ–Ω –≠—à–±–µ—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59302] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –í–µ—Ä–¥–æ–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[61412] = {
					"–¢–µ–º–Ω—ã–π —à–∞–º–∞–Ω –ö–æ—Ä–∞–Ω—Ç–∞–ª", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[61444] = {
					"–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[99359] = {
					"–ì–Ω–∏–ª–æ—Å–µ—Ä–¥–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[26694] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π —à–∞–º–∞–Ω –∑–∞–∫–∞—Ç–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[24664] = {
					"–ö–µ–ª—å'—Ç–∞—Å –°–æ–ª–Ω–µ—á–Ω—ã–π –°–∫–∏—Ç–∞–ª–µ—Ü", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[24696] = {
					"–í–µ–¥—å–º–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ó–º–µ–∏–Ω—ã—Ö –ö–æ–ª–µ—Ü", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[95779] = {
					"–ì–Ω–æ–µ—à–∫—É—Ä—ã–π –≥—Ä–∏–∑–ª–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[129602] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[6206] = {
					"–ó–µ–º–ª–µ–≥–ª–æ—Ç –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[98081] = {
					"–†–µ–≤—É—â–∏–π –∏–¥–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[58823] = {
					"–ù–µ–æ—Ñ–∏—Ç –ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[6218] = {
					"–û–±–ª—É—á–µ–Ω–Ω–∞—è —Å–ª–∏–∑—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[6222] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[99360] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–ª–æ—à–∏–ø", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[6230] = {
					"–ó–∞—â–∏—Ç–Ω—ã–π —Å–∫–∞—Ñ–∞–Ω–¥—Ä –º–∏—Ä–æ—Ç–≤–æ—Ä—Ü–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[6234] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[96611] = {
					"–°–µ—Ä–¥–∏—Ç—ã–π –±—ã–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[23961] = {
					"–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[59175] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –ª—É—á–Ω–∏–∫", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[75384] = {
					"–ß—É–¥–æ–≤–∏—â–Ω–æ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –õ–∞–±–∏—Ä–∏–Ω—Ç–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[46963] = {
					"–õ–æ—Ä–¥ –í–∞–ª—å–¥–µ–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59303] = {
					"–ü—Å–∞—Ä—å –ë—Ä–∞—É–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[61445] = {
					"–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[102430] = {
					"–°–º–æ–ª–æ–ø–ª—é–π-—Å–ª–∏–∑–µ–Ω—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[75001] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –ö–æ—Å—Ç—è–Ω–æ–π –ë–∏–≤–µ–Ω—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[76088] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[48338] = {
					"–†–∞–∑–Ω–æ—Å—á–∏—Ü–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[29316] = {
					"–ú–æ—Ä–∞–≥–≥", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[58632] = {
					"–í–æ–∏—Ç–µ–ª—å –ì–∞—Ä–ª–∞–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[58664] = {
					"–§–∏–ª–∞–∫—Ç–µ—Ä–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –õ–µ–¥—è–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[59751] = {
					"–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[74554] = {
					"–®–∫—É—Ä–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[126919] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[126983] = {
					"–ö—Ä–∞—Å–∞–≤—á–∏–∫ –•–∞—Ä–ª–∞–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56906] = {
					"–î–∏–≤–µ—Ä—Å–∞–Ω—Ç –ö–∏–ø'—Ç–∏–ª–∞–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[127111] = {
					"–ë–æ–µ—Ü –Ω–∞ –≤–µ—Å–ª–∞—Ö –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[32593] = {
					"–ë—ã—Å—Ç—Ä–æ–ª–∞–ø—ã–π —á–ª–µ–Ω–∏—Å—Ç–æ–Ω–æ–≥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59080] = {
					"–¢–µ–º–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä –ì–∞–Ω–¥–ª–∏–Ω–≥", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[96677] = {
					"–ó—É–±–∞—Å—Ç—ã–π –≥—Ä–∏–∑–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[28581] = {
					"–¢–∞–∫—Ç–∏–∫ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[59240] = {
					"–°—Ç—Ä–∞–∂ –∑–∞–ª–∞ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[74555] = {
					"–ö–ª—ã–∫–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[27638] = {
					"–°—Ç—Ä–∞–∂ –ª–∞–∑—É—Ä–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[59368] = {
					"–¢–µ—Ä–∑–∞—Ç–µ–ª—å –ö—Ä–∞—Å—Ç–∏–Ω–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[56395] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[76090] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é —Å—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[58569] = {
					"–û—Å–≤—è—Ç–∏—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[61670] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[58633] = {
					"–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –õ–µ–¥—è–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[28837] = {
					"–ß–∞—Å–æ–≤–æ–π –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[24761] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[59752] = {
					"–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[56747] = {
					"–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[74620] = {
					"–ë–æ–µ–≤–æ–π –≤–µ–ø—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[56875] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–¥—Ä—ã–≤–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[60040] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î—é—Ä–∞–Ω–¥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[16065] = {
					"–õ–µ–¥–∏ –ë–ª–æ–º–µ", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[59241] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —Å–æ–∫—Ä–æ–≤–∏—â –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[16145] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Ä—ã—Ü–∞—Ä–µ–π –°–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[99365] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-–ª–∞–∑—É—Ç—á–∏–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[30276] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –≤–µ—Ä–µ—Ç–µ–Ω—â–∏–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[16193] = {
					"–°–∫–µ–ª–µ—Ç-–∫—É–∑–Ω–µ—Ü", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[75453] = {
					"–ù–∞—á–∏–Ω–∞—é—â–∏–π –≥–µ–æ–º–∞–≥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[99366] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-–ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[27447] = {
					"–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[106719] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –ú–æ—Ä–¥–æ—Ç", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[29573] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[26536] = {
					"–ë–µ–∑–º–æ–∑–≥–ª—ã–π —Å–ª—É–≥–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[134284] = {
					"–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[30660] = {
					"–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[24554] = {
					"–≠—Ä–∞–º–∞—Å –°–∏—è—é—â–µ–µ –ü–ª–∞–º—è", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[27639] = {
					"–ö–æ–ª–¥—É–Ω—å—è-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[26632] = {
					"–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[74751] = {
					"–¢–æ—Ç–µ–º —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[26696] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[24698] = {
					"–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∏—Å—Ç –≠—Ñ–∏—Ä–∏—É–º–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[61672] = {
					"–£—á–µ–Ω–∏–∫ —Ç–µ–º–Ω–æ–≥–æ —à–∞–º–∞–Ω–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[133007] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[28838] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –≤–æ–∏–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[59722] = {
					"–ö—É—á–∞ —Ç—Ä—É–ø–æ–≤", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[26824] = {
					"–í–µ—Ä—Ö–æ–≤–æ–π —è—â–µ—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[56717] = {
					"–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[61928] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[101414] = {
					"–¢–∏—Ö–æ—Å—Ç—É–ø –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[106785] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[29062] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[65317] = {
					"–°—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[5755] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[5763] = {
					"–≠–∫—Ç–æ–ø–ª–∞–∑–º–∞ –∫–æ—à–º–∞—Ä–æ–≤", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[97259] = {
					"–ü—ã–ª–∞—é—â–µ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –≥–∏–¥—Ä—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[59467] = {
					"–ú–∞–≥ —Å –ø–æ–¥—Å–≤–µ—á–Ω–∏–∫–æ–º", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[30277] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –∏–∑–º–µ–ª—å—á–∏—Ç–µ–ª—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[48278] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[106786] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[7849] = {
					"–ú–æ–±–∏–ª—å–Ω–∞—è –æ—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[61705] = {
					"–ü–∞–¥—à–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[129548] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[101991] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –ö–æ—à–º–∞—Ä–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[48502] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[56718] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[97068] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[61929] = {
					"–°–∏–∫'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[105636] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[30549] = {
					"–ë–∞—Ä–æ–Ω –†–∏–≤–µ–Ω–¥–µ—Ä", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[106787] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[100713] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä—ã–±–æ–µ–¥", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[28583] = {
					"–í–æ–ª–¥—ã—Ä–Ω—ã–π –ø–∞—Ä–æ–∑–ª–æ–±", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[26553] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[30661] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[65414] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[27640] = {
					"–ö—É–¥–µ—Å–Ω–∏–∫-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[97197] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–æ—á–∏—Å—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[28695] = {
					"–û–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[48279] = {
					"–ì–æ–±–ª–∏–Ω-–Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[62633] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[58605] = {
					"–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[129550] = {
					"–¢–∏—Ö–æ–ª–∞–ø –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56719] = {
					"–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[59820] = {
					"–ü–∞–Ω–¥–∞—Ä–µ–Ω-–∞—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[59884] = {
					"–ü–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59980] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[74948] = {
					"–†—É–≥—É–≥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[29063] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[16803] = {
					"–£—á–µ–Ω–∏–∫ —Ä—ã—Ü–∞—Ä—è —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[59213] = {
					"–ö–æ—Å—Ç—è–Ω–æ–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[95920] = {
					"–û–∂–∏–≤—à–∞—è –±—É—Ä—è", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[65415] = {
					"–®–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[75588] = {
					"–ü–µ—â–µ—Ä–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[90997] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–Ω—è –°–∏–ª—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[59373] = {
					"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[16146] = {
					"–†—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[16154] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[30278] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –º–µ—Ç–∞—Ç–µ–ª—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[29271] = {
					"–≠—Ñ–∏—Ä–Ω–∞—è —Å—Ñ–µ—Ä–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[16194] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤—ã–π —Ç–æ–ø–æ—Ä", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[29335] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[48440] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[5048] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Å–ø–∏–¥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[59789] = {
					"–¢–∞–ª–Ω–æ—Å –í–æ–∑–¥–∞—è—Ç–µ–ª—å –î—É—à", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[90998] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —á—É–º–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[97264] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–∞–∫–æ–≤–∏–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[56912] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–≥–ª–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[59150] = {
					"–¢–∫–∞—á –ø–ª–∞–º–µ–Ω–∏ –ö–µ–≥–ª–µ—Ä", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[28584] = {
					"–ù–µ–æ–±—É–∑–¥–∞–Ω–Ω—ã–π –æ–≥–Ω–µ–Ω–Ω—ã–π —à—Ç–æ—Ä–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[26554] = {
					"–Ø—Å–Ω–æ–≤–∏–¥–∏—Ü–∞ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[75590] = {
					"–û–≥—Ä–æ–º–Ω–∞—è –ª—è–≥—É—à–∫–∞-–±—ã–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[58319] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[29735] = {
					"–í–∑–±–µ—à–µ–Ω–Ω—ã–π –≤–æ—Ä–≥", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[100526] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –∫—Ä–æ–≤–æ–ø–∏–π—Ü–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[24684] = {
					"–†—ã—Ü–∞—Ä—å –∫—Ä–æ–≤–∏ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[61644] = {
					"–¢–µ–º–Ω—ã–π —à–∞–º–∞–Ω - –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[48441] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[59726] = {
					"–û–ø–∞—Å–Ω–æ—Å—Ç—å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[48505] = {
					"–°—Ç—Ä–∞–∂ –¢—å–º—ã –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[6207] = {
					"–î—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[133663] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[102253] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[97202] = {
					"–û–ª–º–∏—Ä –ü—Ä–æ—Å–≤–µ—â–µ–Ω–Ω—ã–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[6223] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[59982] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[100527] = {
					"–ë–µ—Å —É–∂–∞—Å–∞—é—â–µ–≥–æ –æ–≥–Ω—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[3637] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[29064] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[23965] = {
					"–õ–µ–¥—è–Ω–∞—è –º–æ–≥–∏–ª–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29096] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[29128] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[62348] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[91001] = {
					"–°–º–æ–ª–æ–ø–ª—é–π-–ø–æ–ª–∑—É–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[61453] = {
					"–ú—É'–®–∏–±–∞", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[61485] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[29240] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[30279] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[131492] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[101679] = {
					"–ì—Ä–æ–∑–Ω–∞—è –æ—Ç—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[3669] = {
					"–õ–æ—Ä–¥ –ö–æ–±—Ä–∞–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[3671] = {
					"–õ–µ–¥–∏ –ê–Ω–∞–∫–æ–Ω–¥—Ä–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[3673] = {
					"–õ–æ—Ä–¥ –°–µ—Ä–ø–µ–Ω—Ç–∏—Å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[48442] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[56658] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56754] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[27386] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[100529] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –Ω–µ–Ω–∞–≤–∏—Å—Ç—å—é —Å–ª–∏–∑–µ–Ω—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[76105] = {
					"–¢–æ—Ç–µ–º –•—Ä—É—Å—Ç–∞–ª—å–Ω–æ–≥–æ –æ–≥–Ω—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[28585] = {
					"–®–ª–∞–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[26555] = {
					"–£–≤–∞–ª–µ–Ω—å –∏–∑ –ü–ª–µ—Ç–∏", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[75466] = {
					"–ó–ª–æ–±–Ω—ã–π –Ω–µ—Ç–æ–ø—ã—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[30695] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[91003] = {
					"–†–æ–∫–º–æ—Ä–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[26635] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[97269] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[28729] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ù–∞—Ä–¥–∂–∏–ª", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[29768] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω—ã–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[24685] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[92538] = {
					"–õ–∏—á–∏–Ω–∫–∞ —Å–º–æ–ª–æ–ø–ª—é—è", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[61678] = {
					"–ü–∞–¥—à–∏–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[28825] = {
					"–°–º–µ—Ä—á", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[99891] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[75467] = {
					"–ü–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[4421] = {
					"–ß–∞—Ä–ª–≥–∞ –û—Å—Ç—Ä–æ–±–æ–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91004] = {
					"–£–ª–∞—Ä–æ–≥–≥ –°–∫–∞–ª–æ–º–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[103344] = {
					"–î—É–±–æ—Å–µ—Ä–¥", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[98293] = {
					"–ö–∞–ø–ª—è –º–æ—Ä—Å–∫–æ–π –≤–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[100531] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫—Ä–æ–≤—å—é —è—Ä–æ—Å—Ç—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[76107] = {
					"–¢–æ—Ç–µ–º —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[16067] = {
					"–ñ–µ—Ä–µ–±–µ—Ü —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[29097] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[91005] = {
					"–ù–∞—Ä–∞–∫—Å–∞—Å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[24078] = {
					"–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29209] = {
					"–ñ—É–∫-–ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[16163] = {
					"–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç-—Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[100532] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –≤–∑—Ä—ã–≤–µ–Ω—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[48284] = {
					"–ü–æ—Ä–æ—Ö", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[75149] = {
					"–ê–≥–≥–µ–º –¢–µ—Ä–Ω–æ–≤–æ–µ –ü—Ä–æ–∫–ª—è—Ç–∏–µ", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[67093] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ–≤–æ–π –ª–µ–∫–∞—Ä—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[58674] = {
					"–ó–ª–æ–π –ø–µ—Å", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[36296] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[91006] = {
					"–ö–∞–º–Ω–µ—Å–ø–∏–Ω–Ω—ã–π —â–µ–ª–∫–æ–∑—É–±", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[58898] = {
					"–ë–¥–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[56884] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[27483] = {
					"–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[97720] = {
					"–ü–æ–ª–∑—É–Ω –∏–∑ —á—É–º–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[28586] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ë—å—è—Ä–Ω–≥—Ä–∏–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[30664] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —É–±–∏–π—Ü–∞ –º–∞–≥–æ–≤", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[24558] = {
					"–≠–ª–ª—Ä–∏—Å–∞ –ü–æ—á–∏—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¢–µ–Ω–∏", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[91007] = {
					"–î–∞—Ä–≥—Ä—É–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[26636] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥—É—à –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[47134] = {
					"–ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å —Ç—Ä—É–ø–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[138281] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[28730] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ì–∞—à—Ä–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[92350] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[134701] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[28826] = {
					"–ó–∞–≥—Ä–æ–±–Ω–∏–∫ —è—Ä–æ—Å—Ç–∏ –±—É—Ä—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[48445] = {
					"–õ–∞–∫–µ–π-–±–æ–ª–≤–∞–Ω—á–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[3873] = {
					"–ó–∞–º—É—á–µ–Ω–Ω—ã–π –æ—Ñ–∏—Ü–µ—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[3875] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[99192] = {
					"–¢–µ–Ω—å –ö—Å–∞–≤–∏—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[3887] = {
					"–ë–∞—Ä–æ–Ω –°–∏–ª—å–≤–µ—Ä–ª–µ–π–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[75152] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –î–∂–∞—Ä–≥–±–∞", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[43778] = {
					"–í—Ä–∞–≥–æ—Ä–µ–∑-5000", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[57109] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[29098] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[5756] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∫—Ä—ã–ª–æ—è–¥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[100216] = {
					"–õ–æ–≤—á–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[24079] = {
					"–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[47135] = {
					"–°–º—Ä–∞–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[47231] = {
					"–¢–µ–º–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[29306] = {
					"–ì–∞–ª'–¥–∞—Ä–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[58676] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[130012] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[97788] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[113197] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[59220] = {
					"–î–∂–∞–Ω–¥–∏—Å –ë–∞—Ä–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[131383] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[133685] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[26621] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–º—É—á–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26637] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[3977] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –í–∞–π—Ç–º–µ–π–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[26669] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –¥–∏–∫–∞—Ä—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[28731] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –°–∏–ª—Ç–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[47232] = {
					"–ü—Ä–∏–∑—Ä–∞–∫ –ø–æ–≤–∞—Ä–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[47296] = {
					"–•–µ–ª–∏–∫—Å –û—Ç–ª–æ–º—á–∏–∫—Å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[48351] = {
					"–†–∞–∑–Ω–æ—Å—á–∏—Ü–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[92610] = {
					"–ë–∞—Ä–∞–±–∞–Ω—â–∏–∫ –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[48447] = {
					"–°—Ç—Ä–∞—à–Ω—ã–π –ø–æ–ø—É–≥–∞–π", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[26861] = {
					"–ö–æ—Ä–æ–ª—å –ò–º–∏—Ä–æ–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[130909] = {
					"–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[66652] = {
					"–ú–∞–ª–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[74900] = {
					"–í–∞—è—Ç–µ–ª—å –ª–∞–±–∏—Ä–∏–Ω—Ç–æ–≤ –¢—É–∫–∞–∞—Ä", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91332] = {
					"–ö–∞–º–Ω–µ—Ä—É–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[16060] = {
					"–ì–æ—Ç–∏–∫ –ñ–Ω–µ—Ü", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[29051] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[122532] = {
					"–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[58198] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[59464] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[28153] = {
					"–°–Ω–µ–∂–∏–Ω–∫–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[97087] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[27641] = {
					"–¶–µ–Ω—Ç—Ä–∏—Ñ—É–∂–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[24080] = {
					"–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[47137] = {
					"–ë–µ–∑–º–æ–∑–≥–ª—ã–π —É–∂–∞—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[16156] = {
					"–ü–æ–º–µ—á–µ–Ω–Ω—ã–π –¢—å–º–æ–π –≤–æ–∏–Ω", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[16164] = {
					"–¢–µ–Ω—å –ù–∞–∫—Å—Ä–∞–º–∞—Å–∞", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[28236] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ª–∞–∑—É—Ä–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[96512] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ì–ª–∞–π–¥–∞–ª–∏—Å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[47297] = {
					"–ë–æ–ª–≤–∞–Ω—á–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[96640] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[27654] = {
					"–î—Ä–∞–∫–æ—Å –î–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[59501] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Ç—Ä—É–ø", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[47132] = {
					"–°—Ç—Ä–∞—à–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[91781] = {
					"–í–æ–∏–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[5053] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∫—Ä–æ–∫–æ–ª–∏—Å–∫", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[29307] = {
					"–ö–æ–ª–æ—Å—Å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[27389] = {
					"–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[56792] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç —Å–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[24200] = {
					"–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[96608] = {
					"–≠–±–µ–Ω–æ–≤—ã–π –≤–æ—Ä–≥", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[3877] = {
					"–°—Ç–µ–Ω–∞—é—â–∏–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[26631] = {
					"–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[105720] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[130521] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[130400] = {
					"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[57080] = {
					"–ü—Ä–æ–∫–ª—è—Ç—ã–π —Å–≤–∏—Ç–æ–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[24557] = {
					"–ö–∞–≥–∞–Ω–∏ –ù–æ—á–Ω–æ–π –£–¥–∞—Ä", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[30666] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[91782] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27597] = {
					"–ù–µ–ø–æ–≤–æ—Ä–æ—Ç–ª–∏–≤–æ–µ —Ç–µ–ª–æ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[24553] = {
					"–ê–ø–æ–∫–æ", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[24560] = {
					"–ñ—Ä–∏—Ü–∞ –î–µ–ª—Ä–∏—Å—Å–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[26622] = {
					"–ù–µ—Ç–æ–ø—ã—Ä—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26638] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤—Å–∞–¥–Ω–∏–∫ –Ω–∞ –Ω–µ—Ç–æ–ø—ã—Ä–µ –∏–∑ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[47138] = {
					"–ü—É—Å—Ç—É–ª–µ–∑–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[26670] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –ø–ª–æ—Ç–æ–µ–¥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[28732] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[24656] = {
					"–ü—à–∏–∫—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[130273] = {
					"–°–µ–ª–µ–±—Ä–∏–π—Å–∫–∞—è –¥—Ä–∏–∞–¥–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[24688] = {
					"–¢–∏—Ö–∏–π –ø—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[29819] = {
					"–ü–∏–∫–µ–π—â–∏–∫ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[24697] = {
					"–°–µ—Å—Ç—Ä–∞ –ú—É—á–µ–Ω–∏–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[48417] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[74549] = {
					"–ö–∞–º–Ω–µ–ø–µ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91783] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[26830] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[24686] = {
					"–ß–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[58807] = {
					"–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[28924] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[6220] = {
					"–û–±–ª—É—á–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[129547] = {
					"–ö–∞—Å—Ç–µ—Ç–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[101438] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–≥–ª—ã–±–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[6232] = {
					"–í–æ–ª—à–µ–±–Ω—ã–π –æ–±–Ω—É–ª—è—Ç–æ—Ä X-21", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[59242] = {
					"–ö–æ—Å—Ç—è–Ω–æ–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[130274] = {
					"–ü–æ–ª–∑—É—á–∏–π —Å–ª—è–∫–æ—á", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[75096] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –∞–±–µ—Ä—Ä–∞—Ü–∏—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[59184] = {
					"–î–∂–∞–Ω–¥–∏—Å –ë–∞—Ä–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[23953] = {
					"–ü—Ä–∏–Ω—Ü –ö–µ–ª–µ—Å–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[99804] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-—Å–æ–∫–æ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[59191] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –õ–∏–Ω–¥–æ–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[91784] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –ü–∞—Ä–∂–µ—à", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[56589] = {
					"–ë–æ–µ—Ü –ì–∞'–¥–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[113998] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–Ω—è –°–∏–ª—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[29931] = {
					"–õ—é—Ç–æ—Ä–æ–≥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[56631] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[97219] = {
					"–°–æ–ª—Å—Ç–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[24815] = {
					"–ë–µ—Å –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[24745] = {
					"–ß–∏—Å—Ç–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[59479] = {
					"–Ø–Ω—å-–ß–∂—É –í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[30283] = {
					"–ß—É–º–æ–±—Ä–æ–¥", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[130275] = {
					"–°–µ—Å—Ç—Ä–∞ –ö–µ–ª–µ–±—Ä–∞—Å–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[75097] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –æ—Å–∫–æ–ª–æ–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[29308] = {
					"–ü—Ä–∏–Ω—Ü –¢–∞–ª–¥–∞—Ä–∞–º", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[6211] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[29340] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –≤—ã–≤–æ–¥–∫–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[4278] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –°–ø—Ä–∏–Ω–≥–≤–µ–π–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[91785] = {
					"–ë—Ä–æ–¥—è—á–∏–π –ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[24687] = {
					"–í—Ä–∞—á –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[5056] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —Å—Ç—Ä–∞—Ö–æ–∑—É–±", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[56762] = {
					"–Æ–π-–ª—É–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[26686] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π –ª—é—Ç–æ—Ä–æ–≥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[28582] = {
					"–õ–µ–∫–∞—Ä—å –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[16148] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[56890] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[126928] = {
					"–ö–æ—Ä—Å–∞—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[129598] = {
					"–í—å—é—á–Ω—ã–π –º—É–ª –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[59684] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[59794] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—å —á–∞—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[130404] = {
					"–ö—Ä—ã—Å–æ–ª–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[61666] = {
					"–ü–∞–¥—à–∏–π –ø—Å–∞—Ä—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[60208] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[26668] = {
					"–°–≤–∞–ª–∞ –í–µ—á–Ω–æ—Å–∫–æ—Ä–±—è—â–∞—è", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[65362] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[27598] = {
					"–ó–ª–æ–≤–æ–Ω–Ω—ã–π —Ç—Ä—É–ø —Ç—Ä–æ–ª–ª—è", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[28733] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Ç–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[26623] = {
					"–ì—Ä–æ–º–∏–ª–∞ –ü–ª–µ—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26639] = {
					"–®–∞–º–∞–Ω –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[47140] = {
					"–°–∫–µ–ª–µ—Ç –∫–æ–ª–¥—É–Ω–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[106580] = {
					"–ë–ª—É–∂–¥–∞—é—â–∏–π –±–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[59480] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[29829] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[59544] = {
					"–ö–∏–≤–∞—é—â–∏–π —Ç–∏–≥—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[24689] = {
					"–ü—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π-–∫–æ—Å—Ç–æ–ª–æ–º", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[29820] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –±–æ–≥–∞ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[29836] = {
					"–ë–æ–µ–≤–æ–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[48419] = {
					"–®–∞—Ö—Ç–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[128551] = {
					"–ú–∞—Å—Ç–∏—Ñ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[91787] = {
					"–ß–∞–π–∫–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[50561] = {
					"–ö—Ä–æ–≤–æ–∂–∞–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59800] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[56763] = {
					"–ù–∞–±–∏—Ä–∞—é—â–∏–π —Å–∏–ª—ã —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[28925] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[24849] = {
					"–í—Å–∞–¥–Ω–∏–∫ –Ω–∞ –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–µ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29830] = {
					"–ñ–∏–≤–æ–µ –∫–æ–ª–¥—É–Ω—Å—Ç–≤–æ", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[126848] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –Æ–¥–æ—Ä–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[102232] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∑–≤–µ—Ä–æ–ª–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[131402] = {
					"–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[28836] = {
					"–†—É–Ω–æ–¥–µ–ª –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[16061] = {
					"–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –†–∞–∑—É–≤–∏–π", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[61239] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[23954] = {
					"–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[23970] = {
					"–í—Ä–∞–π–∫—É–ª-—Å–∫–µ–ª–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[59193] = {
					"–¢–∫–∞—á–∏—Ö–∞ –°–º–µ—Ä—Ç–∏", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[29117] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[127124] = {
					"–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[62358] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[16125] = {
					"–ë–µ–∑–∂–∞–ª–æ—Å—Ç–Ω—ã–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[61399] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[24082] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[47141] = {
					"–ñ—É—Ç–∫–∏–π –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59223] = {
					"–ë—Ä–∞—Ç –ö–æ—Ä–ª–æ—Ñ—Ñ", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[16165] = {
					"–ù–µ–∫—Ä–æ—Ä—ã—Ü–∞—Ä—å", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[30284] = {
					"–ö–æ—Å—Ç–æ–º–æ–ª", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[59545] = {
					"–ó–æ–ª–æ—Ç–æ–π –∂—É–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[61623] = {
					"–ö–∞–ø–ª—è —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[29309] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –ù–∞–¥–æ–∫—Å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[56731] = {
					"–ü–µ—Ä—Ü–æ–≤–∫–∞", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[48420] = {
					"–ó–µ–º–ª–µ–∫–æ–ø –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[59705] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[91789] = {
					"–õ–µ–¥–∏ –ö–æ–ª—å—Ü–æ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[74462] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –ó–ª–æ–∫–ª—ã–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[56732] = {
					"–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56764] = {
					"–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[133835] = {
					"–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[29834] = {
					"–ë–µ—à–µ–Ω–∫–∞ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[130024] = {
					"–ú–æ–∫—Ä–∞—è –∫–æ—Ä–∞–±–µ–ª—å–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[59051] = {
					"–†–∞–∑–¥–æ—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56924] = {
					"–†–∞—Å—Å–≤–∏—Ä–µ–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[28587] = {
					"–í–æ–ª—Ö–∞–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[28923] = {
					"–õ–æ–∫–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[56713] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[133836] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[59819] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—è", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[16149] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –∫–æ–Ω—å", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[61240] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[91790] = {
					"–•–æ–¥—É–ª—å–Ω–∏–∫ –ú–∞–∫'—Ä–∞–Ω—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[30668] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –Ω–∞–ª–µ—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[47162] = {
					"–ì–ª—É–±—Ç–æ–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[101637] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–∫–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[26624] = {
					"–ì–Ω—É—Å–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[126847] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –†–∞—É–ª—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[102404] = {
					"–ö–∞–º–Ω–µ—Ä—É–∫–∏–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –ª–∏—á–∏–Ω–æ–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[26672] = {
					"–ö—Ä–æ–≤–æ–∂–∞–¥–Ω—ã–π —Ç—É–Ω–¥—Ä–æ–≤—ã–π –≤–æ–ª–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[28734] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Ä—ã—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59546] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Ä—ã–±–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[24674] = {
					"–§–µ–Ω–∏–∫—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[58555] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[56541] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[24722] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[48421] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[58683] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[102277] = {
					"–î–≤–æ–π–Ω–∏–∫ —Å–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥–∞-—Å—Ç—Ä–µ–ª–∫–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[95947] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫ –ú–∞–∫'—Ä–∞–Ω—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27871] = {
					"–ü–ª–æ—Ç–æ—è–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[56765] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[28926] = {
					"–ò—Å–∫—Ä–∞ –ò–æ–Ω–∞—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[29304] = {
					"–°–ª–∞–¥'—Ä–∞–Ω", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[138187] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61701] = {
					"–°–∏–∫'—Ç–∏–∫-–≤–æ–∏–Ω", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[75318] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –≤—Å–ø–ª–µ—Å–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[61463] = {
					"–ë—Ä—é—Ö–æ—à–ª–∞–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[56877] = {
					"–†–∞–π–≥–æ–Ω–Ω", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[59605] = {
					"–û—Ç—É–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[6212] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏–∫ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[58108] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[61910] = {
					"–°–∫–æ–ø–ª–µ–Ω–∏–µ —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[95842] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –º–æ–ª–Ω–∏–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[29118] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[137103] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61337] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[106578] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ø–ª–æ—Ç–∏", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[74553] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é —Å—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[24083] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[47143] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[47131] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π —É–ø—ã—Ä—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[48230] = {
					"–û–≥—Ä-–Ω–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[48262] = {
					"–û–≥—Ä-—Ç–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[101639] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –¥–µ–≤–∞ —â–∏—Ç–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[24071] = {
					"–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[61657] = {
					"–Æ–Ω–∞—è –≥–æ–Ω—á–∞—è –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[58803] = {
					"–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[96028] = {
					"–ì–Ω–µ–≤ –ê–∑—à–∞—Ä—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[58684] = {
					"–†–∞—Å—Å–µ–∫–∞—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[91793] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫—Ä–∞–±", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[59771] = {
					"–ó–æ–º–±–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä—É–ø", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[56636] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –†–∏'–º–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[56766] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[75440] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–∫–∞–º–Ω–µ–≥–ª—è–¥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[61945] = {
					"–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[56862] = {
					"–ü—å—è–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[56473] = {
					"–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[59547] = {
					"–¶–∑—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[26685] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –π–æ—Ä–º—É–Ω–≥–∞—Ä", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[133912] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61389] = {
					"–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59100] = {
					"–°—Ç–∞—Ä—ã–π –æ–±—ä–µ–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[7915] = {
					"–•–æ–¥—è—á–∞—è –±–æ–º–±–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[29630] = {
					"–ö–ª—ã–∫–∞—Å—Ç–∞—è –≥–ª—É–±–∏–Ω–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[61242] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[91794] = {
					"–°–∫—Ä—ã—Ç–µ–Ω—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27600] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[61338] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[56439] = {
					"–®–∞ –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[26625] = {
					"–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –ø–∞—É–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26641] = {
					"–ü–æ—Ç—Ä–æ—à–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[94224] = {
					"–ö–∞–º–µ–Ω—è—â–∏–π —Ç–æ—Ç–µ–º", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[74551] = {
					"–ó–≤–µ—Ä–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[130272] = {
					"–£–¥—É—à–∞—é—â–∞—è –ª–æ–∑–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[29774] = {
					"–ü–ª—é—é—â–∞—è—Å—è –∫–æ–±—Ä–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[61658] = {
					"–í–∑—Ä–æ—Å–ª–∞—è –≥–æ–Ω—á–∞—è –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[56511] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[29822] = {
					"–û–≥–Ω–µ–ø—Ä—è–¥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[29838] = {
					"–õ—é—Ç–æ—Ä–æ–≥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[100539] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-—Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[58685] = {
					"–ü—Ä–æ–ø–æ–≤–µ–¥–Ω–∏—Ü–∞ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[58810] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[61528] = {
					"–õ–∞–≤–æ–≤—ã–π —Å—Ç—Ä–∞–∂ –ì–æ—Ä–¥–æ—Ç", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[59804] = {
					"–•–≤–∞—Ç–∫–∞—è –Ω–µ–Ω–∞–≤–∏—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[24723] = {
					"–°–µ–ª–∏–Ω –û–≥–Ω–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[29982] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[61946] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[56863] = {
					"–°–æ–Ω–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[56895] = {
					"–°–ª–∞–±–æ–µ –º–µ—Å—Ç–æ", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[56927] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[4958] = {
					"–ë–ª—É–∂–¥–∞—é—â–∏–π –¥—É—Ö", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[75439] = {
					"–Æ–Ω—ã–π —Å–≤–∏–Ω–æ–±—Ä–∞–∑", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[8035] = {
					"–ú–∏–Ω–∞ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[47714] = {
					"–ü–∞—Ä", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[23956] = {
					"–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[66413] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[61243] = {
					"–ì–µ–∫–∫–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[91796] = {
					"–°–∫—Ä–æ–≥-–≤–æ–ª–Ω–æ–ª–æ–º", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[75247] = {
					"–ì—Ä–æ–π–∞—Ç –°–ª–µ–ø–æ–π –û—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[61339] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[16126] = {
					"–ù–µ–æ–¥–æ–ª–∏–º—ã–π –≤—Å–∞–¥–Ω–∏–∫", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[16150] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≤—Å–∞–¥–Ω–∏–∫", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[24084] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[47145] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[47739] = {
					"\"–ö–∞–ø–∏—Ç–∞–Ω\" –ü–∏—Ä–æ–∂–æ–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[121975] = {
					"–ê–≥–≥—Ä–∞–º–∞—Ä", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[30286] = {
					"–°—Ç—É–∂–µ–Ω—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[46964] = {
					"–õ–æ—Ä–¥ –ì–æ–¥—Ñ—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59613] = {
					"–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –°–ª–µ–π—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[29311] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –í–æ–ª–∞–∂", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[27281] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —á–∞—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[121985] = {
					"–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[75429] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–ø–æ–≤–∞—Ä", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91797] = {
					"–ö–æ—Ä–æ–ª—å –í–æ–ª–Ω–æ–±–æ—Ä–æ–¥", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[28368] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[74534] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[28965] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –≥—Ä–æ–∑–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[113536] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[61947] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[61387] = {
					"–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[61408] = {
					"–ê–¥–∞—Ä–æ–≥–≥", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[101437] = {
					"–ü—ã–ª–∞—é—â–∞—è –∂–µ–æ–¥–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[91000] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[12218] = {
					"–ú–µ—Ä–∑–∫–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[75110] = {
					"–§–∞–∫–µ–ª—å—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[133852] = {
					"–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[30893] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[26626] = {
					"–í–æ—Å–∫—Ä–µ—Å–∏—Ç–µ–ª—å –∏–∑ –ü–ª–µ—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[12258] = {
					"–ë—Ä–∏—Ç–≤–æ—Ö–ª–µ—Å—Ç", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[13282] = {
					"–ù–æ–∫—Å–∏–æ–Ω", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[129529] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[61340] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[27633] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[113537] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[61436] = {
					"–°–∏–∫'—Ç–∏–∫ - —Ç–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[47146] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[98384] = {
					"–û—Å—Ç—Ä–æ–∑—É–±", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[26690] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[6219] = {
					"–ï–¥–∫–∏–π —Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[95674] = {
					"–§–µ–Ω—Ä–∏—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[58876] = {
					"–ì–æ–ª–æ–¥–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59614] = {
					"–°–∫—É—á–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[26674] = {
					"–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –¥–µ—Ç–µ–Ω—ã—à", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[100991] = {
					"–ö–æ—Ä–Ω–∏-–¥—É—à–∏—Ç–µ–ª–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[30179] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∞–ø–æ—Å—Ç–æ–ª", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[5775] = {
					"–í–µ—Ä–¥–∞–Ω –í–µ—á–Ω–æ–∂–∏–≤—É—â–∏–π", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[48521] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[58783] = {
					"–ü–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[24201] = {
					"–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[97170] = {
					"–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[47626] = {
					"–ê–¥–º–∏—Ä–∞–ª –¢–µ—Ä–∑–∞—é—â–∏–π –†–µ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[56865] = {
					"–í–æ–¥–Ω—ã–π —Ç–∞–Ω—Ü–æ—Ä", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[58812] = {
					"–ó–ª–æ–±–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[6233] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –∫–∞—Ä–∞—É–ª—å–Ω—ã–π", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[32191] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –ª–æ–≤–µ—Ü", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[74652] = {
					"–ú–µ—Ç–∫–æ—Å—Ç—Ä–µ–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[36565] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[30111] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –≤–µ—Ä—É—é—â–∏–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[3640] = {
					"–ò–∑–º–µ–Ω—á–∏–≤–∞—è —ç–∫—Ç–æ–ø–ª–∞–∑–º–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[31134] = {
					"–°–∏–Ω–∏–≥–æ—Å–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[97171] = {
					"–ö–æ–ª–¥—É–Ω—å—è –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[29120] = {
					"–ê–Ω—É–±'–∞—Ä–∞–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[58722] = {
					"–õ–∏–ª–∏–∞–Ω –í–æ—Å—Å", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[59359] = {
					"–£–∂–∞—Å –≤–æ –ø–ª–æ—Ç–∏", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[16215] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤—ã–π –ø–æ—Å–æ—Ö", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[24069] = {
					"–ö–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[24085] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29216] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[30624] = {
					"–í—ã—Ñ—ã–∫—Ç–µ—Ä", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[91808] = {
					"–ó–º–µ–∏–∫—Å", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[48266] = {
					"–ü—É—à–∫–∞ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[3674] = {
					"–®–∫–∞–º", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[30319] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—Ä–Ω—ã–π –º–∞–≥", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[3670] = {
					"–õ–æ—Ä–¥ –ü–∏—Ç–æ–Ω–∞—Å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[3680] = {
					"–ó–º–µ–µ—Ü–≤–µ—Ç–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[47403] = {
					"–ñ–Ω–µ—Ü –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[131436] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[6329] = {
					"–û–±–ª—É—á–µ–Ω–Ω—ã–π –ø–æ–≥—Ä–æ–º—â–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[56706] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[28419] = {
					"–ë–µ—Å–Ω–æ–≤–∞—Ç—ã–π —É–ø—ã—Ä—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[102287] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[97172] = {
					"–ß–∞—Å—Ç–∏—Ü–∞ –º–æ—Ä—Å–∫–æ–π –≤–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[30287] = {
					"–ë–µ—Å—á–∏–Ω—Å—Ç–≤—É—é—â–∏–π —É–ø—ã—Ä—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[7603] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[5762] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –±–æ–ª–æ—Ç–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[56930] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –≤–µ—Å—Ç–Ω–∏–∫ —Ä–æ—è", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[74545] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[29153] = {
					"–û–∂–∏–≤—à–∏–µ –∫–æ—Å—Ç–∏", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59519] = {
					"–¢—É—á–Ω—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[74552] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[62205] = {
					"–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[95766] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –æ—Å—Ç—Ä–æ–∫–ª—é–≤", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[61247] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∑–µ–ª–µ–Ω–æ—Ä–æ–≥", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[47136] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[65402] = {
					"–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[27650] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑–¥—É—Ö", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[29680] = {
					"–°–ª–∞–¥'—Ä–∞–Ω—Å–∫–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[26627] = {
					"–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[28410] = {
					"–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[30892] = {
					"–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[6225] = {
					"–ú–µ—Ö–∞–Ω–æ—Ç–∞–Ω–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[26691] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[59520] = {
					"–®–∏–ø—É—á–∏–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[59552] = {
					"–•–æ–∑–µ–Ω-–ø–ª–∞–∫—Å–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[3653] = {
					"–ö—Ä–∏–≥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[48418] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[100818] = {
					"–†–µ–≤—É—â–∏–π –∏–¥–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[129526] = {
					"–ú–æ—Ä—è—á–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[31007] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[28961] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –æ—Å–∞–¥–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[101074] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –Ω–µ–Ω–∞–≤–∏—Å—Ç—å—é –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[59808] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[48229] = {
					"–ö–æ–±–æ–ª—å–¥-–∑–µ–º–ª–µ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[131817] = {
					"–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61216] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[56867] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –ø–ª—É—Ç", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[48450] = {
					"–Ø—Å–Ω–æ–∫—Ä—ã–ª—ã–π –≤–∏–∑–≥—É–Ω", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[47404] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[8886] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –ø–∏—Ç–æ–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[97173] = {
					"–ù–µ—É—Ç–æ–º–∏–º–∞—è –≤–æ–ª–Ω–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[16063] = {
					"–°—ç—Ä –ó–µ–ª–∏–µ–∫", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[3870] = {
					"–ö–∞–º–µ–Ω–Ω–∞—è —Å–æ–Ω—è", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59360] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[129527] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[95832] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –¥–µ–≤–∞ —â–∏—Ç–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[75436] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–ø–∞—Å—Ç—É—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[101075] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω—ã–π —á–µ—Ä–≤–µ–ø–æ–∫–ª–æ–Ω–Ω–∏–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[30176] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[16127] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —É—á–µ–Ω–∏–∫", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[74669] = {
					"–¢–æ—Ç–µ–º –•—Ä—É—Å—Ç–∞–ª—å–Ω–æ–≥–æ –æ–≥–Ω—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[59372] = {
					"–ö–Ω–∏–∂–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[29217] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —è–¥–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59293] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[16167] = {
					"–ö–æ—Å—Ç–ª—è–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[61567] = {
					"–í–∏–∑–∏—Ä—å –¶–∑–∏–Ω—å'–±–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[59553] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–≤—á–∏—Ö –ø—Ç–∏—Ü", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[48522] = {
					"–ü–∏—Ä–∞—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[96664] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - —Ä–µ–∑—á–∏–∫ —Ä—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[99200] = {
					"–î—Ä–µ—Å–∞—Ä–æ–Ω", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[95769] = {
					"–ë–µ—à–µ–Ω–∞—è –≤–∏–∑–≥—É–Ω—å—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[95833] = {
					"–•–∏—Ä—å—è", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[75437] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[100249] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –í–∞—Ä–∏—Å", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[28922] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[3636] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[59873] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[5761] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —à–∞—Ä–∫—É–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[28921] = {
					"–•–∞–¥—Ä–æ–Ω–æ–∫—Å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[91792] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω–∞—è –±—É—Ä–µ–π –≥–∏–¥—Ä–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[94960] = {
					"–•–∏–º–¥–∞–ª–ª—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[60033] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[12219] = {
					"–ö–æ–ª—é—á–∏–π —Ö–ª—ã—Å—Ç–æ–ª–∞–ø", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[95861] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[28546] = {
					"–ò–æ–Ω–∞—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[56448] = {
					"–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[28578] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[95834] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–º–∏—Å—Ç–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[30414] = {
					"–ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[3840] = {
					"–î—Ä—É–∏–¥-–∑–º–µ—è", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[96574] = {
					"–ó–∞–∫–∞–ª–µ–Ω–Ω—ã–π –±—É—Ä–µ–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[27635] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[26628] = {
					"–°–º–µ—Ä—Ç–µ—Ö–≤–∞—Ç –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[29713] = {
					"–°–ª–∞–¥'—Ä–∞–Ω—Å–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[59426] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[59458] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[26692] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –≥–∞—Ä–ø—É–Ω—â–∏–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[58590] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[75055] = {
					"–§–∞–∫–µ–ª—å—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91786] = {
					"–ü–µ—Å—á–∞–Ω–∞—è —É–ª–∏—Ç–∫–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[133870] = {
					"–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[3864] = {
					"–ö–æ–Ω—å —Å–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[95771] = {
					"–ì—Ä–æ–∑–Ω–∞—è —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[29119] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59746] = {
					"–¶–µ–Ω—Ç—É—Ä–∏–æ–Ω –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59778] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–µ—Ü", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[61448] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[61434] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[91008] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—à–≤—ã—Ä", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[31008] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[96247] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–ø–æ–ª–∑—É–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[56876] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–ø–µ—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[62360] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[36272] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[132051] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61392] = {
					"–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[26687] = {
					"–ì–æ—Ä—Ç–æ–∫ –ë–ª–µ–¥–Ω–æ–µ –ö–æ–ø—ã—Ç–æ", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[95772] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –∫–æ–≥–æ—Ç—å –Ω–æ—á–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[28920] = {
					"–í–µ–ª–∏–∫–∞–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[7800] = {
					"–ê–Ω–∂–∏–Ω–µ—Ä –¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[59835] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[59299] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[64446] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[100248] = {
					"–†–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞ –õ–∏—à–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[30285] = {
					"–ì–ª–∞–∑ –¢–∞–ª–¥–∞—Ä–∞–º–∞", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[29214] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —É–±–∏–π—Ü–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[59459] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[62795] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[29266] = {
					"–ö—Å–µ–≤–æ–∑–∑", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[59555] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56637] = {
					"–£–∫-–£–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[59309] = {
					"–ü–æ—Å–ª—É—à–Ω—ã–π –ø–µ—Å", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[127119] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[59801] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[106624] = {
					"–ì'–Ω–æ—Ä—Ü –ë–µ–∑—É–º–Ω—ã–π", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[62632] = {
					"–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[58756] = {
					"–í—ã–∑—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[129788] = {
					"–ú—è—Å–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[24690] = {
					"–ü—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π-–ø–æ–ª—É—Ç—Ä—É–ø", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[102295] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[29637] = {
					"–ö–æ–≤–∞—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[16124] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[106579] = {
					"–ë–ª—É–∂–¥–∞—é—â–∏–π –±–µ–∑–ª–∏–∫–∏–π", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[131318] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[29874] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[98173] = {
					"–ú–∏—Å—Ç–∏–∫ –°—Å–∞'–≤–µ", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[30667] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è –∫–æ–ª–¥—É–Ω—å—è", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[28547] = {
					"–ë—É—à—É—é—â–∏–π –≤–∏—Ö—Ä—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[130522] = {
					"–ú–æ—Ä—è—á–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[28579] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[48451] = {
					"–°—Ç–∞—Ä–∏–∫ –ö–ª—é–≤–∞—á", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[29832] = {
					"–ì–æ–ª–µ–º –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[28580] = {
					"–ù–µ–±–æ—Ö–æ–¥ –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[59494] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[27636] = {
					"–î–µ—Ç–µ–Ω—ã—à –ª–∞–∑—É—Ä–Ω–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[100250] = {
					"–ü–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ê—à–∏–æ–π", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[61442] = {
					"–ö—É–∞–π –ë–µ—Å—á–µ–ª–æ–≤–µ—á–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[29305] = {
					"–ú—É—Ä–∞–±–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[59460] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[26693] = {
					"–°–∫–∞–¥–∏ –ë–µ–∑–∂–∞–ª–æ—Å—Ç–Ω—ã–π", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[61398] = {
					"–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[96934] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–∑–≤–µ—Ä–æ–ª–æ–≤", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[61634] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[29826] = {
					"–¶–µ–ª–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[106669] = {
					"–£–∂–∞—Å–Ω–∞—è –∞–±–µ—Ä—Ä–∞—Ü–∏—è", -- [1]
					"–¢–∏—Ä–∏—Å—Ñ–∞–ª—å—Å–∫–∏–µ –ª–µ—Å–∞", -- [2]
				},
				[28835] = {
					"–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[63808] = {
					"–¢—É—Å–∫–ª—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[129559] = {
					"–î—É—ç–ª—è–Ω—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[58757] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –∏–∑ –ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[126918] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[30961] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[24683] = {
					"–ú–∞–≥-—Å—Ç—Ä–∞–∂–Ω–∏–∫ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[24777] = {
					"–ß–∞—Å–æ–≤–æ–π –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[31009] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —á–∞—Ä", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[24744] = {
					"–í–µ–∫—Å–∞–ª–∏—É—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[130011] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[92387] = {
					"–ë–∞—Ä–∞–±–∞–Ω—ã –≤–æ–π–Ω—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[22897] = {
					"–ü—Ä–∏–∑–≤–∞–Ω–Ω—ã–π –¢–æ—Ç–µ–º –Ω–µ–∏—Å—Ç–æ–≤—Å—Ç–≤–∞ –≤–µ—Ç—Ä–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[16064] = {
					"–¢–∞–Ω –ö–æ—Ä—Ç'–∞–∑–∑", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[59503] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[23960] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[99868] = {
					"–§–µ–Ω—Ä–∏—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[129599] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –Ω–æ–∂–µ–π –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[123680] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≠–π–¥–∏—Å", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[2630] = {
					"–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[30178] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –ø–∞—É–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[95939] = {
					"–°–∫—Ä–æ–≥-–≤–æ–ª–Ω–æ–¥–∞–≤", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[28684] = {
					"–ö—Ä–∏–∫'—Ç–∏—Ä –•—Ä–∞–Ω–∏—Ç–µ–ª—å –í—Ä–∞—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[26630] = {
					"–ö—Ä–æ–≤–æ—Ç—Ä–æ–ª–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[27431] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[59461] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[127106] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26620] = {
					"–°—Ç—Ä–∞–∂ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[75061] = {
					"–ú–æ–ª–æ–¥–æ–π –≤–µ–ø—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[28276] = {
					"–°—Ç–∞—Ä—à–∏–π –¥–µ—Ç–µ–Ω—ã—à –¥—Ä–∞–∫–æ–Ω–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[30338] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –ø–∞—É–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[61699] = {
					"–°–∏–∫'—Ç–∏–∫ –ñ–µ–ª—Ç–æ–∫—Ä—ã–ª", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[16216] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤—ã–µ –ú–µ—á–∏", -- [1]
					"–ù–∞–∫—Å—Ä–∞–º–∞—Å", -- [2]
				},
				[129600] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[59598] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[5055] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[74550] = {
					"–í–∞—è—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª–∞–±–∏—Ä–∏–Ω—Ç–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[58822] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[27655] = {
					"–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[27656] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —ç–Ω–µ—Ä–≥–∏–∏ –≠—Ä–µ–≥–æ—Å", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Blockade Encounter"] = 1,
				["Jaina Encounter"] = 6,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Extra Border"] = 2,
				["Combo Points"] = 3,
				["Attacking Specific Unit"] = 1,
				["Target Color"] = 3,
				["Aura Reorder"] = 2,
				["Hide Neutral Units"] = 1,
			},
			["captured_spells"] = {
				[50702] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç",
					["npcID"] = 27635,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "√íttis-Blackhand",
					["npcID"] = 0,
				},
				[49807] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 27431,
				},
				[54954] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∏–∫–∞—é—â–∞—è –±–æ–º–±–∞",
					["npcID"] = 29684,
				},
				[51917] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É—Ä–¥–∞–ª–∞–∫-–º—É—á–∏—Ç–µ–ª—å",
					["npcID"] = 26621,
				},
				[115151] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[156774] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—Ä–∞–ª–ª–º–∞—Ä—Å–∫–∏–π –º–∞–≥",
					["npcID"] = 150131,
				},
				[51054] = {
					["npcID"] = 27447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫",
					["encounterID"] = 2015,
				},
				[32736] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω",
					["npcID"] = 30666,
				},
				[32752] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ—Ä–∞–ª–∏–∞–Ω",
					["npcID"] = 0,
				},
				[193475] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—É—Å—é–∫–∞-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["npcID"] = 0,
				},
				[5143] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[58471] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –ª–æ–≤–µ—Ü",
					["npcID"] = 32191,
				},
				[20572] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ–≥–¥–∞–Ω—Å–∞–Ω—ã—á",
					["npcID"] = 0,
				},
				[58535] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30893,
				},
				[215598] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∞—É–Ω–ª–∏–Ω",
					["npcID"] = 0,
				},
				[36093] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26635,
				},
				[223143] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[45524] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[49712] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26637,
				},
				[113746] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[50799] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["encounterID"] = 1975,
				},
				[2098] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[49840] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–Ø–Ω—Ç–∞—Ä–Ω—ã–π –¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 27755,
				},
				[48849] = {
					["npcID"] = 27483,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥",
					["encounterID"] = 1977,
				},
				[233375] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–æ–∑—è",
					["npcID"] = 0,
				},
				[48018] = {
					["type"] = "BUFF",
					["source"] = "–§–ª–æ–≤–±–∏–∑–æ–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207289] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[52174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[304606] = {
					["source"] = "–§–∞—Ä–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272126] = {
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[216113] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[58504] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30660,
				},
				[308188] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø—Ä–±–∞–≥–∏—Ä",
					["npcID"] = 0,
				},
				[36094] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26635,
				},
				[190411] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49617] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["encounterID"] = 1975,
				},
				[103582] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∞–¥–∞–ª–∫–∞ —è—Ä–º–∞—Ä–∫–∏ –ù–æ–≤–æ–ª—É–Ω–∏—è",
					["npcID"] = 55382,
				},
				[81140] = {
					["npcID"] = 27597,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–ø–æ–≤–æ—Ä–æ—Ç–ª–∏–≤–æ–µ —Ç–µ–ª–æ",
					["encounterID"] = 1976,
				},
				[194249] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[22427] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24080,
				},
				[126664] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ç–ª–µ–Ω—Ö–∞–Ω—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[269576] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[315356] = {
					["source"] = "–í—É–ª—å–ø–µ—Ä—Å–∫–∏–π —Ä—é–∫–∑–∞–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162001,
				},
				[81141] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[9791] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24069,
				},
				[147193] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[193356] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[147833] = {
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1976,
				},
				[215479] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[215607] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∞—É–Ω–ª–∏–Ω",
					["npcID"] = 0,
				},
				[52719] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –Ω–∞–ª–µ—Ç—á–∏–∫",
					["npcID"] = 30668,
				},
				[50705] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ—Ç–µ–Ω—ã—à –ª–∞–∑—É—Ä–Ω–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞",
					["npcID"] = 27636,
				},
				[47668] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26635,
				},
				[212283] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[113942] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–º—Ä–∏–Ω—å",
					["npcID"] = 0,
				},
				[38621] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24082,
				},
				[193358] = {
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2016,
				},
				[1122] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[288509] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥–∏—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[123725] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[248473] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø—Ä–±–∞–≥–∏—Ä",
					["npcID"] = 0,
				},
				[289277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–≤–µ—Å—Ç–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[303344] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[266006] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª'—Ç–∞–Ω –ó–ª–æ–≤–æ–Ω–Ω—ã–π",
					["npcID"] = 135448,
				},
				[199754] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[244894] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121975,
				},
				[9080] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26620,
				},
				[47541] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[273424] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[234153] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[79865] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞—Ä—É–¥",
					["npcID"] = 47247,
				},
				[203975] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Kamdro-Azshara",
					["npcID"] = 0,
				},
				[212799] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[16345] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–Ω—É—Å–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å",
					["npcID"] = 26624,
				},
				[108446] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 17252,
				},
				[260881] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏–ª–∞—Ä–∏–π",
					["npcID"] = 0,
				},
				[1160] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[260242] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[318187] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[317420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ç–∂–∞–≥–µ—Ä–Ω–∞—É—Ç",
					["npcID"] = 0,
				},
				[301308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ—Ä—è–≤—ã–µ–ª–∞–ø–∫–∏",
					["npcID"] = 0,
				},
				[589] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[292359] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß–µ–±—É—Ä–µ–º–±–æ",
					["npcID"] = 0,
				},
				[253595] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[292360] = {
					["source"] = "–Ø–∑–∑–º–∞-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15578] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 27431,
				},
				[119381] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–µ—Ä—Å–∏—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[292361] = {
					["source"] = "–ú–¥–º—â–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[223929] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[300802] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—É—Å—é–∫–∞-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["npcID"] = 0,
				},
				[244901] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121985,
				},
				[58508] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30660,
				},
				[115098] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[292364] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ö—Ö–∏–∑",
					["npcID"] = 0,
				},
				[49461] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[26297] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1976,
				},
				[115546] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["encounterID"] = 2024,
				},
				[267558] = {
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[226105] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–∏–∫–∏–ø–∏–±–∞—Ä—É",
					["npcID"] = 0,
				},
				[35395] = {
					["encounterID"] = 2063,
					["source"] = "–ú–¥–º—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[59052] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[221886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—ç–¥–≥—Ä–∏–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[42780] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23961,
				},
				[285719] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∞—Ä–¥–∏-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[108194] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["encounterID"] = 1976,
				},
				[121557] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–≥–æ-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[51124] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[42972] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23956,
				},
				[285976] = {
					["source"] = "–§–∞—Ä–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Causclaws-Magtheridon",
					["npcID"] = 0,
				},
				[101545] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[54417] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–æ—Ä–∞–≥–≥",
					["npcID"] = 29316,
				},
				[45242] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–Ω–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[138130] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—É—Ö –∑–µ–º–ª–∏",
					["npcID"] = 69792,
				},
				[313088] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285979] = {
					["source"] = "–ê–Ω–Ω–∞–∏–∑–æ–±—ç–ª-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204242] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107428] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[115804] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–±—É—Ç–æ–≤–æ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[16739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ambergris-Kazzak",
					["npcID"] = 0,
				},
				[50933] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–ª–æ—Ç–æ—è–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫",
					["npcID"] = 27871,
				},
				[8921] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∏–ø–æ–≤–∏—á",
					["npcID"] = 0,
				},
				[210126] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ—Å—Ç–º–∏–º–∏",
					["npcID"] = 0,
				},
				[272940] = {
					["source"] = "–ê—Ñ–∏–Ω–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54226] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Å–µ–≤–æ–∑–∑",
					["npcID"] = 29266,
				},
				[49143] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[51253] = {
					["npcID"] = 27642,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –º–∞–º–æ–Ω—Ç",
					["encounterID"] = 2014,
				},
				[206930] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[46202] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–ª–æ—Ç–æ—è–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫",
					["npcID"] = 27871,
				},
				[100780] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[116189] = {
					["type"] = "DEBUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2024,
				},
				[318211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—á—ë–ª–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[49527] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[264760] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–Ω–ª–∏-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–∏–Ω–Ω–µ—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[228287] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[191587] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[303380] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[72968] = {
					["source"] = "–§–∞—Ä–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54962] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23956,
				},
				[48920] = {
					["npcID"] = 27483,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥",
					["encounterID"] = 1977,
				},
				[288548] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["npcID"] = 148797,
				},
				[214222] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264764] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–∏–Ω–Ω–µ—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[293664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò—Ä—á–∏—Å",
					["npcID"] = 0,
				},
				[85948] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[211793] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[235450] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ–µ–Ω—è—à–∞—Ö–º–∞—Ç–∏—Å",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "–§–∞—Ä–ª–∏–Ω—Å–µ—Ä-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22686] = {
					["npcID"] = 27483,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥",
					["encounterID"] = 1977,
				},
				[124503] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[49528] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[49592] = {
					["npcID"] = 27755,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–Ø–Ω—Ç–∞—Ä–Ω—ã–π –¥—Ä–∞–∫–æ–Ω",
					["encounterID"] = 2013,
				},
				[44605] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–Ω–µ–∂–∏–Ω–∫–∞",
					["npcID"] = 28153,
				},
				[139546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[25020] = {
					["type"] = "BUFF",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑–¥—É—Ö",
					["npcID"] = 27650,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2014,
				},
				[287790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®–∞–¥–æ—É–º–µ–ª—Ç–ø—Ä–æ",
					["npcID"] = 0,
				},
				[116768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[53365] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[287280] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[105771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[100784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[275773] = {
					["encounterID"] = 2063,
					["source"] = "–ú–¥–º—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[131493] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–®—ç–ø—ç—à",
					["npcID"] = 0,
				},
				[119582] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[6343] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[116705] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[49721] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26830,
				},
				[315161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ—Ä—è–≤—ã–µ–ª–∞–ø–∫–∏",
					["npcID"] = 0,
				},
				[124506] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[8690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–¥–µ–ª–æ—Å–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[57330] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[116706] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[18499] = {
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1976,
				},
				[13877] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[326419] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[205025] = {
					["source"] = "–ê—Å—Ç–∞–ª–∏–º-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273992] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[49722] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 24083,
				},
				[97462] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[54965] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23960,
				},
				[306474] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[294966] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ä–±–µ–∑–æ–≥–Ω—è",
					["npcID"] = 0,
				},
				[270670] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[195181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[96312] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—å—è–∫—É—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[97463] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[195949] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[27243] = {
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[53463] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[43265] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[348] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[137639] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[122783] = {
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1975,
				},
				[49723] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26830,
				},
				[43649] = {
					["npcID"] = 24201,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π",
					["encounterID"] = 2024,
				},
				[50842] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[313643] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[268887] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51002] = {
					["npcID"] = 27447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫",
					["encounterID"] = 2015,
				},
				[49020] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[202090] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[58291] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –¥–∏–≤–µ—Ä—Å–∞–Ω—Ç",
					["npcID"] = 31079,
				},
				[223829] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–≥–∞–≤–∞—Ç–Ω–∏–∫",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–≥–æ-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[32908] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24071,
				},
				[355] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["encounterID"] = 1976,
				},
				[158486] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–º–æ",
					["npcID"] = 0,
				},
				[712] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–µ—Ä–∞–ª–∏–∞–Ω",
					["npcID"] = 0,
				},
				[274774] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[13446] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫",
					["npcID"] = 24084,
				},
				[268893] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[296003] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥–∏—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[43650] = {
					["npcID"] = 24201,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π",
					["encounterID"] = 2024,
				},
				[301886] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[42723] = {
					["npcID"] = 23954,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["encounterID"] = 2025,
				},
				[5740] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[15572] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24078,
				},
				[251837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥–∏—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[15588] = {
					["npcID"] = 27645,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π —Ç—É—á–µ—Å–∫—Ä–µ–±",
					["encounterID"] = 2014,
				},
				[17877] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—É—Ä–∞–∑-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[280149] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[272733] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[268897] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["npcID"] = 0,
				},
				[5784] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ã–±—ã–¥—ã—â—å",
					["npcID"] = 0,
				},
				[271711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[180612] = {
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1974,
				},
				[115178] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[132404] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[7870] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ç–≤–∏–Ω—ç",
					["npcID"] = 1863,
				},
				[1459] = {
					["source"] = "–•–æ–∑—è–∏–Ω–µ—â–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[20243] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[116841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[43651] = {
					["npcID"] = 24200,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å",
					["encounterID"] = 2024,
				},
				[13750] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[42724] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24080,
				},
				[48894] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞–º–∞–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26639,
				},
				[60211] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24079,
				},
				[59220] = {
					["npcID"] = 27645,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π —Ç—É—á–µ—Å–∫—Ä–µ–±",
					["encounterID"] = 2014,
				},
				[26573] = {
					["encounterID"] = 2063,
					["source"] = "–ú–¥–º—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268904] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∞—Ä–∞–±—É-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[279902] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268905] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295248] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58517] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30892,
				},
				[297039] = {
					["source"] = "–ë—É–±–ª—è—Ç–∏–Ω–∞-–ì—Ä–æ–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[248646] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[115308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[108211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–≥–µ—Ä–∏—Å—å–Ω–æ–∂",
					["npcID"] = 0,
				},
				[50653] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 24083,
				},
				[57846] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23961,
				},
				[188290] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[12975] = {
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2026,
				},
				[48895] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞–º–∞–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26639,
				},
				[115181] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[54074] = {
					["type"] = "DEBUFF",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –º—É—Ä–ª–æ–∫",
					["npcID"] = 27649,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2014,
				},
				[122470] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[335151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[32216] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54202] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Å–µ–≤–æ–∑–∑",
					["npcID"] = 29266,
				},
				[298836] = {
					["source"] = "–ü—É—à–Ω–æ–π–±—É–±–ª–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116844] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[298837] = {
					["source"] = "–£—à–∞—Å—Ç—ã–π–±–ª–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236502] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∏–∫—Ä–∏",
					["npcID"] = 0,
				},
				[115310] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[16244] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24085,
				},
				[298839] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—ã—Ä–æ–≤–∏–∫",
					["npcID"] = 0,
				},
				[165532] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[107574] = {
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2026,
				},
				[264314] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–π—Ä–∏–æ–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–≤–∫–µ–π",
					["npcID"] = 0,
				},
				[264571] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[60181] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω–∞—è –∫–æ–ª–¥—É–Ω—å—è",
					["npcID"] = 30667,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞–∫—Å—Ç–µ–¥–∏",
					["npcID"] = 0,
				},
				[199804] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 2014,
				},
				[49184] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–æ—ç–ª—å—Ç–µ–ª—å",
					["npcID"] = 0,
				},
				[58455] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞",
					["npcID"] = 31007,
				},
				[166302] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 101527,
				},
				[152108] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä–º–∞–≥",
					["npcID"] = 0,
				},
				[51454] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä",
					["npcID"] = 27633,
				},
				[50495] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[281711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[280177] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä—Ç–∞—Ä–∞–Ω–≥–æ—Ä",
					["npcID"] = 0,
				},
				[300893] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[3110] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–µ–≥—Ä–∏–Ω–∏",
					["npcID"] = 416,
				},
				[305497] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–º–º–∞–∫–∫–∞–∞—Å–∏–∏-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[49696] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥—É—à –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26636,
				},
				[57912] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–±–æ—Ä–æ–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
					["npcID"] = 30837,
				},
				[781] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–µ—Ä–µ–Ω–∞—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[119085] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[783] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–∞–±—É-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[60182] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω–∞—è –∫–æ–ª–¥—É–Ω—å—è",
					["npcID"] = 30667,
				},
				[185358] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[51103] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[12544] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–±–∞ –ö–∏–ø—è—â–µ–µ –ù—É—Ç—Ä–æ",
					["npcID"] = 49573,
				},
				[194310] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[244693] = {
					["encounterID"] = 2063,
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 121975,
				},
				[58456] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞",
					["npcID"] = 31007,
				},
				[54396] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–æ—Ä–∞–≥–≥",
					["npcID"] = 29316,
				},
				[2139] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[50496] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[196741] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[298343] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[284277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–∑–∏—Ä–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[256459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∞–∞–π—Ö–∏–∏–ª–ª",
					["npcID"] = 0,
				},
				[281209] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[54844] = {
					["source"] = "–õ–µ–ø—Ä–∏–∫—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116849] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[101568] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[118000] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[8676] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[115315] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[313948] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1604] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –¥–µ—Ç–µ–Ω—ã—à",
					["npcID"] = 26674,
				},
				[207230] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[317020] = {
					["source"] = "–í—É—Ñ—Ñ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[132168] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[79639] = {
					["source"] = "–õ–µ–ø—Ä–∏–∫—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193359] = {
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2016,
				},
				[50721] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–Ω–µ–∂–∏–Ω–∫–∞",
					["npcID"] = 28153,
				},
				[275335] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[50785] = {
					["npcID"] = 27447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫",
					["encounterID"] = 2015,
				},
				[686] = {
					["source"] = "–û–±–¥–æ—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[192225] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[23922] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[42729] = {
					["npcID"] = 23954,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["encounterID"] = 2025,
				},
				[300761] = {
					["type"] = "BUFF",
					["source"] = "–•–æ—Ä–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300693] = {
					["type"] = "BUFF",
					["source"] = "–•–æ—Ä–æ",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293142] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198793] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–µ—Ä—Å–∏—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[146739] = {
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51121] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[197916] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[294935] = {
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267560] = {
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273947] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[111673] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[6552] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[70233] = {
					["source"] = "–ë–µ–ª—Ä–∏–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[134522] = {
					["source"] = "–≠–≤–∞–Ω–µ—Å—Å–µ–Ω—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292363] = {
					["source"] = "–§—É—Ç–¥–∂–æ–±",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[276840] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∏–Ω–∏–π–¥–∏–ø–ª–æ–º",
					["npcID"] = 0,
				},
				[6572] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[328136] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ—Ä–µ–Ω–∞—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[43930] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24079,
				},
				[50414] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤—Å–∞–¥–Ω–∏–∫ –Ω–∞ –Ω–µ—Ç–æ–ø—ã—Ä–µ –∏–∑ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26638,
				},
				[57723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–µ—Ä–µ–Ω–∞—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[57755] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[23161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[44212] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–≥—É—Ä–æ-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[50690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä",
					["npcID"] = 27633,
				},
				[113656] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[195901] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü—á—ë–ª–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[296059] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118922] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ—Ä–µ–Ω–∞—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[77575] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[101546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[50744] = {
					["npcID"] = 27651,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–≥–æ–Ω—å",
					["encounterID"] = 2014,
				},
				[29722] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[51007] = {
					["npcID"] = 27447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫",
					["encounterID"] = 2015,
				},
				[185311] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—É–∏–Ω–Ω–µ—Ç–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[51006] = {
					["npcID"] = 27447,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫",
					["encounterID"] = 2015,
				},
				[50717] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—É–¥–µ—Å–Ω–∏–∫-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü",
					["npcID"] = 27640,
				},
				[49668] = {
					["npcID"] = 26627,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å",
					["encounterID"] = 1976,
				},
				[316522] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277904] = {
					["type"] = "BUFF",
					["source"] = "–ê–≤—Ä–æ—É",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[115767] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[256456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–¥–µ–ª–æ—Å–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[250076] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[268954] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[191840] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[49380] = {
					["npcID"] = 26630,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä–æ–≤–æ—Ç—Ä–æ–ª–ª—å",
					["encounterID"] = 1974,
				},
				[9918] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ö–∞—Ä–≥",
					["npcID"] = 0,
				},
				[268955] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304611] = {
					["source"] = "–§–∞—Ä–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264352] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–º—É–Ω–∏–∑–º—Ç—è–Ω",
					["npcID"] = 0,
				},
				[57724] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–Ø—Ä–±–∞–≥–∏—Ä",
					["npcID"] = 0,
				},
				[164273] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–æ—ç–ª—å—Ç–µ–ª—å",
					["npcID"] = 0,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–µ—Ç–∏",
					["npcID"] = 0,
				},
				[297035] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ–∏—Ä–¥–µ—á–∫–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[51714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[49711] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26637,
				},
				[11426] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–Ω–¥–∞–ª–¥",
					["npcID"] = 0,
				},
				[264689] = {
					["source"] = "–°—è–æ—Ö—É–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[40504] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–Ω—É—Å–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å",
					["npcID"] = 26624,
				},
				[287062] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[193357] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[35570] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24085,
				},
				[279956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[295378] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Å—Ç–∞–Ω–æ–∫-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[195457] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[50774] = {
					["npcID"] = 27654,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î—Ä–∞–∫–æ—Å –î–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å",
					["encounterID"] = 2016,
				},
				[89792] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ß–µ–∫–æ–ª—ç",
					["npcID"] = 416,
				},
				[56222] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[203277] = {
					["source"] = "–§–∞–µ—Ä–≤–æ–ª–∫–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[205523] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[8269] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ–º–∞–Ω–¥–∏—Ä –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 27431,
				},
				[156779] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏—è—Ü–æ",
					["npcID"] = 0,
				},
				[244912] = {
					["encounterID"] = 2063,
					["source"] = "–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 122532,
				},
				[2383] = {
					["source"] = "–≠–ª–∏–∫—Ä–∏—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∏—Å—É—Å–∏–π",
					["npcID"] = 0,
				},
				[51363] = {
					["npcID"] = 27600,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π",
					["encounterID"] = 1976,
				},
				[115175] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[49381] = {
					["npcID"] = 0,
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1974,
				},
				[243431] = {
					["encounterID"] = 2063,
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 121975,
				},
				[288546] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["npcID"] = 148797,
				},
				[115450] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[34914] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[51587] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 28410,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–π—Ä–∏–æ–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[1715] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–†–æ—É–∫—ç–Ω-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[49637] = {
					["npcID"] = 26630,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä–æ–≤–æ—Ç—Ä–æ–ª–ª—å",
					["encounterID"] = 1974,
				},
				[288146] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ—Ä—á–∞–≥–∏–Ω-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[46968] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[1719] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196099] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—É—Ä–∞–∑-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[245990] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121975,
				},
				[58452] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å—à–∞—Ç–∞—Ä",
					["npcID"] = 0,
				},
				[55095] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[47528] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[196742] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[8679] = {
					["source"] = "–°–∏–ª—å–Ω—ã–π–±–æ–µ–º-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186401] = {
					["source"] = "–ú–¥–º—â–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119415] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Å—Ç–∞–ª–∏–º-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[50053] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 27447,
				},
				[319241] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[42772] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23956,
				},
				[48878] = {
					["npcID"] = 27483,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥",
					["encounterID"] = 1977,
				},
				[48707] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[5308] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[43667] = {
					["npcID"] = 23953,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∏–Ω—Ü –ö–µ–ª–µ—Å–µ—Ç",
					["encounterID"] = 2026,
				},
				[58461] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫",
					["npcID"] = 30961,
				},
				[13738] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–º–µ—Ä—Ç–µ—Ö–≤–∞—Ç –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26628,
				},
				[185763] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[225788] = {
					["source"] = "–ú–¥–º—â–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280735] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[203538] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–¥–æ–ø–∞–ª–∞–¥–æ—Å",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "–•–æ–∑—è–∏–Ω–µ—â–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186403] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∏–Ω–∏–π–¥–∏–ø–ª–æ–º",
					["npcID"] = 0,
				},
				[199373] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö",
					["npcID"] = 24207,
				},
				[51588] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 28410,
				},
				[299662] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–µ—Ç–∏",
					["npcID"] = 0,
				},
				[48583] = {
					["npcID"] = 24200,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å",
					["encounterID"] = 2024,
				},
				[199603] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°—Ç–µ–ø",
					["npcID"] = 0,
				},
				[195182] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[296138] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–π—Ä–∏–æ–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[48743] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[97116] = {
					["source"] = "–ë–∏–ª—å–±–æ–≥–∏–º-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[299664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–Ω–¥–∞—Ä–∏–æ–Ω",
					["npcID"] = 0,
				},
				[290577] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–≥–∞–Ω–∏—â–µ",
					["npcID"] = 149555,
				},
				[50572] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç",
					["npcID"] = 27635,
				},
				[312107] = {
					["source"] = "–°—è–æ—Ö—É–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288091] = {
					["type"] = "DEBUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1966] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[16102] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–ª–¥—É–Ω—å—è-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü",
					["npcID"] = 27639,
				},
				[224001] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—É—Ä–∞–∑-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–æ–ª–∞–Ω-–°—Ç—Ä–∞–∂–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[210065] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏–≥—Ä—É–ª—å–∫–∞",
					["npcID"] = 0,
				},
				[12042] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[288158] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–±—É—Ç–æ–≤–æ-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[17962] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[166740] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥'—Ö–∞—Ä-–≤—Å–∞–¥–Ω–∏–∫",
					["npcID"] = 144323,
				},
				[58462] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω–∞—è —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —á–∞—Ä",
					["npcID"] = 31009,
				},
				[208683] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[101643] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[30283] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[201787] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[49703] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–Ω—É—Å–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å",
					["npcID"] = 26624,
				},
				[295367] = {
					["type"] = "DEBUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263725] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[51110] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[50566] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç",
					["npcID"] = 27635,
				},
				[210320] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51460] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[49639] = {
					["npcID"] = 26630,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä–æ–≤–æ—Ç—Ä–æ–ª–ª—å",
					["encounterID"] = 1974,
				},
				[256739] = {
					["source"] = "–°–µ–≥—É–Ω—á–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118779] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184362] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1784] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[297412] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48265] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[42702] = {
					["npcID"] = 23970,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—Ä–∞–π–∫—É–ª-—Å–∫–µ–ª–µ—Ç",
					["encounterID"] = 2026,
				},
				[43757] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24079,
				},
				[79468] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏–≥—Ä—É–ª—å–∫–∞",
					["npcID"] = 0,
				},
				[193315] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[49037] = {
					["npcID"] = 26631,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å",
					["encounterID"] = 1976,
				},
				[275672] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[80354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–∏—Ñ–∏–Ω—Å-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["npcID"] = 0,
				},
				[317065] = {
					["source"] = "–£—à–∞—Å—Ç—ã–π–±–ª–∞–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295838] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[22888] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116670] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[287771] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[184364] = {
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1976,
				},
				[319919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–≤—ã—ë–∂–∏–≤–∞–π—Å—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[197919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[290469] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–µ–π–Ω–¥–∞",
					["npcID"] = 0,
				},
				[115008] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[116095] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[193316] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[48873] = {
					["npcID"] = 27483,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥",
					["encounterID"] = 1977,
				},
				[56641] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[50535] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç",
					["npcID"] = 27635,
				},
				[49544] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[49576] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[295842] = {
					["source"] = "–°—è–æ—Ö—É–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198304] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—É–∞—Ä–ª–∞",
					["npcID"] = 0,
				},
				[49704] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –ø–∞—É–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫",
					["npcID"] = 26625,
				},
				[65081] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[196770] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[119996] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[49708] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –ø–∞—É–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫",
					["npcID"] = 26625,
				},
				[252396] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—Ä–∫–≤—É–¥–∏-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[124280] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[6253] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26637,
				},
				[160597] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–®–∞–ª—Ñ–µ–π–Ω–∞—è",
					["npcID"] = 0,
				},
				[184367] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[50024] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–Ω—Ç–∞—Ä–Ω—ã–π –¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 27755,
				},
				[5246] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[58688] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∏–Ω–∏–≥–æ—Å–∞",
					["npcID"] = 31134,
				},
				[16001] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤—Å–∞–¥–Ω–∏–∫ –Ω–∞ –Ω–µ—Ç–æ–ø—ã—Ä–µ –∏–∑ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26638,
				},
				[164547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–º–º–∞–∫–∫–∞–∞—Å–∏–∏-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[91800] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–æ–ª–æ—Ç–æ–ø—Ä—ã–≥",
					["npcID"] = 26125,
				},
				[242551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–∞–º–æ",
					["npcID"] = 0,
				},
				[51271] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[2645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Å–µ–∫—Ç—É—Å",
					["npcID"] = 0,
				},
				[23881] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[124217] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏–≥—Ä—É–ª—å–∫–∞",
					["npcID"] = 0,
				},
				[60158] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –Ω–∞–ª–µ—Ç—á–∏–∫",
					["npcID"] = 30668,
				},
				[50440] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[277179] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[5302] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[199203] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ–≥–¥–∞–Ω—Å–∞–Ω—ã—á",
					["npcID"] = 0,
				},
				[281721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[49356] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[49609] = {
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1975,
				},
				[44425] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[215387] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–∞—É–Ω–ª–∏–Ω",
					["npcID"] = 0,
				},
				[50728] = {
					["type"] = "BUFF",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–ª–∫",
					["npcID"] = 27644,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2014,
				},
				[258920] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–µ—Ä—Å–∏—á–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[77535] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[48778] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[267612] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[157736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[3714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–∏—É—Å–∞–∫—É",
					["npcID"] = 0,
				},
				[465] = {
					["source"] = "–ü–ø–∞–ª–∞–¥–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268899] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø—Ä–±–∞–≥–∏—Ä",
					["npcID"] = 0,
				},
				[47346] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å",
					["npcID"] = 26631,
				},
				[1856] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[49034] = {
					["npcID"] = 26631,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å",
					["encounterID"] = 1976,
				},
				[51112] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[20473] = {
					["encounterID"] = 2063,
					["source"] = "–ú–¥–º—â–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279742] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ–π—Ä–µ–Ω—Å–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[50089] = {
					["npcID"] = 26631,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å",
					["encounterID"] = 1976,
				},
				[300714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–º–º–∞–∫–∫–∞–∞—Å–∏–∏-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[90328] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 54320,
				},
				[55078] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù—É–∏–æ—Ç–ª–∏—á–Ω–æ—É",
					["npcID"] = 0,
				},
				[51336] = {
					["npcID"] = 27654,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î—Ä–∞–∫–æ—Å –î–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å",
					["encounterID"] = 2016,
				},
				[109128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[274373] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[102417] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Ä–∏—Å–Ω–µ–±–µ—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[310690] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[277187] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[315176] = {
					["type"] = "DEBUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50537] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[81340] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "–•–æ–∑—è–∏–Ω–µ—â–µ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196608] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[31551] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24071,
				},
				[207167] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["encounterID"] = 1977,
				},
				[50729] = {
					["npcID"] = 27644,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–ª–∫",
					["encounterID"] = 2014,
				},
				[195627] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[45181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù—ç—Ä–æ",
					["npcID"] = 0,
				},
				[43664] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24082,
				},
				[319237] = {
					["source"] = "–°—è–æ—Ö—É–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42705] = {
					["type"] = "BUFF",
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["npcID"] = 23954,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2025,
				},
				[19434] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–µ–∑—Å–º–∞–∑–∫–∏",
					["npcID"] = 0,
				},
				[74221] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[55077] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–∑–±–µ—à–µ–Ω–Ω—ã–π –≤–æ—Ä–≥",
					["npcID"] = 29735,
				},
				[165961] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—á—ë–ª–æ—á–∫–∞",
					["npcID"] = 0,
				},
				[2565] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Cainetrain-Stormscale",
					["npcID"] = 0,
				},
				[292463] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[138927] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ–π—Ä–µ–Ω—Å–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[58470] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –ª–æ–≤–µ—Ü",
					["npcID"] = 32191,
				},
				[109132] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[12051] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ–µ–Ω—è—à–∞—Ö–º–∞—Ç–∏—Å",
					["npcID"] = 0,
				},
				[164812] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199721] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–î–∂–µ–∫–∫–æ—Ä",
					["npcID"] = 0,
				},
				[50045] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¶–µ–Ω—Ç—Ä–∏—Ñ—É–∂–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ",
					["npcID"] = 27641,
				},
				[54149] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195630] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[221771] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[115078] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["encounterID"] = 2025,
				},
				[317859] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[170950] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[203814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ–π—Ä–µ–Ω—Å–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[280776] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121536] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ–≥–æ-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[228128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[34189] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–µ–º–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç –ú–∞—Ä—Ä–∞",
					["npcID"] = 24137,
				},
				[279754] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[79849] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–∏–¥–∂–∞",
					["npcID"] = 47248,
				},
				[50730] = {
					["type"] = "BUFF",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–≥—Ä",
					["npcID"] = 27647,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2014,
				},
				[117828] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[196782] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[43665] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24071,
				},
				[290512] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[124682] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[304056] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315787] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245631] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 121985,
				},
				[244736] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–ª–∞–º–µ–Ω–Ω—ã–π —Å–ª–µ–¥",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 122581,
				},
				[51240] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26830,
				},
				[115399] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["encounterID"] = 2014,
				},
				[160331] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—å—è–∫—É—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[108366] = {
					["source"] = "–î–æ–≥–º–∞—Ä–∞—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∏—Å—É—Å–∏–π",
					["npcID"] = 0,
				},
				[19483] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–Ω—Ñ–µ—Ä–Ω–∞–ª",
					["npcID"] = 89,
				},
				[6673] = {
					["source"] = "–î—ç—Å–ø–∞—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[12323] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–µ–π–ª—Ä–∏–æ—É–Ω",
					["npcID"] = 0,
				},
				[117952] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[58531] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30695,
				},
				[50379] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å–∫—Ä–µ—Å–∏—Ç–µ–ª—å –∏–∑ –ü–ª–µ—Ç–∏",
					["npcID"] = 26626,
				},
				[115080] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[236298] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[43931] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 24083,
				},
				[214968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì–æ–ª–∏–∫–æ–≤—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[216411] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49548] = {
					["npcID"] = 26632,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞",
					["encounterID"] = 1975,
				},
				[7744] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[191837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[58526] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30892,
				},
				[236299] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[50731] = {
					["npcID"] = 27647,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–≥—Ä",
					["encounterID"] = 2014,
				},
				[73841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª–∫",
					["npcID"] = 39364,
				},
				[322729] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞—á–∏–º–æ–ª–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[164545] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–º–º–∞–∫–∫–∞–∞—Å–∏–∏-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[49836] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54983] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24082,
				},
				[122] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[42771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 23961,
				},
				[199600] = {
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2015,
				},
				[269279] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119611] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[1953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[32223] = {
					["source"] = "–û–¥–∏–Ω–æ–∫–∏–π—á–µ–ª-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280746] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–∏—Å–∞–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[50732] = {
					["npcID"] = 27648,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò—Ä—Ä–µ–∞–ª—å–Ω–∞—è –Ω–∞–≥–∞",
					["encounterID"] = 2014,
				},
				[116680] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[51243] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç–∞—Ä—à–∏–π –¥–µ—Ç–µ–Ω—ã—à –¥—Ä–∞–∫–æ–Ω–∞",
					["npcID"] = 28276,
				},
				[980] = {
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116858] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–≤–∞–ª—å–±–µ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[295368] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[58532] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞",
					["npcID"] = 30695,
				},
				[280184] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[123586] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[297034] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "√íttis-Blackhand",
					["npcID"] = 0,
				},
				[50476] = {
					["npcID"] = 27655,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["encounterID"] = 2014,
				},
				[38232] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24085,
				},
				[124275] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–∞–ø—Ä–∏—Ç–æ–º–∏–π",
					["npcID"] = 0,
				},
				[49549] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°—Ç—Ä–∞–∂ –ª–∞–∑—É—Ä–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞",
					["npcID"] = 27638,
				},
				[314040] = {
					["type"] = "BUFF",
					["source"] = "–ú–¥–º—â–∏–∫",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49613] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["encounterID"] = 1975,
				},
				[168657] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—å—è–∫—É—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[8599] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["npcID"] = 24078,
				},
				[55847] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥—É—à –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26636,
				},
				[318216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[34428] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49805] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—Å–∫—Ä–µ—Å–∏—Ç–µ–ª—å –∏–∑ –ü–ª–µ—Ç–∏",
					["npcID"] = 26626,
				},
				[85288] = {
					["encounterID"] = 2063,
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[42708] = {
					["npcID"] = 23954,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["encounterID"] = 2025,
				},
				[42740] = {
					["npcID"] = 23960,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["encounterID"] = 2026,
				},
				[295373] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[247483] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 69792,
				},
				[129597] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–æ—Ñ–∏—Ç-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[33661] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26635,
				},
				[54138] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö—Å–µ–≤–æ–∑–∑",
					["npcID"] = 29266,
				},
				[11327] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[154797] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—É—Å—é–∫–∞-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["npcID"] = 0,
				},
				[6788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[17] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–∞–∑—É—Ä—å—è",
					["npcID"] = 0,
				},
				[49198] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å",
					["npcID"] = 26631,
				},
				[21562] = {
					["source"] = "–ö–∏–º–∞–Ω—à–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[111759] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∏—Ñ–∏–Ω—Å-–î—Ä–∞–∫–æ–Ω–æ–º–æ—Ä",
					["npcID"] = 0,
				},
				[121253] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ–ª—è–∞–Ω—Ä–æ–ª",
					["npcID"] = 0,
				},
				[266030] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[98414] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–µ–ª–ª–∏—É—Å",
					["npcID"] = 0,
				},
				[31589] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[207203] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[270058] = {
					["source"] = "–í—É—Ñ—Ñ–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58693] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∏–Ω–∏–≥–æ—Å–∞",
					["npcID"] = 31134,
				},
				[22703] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[50573] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞–∑—É—Ä–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä",
					["npcID"] = 27633,
				},
				[202164] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–¥–µ—Ä—É—Ç–µ–±–µ-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[47568] = {
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 1974,
				},
				[2983] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[49678] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É—Ä–¥–∞–ª–∞–∫-–º—É—á–∏—Ç–µ–ª—å",
					["npcID"] = 26621,
				},
				[49710] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Ç—Ä–æ—à–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏",
					["npcID"] = 26641,
				},
				[69820] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–∞–ª–æ–¥–æ—Å–∏–∫",
					["npcID"] = 0,
				},
				[315584] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–º—Ä–∏—ç–ª—å",
					["npcID"] = 0,
				},
				[190784] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú—ç–¥–≥—Ä–∏–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[49838] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–Ø–Ω—Ç–∞—Ä–Ω—ã–π –¥—Ä–∞–∫–æ–Ω",
					["npcID"] = 27755,
				},
				[324536] = {
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[196937] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–∞–∑–∑–∞—Ä–¥-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[50715] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–ª–¥—É–Ω—å—è-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü",
					["npcID"] = 27639,
				},
				[44604] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–Ω–µ–∂–∏–Ω–∫–∞",
					["npcID"] = 28153,
				},
				[49998] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–∏—à–∞–ø–∞–ª—ã—á-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[275689] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304612] = {
					["source"] = "–§–∞—Ä–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53813] = {
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º",
					["npcID"] = 27655,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2014,
				},
				[251836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–æ—Ö–ª—ã–π–ø—ç—Ü",
					["npcID"] = 0,
				},
				[236645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä—Ç–∞—Ä–∞–Ω–≥–æ—Ä",
					["npcID"] = 0,
				},
				[312411] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–∞—á–∏–º–æ–ª–∞–ª–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[316099] = {
					["type"] = "DEBUFF",
					["source"] = "–ü—Ä–æ—Å—Ç–æ—Ç—è–Ω",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[63560] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ú–µ–Ω—Ñ–∏–ª–æ—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[270576] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[295384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–æ–∫–∞–¥—ã—á-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[40120] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–∞—Ä–∞–±—É-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[80240] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–∞—Ä–±–∞—Ç–æ—Ä–∏–Ω-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[212653] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä—Ç–∞—Ä–∞–Ω–≥–æ—Ä",
					["npcID"] = 0,
				},
				[48400] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–¥—è–Ω–∞—è –º–æ–≥–∏–ª–∞",
					["npcID"] = 23965,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2026,
				},
				[132403] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Å—É–∫–µ",
					["npcID"] = 0,
				},
				[58694] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–∏–Ω–∏–≥–æ—Å–∞",
					["npcID"] = 31134,
				},
				[300809] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏—Ç—Ä–∞–∏—Ä",
					["npcID"] = 0,
				},
				[85739] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199483] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ–π—Å–º—É—Ä-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[290121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ambergris-Kazzak",
					["npcID"] = 0,
				},
				[48792] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü—Ä–∂–Ω–∞",
					["npcID"] = 0,
				},
				[288075] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–º—Ä–∏—ç–ª—å",
					["npcID"] = 0,
				},
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.15",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateSelfAlpha"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateOtherTopInset"] = "0.08",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowAll"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "1",
				["nameplateGlobalScale"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["login_counter"] = 281,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["aura_y_offset"] = 5,
			["use_ui_parent"] = true,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LastHookEdited"] = "",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["PlaterCore"] = 1,
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 136207,
					["LastHookEdited"] = "",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133689,
					["LastHookEdited"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 55,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1548117267,
					["PlaterCore"] = 1,
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LastHookEdited"] = "",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 220,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Time"] = 1548612537,
					["PlaterCore"] = 1,
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LastHookEdited"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1547993111,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["LastHookEdited"] = "",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 37,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1549827281,
					["PlaterCore"] = 1,
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 2446016,
					["LastHookEdited"] = "",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1548354524,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 135426,
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["Name"] = "Current Target Color [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 878211,
					["LastHookEdited"] = "",
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
				}, -- [15]
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["ui_parent_scale_tune"] = 1,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Explosion Affix M+"] = 3,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Color Change"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Unit Power"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["patch_version"] = 12,
			["number_region_first_run"] = true,
			["aura2_x_offset"] = 0,
		},
		["pltr"] = {
			["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
			["script_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 156,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["Icon"] = 135996,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Unit - Important [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1537884697,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1581121990,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 400,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Prio"] = 99,
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Desc"] = "Add the buff name in the trigger box.",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
						210294, -- [7]
						642, -- [8]
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1550151794,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 391,
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
				}, -- [3]
				{
					["Enabled"] = true,
					["Revision"] = 324,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["Author"] = "Bombad£o-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Name"] = "Explosion Affix M+ [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Time"] = 1540663131,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
				}, -- [4]
				{
					["Enabled"] = true,
					["Revision"] = 232,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Author"] = "Tercioo-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Add the debuff name in the trigger box.",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1538429739,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1550151761,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 570,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Cast - Big Alert [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1550151769,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 377,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1550151754,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 107,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
				}, -- [8]
				{
					["Enabled"] = true,
					["Revision"] = 59,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["Name"] = "Color Change [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1543253273,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1585152326,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 165,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 1,
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["Name"] = "Aura - Border Color [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1543680853,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 3,
					["Desc"] = "Show the energy amount above the nameplate",
					["Name"] = "UnitPower [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Time"] = 1539015649,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 171,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Author"] = "Izimode-Azralon",
					["ScriptType"] = 2,
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539201849,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [13]
				{
					["Enabled"] = true,
					["Revision"] = 190,
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Author"] = "Celian-Sylvanas",
					["ScriptType"] = 1,
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Name"] = "Fixate [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["Time"] = 1539187387,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 194,
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Icon"] = 841383,
					["Author"] = "Tecno-Azralon",
					["ScriptType"] = 3,
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Name"] = "Fixate On You [Plater]",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Time"] = 1543250950,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Rupture = self.Rupture or Plater.CreateIconGlow (self)\n    envTable.Rupture = self.Rupture\n    \n    \nend\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Rupture:Hide()\n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < 7.1) then\n        envTable.Rupture:Show() \n        \n        \n    else\n        envTable.Rupture:Hide()\n    end\n    \nend",
					["Time"] = 1594833774,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Rupture = self.Rupture or Plater.CreateIconGlow (self)\n    envTable.Rupture = self.Rupture\n    \n    \nend\n\n\n\n",
					["Icon"] = 132302,
					["Enabled"] = true,
					["Revision"] = 81,
					["Options"] = {
					},
					["Author"] = "Ludw√¨g-Blackmoore",
					["Desc"] = "",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < 7.1) then\n        envTable.Rupture:Show() \n        \n        \n    else\n        envTable.Rupture:Hide()\n    end\n    \nend",
					["Prio"] = 99,
					["SpellIds"] = {
						1943, -- [1]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Rupture Pandemic Glow",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Rupture:Hide()\n    \nend",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Garrote = self.Garrote or Plater.CreateIconGlow (self)\n    envTable.Garrote = self.Garrote\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Garrote:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.Garrote:Show() \n        \n        \n    else\n        envTable.Garrote:Hide()\n    end\n    \nend",
					["Time"] = 1581121997,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Garrote = self.Garrote or Plater.CreateIconGlow (self)\n    envTable.Garrote = self.Garrote\n    \nend\n\n\n",
					["Icon"] = 132297,
					["Enabled"] = true,
					["Revision"] = 115,
					["Author"] = "Ludw√¨g-Blackmoore",
					["Desc"] = "",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.Garrote:Show() \n        \n        \n    else\n        envTable.Garrote:Hide()\n    end\n    \nend",
					["Prio"] = 99,
					["SpellIds"] = {
						703, -- [1]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Garrote Pandemic Glow",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Garrote:Hide()\n    \nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "\nfunction (self, unitId, unitFrame, envTable)\n    \n    self.Latent = self.Latent or Plater.CreateIconGlow (self)\n    envTable.Latent = self.Latent\nend\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Latent:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    for i = 1,40 do\n        local name,_ , count = UnitDebuff(unitId,i , \"player\")\n        \n        \n        if name == \"–ú–µ–¥–ª–µ–Ω–Ω—ã–π —è–¥\" then\n            local Lat  = 10 \n            if count >= Lat  then\n                envTable.Latent:Show()\n            else\n                envTable.Latent:Hide()\n            end\n            break\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1582130390,
					["Temp_ConstructorCode"] = "\nfunction (self, unitId, unitFrame, envTable)\n    \n    self.Latent = self.Latent or Plater.CreateIconGlow (self)\n    envTable.Latent = self.Latent\nend\n\n\n\n",
					["Icon"] = 1033905,
					["Enabled"] = false,
					["Revision"] = 335,
					["Author"] = "Ludw√¨g-Blackmoore",
					["Desc"] = "",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    for i = 1,40 do\n        local name,_ , count = UnitDebuff(unitId,i , \"player\")\n        \n        \n        if name == \"–ú–µ–¥–ª–µ–Ω–Ω—ã–π —è–¥\" then\n            local Lat  = 10 \n            if count >= Lat  then\n                envTable.Latent:Show()\n            else\n                envTable.Latent:Hide()\n            end\n            break\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["SpellIds"] = {
						273286, -- [1]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Latent:Hide()\nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Latent Poison Glow",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.SWP = self.SWP or Plater.CreateIconGlow (self)\n    envTable.SWP = self.SWP \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SWP:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.SWP:Show() \n        \n        \n    else\n        envTable.SWP:Hide()\n    end\n    \nend\n\n\n",
					["Time"] = 1585152331,
					["Url"] = "https://wago.io/xOaQaujGr/2",
					["Icon"] = 136207,
					["Enabled"] = true,
					["Revision"] = 113,
					["Author"] = "Ludw√¨g-Blackmoore",
					["NpcNames"] = {
					},
					["Desc"] = "",
					["Name"] = "SWord Pain Pandemic Glow",
					["Prio"] = 99,
					["SpellIds"] = {
						589, -- [1]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.SWP = self.SWP or Plater.CreateIconGlow (self)\n    envTable.SWP = self.SWP \n    \n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < envTable._Duration*0.3) then\n        envTable.SWP:Show() \n        \n        \n    else\n        envTable.SWP:Hide()\n    end\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SWP:Hide()\n    \nend\n\n\n",
				}, -- [19]
			},
			["aura_timer_text_color"] = {
				nil, -- [1]
				0.964705882352941, -- [2]
				0.925490196078432, -- [3]
			},
			["pet_height_scale"] = 0.949999988079071,
			["aura_x_offset"] = 0,
			["first_run3"] = true,
			["extra_icon_show_purge"] = true,
			["transparency_behavior"] = 3,
			["ui_parent_scale_tune"] = 1.059999942779541,
			["cast_statusbar_spark_alpha"] = 0.8299999833106995,
			["aura_stack_color"] = {
				nil, -- [1]
				0.945098039215686, -- [2]
				0.937254901960784, -- [3]
			},
			["aura2_y_offset"] = -37.5,
			["aura_timer_text_anchor"] = {
				["y"] = 7,
				["x"] = -7,
			},
			["castbar_framelevel"] = 0,
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Noto Sans Regular",
					["power_percent_text_size"] = 21,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						nil, -- [1]
						6, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 4,
					},
					["percent_text_size"] = 13,
					["castbar_enabled"] = false,
					["power_percent_text_anchor"] = {
						["y"] = 45.41999816894531,
					},
					["mana"] = {
						148, -- [1]
						1, -- [2]
					},
					["cast_incombat"] = {
						nil, -- [1]
						6, -- [2]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Noto Sans Regular",
					["click_through"] = true,
					["health_incombat"] = {
						149, -- [1]
						14, -- [2]
					},
					["health"] = {
						149, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["percent_text_font"] = "Noto Sans Regular",
					["power_percent_text_font"] = "Noto Sans Regular",
					["level_text_font"] = "Accidental Presidency",
					["mana_incombat"] = {
						148, -- [1]
						1, -- [2]
					},
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						82, -- [1]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 2,
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						82, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "Accidental Presidency",
					["actorname_text_font"] = "Accidental Presidency",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_enabled"] = true,
					["all_names"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["actorname_text_outline"] = "NONE",
					["actorname_text_anchor"] = {
						["y"] = 12,
						["side"] = 12,
					},
					["spellname_text_font"] = "Accidental Presidency",
					["percent_text_size"] = 10,
					["actorname_text_size"] = 11,
					["only_damaged"] = false,
					["buff_frame_y_offset"] = 0,
					["spellpercent_text_size"] = 11,
					["quest_enabled"] = true,
					["percent_text_font"] = "Accidental Presidency",
					["spellname_text_size"] = 11,
					["big_actorname_text_font"] = "Accidental Presidency",
					["health_incombat"] = {
						81, -- [1]
						16, -- [2]
					},
					["health"] = {
						82, -- [1]
						14, -- [2]
					},
					["spellpercent_text_enabled"] = true,
					["level_text_alpha"] = 0.5,
					["big_actortitle_text_outline"] = "OUTLINE",
					["power_percent_text_font"] = "Accidental Presidency",
					["level_text_enabled"] = true,
				},
				["friendlynpc"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["big_actortitle_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["level_text_size"] = 8,
					["big_actorname_text_font"] = "Accidental Presidency",
					["power_percent_text_font"] = "Accidental Presidency",
					["cast"] = {
						122, -- [1]
						8, -- [2]
					},
					["percent_text_ooc"] = true,
					["spellname_text_font"] = "Accidental Presidency",
					["big_actortitle_text_size"] = 10,
					["actorname_text_size"] = 11,
					["percent_text_size"] = 10,
					["level_text_alpha"] = 0.5,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["spellpercent_text_enabled"] = true,
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 2,
						["side"] = 10,
					},
					["percent_text_font"] = "Accidental Presidency",
					["percent_text_enabled"] = true,
					["relevance_state"] = 3,
					["cast_incombat"] = {
						122, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellpercent_text_size"] = 11,
					["big_actorname_text_size"] = 10,
					["spellname_text_size"] = 11,
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["actorname_text_anchor"] = {
						["y"] = 12,
						["side"] = 12,
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "Accidental Presidency",
					["level_text_enabled"] = true,
				},
				["enemyplayer"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellname_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["level_text_size"] = 8,
					["spellpercent_text_size"] = 12,
					["big_actorname_text_font"] = "Accidental Presidency",
					["cast"] = {
						140, -- [1]
						14, -- [2]
					},
					["all_names"] = true,
					["actorname_text_size"] = 13,
					["big_actortitle_text_size"] = 10,
					["level_text_alpha"] = 0.5,
					["percent_show_percent"] = false,
					["actorname_text_anchor"] = {
						["y"] = 12,
						["side"] = 12,
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["percent_text_size"] = 12,
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 2,
						["side"] = 10,
					},
					["percent_text_font"] = "RussoOne",
					["percent_text_outline"] = "NONE",
					["health_incombat"] = {
						140, -- [1]
						21, -- [2]
					},
					["quest_enabled"] = true,
					["spellname_text_outline"] = "OUTLINE",
					["power_percent_text_font"] = "Accidental Presidency",
					["big_actorname_text_size"] = 10,
					["spellname_text_size"] = 15,
					["health"] = {
						140, -- [1]
						21, -- [2]
					},
					["spellname_text_anchor"] = {
						["side"] = 3,
					},
					["cast_incombat"] = {
						140, -- [1]
						14, -- [2]
					},
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "RussoOne",
					["big_actortitle_text_font"] = "Accidental Presidency",
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 13,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						140, -- [1]
					},
					["spellpercent_text_size"] = 12,
					["actorname_text_spacing"] = 12,
					["level_text_alpha"] = 0.5,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 2,
					},
					["percent_text_size"] = 12,
					["level_text_anchor"] = {
						["y"] = 0,
						["x"] = 2,
						["side"] = 10,
					},
					["percent_text_font"] = "RussoOne",
					["big_actorname_text_font"] = "Accidental Presidency",
					["cast_incombat"] = {
						140, -- [1]
						10, -- [2]
					},
					["percent_show_percent"] = false,
					["spellname_text_font"] = "Accidental Presidency",
					["percent_text_outline"] = "NONE",
					["health_incombat"] = {
						140, -- [1]
						14, -- [2]
					},
					["spellname_text_size"] = 15,
					["health"] = {
						140, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = -0.09000396728515625,
						["side"] = 3,
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_anchor"] = {
						["side"] = 11,
					},
					["level_text_font"] = "RussoOne",
					["actorname_text_anchor"] = {
						["y"] = 12,
						["side"] = 12,
					},
				},
			},
			["health_selection_overlay"] = "ElvUI Gloss",
			["aura_y_offset"] = 12.44999694824219,
			["extra_icon_width"] = 17,
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[1044] = true,
					[1022] = true,
					[209859] = true,
					[210294] = true,
					[642] = true,
				},
			},
			["hook_auto_imported"] = {
				["Jaina Encounter"] = 6,
				["Targetting Alpha"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Attacking Specific Unit"] = 1,
				["Blockade Encounter"] = 1,
				["Execute Range"] = 1,
				["Cast Bar Icon Config"] = 1,
				["Combo Points"] = 3,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 2,
				["Reorder Nameplate"] = 4,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_bgcolor"] = {
				0.1137254901960784, -- [1]
				0.1137254901960784, -- [2]
				0.1137254901960784, -- [3]
				0.5800000131130219, -- [4]
			},
			["first_run2"] = true,
			["aura_width_personal"] = 23,
			["minor_width_scale"] = 0.8999999761581421,
			["health_cutoff_extra_glow"] = true,
			["health_animation_time_dilatation"] = 2.619999885559082,
			["npc_cache"] = {
				[151027] = {
					"–¢–µ—Ä–Ω–æ–≤—ã–π —Å—Ç—Ä–∞–∂ –ë–∞—Ä—Ç–æ–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[36877] = {
					"–ì—Ä–æ–∑–Ω—ã–π —Å–∫–µ–ª–µ—Ç", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[156146] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - —â–∏—Ç–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[127485] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[24777] = {
					"–ß–∞—Å–æ–≤–æ–π –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[7268] = {
					"–°—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[151028] = {
					"–¢–µ—Ä–Ω–æ–≤–∞—è –æ—Ö–æ—Ç–Ω–∏—Ü–∞ –ù–∏–¥–æ—Ä–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[58632] = {
					"–í–æ–∏—Ç–µ–ª—å –ì–∞—Ä–ª–∞–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[97285] = {
					"–¢–æ—Ç–µ–º –≤–µ—Ç—Ä—è–Ω–æ–≥–æ –ø–æ—Ä—ã–≤–∞", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[130301] = {
					"–¢–µ–º–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –î–∂—É'–ª–æ–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[134137] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Ö—Ä–∞–º–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[159219] = {
					"–ú—Ä–∞—á–Ω—ã–π –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[102404] = {
					"–ö–∞–º–Ω–µ—Ä—É–∫–∏–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å –ª–∏—á–∏–Ω–æ–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[29768] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω—ã–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[29832] = {
					"–ì–æ–ª–µ–º –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[140792] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[145399] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–≤–µ–∑–¥", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[60040] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î—é—Ä–∞–Ω–¥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[17803] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[124927] = {
					"–¶–∑—é–Ω—å-–¢–∏", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136186] = {
					"–ñ—Ä–∏—Ü–∞ –º–æ—Ä—è - —Å–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[7604] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–ª–∞–π", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[36494] = {
					"–ù–∞—á–∞–ª—å–Ω–∏–∫ –∫—É–∑–Ω–∏ –ì–∞—Ä—Ö–ª–∞–¥", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[18315] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-—á—É–¥–µ—Å–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[65415] = {
					"–®–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[61448] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[140794] = {
					"–ö–æ–≥—Ç–µ—à—Ä–∞–º", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[7796] = {
					"–ù–µ–∫—Ä—É–º –ö–∏—à–∫–æ–∂—É–π", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[58633] = {
					"–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –õ–µ–¥—è–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[130303] = {
					"–ó–Ω–∞—Ö–∞—Ä–∫–∞ –£–Ω–±—É–≥—É", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[69134] = {
					"–ö–∞–∑—Ä–∞'–¥–∂–∏–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[110340] = {
					"–ú–∏–æ–Ω–∏–∫—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[11783] = {
					"–¢–µ—Ä–∞–¥—Ä–∏–º—Å–∫–∏–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[127488] = {
					"–ú–∞–≥ –æ–≥–Ω—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[27977] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª—É—Å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[159224] = {
					"–ì—Ä–∏—Ç'–∞–∫—Å –ü–∞–ª–∞—á", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[28169] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[101639] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –¥–µ–≤–∞ —â–∏—Ç–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[36879] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —á—É–º–æ–π —É–∂–∞—Å", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[160249] = {
					"–®–∏–ø–∞—Å—Ç–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[61705] = {
					"–ü–∞–¥—à–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[161273] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω", -- [1]
					"–ó–∞–ª –°–µ—Ä–¥—Ü–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[154619] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ê—É–º-–∫–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[17356] = {
					"–ü–æ–ª–∑—É—á–∏–π —Å–ª–∏–∑–Ω—é–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[135169] = {
					"–¢–æ—Ç–µ–º –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –¥—É—Ö–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131586] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –±–∞–Ω–∫–µ—Ç–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[127490] = {
					"–†—ã—Ü–∞—Ä—å-–∫–∞–ø–∏—Ç–∞–Ω –í–∞–ª–∏—Ä–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[140800] = {
					"–û–±–ª–∞—á–Ω–æ–∫—Ä—ã–ª –ü–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[4421] = {
					"–ß–∞—Ä–ª–≥–∞ –û—Å—Ç—Ä–æ–±–æ–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[43662] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π –∑–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[8904] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π —Å–µ–Ω–∞—Ç–æ—Ä", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[131587] = {
					"–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[13447] = {
					"–ö–∞–ø—Ä–∞–ª –ù–æ—Ä–≥ –ì—Ä–æ–∑–æ–≤–∞—è –í–µ—Ä—à–∏–Ω–∞", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[9416] = {
					"–í–æ—Ä–≥ –ª–µ–≥–∏–æ–Ω–∞ –ò–∑—Ä—É–±–ª–µ–Ω–Ω–æ–≥–æ –©–∏—Ç–∞", -- [1]
					"–ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å –ø–∏–∫–∞ –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[130307] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ç–∞–π—Ñ—É–Ω", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[4853] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[69906] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü –∑–∞–Ω–¥–∞–ª–∞—Ä–æ–≤", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140292] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[27978] = {
					"–°—å–æ–Ω–Ω–∏—Ä –õ–∏—Ç–µ–π—â–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[134150] = {
					"–†–µ–∑—á–∏–∫ —Ä—É–Ω –°–æ—Ä–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139269] = {
					"–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[156161] = {
					"–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –ì–Ω—à–∞–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140293] = {
					"–°–Ω–µ–≥–æ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[153090] = {
					"–õ–µ–¥–∏ –Ø–¥–æ–≤–∏—Ç—ã–π –Ø–∑—ã–∫", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[10120] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –ø–æ–¥–∑–µ–º–µ–ª—å—è", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[36881] = {
					"–°–∫–µ–ª–µ—Ç-—Ä–∞–±", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[24715] = {
					"–ö—Ä–∞–π–Ω–µ –≤–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω–∞—è –æ–≤—Ü–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[153091] = {
					"–°–µ—Ä–µ–Ω–∞ –û—Å—Ç—Ä–∞—è –ß–µ—à—É—è", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[162305] = {
					"–ê–∫–∏—Ä-—Å–µ—Ä–¥—Ü–µ–∫–æ–ª", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138247] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[163841] = {
					"–°–ª–∏—è–Ω–∏–µ –ø–ª–æ—Ç–∏", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[140295] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[162306] = {
					"–ê–∫–∏—Ä-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[17357] = {
					"–ü–æ–ª–∑—É—á–∏–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[29834] = {
					"–ë–µ—à–µ–Ω–∫–∞ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[136713] = {
					"–†–∞–±–æ—Ç–Ω–∏–∫ —Å –Ω–∞–≥–æ—Ä—å—è –ê—Ä–∞—Ç–∏", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[157700] = {
					"–û–≥—é—Å—Ç –ú—É–ª–µ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[67093] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ–≤–æ–π –ª–µ–∫–∞—Ä—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[91919] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –∞–ø–µ–∫—Å–∏—Ç–æ–≤—ã–π –ø—Ä–∏–∑—Ä–∞–∫ –≤–µ—Ç—Ä–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[689] = {
					"–í–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[56589] = {
					"–ë–æ–µ—Ü –ì–∞'–¥–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[56717] = {
					"–ü—Ä—ã–≥–æ–ø–æ—Ç–∞–º", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[145928] = {
					"–°–∫–∞–≤–∏—Å –ù–∞–π—Ç—Å—Ç–∞–ª–∫–µ—Ä", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[18317] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-–∂—Ä–µ—Ü", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[30666] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[126983] = {
					"–ö—Ä–∞—Å–∞–≤—á–∏–∫ –•–∞—Ä–ª–∞–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[69909] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –º–∞–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ê–º–∞–Ω–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[26763] = {
					"–ê–Ω–æ–º–∞–ª—É—Å", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[11464] = {
					"–ö—Ä–∏–≤–æ–¥—Ä–µ–≤-–≤–µ—Ç–≤–µ–ø–ª–µ—Ç", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11496] = {
					"–ë–µ—Å—Å–º–µ—Ä'—Ç–µ—Ä", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[140299] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –ö–ª—ã–∫", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[161286] = {
					"–¢–µ–º–Ω–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[134157] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[155656] = {
					"–ú–∏—à–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[69910] = {
					"–õ–µ–¥—è–Ω–æ–π —Å—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[5925] = {
					"–¢–æ—Ç–µ–º –∑–∞–∑–µ–º–ª–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[153097] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - —à–∞–º–∞–Ω–∫–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[149514] = {
					"–ó–ª–æ—Ä–æ–≥", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[27979] = {
					"–¢—Ä–æ–≥–≥ –∫–æ–≤–∞–Ω–æ–≥–æ –∂–µ–ª–µ–∑–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[134158] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[6021] = {
					"–î—É—Ö –≤–µ–ø—Ä—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[56718] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[145932] = {
					"–°–µ–ª–µ—Å—Ç—Ä–∞ –Ø—Å–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138254] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[28619] = {
					"–ö–æ–∫–æ–Ω", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[61453] = {
					"–ú—É'–®–∏–±–∞", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[123146] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136207] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞—â–∏—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[74518] = {
					"–ü–∞–ª–∞—á –ú—è—Å–æ–¥–µ–ª", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[149516] = {
					"–ß–µ—Ä–Ω–æ–ª–∞–ø", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138255] = {
					"–ù–∞–≤–æ–¥—á–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136208] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π –∞—Ä–±–∞–ª–µ—Ç—á–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[145934] = {
					"–ë–µ–∑—É–º–Ω—ã–π –ò–≤–∞–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[59150] = {
					"–¢–∫–∞—á –ø–ª–∞–º–µ–Ω–∏ –ö–µ–≥–ª–µ—Ä", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[136721] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∏–∑ –ö—Ä—É–≥–∞ —Å—Ç–∏—Ö–∏–π", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[137233] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[8905] = {
					"–°–æ–∑–¥–∞–Ω–∏–µ-–∑–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[30283] = {
					"–ß—É–º–æ–±—Ä–æ–¥", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[129802] = {
					"–ó–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[9097] = {
					"–õ–µ–≥–∏–æ–Ω–µ—Ä –∏–∑ –ª–µ–≥–∏–æ–Ω–∞ –ò–∑—Ä—É–±–ª–µ–Ω–Ω–æ–≥–æ –©–∏—Ç–∞", -- [1]
					"–ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å –ø–∏–∫–∞ –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[162828] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π –ø–∏—â–µ–≤–∞—Ä–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[30667] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è –∫–æ–ª–¥—É–Ω—å—è", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[13320] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ö–∞—Ä–ª –§–∏–ª–∏–ø—Å", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[9257] = {
					"–ß–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –∏–∑ –ª–µ–≥–∏–æ–Ω–∞ –ò–∑—Ä—É–±–ª–µ–Ω–Ω–æ–≥–æ –©–∏—Ç–∞", -- [1]
					"–ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å –ø–∏–∫–∞ –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[18702] = {
					"–ê—É–∫–µ–Ω–∞–π—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[18894] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã - –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[129547] = {
					"–ö–∞—Å—Ç–µ—Ç–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[77080] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è –≤–µ—Ä—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[139284] = {
					"–ß—É–º–Ω–æ–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[39956] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[883] = {
					"–û–ª–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[136214] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Å –≤–µ—Ç—Ä–∞–º–∏ –•–µ–ª–¥–∏—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137238] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[150547] = {
					"–í–æ—Ä—á—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[28684] = {
					"–ö—Ä–∏–∫'—Ç–∏—Ä –•—Ä–∞–Ω–∏—Ç–µ–ª—å –í—Ä–∞—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[127757] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[10409] = {
					"–°–∫–∞–ª–æ–∫—Ä—ã–ª–∞—è –∫—Ä–∏–∫—É–Ω—å—è", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[7269] = {
					"–°–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[135192] = {
					"–ü–æ—á–∏—Ç–∞–µ–º—ã–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[139799] = {
					"–£—á–µ–Ω–∏–∫ –ê–π—Ä–æ–Ω—Ö–∞–ª–ª–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[29452] = {
					"Horatio", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[7397] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-–∫–∞–º–Ω–µ—Ä–µ–∑", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[155156] = {
					"–î–∂–∞–π–Ω–∞ –ü—Ä–∞—É–¥–º—É—Ä", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[139800] = {
					"–£—á–µ–Ω–∏–∫ –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü—ã —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[29836] = {
					"–ë–æ–µ–≤–æ–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[95766] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –æ—Å—Ç—Ä–æ–∫–ª—é–≤", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[26125] = {
					"Braincaller", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[135706] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[129550] = {
					"–¢–∏—Ö–æ–ª–∞–ø–∫–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[7605] = {
					"–í–æ—Ä–æ–Ω", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[161812] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–ó–∞–ª –°–µ—Ä–¥—Ü–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[130318] = {
					"–ü—Ä–æ—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[30668] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –Ω–∞–ª–µ—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[36886] = {
					"–£–ø—ã—Ä—å-–¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[127503] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö–æ—Ä–≥–∏", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[3875] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[133660] = {
					"\"–ë–æ–º-–±–æ—Ç 9000\"", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[11465] = {
					"–ö—Ä–∏–≤–æ–¥—Ä–µ–≤-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[7797] = {
					"–†—É—É–∑–ª—É", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[101398] = {
					"–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–µ–º–æ–Ω", -- [1]
					"–û–∫–æ –ë—É—Ä–∏ (—Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–µ)", -- [2]
				},
				[130319] = {
					"–ì–æ–ø–ª–∏—Ç –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134173] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[27597] = {
					"–ù–µ–ø–æ–≤–æ—Ä–æ—Ç–ª–∏–≤–æ–µ —Ç–µ–ª–æ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[159767] = {
					"–ö—Ä–æ–≤–æ–º–∞—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139804] = {
					"–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132126] = {
					"–ü–æ–∑–æ–ª–æ—á–µ–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[140828] = {
					"–£—Ç—Ä–µ–Ω–Ω—è—è –†–æ—Å–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[161815] = {
					"–ö'—Ç–∏—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ó–∞–ª –°–µ—Ä–¥—Ü–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[27981] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω–∞—è —Å–ª–∏–∑—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[134174] = {
					"–¢–µ–Ω–µ–ª–∏–∫–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134686] = {
					"–í–∑—Ä–æ—Å–ª—ã–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[159768] = {
					"–î–µ—Ä–µ—à –∏–∑ –ü—É—Å—Ç–æ—Ç—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139805] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129552] = {
					"–ú–æ–Ω–∑—É–º–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[137246] = {
					"–û—Å–∞–¥–Ω–∞—è –º–∞—à–∏–Ω–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[12201] = {
					"–ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –¢–µ—Ä–∞–¥—Ä–∞—Å", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[155162] = {
					"–õ–æ—Ä'—Ç–µ–º–∞—Ä –¢–µ—Ä–æ–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[151579] = {
					"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞—â–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136735] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[20879] = {
					"–≠—Ä–µ–¥–∞—Ä—Å–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –¥—É—à", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136224] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[4278] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –°–ø—Ä–∏–Ω–≥–≤–µ–π–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[58898] = {
					"–ë–¥–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[151581] = {
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[139808] = {
					"–î—É–±–æ–ª–æ–º –∏–∑ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[43286] = {
					"–û—Å–∫–æ–ª–æ–∫ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[59794] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—å —á–∞—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[162331] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –Ω–µ–π—Ä–æ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[79902] = {
					"–î–∂–æ–Ω –°–≤–∏—Ñ—Ç–∏", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[139809] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—é –∞–∫—Ç–∏–≤–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[9034] = {
					"–ó–ª–æ–±'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[121620] = {
					"Wolf", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[44566] = {
					"–û–∑—É–º–∞—Ç", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[13257] = {
					"–ú—É—Ä–≥–æ—Ç –ü–æ–¥–∑–µ–º–Ω–∞—è –ö—É–∑–Ω—è", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[134691] = {
					"–ù–∞—ç–ª–µ–∫—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ—Ä–≤–∏—à", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[26638] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤—Å–∞–¥–Ω–∏–∫ –Ω–∞ –Ω–µ—Ç–æ–ø—ã—Ä–µ –∏–∑ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[9258] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –ª–µ–≥–∏–æ–Ω–∞ –ò–∑—Ä—É–±–ª–µ–Ω–Ω–æ–≥–æ –©–∏—Ç–∞", -- [1]
					"–ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å –ø–∏–∫–∞ –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[140322] = {
					"–ö–∞–º–Ω–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[153119] = {
					"–ú–∞–ª—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[95771] = {
					"–ì—Ä–æ–∑–Ω—ã–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[13577] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –Ω–∞–µ–∑–¥–Ω–∏–∫–æ–≤ –Ω–∞ –±–∞—Ä–∞–Ω–∞—Ö –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[135716] = {
					"–ù–æ—á–Ω–æ–π —Å–∞–±–ª–µ–∑—É–± - –ª–æ–≤—á–∏–π", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[137764] = {
					"–û–ø—ã—Ç–Ω—ã–π –≤–æ–ª—à–µ–±–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[4854] = {
					"–ì—Ä–∏–º–ª–æ–∫", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[155680] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ì–ª—É–±–∏–Ω–Ω–æ–≥–æ —É–ª—å—è", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[139812] = {
					"–ü—Ä–æ–¥—é—Å–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[27982] = {
					"–ö–æ–≤–∞–Ω—ã–π –∂–µ–ª–µ–∑–Ω—ã–π –¥–≤–æ—Ä—Ñ", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[95772] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –∫–æ–≥–æ—Ç—å –Ω–æ—á–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[96028] = {
					"–ì–Ω–µ–≤ –ê–∑—à–∞—Ä—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[24079] = {
					"–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[139813] = {
					"–°—Ç–∞—Ä—à–∏–π –ø—Ä–æ–¥—é—Å–µ—Ä –ì–∏–∫—Å–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[24207] = {
					"–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–û–∫–æ –ë—É—Ä–∏", -- [2]
				},
				[161312] = {
					"–°–æ–∫—Ä—É—à–∞—é—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[131112] = {
					"–ë–æ–µ—Ü –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[139814] = {
					"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è–º –•–∞–∑–∑–ª", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[70179] = {
					"–°—Ç—Ä–∞–∂ —Ä–∏—Ç—É–∞–ª–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140838] = {
					"–ó–ª–æ–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[20880] = {
					"–°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π —ç—Ä–µ–¥–∞—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[159266] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[5270] = {
					"–¢—Ä—É–ø–æ–µ–¥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ê—Ç–∞–ª'–∞–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[140839] = {
					"–î—É—Ö –≤–æ–¥—ã", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130325] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —à—É—Å—Ç—Ä—ã–π –∫—Ä–∞–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130581] = {
					"–ü–µ—Å–æ—á–Ω—ã–π –≥–ª–∞–∑", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[155684] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω –ó–∏—Ç'—ç–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[29774] = {
					"–ü–ª—é—é—â–∞—è—Å—è –∫–æ–±—Ä–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[29838] = {
					"–õ—é—Ç–æ—Ä–æ–≥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[138281] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[155685] = {
					"–°–æ–ª–¥–∞—Ç –∏–∑ –ì–ª—É–±–∏–Ω–Ω–æ–≥–æ —É–ª—å—è", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[121112] = {
					"Aube sombre", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[11082] = {
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º—Å–∫–∏–π –∫—É—Ä—å–µ—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[30414] = {
					"–ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[130582] = {
					"–û—Ç—á–∞—è–≤—à–∏–π—Å—è –Ω–µ–≥–æ–¥—è–π", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[155686] = {
					"–ê–∑—à'–∞—Ä–∏-–æ—Ç—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140842] = {
					"–î—É—Ö –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[99358] = {
					"–ì–Ω–∏–ª–æ—Å–µ—Ä–¥–Ω–∞—è –¥—Ä–∏–∞–¥–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[154663] = {
					"–ü–æ–≥–ª–æ—â–∞—é—â–∞—è –≥–Ω–æ–º–æ–≤ –∫–∞–ø–ª—è", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[129559] = {
					"–î—É—ç–ª—è–Ω—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[134701] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[155688] = {
					"–ê–∑—à'–∞—Ä–∏ - –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—å–¥–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[78116] = {
					"Water Elemental", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[99359] = {
					"–ì–Ω–∏–ª–æ—Å–µ—Ä–¥–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[27983] = {
					"–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[155689] = {
					"–ó–∞–Ω—à'–∏—Ä-–≥–ª–∞–¥–∏–∞—Ç–æ—Ä", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[153130] = {
					"–ë–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[125977] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[134191] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[36891] = {
					"–†–æ–∂–¥–µ–Ω–Ω—ã–π –≤–æ –ª—å–¥–∞—Ö –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[24656] = {
					"–ü—à–∏–∫—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[74534] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[99360] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–ª–æ—à–∏–ø", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[6230] = {
					"–ó–∞—â–∏—Ç–Ω—ã–π —Å–∫–∞—Ñ–∞–Ω–¥—Ä –º–∏—Ä–æ—Ç–≤–æ—Ä—Ü–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[20881] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144942] = {
					"Spark Bot", -- [1]
					"Battle of Dazar'alor", -- [2]
				},
				[68904] = {
					"–°—É'–ª–∏–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[134193] = {
					"–ë–æ–µ–≤–æ–π –º–∞–≥ –∏–∑ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[98081] = {
					"–†–µ–≤—É—â–∏–π –∏–¥–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[140336] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134194] = {
					"–†—ã—Ü–∞—Ä—å –∏–∑ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[17938] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[30287] = {
					"–ë–µ—Å—á–∏–Ω—Å—Ç–≤—É—é—â–∏–π —É–ø—ã—Ä—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[9035] = {
					"–ì–Ω–µ–≤'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[144944] = {
					"–ê–ª—á–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[68905] = {
					"–õ—É'–ª–∏–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[134195] = {
					"–®—Ç–æ—Ä–º–≥—Ä–∞–¥—Å–∫–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[36892] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –Ω–æ—Å–∏—Ç–µ–ª—å —Å–º–µ—Ä—Ç–∏", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[152623] = {
					"–†—É–±–∞–∫–∞ –∏–∑ –ø–æ–¥–∑–µ–º–Ω–æ–π –∫—Ä–µ–ø–æ—Å—Ç–∏", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[95779] = {
					"–ì–Ω–æ–µ—à–∫—É—Ä—ã–π –≥—Ä–∏–∑–ª–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[62358] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[157231] = {
					"–®–∞–¥'—Ö–∞—Ä –ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[133685] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134197] = {
					"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[27600] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[106785] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27984] = {
					"–ë—É—Ä–µ–≤–µ—Å—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[134198] = {
					"–°–≤—è—â–µ–Ω–Ω–∏–∫ –∏–∑ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[7030] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –≥–µ–æ–ª–æ–≥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[56472] = {
					"–ë–ª–∞–≥–æ—É—Ö–∞—é—â–∏–π –õ–æ—Ç–æ—Å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[136246] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[144948] = {
					"–ö–æ–∂–µ–∫—Ä—ã–ª—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[52761] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[134199] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –ì–∏–ª–Ω–µ–∞—Å–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[36893] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –Ω–æ—Å–∏—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[106786] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[7206] = {
					"–î—Ä–µ–≤–Ω–∏–π –∫–∞–º–µ–Ω–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[140854] = {
					"–î—É—Ö –æ—Ç–ª–∏–≤–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[24849] = {
					"–í—Å–∞–¥–Ω–∏–∫ –Ω–∞ –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–µ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[10411] = {
					"–û–∫–æ –ù–∞–∫—Å—Ä–∞–º–∞—Å–∞", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[146485] = {
					"–ù–µ–≤–∞—Ä–∞ –ù–æ—á–Ω–∞—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[7286] = {
					"–ó—É–ª'—Ñ–∞—Ä—Ä–∞–∫—Å–∫–∏–π –∑–æ–º–±–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[135736] = {
					"–†–≤–∞—á", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140343] = {
					"–û—Å—Ç—Ä–æ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140855] = {
					"–ö–∞–ø–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134201] = {
					"–õ–µ–¥–∏ –î–∂–∞–π–Ω–∞ –ü—Ä–∞—É–¥–º—É—Ä", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[47131] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π —É–ø—ã—Ä—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[17491] = {
					"–†–∞–∑–±–æ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –í–µ—Å–µ–ª–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[136249] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[153141] = {
					"–¢–æ—Ç–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –≥–æ–ª–æ–¥–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[99365] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-–ª–∞–∑—É—Ç—á–∏–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[145975] = {
					"–ú–æ–ª–æ–¥–æ–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[134202] = {
					"–ê–Ω–¥—É–∏–Ω –†–∏–Ω–Ω", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[56473] = {
					"–õ–µ—Ç—è—â–∏–π –°–Ω–µ–≥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[140345] = {
					"–ö—Ä–∏–∫ –ë—É—Ä–∏", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[68397] = {
					"–õ—ç–π –®—ç–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[145976] = {
					"–¢–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[26641] = {
					"–ü–æ—Ç—Ä–æ—à–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[157238] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–∫–∏—Ç—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[99366] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-–ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[145977] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∏–π —Ç–≤–µ—Ä–¥–æ—à–∫—É—Ä—ã–π –ª–æ—Å—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[158774] = {
					"–°–ª–æ–º–ª–µ–Ω–Ω–∞—è –≥–æ—Ä–æ–∂–∞–Ω–∫–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[151096] = {
					"Hati", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[27281] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —á–∞—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[161334] = {
					"–°–∫–∞–ª—è—â–∏–π—Å—è —É–∂–∞—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[101414] = {
					"–¢–∏—Ö–æ—Å—Ç—É–ø –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[130335] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –∫—Ä–∏—Å—Ç–∞–ª–∏—Å–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138300] = {
					"–ë–ª–∞–≥–æ—Å–ª–æ–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞–º—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[47132] = {
					"–°—Ç—Ä–∞—à–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[27729] = {
					"–†–∞–∑—ä—è—Ä–∏–≤—à–∏–π—Å—è –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[161335] = {
					"–£–∂–∞—Å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[27985] = {
					"–ö–æ–º–µ–Ω–¥–∞–Ω—Ç –∂–µ–ª–µ–∑–Ω—ã—Ö –≥–æ–ª–µ–º–æ–≤", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[23954] = {
					"–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[24082] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[48284] = {
					"–ü–æ—Ä–æ—Ö", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[136254] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π —Ä—ã—Ü–∞—Ä—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[12203] = {
					"–û–±–≤–∞–ª", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[61337] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[155706] = {
					"–ô–æ–∫—Å'–∏—Ç", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[24722] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[20883] = {
					"–°–µ—Ä–¥–∏—Ç–∞—è –∏—Å–∫—É—Å–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[21395] = {
					"–ê–º–µ–±–æ–≤–∏–¥–Ω–æ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[155708] = {
					"–©—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[59546] = {
					"–ì–æ–≤–æ—Ä—è—â–∞—è —Ä—ã–±–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[70448] = {
					"–î—Ä–µ–≤–Ω–∏–π –ø–∏—Ç–æ–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[59930] = {
					"–ú–æ–≥—É—á–∏–π –∑–æ–º–±–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[75055] = {
					"–§–∞–∫–µ–ª—å—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[8908] = {
					"–û–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–π –±–æ–µ–≤–æ–π –≥–æ–ª–µ–º", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[43934] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –¥—É—à–∏", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[135234] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –º–∞—Å—Ç–∏—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[9036] = {
					"–ì–Ω—É—Å'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[56731] = {
					"–ü–µ—Ä—Ü–æ–≤–∫–∞", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[154174] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[158781] = {
					"–ò—Å—Å–µ—á–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[61338] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[135235] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140354] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[75056] = {
					"–§–∞–∫–µ–ª—å—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[152128] = {
					"–û—Ä–≥–æ–∑–æ–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140355] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[85294] = {
					"–ì–æ—Ä–µ–Ω-–∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[9676] = {
					"–ó–≤—è–∫ –ü—Ä—É–∂–∏–Ω–æ—Å–≤–∏—Å—Ç", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[138820] = {
					"–í—Ä–∞–π–∫—É–ª –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[47134] = {
					"–ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å —Ç—Ä—É–ø–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59547] = {
					"–¶–∑—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140356] = {
					"–Ø—Ä–∫–∞—è –ß–µ—à—É–π–∫–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[74545] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[134214] = {
					"–ö–ª–∏–Ω–æ–∫ –ë–µ–∑–¥–Ω—ã –ö–µ–ª–µ–π–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[24083] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[140357] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[14187] = {
					"–ê—Ç—Ä–∞–º–∞–Ω–∏—Å", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[32593] = {
					"–ë—ã—Å—Ç—Ä–æ–ª–∞–ø—ã–π —á–ª–µ–Ω–∏—Å—Ç–æ–Ω–æ–≥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[134215] = {
					"–õ–æ—Ä–∏–Ω–∞—Å, –ë–µ–≥—É—â–∏–π –≤ —Å—É–º—Ä–∞–∫–µ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61339] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[135239] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140358] = {
					"–ó–æ–≤ –°–∫–æ—Ä–±–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[10412] = {
					"–ù–µ–∫—Ä–æ—Ä–∞—Ö–Ω–∏–¥-–ø–æ–ª–∑—É–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[134216] = {
					"–¢–µ–º–Ω–∞—è –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ó–∞—Ä—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138823] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[135240] = {
					"–°—É–±—Å—Ç–∞–Ω—Ü–∏—è –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[5271] = {
					"–ú–µ—Ä—Ç–≤–æ–±—Ä–æ–¥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ê—Ç–∞–ª'–∞–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[136264] = {
					"–ù–µ–¥–æ–¥–µ–ª–∞–Ω–Ω–∞—è –º—É–º–∏—è", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[135241] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140360] = {
					"–Ø—Ä–∫–∞—è –°–ø–∏–Ω–∫–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[17621] = {
					"–°—Ç—Ä–∞–∂-—è–∑—ã—á–Ω–∏–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[141896] = {
					"–õ–µ–¥–∏ –•–∞'—Ç–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138825] = {
					"–ò–Ω–≥–∞—Ç–æ—Ä–∞ –ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[17941] = {
					"–ú–µ–Ω–Ω—É –ü—Ä–µ–¥–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[140361] = {
					"–ó–ª–æ–≤–µ—â–∞—è –¢–µ–Ω—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157253] = {
					"–ö–∞'–∑–∏—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[44704] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –°–∏–∞–º–∞—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[61340] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[152135] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[140362] = {
					"–ú–µ—Ä—Ü–∞—é—â–µ–µ –ö—Ä—ã–ª—ã—à–∫–æ", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[157254] = {
					"–¢–µ–∫'—Ä–∏—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[5719] = {
					"–ú–æ—Ä—Ñ–∞–∑", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[128551] = {
					"–ú–∞—Å—Ç–∏—Ñ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[144970] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[130087] = {
					"–ù–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[158279] = {
					"–í–∑–ª–æ–º–∞–Ω–Ω—ã–π –∑–∞–≤–æ–¥–Ω–æ–π —Ä–∞–∫–µ—Ç–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[159303] = {
					"–£–∂–∞—Å–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135245] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[27731] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[157256] = {
					"–ê–∫–∏—Ä-—à–µ—Ä—à–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[75061] = {
					"–ú–æ–ª–æ–¥–æ–π –≤–µ–ø—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[23956] = {
					"–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[135246] = {
					"–õ–æ—Ç—Ç–∏ –ö–æ–ª—é—á–∫–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136270] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ù–∏–∞–ª—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[144972] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-–æ—Ö–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[56862] = {
					"–ü—å—è–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[101679] = {
					"–ì—Ä–æ–∑–Ω–∞—è –æ—Ç—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[12236] = {
					"–õ–æ—Ä–¥ –ó–ª–æ—è–∑—ã–∫–∏–π", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[159305] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135247] = {
					"–í–∞—Ä–∏–≥–≥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135759] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[74550] = {
					"–í–∞—è—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª–∞–±–∏—Ä–∏–Ω—Ç–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[75318] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –≤—Å–ø–ª–µ—Å–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[155723] = {
					"–°—Ç—Ä–∞–∂ —Ä–æ—è –ö–∑–∞–∑", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[135760] = {
					"–ú–æ—Ä–ø–µ—Ö 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[113197] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[6391] = {
					"–í–æ–∏–Ω –∑–æ–Ω—ã", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[47137] = {
					"–ë–µ–∑–º–æ–∑–≥–ª—ã–π —É–∂–∞—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[135761] = {
					"–ì—Ä–æ–º–æ–≤–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[74551] = {
					"–ó–≤–µ—Ä–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[158284] = {
					"–ö—Ä—ç–≥–≥–ª –ì–æ–ª–æ–≤–æ–¥–µ—Ä–≥", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[159308] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω–∞—è –ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[17942] = {
					"–ó—ã–±—É–Ω", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[131667] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[9037] = {
					"–ú—Ä–∞–∫'–Ω–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[30419] = {
					"–£–∫—Ä–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[56863] = {
					"–°–æ–Ω–Ω—ã–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[158285] = {
					"–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —â–∏—Ç–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[134739] = {
					"–ì–æ–ª–µ–º-—á–∏—Å—Ç–∏–ª—å—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[13324] = {
					"–û–ø—ã—Ç–Ω—ã–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[135763] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[74552] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[158286] = {
					"–ü–µ—Ä–µ–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–µ–≤–æ–π —Ä–æ–±–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[135764] = {
					"–í–∑—Ä—ã–≤–Ω–æ–π —Ç–æ—Ç–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140371] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —è–∏—Ü –ù–∏'–∫—Å–∏–∫", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[58783] = {
					"–ü–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[142419] = {
					"–ì—Ä–æ–º–æ–≤–æ–π –≥–∏–≥–∞–Ω—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138836] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[47138] = {
					"–ü—É—Å—Ç—É–ª–µ–∑–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[135765] = {
					"–¢–æ—Ç–µ–º –ø–æ—Ç–æ–∫–æ–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[70202] = {
					"–ú–∞–Ω—á—É", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[74553] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é —Å—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[99891] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[159312] = {
					"–ñ–∏–≤–∞—è –∫—Ä–æ–≤—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135254] = {
					"–ù–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[76089] = {
					"–ó–≤–µ—Ä–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[140373] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –¥—é–Ω–Ω—ã—Ö —Å–∫–∞—Ä–∞–±–µ–µ–≤", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[14188] = {
					"–î–∏—Ä–∫ –ù–∞–¥—É–≤–∞–ª–ª–æ", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[65310] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ä–µ–ø–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138838] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–±–æ–≥–æ–º–æ–ª", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[7175] = {
					"–î—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[139862] = {
					"–í–æ—Ä—É'–∫–∞—Ä—Å–∫–∏–π —è–¥–æ–ø–ª—é–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140374] = {
					"–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å —É–ª—å—è –ò–∫—Å'–Ω–∏–ª", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[74554] = {
					"–®–∫—É—Ä–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[10381] = {
					"–£–Ω–∏—á—Ç–æ–∂–µ–Ω–Ω—ã–π –∫–∞–¥–∞–≤—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[134232] = {
					"–ù–∞–µ–º–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134744] = {
					"Hyena", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[76090] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é —Å—Ç—Ä–∞–∂ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[138840] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59552] = {
					"–•–æ–∑–µ–Ω-–ø–ª–∞–∫—Å–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140376] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[74555] = {
					"–ö–ª—ã–∫–æ–±–æ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[83001] = {
					"–î–∞—Ä—Ç –ß–µ—Ä–Ω–æ—Ö–º–µ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[138841] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü –≤–æ–π–Ω—ã", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151638] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –∑–µ–º–ª—è–Ω–æ–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[135770] = {
					"–°—Ç–∞—Ä—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç –°–ª—ç–π–¥", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140377] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[56865] = {
					"–í–æ–¥–Ω—ã–π —Ç–∞–Ω—Ü–æ—Ä", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[61216] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[138842] = {
					"–¢–∞'–∫–∏–ª –£—Å–∏–ª–∏—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151639] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —á–µ—Ä–≤–∏–Ω—Ç", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[160341] = {
					"–ú–µ–ª–∫–∞—è —Ç–≤–∞—Ä—å –∏–∑ –°—Ç–æ–∫–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140378] = {
					"–î—é–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π - —Å—Ç—Ä–∞–∂ —Ä–æ—è", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[83002] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤—ã–µ –∫–ª–∏–Ω–∫–∏", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[11469] = {
					"–û–≥–Ω–µ—á–∞—Ä –≠–ª–¥—Ä–µ—Ç–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[138843] = {
					"–í–æ–∂–∞–∫ —Ä–æ—è –°–∫—Ä–∞–∫'–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139355] = {
					"–ì—É—Ä–∞–Ω –ò–Ω–µ–∏—Å—Ç—ã–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[131677] = {
					"–ü–ª–µ—Ç–µ–ª—å—â–∏—Ü–∞ —Ä—É–Ω –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[50851] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –≤–æ—Ä–≥–µ–Ω–æ–≤ –ù–∞–Ω–¥–æ—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[42789] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –º–∞–≥–º—ã –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138844] = {
					"–Ø'–≤–∏–∫ –ò–º–ø–µ—Ä—Å–∫–∏–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[11789] = {
					"–ì–ª—É–±–æ–∫–æ–ø", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[27733] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[70206] = {
					"–î–∏–∫–∏–π —Ü–∏–π–ª–∏–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[159320] = {
					"–ê–º–∞—Ç–µ—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[104502] = {
					"–ü—Ä–∏–Ω—Ü –ë–∏–ª–∞–∞–ª", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[48420] = {
					"–ó–µ–º–ª–µ–∫–æ–ø –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[136798] = {
					"–ö–æ—Å—Ç–µ–≥—Ä—ã–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[159321] = {
					"–ö—Ö–∞—Ç–µ–ø", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[135263] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140382] = {
					"–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[45477] = {
					"–ö–ª—É–±—è—â–∏–π—Å—è —Å–æ–ª–¥–∞—Ç", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[138847] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∏–π –ë–æ–µ–º –ö–∞'–≤–∞–∑", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[140383] = {
					"–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[157275] = {
					"–í–µ–¥–æ–º—ã–π –≥–æ–ª–æ—Å–∞–º–∏ –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[151133] = {
					"Hati", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[59426] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[152669] = {
					"–ö–∞–ø–ª—è –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[17624] = {
					"–°—Ç—Ä–∞–∂-—Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –í–µ—Å–µ–ª–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[17816] = {
					"–ö—Ä–∞–±—Å—Ç–µ—Ä", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[17880] = {
					"–¢–µ–º–ø–æ—Ä—É—Å", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[75839] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ö–∞–∞—Ç–∞—Ä", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[48421] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[56867] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π –ø–ª—É—Ç", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[138338] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[13325] = {
					"–û–ø—ã—Ç–Ω—ã–π –≥–æ—Ä–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[152159] = {
					"–ó–æ–∞—Ç—Ä–æ–∏–¥", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[70209] = {
					"–î–∏–∫–∏–π —Ü–∏–π–ª–∏–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[144993] = {
					"–ë–µ—à–µ–Ω—ã–π —á–µ—Ä—Ç–æ–ø–æ–ª–æ—Ö–æ–≤—ã–π –º–µ–¥–≤–µ–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138851] = {
					"–õ–æ–≤–µ—Ü –¥—É—à", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[131685] = {
					"–†—É–Ω–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[97083] = {
					"–ö–æ—Ä–æ–ª—å –†–∞–Ω—É–ª—å—Ñ", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[59299] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[151649] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç I\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[139876] = {
					"–ù–æ—á–Ω–æ–∫—É—Å", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[152162] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –Ω–µ–±–µ—Å–Ω—ã–π –±–æ–µ—Ü", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[5048] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Å–ø–∏–¥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[137830] = {
					"–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[14349] = {
					"–ü–∏–º–≥–∏–±", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[14381] = {
					"–°–∫–∞–∑–∏—Ç–µ–ª—å –Ø–≤–æ–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[136295] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140902] = {
					"–í–æ–≥'—Ä–∏—à –í–æ–∑–Ω–µ—Å–µ–Ω–Ω—ã–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[10382] = {
					"–ò–∑—É—Ä–æ–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–¥–∞–≤—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[10414] = {
					"–õ–æ—Å–∫—É—Ç–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[46375] = {
					"–ë—É–π–Ω—ã–π —Å–º—É—Ç—å—è–Ω", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[132713] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[47143] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[136297] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137321] = {
					"–†—ã—Ü–∞—Ä—å –ê—Ä–∞—Ç–æ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[17817] = {
					"–ë–æ–ª—å—à–æ–π –∫—Ä–∞–±—Å—Ç–µ—Ä", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[17881] = {
					"–≠–æ–Ω—É—Å", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[151654] = {
					"–î—å—é—Å –ú–µ—Ö–∞–ª–æ—Å–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[96574] = {
					"–ó–∞–∫–∞–ª–µ–Ω–Ω—ã–π –±—É—Ä–µ–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[101437] = {
					"–ü—ã–ª–∞—é—â–∞—è –∂–µ–æ–¥–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[141929] = {
					"–ú—É–¥—Ä–µ—Ü –¢—É'–∞–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134251] = {
					"–°–µ–Ω–µ—à–∞–ª—å –ú'–±–∞—Ä–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[69701] = {
					"–ì–æ–ª–µ–º –∞–Ω–∏–º—ã", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[18521] = {
					"–°–≤–∏—Ä–µ–ø—ã–π —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[148584] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –ú–æ—Ä–¥–µ–Ω—Ç –í–µ—á–µ—Ä–Ω—è—è –¢–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[145001] = {
					"–õ–∞–Ω–∞—Ä–∞ –õ—É–Ω–Ω—ã–π –°—É–º—Ä–∞–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[5720] = {
					"–¢–∫–∞—á–∏–∫", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[154727] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–æ–ª–Ω—Ü–∞ –¢–µ–Ω—Ö–∞–º–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[75588] = {
					"–ü–µ—â–µ—Ä–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[46248] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ —Å—Ç–∞–∏ –†–µ—á–Ω–æ–π –õ–∞–ø—ã", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[136812] = {
					"–ì–µ–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[101438] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–≥–ª—ã–±–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[137836] = {
					"–î–∏–∫–∞—è –ª–æ—à–∞–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[151657] = {
					"–ë–æ–º–±–æ—Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[5912] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —á—É–¥–µ—Å–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[149098] = {
					"–ú–∞–π–µ–≤ –ü–µ—Å–Ω—å –¢–µ–Ω–µ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[161895] = {
					"–ü–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Ç–≤–∞—Ä—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[124217] = {
					"Suprise", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[60197] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[134766] = {
					"–í–æ–ª–Ω–æ–ø–ª—é–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[151658] = {
					"–¢–∞–Ω–∫-–¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[153194] = {
					"–°–æ–ª–µ–Ω—ã–π –ø—É–∑—ã—Ä—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[12206] = {
					"–î–æ–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[44841] = {
					"–ì–Ω–∏–ª–µ–≤—ã–π –º–æ–Ω—Å—Ç—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[134767] = {
					"–°–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç - –º–∞—Ç—å –∫–ª–∞–¥–∫–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[36907] = {
					"–ì—Ä–æ–∑–Ω—ã–π –æ—Å–∞–¥–Ω—ã–π –∫—É–∑–Ω–µ—Ü", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[24664] = {
					"–ö–µ–ª—å'—Ç–∞—Å –°–æ–ª–Ω–µ—á–Ω—ã–π –°–∫–∏—Ç–∞–ª–µ—Ü", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[6232] = {
					"–í–æ–ª—à–µ–±–Ω—ã–π –æ–±–Ω—É–ª—è—Ç–æ—Ä X-21", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[151148] = {
					"Okamero", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[46249] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ —Å—Ç–∞–∏ –†–µ—á–Ω–æ–π –õ–∞–ø—ã", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[29335] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[153196] = {
					"–í–æ—Ä—á—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[137328] = {
					"–≠–ª–∏—Ç–Ω—ã–π –±–æ–µ—Ü –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[158315] = {
					"–û–∫–æ —Ö–∞–æ—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[17306] = {
					"–ù–∞—á–∞–ª—å–Ω–∏–∫ —Å—Ç—Ä–∞–∂–∏ –ì–∞—Ä–≥–æ–ª–º–∞—Ä", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[59302] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –í–µ—Ä–¥–æ–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[47145] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[17626] = {
					"–õ–µ–≥–∏–æ–Ω–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –í–µ—Å–µ–ª–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[8911] = {
					"–û–≥–Ω–µ—Å—Ç—Ä–∞–∂-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[148591] = {
					"–¢—é—Ä–µ–º–Ω—ã–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[136818] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –û–≥–Ω–µ–ª–∏–∑", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[65317] = {
					"–°—è–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[18394] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-–ø—Ä–∏–∑—Ä–∞–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[13326] = {
					"–û–ø—ã—Ç–Ω—ã–π –æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[13358] = {
					"–õ—É—á–Ω–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[148592] = {
					"–¢—é—Ä–µ–º–Ω—ã–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[136819] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö—Ä—ã—Å–æ—Ö–≤–æ—Å—Ç", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[141938] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[46250] = {
					"–ë—Ä–∞–∫–æ–Ω—å–µ—Ä –∏–∑ —Å—Ç–∞–∏ –†–µ—á–Ω–æ–π –õ–∞–ø—ã", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[58791] = {
					"–î—É—à–∞ –õ–∏–ª–∏–∞–Ω", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[141939] = {
					"–ù–∞–≤–æ–¥—á–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59175] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –ª—É—á–Ω–∏–∫", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59303] = {
					"–ü—Å–∞—Ä—å –ë—Ä–∞—É–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[47146] = {
					"–•—Ä—É–ø–∫–æ—Ä–µ–±—Ä—ã–π —Å–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[27736] = {
					"–õ–æ—Å–∫—É—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[74569] = {
					"–ò—Å—Ü–µ–ª—è—é—â–∏–µ –≤–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[23961] = {
					"–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[76105] = {
					"–¢–æ—Ç–µ–º –•—Ä—É—Å—Ç–∞–ª—å–Ω–æ–≥–æ –æ–≥–Ω—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[44715] = {
					"–ó–ª–æ–±–Ω—ã–π –±–∏—á–µ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[130620] = {
					"–õ–µ–¥–æ–±–æ–µ—Ü –°–µ—Ä–∞—Ñ", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[14382] = {
					"–°–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–∏–∫–æ—Å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[70219] = {
					"–ì–Ω–æ–π–Ω—ã–π –≤—ã–±—Ä–æ—Å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[136823] = {
					"–ì—É–ª–∞–Ω—Å–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[10383] = {
					"–ò–∑–ª–æ–º–∞–Ω–Ω—ã–π –∫–∞–¥–∞–≤—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[162417] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[7272] = {
					"–¢–µ–∫–∞ –ú—É—á–µ–Ω–∏–∫", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[155763] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç—å–º—ã –ö–∞—Ä'–¥—Ä–µ—Å—Å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[46251] = {
					"–î–æ–±—ã—Ç—á–∏–∫ –∏–∑ —Å—Ç–∞–∏ –†–µ—á–Ω–æ–π –õ–∞–ø—ã", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[46379] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π —É–±–∏–π—Ü–∞", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[136824] = {
					"–ì—É–ª–∞–Ω—Å–∫–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157811] = {
					"–õ–∏–ª–∏–∞–º –®–ø–∏–Ω–¥–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[21338] = {
					"–õ–µ–ø—Ä–æ–≥–Ω–æ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[130621] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –ë—Ä–∞–π—Å–æ–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[21466] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –°–∫–∞–π—Ä–∏—Å—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[139384] = {
					"–ë–æ–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[47403] = {
					"–ñ–Ω–µ—Ü –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[157812] = {
					"–ë–∏–ª–∏–±—É–± –®–µ—Å—Ç–µ—Ä–µ–Ω–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[76107] = {
					"–¢–æ—Ç–µ–º —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[129598] = {
					"–í—å—é—á–Ω—ã–π –º—É–ª –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136826] = {
					"–ì—É–ª–∞–Ω—Å–∫–∏–π –≤–ª–∞–¥—ã–∫–∞ –æ–≥–Ω—è", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[157813] = {
					"–°–ø—Ä–∞–π—Ç –ü—Ä—ã–≥–æ–∑—É–±—á–∏–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[77131] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –≤–æ–ø–ª–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[130622] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –û—Ä–∞–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[151159] = {
					"\"–ö–ü–•-–ë—ã—Å—Ç—Ä–æ–Ω–æ–≥/–ú–ì\"", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[162933] = {
					"–ü–æ–∂–∏–Ω–∞—Ç–µ–ª—å –º—ã—Å–ª–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[7800] = {
					"–ê–Ω–∂–∏–Ω–µ—Ä –¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[139387] = {
					"–ù–∞—Å—Å–∞ –•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω—ã–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[62632] = {
					"–°–∏–∫'—Ç–∏–∫-–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[129599] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –Ω–æ–∂–µ–π –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[158327] = {
					"–¢–ª–µ—é—â–∏–π –æ—Å–∫–æ–ª–æ–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[154744] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[11791] = {
					"–ü–ª—É—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –¢–ª–µ—Ç–≤–æ—Ä–Ω—ã—Ö", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[27737] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[47404] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[136829] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[158328] = {
					"–ò–ª'–≥–∏–Ω–æ—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[39854] = {
					"–†–æ–∂–¥–µ–Ω–Ω—ã–π –≤ –ª–∞–∑—É—Ä–∏ —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[12047] = {
					"–ì–æ—Ä–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[28249] = {
					"–í—Å–µ–ø–æ–∂–∏—Ä–∞—é—â–∏–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[129600] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[8120] = {
					"–°—É–ª'–ª–∏—Ç—É–∑-–ø–æ–≥–∞–Ω–∏—â–µ", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[12207] = {
					"–¢–µ—Å—Å–∞–ª–∏–π—Å–∫–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[69455] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –ø–ª–µ—Ç–µ–ª—å—â–∏–∫ –≤–æ–¥", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[152699] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[136831] = {
					"–ó–Ω–∞—Ö–∞—Ä—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[8336] = {
					"–ó–º–µ–π –ø–ª–µ–º–µ–Ω–∏ –•–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[29209] = {
					"–ñ—É–∫-–ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[62633] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136832] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[105799] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –æ–≥–Ω—è", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[150653] = {
					"–¢–µ–º–Ω–æ–≤–æ–¥–Ω—ã–π –ª–µ–≤–∏–∞—Ñ–∞–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[21467] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –°–∫–∞–π—Ä–∏—Å—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[139392] = {
					"–°–∞—É—Ä–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[70224] = {
					"–ì–Ω–∏—é—â–∏–π –ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[136833] = {
					"–ñ—Ä–µ—Ü —è–¥–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137345] = {
					"–û—Ñ–∏—Ü–µ—Ä –§—ç–π—Ä–±–∞–Ω–∫—Å", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[150142] = {
					"–•–ª–∞–º–æ–º–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138369] = {
					"–§—É—Ç–±–æ–º–±–Ω—ã–π —Ö—É–ª–∏–≥–∞–Ω", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[139393] = {
					"C—Ç—Ä–∞–∂ –≥–Ω–µ–∑–¥–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129602] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[36272] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[56875] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–ø–æ–¥—Ä—ã–≤–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[150143] = {
					"–ü–µ—Ä–µ–º–∞–ª—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134787] = {
					"–ö—Ä–∞–±-–∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139394] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[18524] = {
					"–†–∞–∑–≥–Ω–µ–≤–∞–Ω–Ω—ã–π —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[152703] = {
					"\"–®–æ–∫–æ—Ç—Ä–æ–Ω X1\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[132740] = {
					"–Ø–¥–æ–≤–∏—Ç–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[139395] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Ç–æ–ø–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[46254] = {
					"–î—Ä–æ–±–∏—Ç–µ–ª—å", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[152704] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[145026] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59051] = {
					"–†–∞–∑–¥–æ—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139396] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[148610] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132742] = {
					"–û–≥–Ω–µ—á–µ—à—É–π—á–∞—Ç—ã–π —Å–∫–∏—Ç–∞–ª–µ—Ü", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[150146] = {
					"–®–∞–º–∞–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[139397] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[161408] = {
					"–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[157825] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∞—è –º—É—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[32665] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –≤–µ—Ç–≤–µ–ø–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[139398] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[14383] = {
					"–°–∫–∞–∑–∏—Ç–µ–ª—å –ö–∏–ª–¥—Ä–∞—Ç", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[70227] = {
					"–ë—ã—Å—Ç—Ä–æ–ª–∞–ø—ã–π –ø–∞—É—á–æ–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[132744] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137351] = {
					"–®—Ç–æ—Ä–º–≥—Ä–∞–¥—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[75090] = {
					"–£–∂–∞—Å –∏–∑ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[134280] = {
					"–í–æ–∑–¥–∞—è—Ç–µ–ª—å –ë–∞–∞—Ç—É–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139399] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[5273] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü –ø–ª–µ–º–µ–Ω–∏ –ê—Ç–∞–ª'–∞–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[21148] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[132745] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[14767] = {
					"–ú–∞—Ä—à–∞–ª —Å–º–æ—Ç—Ä–æ–≤–æ–π –±–∞—à–Ω–∏", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[17309] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π —Ü–∏—Ç–∞–¥–µ–ª–∏ –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[134793] = {
					"–•—Ä–µ–±—Ç–æ—Å–≤–µ—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139400] = {
					"–†–µ—á–Ω–æ–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135817] = {
					"–ó–µ—Ñ–∏—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132746] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π –º–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134794] = {
					"–¢–µ–º–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135818] = {
					"–ö–ª—É–±—è—â–∏–π—Å—è —Å–æ–ª–¥–∞—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136330] = {
					"–®–∏–ø—ã –¥—É—à–∏", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[11120] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –º–æ–ª–æ—Ç–æ–±–æ–µ—Ü", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[56877] = {
					"–†–∞–π–≥–æ–Ω–Ω", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[154758] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[44976] = {
					"–†–∞–∑–Ω–æ—Å—á–∏–∫ —á—É–º—ã –∏–∑ –ù–µ—Ñ–µ—Ä—Å–µ—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[135819] = {
					"–ñ–∏–≤–æ–µ —Ç–æ—Ä–Ω–∞–¥–æ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[5721] = {
					"–ñ–Ω–µ—Ü –°–Ω–æ–≤", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[134284] = {
					"–ü–∞–¥—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[155271] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140427] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª - –≤–æ–∂–∞–∫ —Å—Ç–∞–¥–∞", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136844] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[158343] = {
					"–û—Ä–≥–∞–Ω –ø–æ—Ä—á–∏", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[155272] = {
					"–¢–µ–º–Ω–æ–≤–æ–¥–Ω—ã–π –æ—Ä–∞–∫—É–ª", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[127048] = {
					"–ó–µ–º–ª–µ–∫–æ–ø –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[5913] = {
					"–¢–æ—Ç–µ–º —Ç—Ä–µ–ø–µ—Ç–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[148618] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ê–Ω–¥—Ä–µ–Ω–∏–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[136845] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ–ø–æ—Ä–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[150154] = {
					"–ó–∞–≤—Ä–æ–ª–∏—Å–∫-–∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134286] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –º–∞–≥ –¢–∞–º—É—É—Ä–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134798] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[12048] = {
					"–ß–∞—Å–æ–≤–æ–π –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[152202] = {
					"–†–æ–≤–∞ –ö—Ä–æ–≤–∞–≤—ã–π –£–¥–∞—Ä", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[100943] = {
					"–¢–æ—Ç–µ–º –∑–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[161416] = {
					"–ê–∫–∏—Ä - —Ç–≤–æ—Ä–µ—Ü —Ç–µ–Ω–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[134799] = {
					"–ì–ª—É–±–∏–Ω–æ—Ö–≤–∞—Ç", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[127049] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ—É—Å–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[131728] = {
					"–†–∞—É–ª—å –°—Ç–æ–π–∫–∏–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140430] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–ª–∏–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[136847] = {
					"–¢–µ–º–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[6233] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –∫–∞—Ä–∞—É–ª—å–Ω—ã–π", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[120651] = {
					"–í–∑—Ä—ã–≤—á–∞—Ç–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131729] = {
					"–õ–∏–∫–æ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140431] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–æ–∑–µ–ª", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[136848] = {
					"–í–æ—Ä–æ–∂–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[155276] = {
					"–í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω–∞—è —Å–∫–∞–ª—å–Ω–∞—è —Ä—ã–±–∏–Ω–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[163978] = {
					"–í–µ–¥–æ–º—ã–π –≥–æ–ª–æ—Å–∞–º–∏ —Å–µ–∫—Ç–∞–Ω—Ç", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[140432] = {
					"–°–∫–∞–ª—å–Ω—ã–π –ø—Ä—ã–≥—É–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[145039] = {
					"–°–Ω–µ–∂–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[17694] = {
					"–¢–µ–º–Ω—ã–π –º–∞–≥ –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[8913] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —ç–º–∏—Å—Å–∞—Ä", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[134802] = {
					"–û—Å—Ç—Ä–æ—Å–ø–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[152718] = {
					"–ê–ª–ª–µ—Ä–∏—è –í–µ—Ç—Ä–æ–∫—Ä—ã–ª–∞—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[145040] = {
					"–•–∏—Ç—Ä—é–≥–∞ –õ–ª–æ—Ä–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150159] = {
					"–ö–æ—Ä–æ–ª—å –ì–æ–±–±–∞–º–∞–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[155278] = {
					"–°–≤–µ—Ç—è—â–∏–π—Å—è –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[139410] = {
					"–í–∏—Å –ë–µ—Å—à—É–º–Ω—ã–π –ö–ª–∏–Ω–æ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26716] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[140434] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—Ä–æ–≥", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[74584] = {
					"–ß—É–º–Ω–æ–ø—Ä—è–¥", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[78935] = {
					"–ö—Ä–∞—Å–Ω–æ—à–∏–ø—ã–π –≥–æ—Ä–µ–Ω", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[150160] = {
					"–ë—É–≥–∞–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134804] = {
					"–ù–µ—Å—Ç–∞—Ä–µ—é—â–∏–π —Ä—É–Ω–æ—Å–ø–∏–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[139411] = {
					"–ú–Ω–æ–≥–æ–∑—É–±", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[27228] = {
					"–ô–æ—Ä–º—É–Ω–≥–∞—Ä—Å–∫–∏–π —á–µ—Ä–≤—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[140435] = {
					"–ü–µ–ø–µ–ª—å–Ω–∞—è –®–∫—É—Ä–∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[130635] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139412] = {
					"–ì–∞—à–∞—Å", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[135829] = {
					"–°–∞–º—É–º", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140436] = {
					"–§—ã—Ä–∫–æ–ø—ã—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136853] = {
					"–í–æ—Ä—á—É–Ω –ë–æ–π–±–æ—Ä–æ–¥", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[78936] = {
					"–ì–æ—Ä–µ–Ω-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –∂–µ–ª–µ–∑–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[75097] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –æ—Å–∫–æ–ª–æ–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[23965] = {
					"–õ–µ–¥—è–Ω–∞—è –º–æ–≥–∏–ª–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[139413] = {
					"–ü—Ä–æ—Ä–æ–∫ –æ–∞–∑–∏—Å–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ë–æ–ª–æ—Ç–Ω—ã—Ö –¢–µ–Ω–µ–π", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[135830] = {
					"–Ø—Ä–æ—Å—Ç—å —à—Ç–æ—Ä–º–æ–≤", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[152722] = {
					"–ü–∞–¥—à–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[105298] = {
					"–ì—Ä–∞—à", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[36661] = {
					"–ò–Ω–µ–π", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[139414] = {
					"–ñ—Ä–µ—Ü —Ç–æ–ø–∏ –í–∞—Å—Å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[156818] = {
					"–ì–Ω–µ–≤–∏–æ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132760] = {
					"–†–∞–≤–Ω–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[10385] = {
					"–§–∞–Ω—Ç–æ–º–Ω—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[3637] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[3653] = {
					"–ö—Ä–∏–≥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[7321] = {
					"–¢–∫–∞—á –ü–ª–∞–º–µ–Ω–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[3669] = {
					"–õ–æ—Ä–¥ –ö–æ–±—Ä–∞–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[150165] = {
					"–ñ–∏–∂–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[59184] = {
					"–î–∂–∞–Ω–¥–∏—Å –ë–∞—Ä–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[139416] = {
					"–í–æ–ª—à–∞—Å", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[70236] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[17695] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[137881] = {
					"–†—ã—Ü–∞—Ä—å –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[60208] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[155797] = {
					"–û–∂–∏–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[160404] = {
					"–†–∞—Å—Å–µ—Ä–∂–µ–Ω–Ω—ã–π –¥—É—Ö –º–µ–¥–≤–µ–∂—å–µ–π —à–∫—É—Ä—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140441] = {
					"–ú–æ–ª–æ–¥–æ–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[157333] = {
					"–í–µ–¥–æ–º—ã–π –≥–æ–ª–æ—Å–∞–º–∏ —Å–µ–∫—Ç–∞–Ω—Ç", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[137882] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[130638] = {
					"–ö—Ä–æ–∫–æ–ª–∏—Å–∫-–∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[44980] = {
					"–ß—É–¥–æ—Ç–≤–æ—Ä–µ—Ü –∏–∑ –ù–µ—Ñ–µ—Ä—Å–µ—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[160405] = {
					"–†–∞—Å—Å–µ—Ä–∂–µ–Ω–Ω—ã–π –¥—É—Ö –∫—Ä–µ—Å–ª–∞ –∏–∑ –¥—Ä–µ–≤–Ω—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[136347] = {
					"–£—á–µ–Ω–∏—Ü–∞ –∂—Ä–µ—Ü–æ–≤ –º–æ—Ä—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[3877] = {
					"–°—Ç–µ–Ω–∞—é—â–∏–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[150168] = {
					"–¢–æ–∫—Å–∏—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[11473] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∏–π –ø—Ä–∏–∑—Ä–∞–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[139419] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –æ—Ä–∞–∫—É–ª –ê—Å–∞–π–∑–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[46260] = {
					"–ñ–≥—É—á–∏–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140443] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150169] = {
					"–¢–æ–∫—Å–∏—á–Ω—ã–π —Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[130639] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[140444] = {
					"–ú–∞—Ç–µ—Ä—ã–π –º—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136861] = {
					"–õ–æ–≤—á–∞—è –∑–∞–∫–∞—Ç–∞ –ö–∞–ª–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[95832] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –¥–µ–≤–∞ —â–∏—Ç–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[83803] = {
					"–î–æ–±—ã—Ç—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[135838] = {
					"–ü–µ–ø–ª–æ–≤–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157337] = {
					"–î–µ—Ç–µ–Ω—ã—à –®–∞–¥'—Ö–∞—Ä–∞", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[130640] = {
					"–ó–ª–æ–±–Ω–æ–∫—É—Å-—Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[130896] = {
					"–ë–æ—á–∫–∞ —á–µ—Ä–Ω–æ–π –ø–µ–ª–µ–Ω—ã", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139422] = {
					"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –∫—Ä–æ–ª—É—Å–∫–æ–≤", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[123680] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≠–π–¥–∏—Å", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[136863] = {
					"–í–µ–ª–∏–∫–∏–π –ú–æ—Ç–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[137375] = {
					"–≠–∫–∑–æ—Å–∫–µ–ª–µ—Ç –æ–∑–∞—Ä–µ–Ω–Ω—ã—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[95577] = {
					"–©—É–ø–∞–ª—å—Ü–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[95833] = {
					"–•–∏—Ä—å—è", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[83804] = {
					"–í—Å–ø–∞—Ä—ã–≤–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[54323] = {
					"Kirix", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[46261] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140447] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136864] = {
					"–£–≥—É—É –£—Å—Ç—Ä–∞—à–∞—é—â–∏–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[48906] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –û–≥–æ–Ω—å", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[157255] = {
					"–ê–∫–∏—Ä-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[127799] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –ø–æ—á–µ—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[102232] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∑–≤–µ—Ä–æ–ª–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[135329] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[48522] = {
					"–ü–∏—Ä–∞—Ç –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[136353] = {
					"–û–≥—Ä–æ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[136865] = {
					"–£–∑–∞–Ω –†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –ü–µ—Å–∫–æ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[24201] = {
					"–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[48266] = {
					"–ü—É—à–∫–∞ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[95834] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–º–∏—Å—Ç–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[45097] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –¥—Ä–µ—Å—Å–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[17952] = {
					"–¢–µ–º–Ω–æ–≤–æ–¥–Ω—ã–π –∫—Ä–æ–∫–æ–ª–∏—Å–∫", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[136714] = {
					"–ù–µ–ø–æ–≤–æ—Ä–æ—Ç–ª–∏–≤—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[7012] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-—Å–∫—É–ª—å–ø—Ç–æ—Ä", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[59801] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫ - –Ω–∞–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤–µ—Ç—Ä–æ–≤", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[137786] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –ê—Ä–∞—Ç–æ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[126291] = {
					"–ü–µ—Ö–æ—Ç–∏–Ω–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[77889] = {
					"–ì—Ä–æ'—Ç–∞—à –†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[13297] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –ö—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[136181] = {
					"–í—É–ª–∫–∞–Ω", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[127315] = {
					"–¢–æ—Ç–µ–º –≤–æ—Å–∫—Ä–µ—à–µ–Ω–∏—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[26782] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[161437] = {
					"–í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134192] = {
					"–ë–æ–µ–≤–æ–π –º–∞–≥ –∏–∑ –ì–∏–ª–Ω–µ–∞—Å–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[99630] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[137835] = {
					"–ó–ª–æ–±–Ω—ã–π —á–µ—Ä–Ω—ã–π –º–µ–¥–≤–µ–¥—å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[77130] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[137716] = {
					"–î–æ–Ω–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[13617] = {
					"–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —Å—Ç–æ–π–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[77133] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —â–∏—Ç–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[153760] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[137892] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –ì—É–¥–º–∞–Ω", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[77134] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[134821] = {
					"–ó–ª–æ–±–Ω–æ–≥–ª–∞–∑—ã–π –æ–∫–∞–º–µ–Ω–∏—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[122965] = {
					"–í–æ–ª'–∫–∞–∞–ª", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[27742] = {
					"–ù–µ–ø—Ä–∏—è—Ç–µ–ª—å –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[7396] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-–∫–∞–º–Ω–µ–ª–æ–º", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[145059] = {
					"–•–∏—Ç—Ä—ã–π —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136203] = {
					"–î–∞–Ω–∞—Ç –¢—Ä–æ–ª–ª–µ–±–æ–π", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[76057] = {
					"–ß–µ—Ä–≤—å-—Ç—Ä—É–ø–æ–µ–¥", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[9938] = {
					"–ú–∞–≥–º—É—Å", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[49045] = {
					"–ê—É–≥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[139429] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –≤–æ–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135846] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140453] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –≤–æ–∂–∞–∫ —Å—Ç–∞–¥–∞", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[56884] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¢–∞–∂–∞–Ω—å –ß–∂—É", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[8910] = {
					"–ü—ã–ª–∞—é—â–∏–π –æ–≥–Ω–µ—Å—Ç—Ä–∞–∂", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[146596] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[134823] = {
					"–ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª–æ—Å–ø–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139430] = {
					"–ó–∞—Ä–∏–∑ –í–µ—á–Ω—ã–π –ì–æ–Ω—á–∏–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[7271] = {
					"–ó–Ω–∞—Ö–∞—Ä—å –ó—É–º'—Ä–∞—Ö", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[124159] = {
					"–î—Ä–æ–≤–æ—Å–µ–∫ –õ–µ–æ", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[39984] = {
					"–ó–ª–æ–≤—Ä–µ–¥–Ω—ã–π —Ç—Ä–æ–≥–≥", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[14283] = {
					"–°–æ–≤–∞ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[10418] = {
					"–û—Ö—Ä–∞–Ω–Ω–∏–∫ –∏–∑ –ë–∞–≥—Ä–æ–≤–æ–≥–æ –õ–µ–≥–∏–æ–Ω–∞", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20896] = {
					"–î—É—à–µ–≥—É–± –≠—Ñ–∏—Ä–∏—É–º–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[26696] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[139431] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–∫–ª–µ–ø–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[46263] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π —à–ª–∞–∫", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140455] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã—á–æ–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[13318] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ú–æ—Ä—Ç–∏–º–µ—Ä", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[77905] = {
					"–ê–±–∏—Å—Å–∞–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[158371] = {
					"–ó–∞—Ä–¥–µ—Ç –ß–µ—Ä–Ω—ã–π –ö–æ–≥–æ—Ç—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[42808] = {
					"–ñ–∏–≤–æ–¥–µ—Ä –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[17377] = {
					"–ö–µ–ª–∏'–¥–∞–Ω –†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[139432] = {
					"–õ—É'—Å–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[69132] = {
					"–í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞ –ú–∞—Ä'–ª–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140456] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –º—É—Å–∫–µ–Ω", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[140968] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –∫—É—Å–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[29982] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[39954] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —Ç–∫–∞—á —Ç–µ–Ω–∏", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[137838] = {
					"–û–∑–ª–æ–±–ª–µ–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[6392] = {
					"–ú–µ–¥–∏–∫ –∑–æ–Ω—ã", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[139433] = {
					"–°–µ—Å—Ç—Ä–∞ —Å—Ç—Ä–∞–¥–∞–Ω–∏—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129366] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140457] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[157349] = {
					"–í–µ–ø—Ä—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[77132] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Ä–µ–≤–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[40633] = {
					"–û—Ç–≤–∞–∂–Ω—ã–π —Å—Ç—Ä–∞–∂ –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[30622] = {
					"–ö–ª–∏–Ω–æ–∫–º–µ—Å—Ç–∏", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[76039] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∞–∫–≤–∞–º–∞–Ω—Ç", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[122968] = {
					"–Ø–∑–º–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[139946] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140458] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[145065] = {
					"–û–ø–µ—Ä–∏–≤—à–∏–π—Å—è —Ç–µ–º–Ω–æ–∫—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[98384] = {
					"–û—Å—Ç—Ä–æ–∑—É–±", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[5722] = {
					"–•–∞–∑–∑–∞—Å", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[31134] = {
					"–°–∏–Ω–∏–≥–æ—Å–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[134828] = {
					"–í–æ–¥–µ–Ω—ã—à", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[69911] = {
					"–í–æ–µ–Ω–∞—á–∞–ª—å–Ω–∏–∫ –∑–∞–Ω–¥–∞–ª–∞—Ä–æ–≤", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[148137] = {
					"–í–æ–ª–Ω–æ–ª–æ–≤-–ª—É–Ω–∞—Ç–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[8903] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[43658] = {
					"–ë–µ—Å–Ω–æ–≤–∞—Ç—ã–π –∫—Ä–æ–∫–æ–ª–∏—Å–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[46252] = {
					"–®–∞–º–∞–Ω –∏–∑ —Å—Ç–∞–∏ –†–µ—á–Ω–æ–π –õ–∞–ø—ã", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[158375] = {
					"–©—É–ø–∞–ª—å—Ü–µ –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[43537] = {
					"–ó–µ–º–ª–µ—Ä–µ–∑ –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[70445] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –î—Ä–∞–∑'–∫–∏–ª", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[122969] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[27743] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[70246] = {
					"–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å –¥—É—Ö–æ–≤", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[145067] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω–µ–Ω–æ–∫", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[70205] = {
					"–í—ç–π—à—ç–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[158376] = {
					"–≠–≥–æ—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[44977] = {
					"–ú—É—á–∏—Ç–µ–ª—å –∏–∑ –ù–µ—Ñ–µ—Ä—Å–µ—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[44981] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π —Å–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[12050] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[139949] = {
					"–ß—É–º–Ω–∞—è –∑–Ω–∞—Ö–∞—Ä–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[48440] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[140973] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[85508] = {
					"–ë–∏–∫—Å–∏ –ò—Å–∫—Ä—è—â–∏–π—Å—è –§–∏—Ç–∏–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[40634] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[134801] = {
					"–¢—Ä–µ—â–∏–Ω–∞-–≤-–ø–∞–Ω—Ü–∏—Ä–µ", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[30284] = {
					"–ö–æ—Å—Ç–æ–º–æ–ª", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[122970] = {
					"–ö—Ä–∞–¥—É—â–∏–π—Å—è —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[58758] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –¥—É—à–∏", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[70247] = {
					"–Ø–¥–æ–≤–∏—Ç–∞—è –≥–æ–ª–æ–≤–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[157354] = {
					"–í–µ–∫—Å–∏–æ–Ω–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[6218] = {
					"–û–±–ª—É—á–µ–Ω–Ω–∞—è —Å–ª–∏–∑—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[75110] = {
					"–§–∞–∫–µ–ª—å—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[20897] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –≤–æ–ª–Ω –≠—Ñ–∏—Ä–∏—É–º–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[83812] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[139439] = {
					"–ó–∞–∫–∞—Ç–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –î–∑—É—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[129369] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140271] = {
					"–¢–≤–µ—Ä–¥–æ—Ä–æ–≥", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[136880] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[44577] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –•—É—Å–∞–º", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[39960] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫ - —Ä–∞–±–æ—á–∏–π", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[42810] = {
					"–í—ã—Ç–æ—á–µ–Ω–Ω—ã–π –∏–∑ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞ –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[136250] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[122971] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[29063] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[70248] = {
					"–ß–∞—Ä–æ–¥–µ–π—Å–∫–∞—è –≥–æ–ª–æ–≤–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[157356] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –¢–µ–ª—å—Å–∞—Ä–∞", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[45096] = {
					"–ü—Ä–∏—Ä—É—á–µ–Ω–Ω—ã–π —Ç–æ–ª'–≤–∏—Ä—Å–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[150190] = {
					"–í–æ–∑–¥—É—à–Ω—ã–π –ø–æ–¥–∞–≤–∏—Ç–µ–ª—å –û–£-8", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[8915] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–æ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[136882] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[17954] = {
					"–î–∏—Å—Ç–∏–ª–ª—è—Ç–æ—Ä –Ω–∞–≥", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[129370] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[56631] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140977] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∫–æ—Å—Ç–µ–≥–ª–æ–¥", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[122967] = {
					"–ñ—Ä–∏—Ü–∞ –ê–ª—É–Ω'–∑–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[61701] = {
					"–°–∏–∫'—Ç–∏–∫-–≤–æ–∏–Ω", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[30623] = {
					"–ö–ª–∏–Ω–æ–∫–º–µ—Å—Ç–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[159405] = {
					"–ê–∫–∏—Ä-—Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[122972] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∞–≤–≥—É—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[139758] = {
					"–≠–Ω–Ω–∏ –î–≤–∞ –°—Ç–≤–æ–ª–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[70249] = {
					"–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω—ã–π –≥–ª–∞–∑", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[136883] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à–∏–ø–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[137395] = {
					"–û–ø—ã—Ç–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[45065] = {
					"–¢–æ–ª'–≤–∏—Ä—Å–∫–∏–π —Ç–æ—Ä–≥–æ–≤–µ—Ü", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[95843] = {
					"–ö–æ—Ä–æ–ª—å –ì–∞–ª–¥–æ—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[139438] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –¥—É—Ö–æ–≤ –¢–æ–≥–∞–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[45620] = {
					"–°–æ–ª–¥–∞—Ç –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[129371] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–æ–≤ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[9038] = {
					"–ë–µ—à–µ'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[136884] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –±–æ–µ–≤–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[43438] = {
					"–ö–æ—Ä–±–æ—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[102430] = {
					"–°–º–æ–ª–æ–ø–ª—é–π-—Å–ª–∏–∑–µ–Ω—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[59191] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –õ–∏–Ω–¥–æ–Ω", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[24200] = {
					"–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[139444] = {
					"–ù–µ–∫—Ä–æ–ª–æ—Ä–¥ –¶–∑—ã–∞–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[27744] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[96512] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –ì–ª–∞–π–¥–∞–ª–∏—Å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[136885] = {
					"–®–∏–ø–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[129016] = {
					"–ú—É—à–∫–µ—Ç–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[39962] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —Ä–∞—Å—Å–µ–∫–∞—Ç–µ–ª—å —Ç—É—á", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[124489] = {
					"–î—Ä–æ–≤–æ—Å–µ–∫ —Å –Ω–∞–≥–æ—Ä—å—è –ê—Ä–∞—Ç–∏", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[160416] = {
					"–†–∞—Å—Å–µ—Ä–∂–µ–Ω–Ω—ã–π –¥—É—Ö –±–æ—á–∫–∏ —ç–ª—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[141890] = {
					"–õ–æ—Ä–¥ –ê–∑–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[129372] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —á–µ—Ä–Ω–æ–π —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[48442] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[28384] = {
					"–ú–ª–∞–¥—à–∏–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[18700] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–µ –∫–æ—Å—Ç–∏", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[150195] = {
					"–°–ª–∏–∑–Ω—é–∫-–≥–Ω–æ–º–æ–µ–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[61239] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–æ—Ä–∞–∫—É–ª", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[14322] = {
					"–¢–æ–ø–æ—Ç—É–Ω –ö—Ä–∏–≥", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[14354] = {
					"–ü—É–∑–∏–ª–ª–∏–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[14386] = {
					"–ë–ª—É–∂–¥–∞—é—â–µ–µ –æ–∫–æ –ö–∏–ª—Ä–æ–≥–≥–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[155810] = {
					"–ú–æ—Ä–æ–∑–Ω—ã–π —á–∞—Å–æ–≤–æ–π", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[136887] = {
					"–ö–æ–ª–æ–≥—Ä–∏–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[42428] = {
					"–í–µ—Ä–Ω—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[10419] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –æ–∫—É–¥–Ω–∏–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20898] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –º–∞–≥–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[7290] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –º–µ—Ç–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[29216] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[129373] = {
					"–ü–æ—Ä—Ç–æ–≤–∞—è –∑–∞–≤–æ–¥—á–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[141495] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140983] = {
					"–•–ª–∞–¥–æ–±—É—Ä-—Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[101476] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π —É–≥–ª–µ—à–∫—É—Ä", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[21346] = {
					"–ù–µ–∑—Ä—è—á–∏–π –≥–ª–∞–∑", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[130653] = {
					"–ë–µ—Å—à–∞–±–∞—à–Ω–∞—è –ø–æ–¥—Ä—ã–≤–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[130909] = {
					"–°–º—Ä–∞–¥–Ω–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136889] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –∫–æ–ª–¥—É–Ω –¢–∞–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[1863] = {
					"Jhorevere", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[74347] = {
					"–ú–æ—Ä–¥—Ä–µ—à –û–≥–Ω–µ–Ω–Ω—ã–π –ì–ª–∞–∑", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[66413] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[97084] = {
					"–ö–æ—Ä–æ–ª—å –¢–æ—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[7079] = {
					"–õ–∏–ø–∫–∞—è –º—É—Ç—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[39961] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –¥—É—Ö –≤–æ–¥—ã", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[30176] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[58757] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –∏–∑ –ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[140267] = {
					"–£–≤–∞–Ω—É –ë–æ–ª—å—à–æ–π –†–æ–≥", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[156795] = {
					"–û—Å–≤–µ–¥–æ–º–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –®–†–£", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140985] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[156794] = {
					"–ü–æ–≥–ª–æ—â–µ–Ω–Ω–∞—è –¢—å–º–æ–π –∞–≥–µ–Ω—Ç –®–†–£", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[30624] = {
					"–ê–Ω—è–ø–µ–π–ø–µ—Ä", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[134331] = {
					"–ö–æ—Ä–æ–ª—å –†–∞—É'–∞–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[11948] = {
					"–í–∞–Ω–¥–∞—Ä –ì—Ä–æ–∑–æ–≤–∞—è –í–µ—Ä—à–∏–Ω–∞", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[98406] = {
					"–£–≥–æ–ª—å–Ω—ã–π —Å–∫–æ—Ä–ø–∏–æ–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[74548] = {
					"–ü–ª–∞–º–µ–Ω–µ—é—â–∏–π —Å–ª—É–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[104520] = {
					"–ü–ª–∞–º—è –ü—Ä–∞–≤–æ—Å—É–¥–∏—è", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[140986] = {
					"–ö–∏—Å–ª–æ—Ç–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[31008] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[150712] = {
					"–¢—Ä–∏–∫—Å–∏ –ò—Å–∫—Ä–æ–∂–≥—É—á–∫–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138427] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[140980] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[129119] = {
					"–†—ã—Ü–∞—Ä—å –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[106787] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[36874] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –ª–µ–¥–Ω–∏–∫–æ–≤—ã–π –∑–∞–≥—Ä–æ–±–Ω–∏–∫", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[132797] = {
					"–ï–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[56713] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[85354] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –í–µ—Å—Å–∞–ø", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[138428] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[159275] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[70430] = {
					"–°–∫–∞–ª—å–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[23970] = {
					"–í—Ä–∞–π–∫—É–ª-—Å–∫–µ–ª–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[59705] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[157368] = {
					"–í–µ–ª–∏–Ω–∞—Ä–∏—è", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[137405] = {
					"–¶–µ–ø–∫–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[83819] = {
					"–ö–∞–º–Ω–µ–±–∞—à–Ω—è", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[138429] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[39870] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ª–æ–≤–µ—Ü –æ–≥–Ω—è", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[136841] = {
					"–¢—É'–∑—É–Ω –ó–ª–æ–≤–µ—â–∏–π", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[61623] = {
					"–ö–∞–ø–ª—è —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[28825] = {
					"–°–º–µ—Ä—á", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[56762] = {
					"–Æ–π-–ª—É–Ω", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[56890] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[130400] = {
					"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[101991] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –ö–æ—à–º–∞—Ä–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[159417] = {
					"–°—É–º–∞—Å—à–µ–¥—à–∞—è –º–∞—Å—Ç–µ—Ä –Ω–æ–∂–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[151739] = {
					"–ú–∞'—Ö–∞–∞—Ç –£–ø–æ—Ä–Ω—ã–π", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[24674] = {
					"–§–µ–Ω–∏–∫—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[17308] = {
					"–û–º–æ—Ä –ù–µ–æ–¥–æ–ª–∏–º—ã–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[14321] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –§–µ–Ω–≥—É—Å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[28961] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –æ—Å–∞–¥–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[146109] = {
					"–ß–µ—Ä–Ω–∞—è –¢—É—á–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[138431] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤ –ù–∞–∂–¥—É–ª–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[29153] = {
					"–û–∂–∏–≤—à–∏–µ –∫–æ—Å—Ç–∏", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[29217] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —è–¥–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[138848] = {
					"–¢–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏ –ó–æ—Ä–ª–∞–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[17805] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[58810] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[138822] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏—Ü–∞ –∏–∑ –¥—Ä—É–∂–∏–Ω—ã –ö—Ä–æ–≤–∞–≤–æ–≥–æ –ö–∏–ª—è", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[17252] = {
					"Haafazag", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[138432] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤ –ù–µ—Å—Å–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[17380] = {
					"–ë—Ä–æ–≥–≥–æ–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[29830] = {
					"–ñ–∏–≤–æ–µ –∫–æ–ª–¥—É–Ω—Å—Ç–≤–æ", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[58664] = {
					"–§–∏–ª–∞–∫—Ç–µ—Ä–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –õ–µ–¥—è–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[144971] = {
					"–î—Ä—É–∏–¥-–¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[132802] = {
					"–ô–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[129364] = {
					"–ü–∏—Ç –ü—Ä–æ–Ω—ã—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[124259] = {
					"–î–∂—É–Ω–≥–ª–µ–≤—ã–π —Ç–∏–≥—Ä", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[134338] = {
					"–ñ—Ä–µ—Ü –º–æ—Ä—è - –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[30625] = {
					"–°—ç–Ω–¥–µ—Ä—Å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[151742] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[100713] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä—ã–±–æ–µ–¥", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[48445] = {
					"–õ–∞–∫–µ–π-–±–æ–ª–≤–∞–Ω—á–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[56763] = {
					"–ù–∞–±–∏—Ä–∞—é—â–∏–π —Å–∏–ª—ã —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[13331] = {
					"–ë—ã–≤–∞–ª—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[146112] = {
					"–ß–µ—Ä–Ω–∏–ª—å–Ω–∞—è –®–∫—É—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138434] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[13299] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –õ–æ–Ω–∞–¥–∏–Ω", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[77935] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[26722] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –≤–æ–ª—Ö–≤", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[96611] = {
					"–°–µ—Ä–¥–∏—Ç—ã–π –±—ã–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[111463] = {
					"Makarra", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[31009] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —á–∞—Ä", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[146113] = {
					"–ì—Ä–æ–º–æ–∫–æ–ø—ã—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[58756] = {
					"–í—ã–∑—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[21128] = {
					"–°–∫–∞—Ç —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[139459] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[58555] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[58683] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[140995] = {
					"–†—É–∏–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[13196] = {
					"–§–∞–∑–æ–≤—ã–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[152199] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –•–∞—Ç–æ—Ä–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[135365] = {
					"–ú–∞—Ç—Ä–æ–Ω–∞ –ê–ª—å–º–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[29062] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[139460] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ç–∫–∞—á –∑–µ–º–ª–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[10406] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-—Å—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[74353] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∞–∫–≤–∞–º–∞–Ω—Ç", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[140996] = {
					"–ì–ª—É–±–æ–∫–æ–±—É—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132807] = {
					"–¶–∏–π–ª–∏–Ω—å –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[39616] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[138437] = {
					"–°–∑–µ—Ä–∏—Å –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[130404] = {
					"–ö—Ä—ã—Å–æ–ª–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[139461] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Å–∫–∞–ª–æ–≥—Ä—ã–∑", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[61699] = {
					"–°–∏–∫'—Ç–∏–∫ –ñ–µ–ª—Ç–æ–∫—Ä—ã–ª", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[56636] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –†–∏'–º–æ–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[136902] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–≤–µ—á–∫–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ—É—Å–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[41096] = {
					"–í—Ä–∞—á–µ–≤–∞—Ç–µ–ª—å –¥—É—à –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[146116] = {
					"–ò–≥–ª–æ—Å–ø–∏–Ω-–¥–æ–±—ã—Ç—á–∏–∫", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[61243] = {
					"–ì–µ–∫–∫–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[159425] = {
					"–û–∫–∫—É–ª—å—Ç–∏—Å—Ç–∫–∞ - —Ç–µ–º–Ω–∞—è —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[45063] = {
					"–°–∫–æ—Ä–ø–∏–¥-–∫–æ—Å—Ç–µ–≥—Ä—ã–∑", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[127333] = {
					"–ñ—É–∂–∂–∞–ª–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[136391] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–µ—Ä–¥—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140984] = {
					"–ß–µ—Ä–≤—å-—Ö–ª–∞–¥–æ–±—É—Ä", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[156866] = {
					"–†–∞-–¥–µ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[10420] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20900] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π –ù–æ—Å–∏—Ç–µ–ª—å –†–æ–∫–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[10516] = {
					"–ù–µ–ø—Ä–æ—â–µ–Ω–Ω—ã–π", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[2630] = {
					"–¢–æ—Ç–µ–º –æ–∫–æ–≤ –∑–µ–º–ª–∏", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[131785] = {
					"–ñ—É–∂–∂–∞—â–∏–π —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[5291] = {
					"–õ–µ–¥–æ–∫—Ä—ã–ª—ã–π –∑–º–µ–π –ø–ª–µ–º–µ–Ω–∏ –•–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[58812] = {
					"–ó–ª–æ–±–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[32517] = {
					"–õ–æ–∫–µ'–Ω–∞—Ö–∞–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146118] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130661] = {
					"–ì–µ–æ–º–∞–Ω—Ç –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[17381] = {
					"–ú–∞—Å—Ç–µ—Ä", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[94224] = {
					"–ö–∞–º–µ–Ω—è—â–∏–π —Ç–æ—Ç–µ–º", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[144071] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –º–æ—Ä—è –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[136836] = {
					"–£—Ä–∑—É–ª–∞ –¢–µ–Ω–µ–ª–æ–º", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[136905] = {
					"–ö–∞—Ä–∞—É–ª—å–Ω—ã–π —Å –ø–µ—Ä–µ–¥–æ–≤–æ–π", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[30178] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –ø–∞—É–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[146119] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138441] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è –ø–µ–≤—É–Ω—å—è", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[39873] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[17957] = {
					"–í–æ–∏—Ç–µ–ª—å —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[134283] = {
					"–ê–Ω–∞—Ö–æ—Ä–µ—Ç –õ–∞–Ω–Ω–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[132299] = {
					"–ó–ª–æ–π –¥—Ä–µ–≤–µ–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[56765] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[96608] = {
					"–≠–±–µ–Ω–æ–≤—ã–π –≤–æ—Ä–≥", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[133835] = {
					"–î–∏–∫–∏–π –∫—Ä–æ–≤–∞–≤—ã–π —Ä–æ–µ–≤–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[18341] = {
					"–ü–∞–Ω–¥–µ–º–æ–Ω–∏–π", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[102253] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[122984] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –∫–æ–ª–æ—Å—Å", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[26723] = {
					"–ö–µ—Ä–∏—Å—Ç—Ä–∞–∑–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[126215] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ç—å–º—ã –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[153244] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–∞–±–≤–µ–Ω–∏—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[31010] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —É–±–∏–π—Ü–∞ –º–∞–≥–æ–≤", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[133836] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138443] = {
					"–ß–µ—à—É–µ—Å—Ç—Ä–∞–∂ –ë—É–ª–µ—Ç", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[5755] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[139467] = {
					"–¶–∏–Ω—å—Å—É –ì—Ä–∞–Ω–∏—Ç–Ω—ã–π –ö—É–ª–∞–∫", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[99868] = {
					"–§–µ–Ω—Ä–∏—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[58685] = {
					"–ü—Ä–æ–ø–æ–≤–µ–¥–Ω–∏—Ü–∞ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[140437] = {
					"–ù–µ—Ç–æ—Ä–æ–ø–ª–∏–≤—ã–π –û–ª–æ", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[6407] = {
					"–¢–µ—Ö–Ω–∏–∫ –∑–æ–Ω—ã", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[152033] = {
					"–ù–µ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[155616] = {
					"–ó–∞–Ω—à'–∏—Ä-–≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[4852] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[139757] = {
					"–ú–µ—Ç–∫–∏–π –î–∂–æ–Ω—Å–æ–Ω", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[47296] = {
					"–•–µ–ª–∏–∫—Å –û—Ç–ª–æ–º—á–∏–∫—Å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[133605] = {
					"–ë–µ–≥–ª–∞—è –∑–∞–∫–ª—é—á–µ–Ω–Ω–∞—è", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[4855] = {
					"–ë—É—è–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[69639] = {
					"–ì—É–¥—è—â–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[95842] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –º–æ–ª–Ω–∏–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[96609] = {
					"–ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π –æ–ª–µ–Ω—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[147938] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[69712] = {
					"–¶–∑–∏-–ö—É–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[105800] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ª—å–¥–∞", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[129640] = {
					"–ó–ª–æ–±–Ω—ã–π –ø–æ—Ä—Ç–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[56766] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[50869] = {
					"–û—Å—Ç—Ä–æ–∫–ª—ã–∫ –ú—è—Å–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[133627] = {
					"–¢–∞–ª–ª–∏ –ë—ã—Å—Ç—Ä–æ—Ü–∞–ø", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61245] = {
					"–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[23960] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[45377] = {
					"–ê—É–≥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[26694] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π —à–∞–º–∞–Ω –∑–∞–∫–∞—Ç–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[28835] = {
					"–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[45062] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–∫–æ—Ä–ø–∏–¥–æ–≤", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[6219] = {
					"–ï–¥–∫–∏–π —Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[6235] = {
					"\"–≠–ª–µ–∫—Ç—Ä–æ—à–æ–∫–µ—Ä-6000\"", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[20901] = {
					"–°–∞—Ä–≥–µ—Ä–æ–Ω—Å–∫–∏–π –ª—É—á–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[13285] = {
					"–°–º–µ—Ä—Ç–µ–ª—å–Ω—ã–π —Ö–ª–µ—Å—Ç—É–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[144955] = {
					"–ó–∞–ª'–∑–∏ –ö—Ä–æ–≤–æ–≥–ª–æ—Ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[59684] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[155845] = {
					"–ú–æ—Ä—Å–∫–∞—è –ø—É—á–∏–Ω–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[161244] = {
					"–ö—Ä–æ–≤—å –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[97068] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[101637] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–∫–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[134865] = {
					"–®–ø–∏–ª—å –º–æ–ª–Ω–∏–π", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[139472] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π –ª–æ—Ä–¥ –¶–∏–Ω—å—à–æ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[47297] = {
					"–ë–æ–ª–≤–∞–Ω—á–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[97087] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[8902] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[132819] = {
					"–í–æ–ª—á–æ–Ω–æ–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150222] = {
					"–¢–æ–∫—Å–∏–∫–æ–∏–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[45122] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[30179] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∞–ø–æ—Å—Ç–æ–ª", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[17958] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[56511] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[76407] = {
					"–ù–µ—Ä'–∑—É–ª", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[56767] = {
					"–û–≥–Ω–µ–Ω–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[59778] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–µ—Ü", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[162508] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[26532] = {
					"–•—Ä–æ–Ω–æ–ª–æ—Ä–¥ –≠–ø–æ—Ö", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[13300] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –ú–∞–Ω–∫—É–∑–æ", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[139474] = {
					"–¶–æ—Ä-–°–∏–Ω—å –û—Ä–∞–∫—É–ª –ó–µ–º–ª–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59804] = {
					"–•–≤–∞—Ç–∫–∞—è –Ω–µ–Ω–∞–≤–∏—Å—Ç—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[45378] = {
					"–ê—É–≥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[132820] = {
					"–ü–æ—Ä–æ—Å–µ–Ω–æ–∫-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[113998] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–Ω—è –°–∏–ª—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[155612] = {
					"–ê–∑—à'–∞—Ä–∏-—á–∞—Ä–æ—Ç–≤–æ—Ä–∏—Ü–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[75384] = {
					"–ß—É–¥–æ–≤–∏—â–Ω–æ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –õ–∞–±–∏—Ä–∏–Ω—Ç–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[75640] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[18982] = {
					"–ß–µ—Ä–Ω—ã–π —è–≥—É–∞—Ä", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[135892] = {
					"–í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ –ø–ª–∞–º—è", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[85756] = {
					"–û–Ω–∏–∫—Å–æ–≤—ã–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[70235] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–æ–ª–æ–≤–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[42691] = {
					"–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–ª–æ–º–æ–≤ –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[137940] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–∞—è –∞–∫—É–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[127486] = {
					"–û—Ñ–∏—Ü–µ—Ä –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138846] = {
					"–Ø–Ω—Ç–∞—Ä–Ω–æ–∫—Ä—ã–ª—ã–π –ª–æ–≤–µ—Ü —É–º–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[152540] = {
					"–õ–∏–∞–Ω–∏ –ö—Ä–∞–¥—É—â–∞—è—Å—è –¢–µ–Ω—å", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[82295] = {
					"–ì—Ä–æ–Ω–Ω-–∏–∑–º–µ–ª—å—á–∏—Ç–µ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[155813] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Å—É–¥–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[90997] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–Ω—è –°–∏–ª—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[157904] = {
					"–ê–∫–∏—Ä-—Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[146131] = {
					"–ë–∞—Ä—Ç–æ–∫ –ù–æ—Ä–Ω—ã–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[96116] = {
					"–ë–æ–µ–≤–æ–π —à—Ç–∞–Ω–¥–∞—Ä—Ç –î–ª–∞–Ω–∏ –ü—Ä–æ—Ä–æ–∫–∞", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[75641] = {
					"–ñ–µ–ª—á–Ω—ã–π –ø–ª–∞–≤–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[157365] = {
					"–ì—Ä–æ–∑–æ–≤–æ–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[104818] = {
					"–¢–æ—Ç–µ–º –∑–∞—â–∏—Ç—ã –ü—Ä–µ–¥–∫–æ–≤", -- [1]
					"–û–∫–æ –ë—É—Ä–∏ (—Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–µ)", -- [2]
				},
				[48450] = {
					"–Ø—Å–Ω–æ–∫—Ä—ã–ª—ã–π –≤–∏–∑–≥—É–Ω", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[17429] = {
					"–ù–µ–æ—Ñ–∏—Ç-–æ—Ä–∫ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[24080] = {
					"–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[27598] = {
					"–ó–ª–æ–≤–æ–Ω–Ω—ã–π —Ç—Ä—É–ø —Ç—Ä–æ–ª–ª—è", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[28580] = {
					"–ù–µ–±–æ—Ö–æ–¥ –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[14324] = {
					"–ß–æ'–†–∞—à –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[139817] = {
					"–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä –ó–∞–∑–∑–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[135895] = {
					"–û—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–∞—è –∏—Å–∫—Ä–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[45379] = {
					"–ê—É–≥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[90998] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —á—É–º–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[16807] = {
					"–ì–ª–∞–≤–Ω—ã–π —á–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –ü—É—Å—Ç–æ–∫–ª—è—Ç", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[10421] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20902] = {
					"–°–∞—Ä–≥–µ—Ä–æ–Ω—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –æ–≥–Ω—è", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[75642] = {
					"–ñ–µ–ª—á–Ω—ã–π –ø–ª–∞–≤–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[155859] = {
					"–í–∏–∑–¥–∂–∞'—Ä–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[28836] = {
					"–†—É–Ω–æ–¥–µ–ª –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[3670] = {
					"–õ–æ—Ä–¥ –ü–∏—Ç–æ–Ω–∞—Å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[68476] = {
					"–•–æ—Ä—Ä–∏–¥–æ–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[17447] = {
					"–§–æ–±–æ—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[42692] = {
					"–ö–æ—Å—Ç–æ–ª–æ–º –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[69375] = {
					"–£–∫—Ä—ã–≤–∞—é—â–∏–π —Ç—É–º–∞–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[138968] = {
					"–°—Ç–∞–ª—å–Ω–æ–π –∑–µ–≤ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[69756] = {
					"–°—Ñ–µ—Ä–∞ –∞–Ω–∏–º—ã", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[26530] = {
					"–°–∞–ª—Ä–∞–º–º –ü–ª–æ—Ç–æ—Ä–µ–∑", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[74363] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –±–æ–µ—Ü –∏–∑ —Ç–µ–Ω–∏", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[95861] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[74875] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –ß–µ—Ä–Ω–æ—à–∏–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[155767] = {
					"–ì—Ä–∞–ª'—Ç–∞–∂", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140264] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[138969] = {
					"–î—É—Ö –º–æ–≥—É –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[17959] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[28368] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[48451] = {
					"–°—Ç–∞—Ä–∏–∫ –ö–ª—é–≤–∞—á", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[58803] = {
					"–û—Å—Ç–∞—Ç–∫–∏ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[30111] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –≤–µ—Ä—É—é—â–∏–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[26533] = {
					"–ú–∞–ª'–ì–∞–Ω–∏—Å", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[18343] = {
					"–¢–∞–≤–∞—Ä–æ–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[138970] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[157366] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[27973] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[3870] = {
					"–ö–∞–º–µ–Ω–Ω–∞—è —Å–æ–Ω—è", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[91000] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[151681] = {
					"–ö—É—Ü–µ—Ö–≤–æ—Å—Ç –§—ã—Ä–∫–∞—é—â–∏–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[133852] = {
					"–ñ–∏–≤–∞—è –≥–Ω–∏–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[134364] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫ - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —è–∏—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[46382] = {
					"–ñ–∞–ª–∫–∏–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[18983] = {
					"–ß–µ—Ä–Ω–æ–∑—É–±—ã–π —Ç–∞—Ä–∞–Ω—Ç—É–ª", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[59521] = {
					"–ë—É–ª—å–∫–∞—é—â–∏–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[68222] = {
					"–°—Ç–∞—è —Ä–∞–¥—É–∂–Ω—ã—Ö –º—É—Ö", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[7785] = {
					"–û–±–µ—Ä–µ–≥ –ó—É–º'—Ä–∞—Ö–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[56764] = {
					"–í—Å–µ–ø–æ–≥–ª–æ—â–∞—é—â–∏–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[30286] = {
					"–°—Ç—É–∂–µ–Ω—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[7915] = {
					"–•–æ–¥—è—á–∞—è –±–æ–º–±–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[126832] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω –ö—Ä–∞–≥–≥", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[155768] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∫–≤–∞–ª–æ–≤ –ú–∞–ª'—É—Ä", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[56747] = {
					"–ì—É –ù–µ–±–µ—Å–Ω—ã–π –£–¥–∞—Ä", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[63808] = {
					"–¢—É—Å–∫–ª—ã–π —Å–∞–º–æ—Ü–≤–µ—Ç", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[91001] = {
					"–°–º–æ–ª–æ–ø–ª—é–π-–ø–æ–ª–∑—É–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[66652] = {
					"–ú–∞–ª–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[146139] = {
					"–ó–ª–∞—Ç–æ—Å–ø–∏–Ω", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[28826] = {
					"–ó–∞–≥—Ä–æ–±–Ω–∏–∫ —è—Ä–æ—Å—Ç–∏ –±—É—Ä—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[26635] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≤–æ–∏–Ω –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[47136] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[152282] = {
					"–≠–ª–∏—Ç–Ω—ã–π —Å—Ç—Ä–∞–∂ –ø–æ–¥–∑–µ–º–Ω–æ–π –∫—Ä–µ–ø–æ—Å—Ç–∏", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[88698] = {
					"–ì—Ä–æ–º–∏–ª–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[7078] = {
					"–ü–µ—â–µ—Ä–Ω—ã–π —Å–∫–æ—Ä–ø–∏–¥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[26830] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å —Å–º–µ—Ä—Ç–∏ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[61442] = {
					"–ö—É–∞–π –ë–µ—Å—á–µ–ª–æ–≤–µ—á–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[28581] = {
					"–¢–∞–∫—Ç–∏–∫ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[91002] = {
					"–ì–Ω–∏–ª–æ—Å–ª—é–Ω–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[139486] = {
					"–ù–µ–±–æ–ª–æ–º", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135903] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[28837] = {
					"–ß–∞—Å–æ–≤–æ–π –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[99192] = {
					"–¢–µ–Ω—å –ö—Å–∞–≤–∏—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[28965] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –≥—Ä–æ–∑–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[27732] = {
					"–ú–∞—Å—Ç–µ—Ä –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∏–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[146653] = {
					"–ü—Ä–æ—Å–ª–∞–≤–ª–µ–Ω–Ω–∞—è –æ—Ö–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[100216] = {
					"–õ–æ–≤—á–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[69905] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—É—Ä—É–±–∞—à–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[92538] = {
					"–õ–∏—á–∏–Ω–∫–∞ —Å–º–æ–ª–æ–ø–ª—é—è", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[88699] = {
					"–ú–æ–ª–æ—Ç", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[135643] = {
					"–†–µ–Ω'–∫–∏—Ä–∏", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[133345] = {
					"–õ–µ–Ω–∏–≤—ã–π –ª–∞–±–æ—Ä–∞–Ω—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[59458] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[138464] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[134881] = {
					"–õ–µ–¥—è–Ω–æ–π –±–∞—Ä—å–µ—Ä", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[151773] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π –±–æ—Ç –º–æ–¥–µ–ª–∏ \"–ü–ï–°\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[44932] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π —Å–ª–µ–¥–æ–ø—ã—Ç", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[156884] = {
					"–°—É—â–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Å–∏–ª—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[91003] = {
					"–†–æ–∫–º–æ—Ä–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[14323] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –°–ª–∏–ø'–∫–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[8886] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –ø–∏—Ç–æ–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[138465] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[135258] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[155869] = {
					"–®–∏—Ä–∞–∫–µ—Å—Å - —Ç–µ–º–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[69927] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –ø—Ä–µ–ª–∞—Ç", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[13141] = {
					"–ü—Ä–æ–≥–Ω–∏–≤—à–∏–π —Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[36296] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[137442] = {
					"–í–µ—Ä—Ö–æ–≤–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –ú–∞—Ä–∞–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[76037] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ª–µ–∫–∞—Ä—å –±—É—Ä—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[18344] = {
					"–ü—Ä–∏–Ω—Ü –®–∞—Ñ—Ñ–∞—Ä", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[17991] = {
					"–†–æ–∫–º–∞—Ä –¢—Ä–µ—Å–∫—É–Ω", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[8179] = {
					"–ë–æ–ª—å—à–æ–π –∏—Å—Ü–µ–ª—è—é—â–∏–π –∏–¥–æ–ª", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[61634] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –í–æ'—Ü–∑–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[149635] = {
					"–¶–≤–µ—Ç—É—â–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[91004] = {
					"–£–ª–∞—Ä–æ–≥–≥ –°–∫–∞–ª–æ–º–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[26918] = {
					"–•–∞–æ—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–ª–æ–º", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[17307] = {
					"–í–∞–∑—Ä—É–¥–µ–Ω –ì–ª–∞—à–∞—Ç–∞–π", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[146657] = {
					"–ß–∞—Å–æ–≤–∞—è-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[75648] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[155871] = {
					"–ü–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π —É–∂–∞—Å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[91005] = {
					"–ù–∞—Ä–∞–∫—Å–∞—Å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[160990] = {
					"–û–±—Ä–∞–∑ –æ—Ç–ø—É—â–µ–Ω–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[161502] = {
					"–ì–æ–ª–æ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ø–ª–æ—Ç–∏", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[74747] = {
					"–£–∂–∞—Å –∏–∑ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[42695] = {
					"–ß–∞—Å–æ–≤–æ–π –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138468] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[4860] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ä–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[59459] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[136665] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[144611] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –±–µ–≥—É–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[145123] = {
					"–ú–∏–∞—Ä–∞ –ü–µ—Å–Ω—è –ù–æ—á–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[28695] = {
					"–û–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[21127] = {
					"–®–∫–≤–∞–ª—å–Ω–∏–∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[138469] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[59808] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —à—Ç–æ—Ä–º–∞ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[155873] = {
					"–¢–µ–º–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[152290] = {
					"–ù–µ—Å–ª—ã—à–∏–º–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[85752] = {
					"–ò–∑–≥–Ω–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[136934] = {
					"–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[11501] = {
					"–ö–æ—Ä–æ–ª—å –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[126190] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138470] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[44999] = {
					"–®–µ–Ω'–¥—Ä–∞–ª–∞—Ä—Å–∫–∏–π –¥–æ–∑–æ—Ä–Ω—ã–π", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[97269] = {
					"–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[20904] = {
					"–ù–∞—á–∞–ª—å–Ω–∏–∫ —Ç—é—Ä—å–º—ã –ú–µ–ª–ª–∏—á–∞—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[28838] = {
					"–¢–∏—Ç–∞–Ω–æ–≤—ã–π –≤–æ–∏–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[91006] = {
					"–ö–∞–º–Ω–µ—Å–ø–∏–Ω–Ω—ã–π —â–µ–ª–∫–æ–∑—É–±", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[10390] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[10422] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[138471] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∑–º–µ–µ—Å—Ç—Ä–∞–∂", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[21126] = {
					"–¶–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —á–µ—à—É–∏ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[140837] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[131817] = {
					"–ö—Ä–æ–≥–ª–æ—Ç –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[70230] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –±–æ–µ—Ü-–Ω–æ–≤–∏—á–æ–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[42696] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –≤–æ–π–Ω—ã –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[121975] = {
					"–ê–≥–≥—Ä–∞–º–∞—Ä", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[130421] = {
					"–ó–º–µ–∏–Ω—ã–π –∏–¥–æ–ª", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[138472] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–Ω", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[98173] = {
					"–ú–∏—Å—Ç–∏–∫ –°—Å–∞'–≤–µ", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[59460] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[131818] = {
					"–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[74371] = {
					"–ö–∞–ø–∏—Ç–∞–Ω-–∫–æ—Å—Ç–µ—â–µ–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[91007] = {
					"–î–∞—Ä–≥—Ä—É–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[137449] = {
					"–ü—ã–ª–µ–¥–µ–º–æ–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[39625] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –£–º–±—Ä–∏—Å—Å", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[99828] = {
					"–†—É—á–Ω–æ–π —è—Å—Ç—Ä–µ–±", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[83841] = {
					"–ü–ª–æ—Å–∫–æ–∑—É–±–æ–µ —Ä–µ—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[17961] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[131819] = {
					"–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[30660] = {
					"–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[24084] = {
					"–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[44616] = {
					"–ú–µ—Ö–∞–Ω–∏–∑–º", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[158437] = {
					"–ü–∞–¥—à–∞—è –Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[140988] = {
					"–°—Ç–∞–ª–µ—Ä–µ–∑", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[134627] = {
					"–ú–∞—Ç—Ä–∏–∞—Ä—Ö —Ç—Ä–æ–ª–ª–µ–π –∫—Ä–æ–≤–∏", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[61567] = {
					"–í–∏–∑–∏—Ä—å –¶–∑–∏–Ω—å'–±–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[26727] = {
					"–û–ø—ã—Ç–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –Ω–∞ –º–∞–≥–æ–≤", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[75652] = {
					"–î–∏—Ç—è –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[91008] = {
					"–°–∫–∞–ª—å–Ω—ã–π –∫–∞–º–Ω–µ—à–≤—ã—Ä", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[14308] = {
					"–§–µ—Ä—Ä–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11446] = {
					"–î—É—Ö –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[75396] = {
					"–£–∂–∞—Å –∏–∑ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[5756] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∫—Ä—ã–ª–æ—è–¥", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[28582] = {
					"–õ–µ–∫–∞—Ä—å –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[131821] = {
					"–ë–µ–∑–ª–∏–∫–∞—è –¥–µ–≤–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[138466] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161510] = {
					"–†–∞–∑–¥–∏—Ä–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[27431] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[150249] = {
					"–î–µ–º–æ–Ω—Ç–∞–∂–Ω–∏—Ü–∞ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[130028] = {
					"–ñ—Ä–∏—Ü–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[77700] = {
					"–ò–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å –¥—É—à –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[59461] = {
					"–ü—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[29128] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[152809] = {
					"–ê–ª—å–∫—Å'–∫–æ–≤ –ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[39626] = {
					"–ë–∞–≥—Ä–æ–≤—ã–π –ø–æ–ª–∫–æ–≤–æ–¥–µ—Ü", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[135406] = {
					"–û–∂–∏–≤—à–µ–µ –∑–æ–ª–æ—Ç–æ", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[133870] = {
					"–ë–æ–ª—å–Ω–æ–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138477] = {
					"–ö–æ–≥—Ç–µ—Å—Ç—Ä–∞–∂ –í—Ä–∞–π–∫–∏—Å—Å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[96640] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–ª—É—á–Ω–∏—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[28199] = {
					"–ö–ª–∞–¥–±–∏—â–µ–Ω—Å–∫–∏–π –ª–æ–≤–µ—Ü", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[131823] = {
					"–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[100991] = {
					"–ö–æ—Ä–Ω–∏-–¥—É—à–∏—Ç–µ–ª–∏", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[140338] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –≥–Ω–µ–∑–¥–∞ –î–∂–∏–Ω–∫–∞'–ª–æ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[45001] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –±–∞–Ω–¥–∏—Ç", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[150251] = {
					"–ú–µ—Ö–∞–Ω–∏–∫ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[28583] = {
					"–í–æ–ª–¥—ã—Ä–Ω—ã–π –ø–∞—Ä–æ–∑–ª–æ–±", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[24552] = {
					"–õ—ã–±–±—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[27972] = {
					"–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–ª–Ω–∏–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[131824] = {
					"–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[24744] = {
					"–í–µ–∫—Å–∞–ª–∏—É—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[99200] = {
					"–î—Ä–µ—Å–∞—Ä–æ–Ω", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[74886] = {
					"–ö–æ—Å—Ç–æ–ª–æ–º –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[154347] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[69916] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—É—Ä—É–±–∞—à–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[10384] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[58684] = {
					"–†–∞—Å—Å–µ–∫–∞—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[131825] = {
					"–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[28578] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[157419] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[133361] = {
					"–ò–∑–Ω—É—Ä–µ–Ω–Ω—ã–π —Å–ª—É–≥–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[150253] = {
					"–í–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–π —Ä–æ–±–æ–ø–∞—É–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[46383] = {
					"–†–µ–Ω–¥–æ–ª—å—Ñ –ú–æ–ª–æ—Ö", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[85750] = {
					"–ò–∑–≥–æ–π-–æ—Å—Ç—Ä–æ–∫–æ–≥–æ—Ç—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[29735] = {
					"–í–∑–±–µ—à–µ–Ω–Ω—ã–π –≤–æ—Ä–≥", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[11470] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∏–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[68220] = {
					"–ë—Ä—é—Ö–æ–Ω–æ–≥", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[44234] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤–∞—è –ø–∏—è–≤–∫–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[59974] = {
					"–ö–ª–∏–º–¥—Ä—É–∏–¥", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[150254] = {
					"–£—Ç–∏–ª—å—Ö–∞—É–Ω–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138481] = {
					"–•—Ä–æ–º–∏—Ç", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134898] = {
					"–Ø–¥–æ–∫–ª—ã–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[17962] = {
					"–†–∞–±–æ—Ç—è–≥–∞ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[67977] = {
					"–¢–æ—Ä—Ç–æ—Å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[13142] = {
					"–ó–∞–≥–Ω–∏–≤—à–∏–π –ø–ª–µ—Ç—É–Ω", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[50561] = {
					"–ö—Ä–æ–≤–æ–∂–∞–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[138482] = {
					"–ö–∞–ª—É—Ä–∏–∞–∫ –ê–ª—Ö–∏–º–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26536] = {
					"–ë–µ–∑–º–æ–∑–≥–ª—ã–π —Å–ª—É–≥–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[134899] = {
					"–Ø–¥–æ–∫–ª—ã–∫-—Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[417] = {
					"Rhuutom", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[82310] = {
					"–ö–∞–º–µ–Ω–Ω–æ—à–∫—É—Ä–æ–µ —Ä–µ—á–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[26792] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –∑–∞—Å—Ç—É–ø–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[26728] = {
					"–ü–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –Ω–∞ –º–∞–≥–æ–≤", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[7849] = {
					"–ú–æ–±–∏–ª—å–Ω–∞—è –æ—Ö—Ä–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[56754] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[134388] = {
					"–ö–ª—É–±–æ–∫ –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[134900] = {
					"–ü–∞—É–∫-—è–¥–æ–∫–ª—ã–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[30416] = {
					"–£–∫—Ä–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[135924] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω–∞—è —è—Ä–æ—Å—Ç—å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[152816] = {
					"–ë—É—Ä–µ–≤–∏–∫", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[58823] = {
					"–ù–µ–æ—Ñ–∏—Ç –ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[162030] = {
					"–í–µ–¥–æ–º—ã–π –≥–æ–ª–æ—Å–∞–º–∏ —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[19306] = {
					"–ú–∞–Ω–æ—Å–æ—Å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[134389] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[133588] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∑—Ä—ã–≤—á–∞—Ç–∫–æ—Å—Ç—Ä–µ–ª", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[131318] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –õ–∏–∫—Å–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[16808] = {
					"–í–æ–∂–¥—å –ö–∞—Ä–≥–∞—Ç –û—Å—Ç—Ä–æ—Ä—É–∫", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[74488] = {
					"–•–ª–∞–¥–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[78728] = {
					"–®–∞–∞–¥—É–º", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[131669] = {
					"–®–∏–ø–∞—Å—Ç–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[134390] = {
					"–ü–µ—Å–æ—á–Ω–∞—è –∑–º–µ—è", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[91781] = {
					"–í–æ–∏–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[11784] = {
					"–¢–µ—Ä–∞–¥—Ä–∏–º—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[28200] = {
					"–¢–µ–º–Ω—ã–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[135926] = {
					"–î—ã–º–æ—Å–µ—Ä–¥", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[40268] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –±–æ–µ–≤–æ–π –º–∞–≥", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[29340] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å –≤—ã–≤–æ–¥–∫–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[24553] = {
					"–ê–ø–æ–∫–æ", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[40579] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫ - –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[28584] = {
					"–ù–µ–æ–±—É–∑–¥–∞–Ω–Ω—ã–π –æ–≥–Ω–µ–Ω–Ω—ã–π —à—Ç–æ—Ä–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[91782] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[45259] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–∏–∞–º–∞—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[24745] = {
					"–ß–∏—Å—Ç–∞—è —ç–Ω–µ—Ä–≥–∏—è", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[7228] = {
					"–ò—Ä–æ–Ω–∞–π–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[10391] = {
					"–°–∫–µ–ª–µ—Ç-–±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[10423] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∂—Ä–µ—Ü", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[29096] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[75658] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[7276] = {
					"–ú–µ—Ä—Ç–≤—ã–π –≥–µ—Ä–æ–π –ó—É–ª'–§–∞—Ä—Ä–∞–∫–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[42188] = {
					"–û–∑—Ä—É–∫", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[59078] = {
					"–ë–µ–∑–¥–∞—Ä–Ω—ã–π —É—á–µ–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[113537] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[56732] = {
					"–õ—é –ü–ª–∞–º–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59080] = {
					"–¢–µ–º–Ω—ã–π –º–∞–≥–∏—Å—Ç—Ä –ì–∞–Ω–¥–ª–∏–Ω–≥", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[150773] = {
					"–°–≤–µ—Ç—è—â–∏–π—Å—è –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[30418] = {
					"–£–∫—Ä–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[59464] = {
					"–ü—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[7275] = {
					"–ñ—Ä–µ—Ü –¢—å–º—ã –®–µ–∑–∑'–∑–∏–∑", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[74379] = {
					"–ö–æ—Å—Ç–µ—â–µ–ø-–ª–µ–¥–æ–ø–ª–µ—Ç", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[8901] = {
					"–†–µ–∑–µ—Ä–≤–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[46381] = {
					"–ò–∑–≤–æ—Ä–æ—Ç–ª–∏–≤—ã–π –≤–æ—Ä", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[158452] = {
					"–ò—Å–∫–∞–∂–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[91783] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[17835] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[17963] = {
					"–†–∞–±-–±—Ä–æ–¥—è–≥–∞ –ø—É—Å—Ç–æ—à–µ–π", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[29214] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —É–±–∏–π—Ü–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[40269] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –¥—É—Ö –≥—Ä–æ–º–∞", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[136811] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–∞–ª–µ—á–Ω–∏–∫–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[59518] = {
					"–†–∞–∑–¥—É–≤—à–∏–π—Å—è –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[102277] = {
					"–î–≤–æ–π–Ω–∏–∫ —Å–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥–∞-—Å—Ç—Ä–µ–ª–∫–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[152311] = {
					"–ó–∞–Ω—à'–∏—Ä-–º–∏—Ä–º–∏–¥–æ–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[126847] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –†–∞—É–ª—å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136955] = {
					"–ó–∞–Ω—á—É–ª—å—Å–∫–∏–π –ø—Ä–µ–¥–∞—Ç–µ–ª—å", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[26729] = {
					"–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[26793] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π —Ö–ª–µ—Å—Ç—É–Ω", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[153335] = {
					"–ú–æ—â–Ω–∞—è –∏—Å–∫—Ä–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[157709] = {
					"–î—Ä–∏–ª–∏–∞–Ω–∞", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[7788] = {
					"–ß–µ—Ä–Ω–æ—Ä–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[91784] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –ü–∞—Ä–∂–µ—à", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[13456] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ù–æ–∫—Å–∏–æ–Ω–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[135932] = {
					"–í—É–ª–∫–∞–Ω–∞—Ä", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[58569] = {
					"–û—Å–≤—è—Ç–∏—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[68221] = {
					"–ß–µ—Ä–≤—å-–±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[23694] = {
					"–ü—É–ª—å—Å–∏—Ä—É—é—â–∞—è —Ç—ã–∫–≤–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[121985] = {
					"–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[19307] = {
					"–£–∂–∞—Å–µ–Ω—å –ù–µ–∫—Å—É—Å–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[142587] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[126848] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –Æ–¥–æ—Ä–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[56876] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–ø–µ—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[152313] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –£–∂–∞—Å–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[62205] = {
					"–ö–æ–º–∞–Ω–¥—É—é—â–∏–π —Ñ–ª–∞–Ω–≥–æ–º –ù–µ—Ä'–æ–Ω–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[138493] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56906] = {
					"–î–∏–≤–µ—Ä—Å–∞–Ω—Ç –ö–∏–ø'—Ç–∏–ª–∞–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[28009] = {
					"Rhinoc√©ros", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[91785] = {
					"–ë—Ä–æ–¥—è—á–∏–π –ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[79756] = {
					"–•–ª–∞–¥–Ω–æ—Ä—ã–ª–∞—è —Å–≤–∏–Ω—å—è", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[28201] = {
					"–ñ–µ–ª—á–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[74486] = {
					"–õ–µ–¥–µ–Ω—è—â–∏–π –¥—É—Ö", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[40270] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –≥—Ä–æ–º–∞", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[28585] = {
					"–®–ª–∞–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[141565] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[8156] = {
					"–°–ª—É–≥–∞ –ê–Ω—Ç—É'—Å—É–ª–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[114308] = {
					"–†–∞–∑–≥–Ω–µ–≤–∞–Ω–Ω—ã–π –æ–≥–Ω–µ–∑–æ–ª", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[24554] = {
					"–≠—Ä–∞–º–∞—Å –°–∏—è—é—â–µ–µ –ü–ª–∞–º—è", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[140970] = {
					"–°–∫–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[74382] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —Ç–µ–º–Ω—ã–π –º–∞–≥", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[140542] = {
					"–ü–∞—É–∫-–ø–µ–ø–ª–æ—Ç–∫–∞—á", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[132864] = {
					"–ú–æ–ª–æ–¥–æ–π –∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[141566] = {
					"–ö–∏—à–∫–æ–¥–µ—Ä –∏–∑ –±–∞–Ω–¥—ã –†–µ–∑—á–∏–∫–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[29097] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[91786] = {
					"–ü–µ—Å—á–∞–Ω–∞—è —É–ª–∏—Ç–∫–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[8440] = {
					"–ê–≤–∞—Ç–∞—Ä–∞ –•–∞–∫–∫–∞—Ä–∞", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[155899] = {
					"–°–∞–∫'–¥–∂–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[17371] = {
					"–ß–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[114309] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –ª–æ–≤—á–∏–π –ù–µ–∫—Å—É—Å–∞", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[58826] = {
					"–¶–∑–∞–æ –ò—Å–∫–∞—Ç–µ–ª—å –°–æ–ª–Ω—Ü–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[97264] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–∞–∫–æ–≤–∏–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[43214] = {
					"–ö–∞–º–Ω–µ—à–∫—É—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[138496] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–∞–∞—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139008] = {
					"–î—Ä–µ–≤–Ω–∏–π —Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[155900] = {
					"–ó—Å–∞'–ª–∏—Å—Å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[102792] = {
					"–ó–∏—Ç—Ä–µ–Ω–∞–π—Å–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[59722] = {
					"–ö—É—á–∞ —Ç—Ä—É–ø–æ–≤", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[78734] = {
					"–ó–∏–ø—Ç–µ–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[137473] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Å—Ç—Ä–∞–∂–∏ –ê—Ç—É", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[56395] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[91787] = {
					"–ß–∞–π–∫–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[134914] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[17964] = {
					"–†–∞–±–æ—á–∏–π-–±—Ä–æ–¥—è–≥–∞ –ø—É—Å—Ç–æ—à–µ–π", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[27483] = {
					"–ö–æ—Ä–æ–ª—å –î—Ä–µ–¥", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[16594] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[84877] = {
					"–ö–∞–º–Ω–µ–º–∞–≥ –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[133379] = {
					"–ì—é—Ä–∑–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[85753] = {
					"–ö–∞–ª–∏—Ä–∏ - —É–∂–∞—Å –Ω–µ–±–µ—Å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[138498] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[58674] = {
					"–ó–ª–æ–π –ø–µ—Å", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[125828] = {
					"–ò–º–±–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[26730] = {
					"–£–±–∏–π—Ü–∞ –º–∞–≥–æ–≤", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[26794] = {
					"–û—Ä–º–æ—Ä–æ–∫ –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å –î–µ—Ä–µ–≤", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[78735] = {
					"–ó–∞—Ä'—à—É—É–ª", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[37713] = {
					"–ú—É—á–∏—Ç–µ–ª—å –∏–∑ —Å–≤–∏—Ç—ã –õ–µ–¥–∏", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[75152] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –î–∂–∞—Ä–≥–±–∞", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[37712] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ —Å–≤–∏—Ç—ã –õ–µ–¥–∏", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[139011] = {
					"–î–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[45007] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –±–∞–Ω–¥–∏—Ç", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[131847] = {
					"–ì—É–ª—è–∫–∞ –∏–∑ –¥–æ–º–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[47232] = {
					"–ü—Ä–∏–∑—Ä–∞–∫ –ø–æ–≤–∞—Ä–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[136964] = {
					"–ê—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[27651] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–≥–æ–Ω—å", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[130435] = {
					"–û–¥—É—Ä–º–∞–Ω–µ–Ω–Ω—ã–π –≤—ã—à–∏–±–∞–ª–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138500] = {
					"–°—É–º–µ—Ä–µ—á–Ω–∞—è —á–µ—à—É–π—á–∞—Ç–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59467] = {
					"–ú–∞–≥ —Å –ø–æ–¥—Å–≤–µ—á–Ω–∏–∫–æ–º", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[40272] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –∫–∞–º–Ω–µ–ª–æ–º", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[152833] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤—ã–π –≥–∏–≥–∞–Ω—Ç", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç ‚Äì –°–µ—Ä–¥—Ü–µ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[150276] = {
					"–¢—è–∂–µ–ª—ã–π —Ö–ª–∞–º–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[122089] = {
					"–û—Ä–∞–∫—É–ª –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[137989] = {
					"–ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–æ—Å—Ç–∞–≤", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138501] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139013] = {
					"–ë–µ—à–µ–Ω—ã–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[91790] = {
					"–•–æ–¥—É–ª—å–Ω–∏–∫ –ú–∞–∫'—Ä–∞–Ω—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[76177] = {
					"–°—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –¥—É—à –ù–∏–∞–º–∏", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[152834] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç ‚Äì –°–µ—Ä–¥—Ü–µ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[5053] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∫—Ä–æ–∫–æ–ª–∏—Å–∫", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[137478] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –£–∞—Å–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[130436] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[28586] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ë—å—è—Ä–Ω–≥—Ä–∏–º", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[61387] = {
					"–¶–∏–π–ª–∏–Ω—å-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[151812] = {
					"–î–µ—Ç–µ–∫—Ç–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[24683] = {
					"–ú–∞–≥-—Å—Ç—Ä–∞–∂–Ω–∏–∫ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[152835] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç ‚Äì –°–µ—Ä–¥—Ü–µ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[157442] = {
					"–í–∑–æ—Ä –±–µ–∑—É–º–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[133384] = {
					"–ú–µ—Ä–µ–∫—Ç–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[10424] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∫–∞–≤–∞–ª–µ—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[29098] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[147205] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ê–º–∏–∫–∞–ª", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[143622] = {
					"–î–∏–∫–∏–π –±–µ—Å", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[5277] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π —á–µ—à—É–π—á–∞—Ç—ã–π –≥—É–±–∏—Ç–µ–ª—å", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[152836] = {
					"–ê–∑–µ—Ä–∏—Ç–æ–≤—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç ‚Äì –°–µ—Ä–¥—Ü–µ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[26639] = {
					"–®–∞–º–∞–Ω –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[139529] = {
					"–ú—É–∫–ª–∞–π", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[130437] = {
					"–ö–æ–±–æ–ª—å–¥-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138504] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –î—Ä–∞–∫–∫–∞—Ä–∏–æ–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139211] = {
					"–í–µ—á–Ω–æ—Ü–≤–µ—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[11492] = {
					"–ê–ª–∑–∑–∏–Ω –ü–µ—Ä–µ–≤–µ—Ä—Ç–µ–Ω—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[17517] = {
					"–ö–∞—Ä–∞—É–ª—å–Ω—ã–π —Ü–∏—Ç–∞–¥–µ–ª–∏ –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[11460] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ê–ª–∑–∑–∏–Ω–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[44752] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø–æ–¥–∞–≤–∏—Ç–µ–ª—å", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[59980] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[75155] = {
					"–ê–∫—É'–º–∞–π –ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[123272] = {
					"–†—ã–±–æ–∫–æ–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ—à–∫—É—Ä–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[79507] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[11032] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ú–∞–ª–æ—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[152326] = {
					"–ö–∞–π—Ä–∞ –ë—É—à–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[40273] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –≤–æ–¥–æ–ø–ª–µ—Å–∫", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[11448] = {
					"–ß–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[26691] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[69013] = {
					"–†–∞—Å—Å–µ—è–Ω–Ω–∞—è –º–æ–ª–Ω–∏—è", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[122504] = {
					"Raptor", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[61436] = {
					"–°–∏–∫'—Ç–∏–∫ - —Ç–∞–Ω—Ü—É—é—â–∏–π —Å –∫–ª–∏–Ω–∫–∞–º–∏", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[127111] = {
					"–ë–æ–µ—Ü –Ω–∞ –≤–µ—Å–ª–∞—Ö –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26731] = {
					"–í–µ–ª–∏–∫–∞—è –≤–µ–¥—É–Ω—å—è –¢–µ–ª–µ—Å—Ç—Ä–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[91792] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω–∞—è –±—É—Ä–µ–π –≥–∏–¥—Ä–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[127879] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[5709] = {
					"–¢–µ–Ω—å –≠—Ä–∞–Ω–∏–∫—É—Å–∞", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[146185] = {
					"–û–≥–Ω–µ–∂–∞–ª-—Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[11480] = {
					"–í–æ–ª—à–µ–±–Ω–∞—è –∞–±–µ—Ä—Ä–∞—Ü–∏—è", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[134091] = {
					"–ë–æ–µ–≤–æ–π –º–∞–≥ 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[26529] = {
					"–ú—è—Å–Ω–æ–π –ö—Ä—é–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[140269] = {
					"–£–ª—É'—Ç–∞–ª–µ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[58676] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[157447] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π —Å–µ–∫—Ç–∞–Ω—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[137484] = {
					"–ö–æ—Ä–æ–ª—å –ê'–∞–∫—É–ª", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[146186] = {
					"–û–≥–Ω–µ–∂–∞–ª-–≤–æ–∏–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[59213] = {
					"–ö–æ—Å—Ç—è–Ω–æ–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[736] = {
					"–ö–æ—à–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[24078] = {
					"–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[136830] = {
					"–û—Ö–æ—Ç–Ω–∏—Ü–∞ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[146187] = {
					"–û–≥–Ω–µ–∂–∞–ª-–ø–æ–∫–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[138509] = {
					"–ß–∞—Ä–æ–ø–ª–µ—Ç –£–ª—É—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137485] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π –∫—Ä–æ–≤—å—é —à–ø–∏–æ–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[75157] = {
					"–ê–∫—É'–º–∞–π –Ø–¥–æ–≤–∏—Ç—ã–π", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[91793] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫—Ä–∞–±", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[39890] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥–µ–º–∏—É—Ä–≥", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[154565] = {
					"–í–µ—Ä–Ω—ã–π –º–∏—Ä–º–∏–¥–æ–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[23775] = {
					"–ì–æ–ª–æ–≤–∞ –í—Å–∞–¥–Ω–∏–∫–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[153541] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –£–ª'—Ä–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[157449] = {
					"–ó–ª–æ–≤–µ—â–∏–π —Ä–µ–∑—á–∏–∫ –¥—É—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[137486] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ü–∞—Ç–ª–∞–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[12216] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –≥—Ä–µ–ª–ª—å", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[28587] = {
					"–í–æ–ª—Ö–∞–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[102287] = {
					"–£–≥–ª–µ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[74483] = {
					"–ê—Ä–∞x–Ω–æ–º–∞–Ω—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú–µ—Ä—Ç–≤–æ–π –ì–æ–ª–æ–≤—ã", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[24684] = {
					"–†—ã—Ü–∞—Ä—å –∫—Ä–æ–≤–∏ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[137487] = {
					"–û—Ö–æ—Ç–Ω–∏—á–∏–π —è—â–µ—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[157450] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[74902] = {
					"–í–æ–∏–Ω-–∫–æ—Å—Ç–µ—â–µ–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[47231] = {
					"–¢–µ–º–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[91794] = {
					"–°–∫—Ä—ã—Ç–µ–Ω—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[139023] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π –ö—Ä–æ–≤–æ–∑–µ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[128649] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –ë–µ–π–Ω–±—Ä–∏–¥–∂", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59598] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[68248] = {
					"–¢—Ä—É–ø–Ω—ã–π –ø–∞—É–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[136976] = {
					"–¢'–∑–∞–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[152333] = {
					"–¢–µ–º–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç –õ–µ–Ω–∞—Ä–∞", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[79510] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π –ø–∏—Ä–æ–º–∞–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[134417] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π —Ä–∏—Ç—É–∞–ª–∏—Å—Ç", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[137160] = {
					"–ò–Ω–∂–µ–Ω–µ—Ä —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[139536] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —Ç—Ä—É—Ç–µ–Ω—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131858] = {
					"–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[59726] = {
					"–û–ø–∞—Å–Ω–æ—Å—Ç—å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[29931] = {
					"–õ—é—Ç–æ—Ä–æ–≥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[59982] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[8889] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[134418] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[139537] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫-–∫—É–Ω—å—á—É–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[75927] = {
					"–ê–∑–∑–∞–∫–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[9017] = {
					"–õ–æ—Ä–¥ –û–ø–∞–ª–∏—Ç–µ–ª—å", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[5283] = {
					"–°—Ç—Ä–∞–Ω–Ω–∏–∫ –∫–æ—à–º–∞—Ä–∞", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[97170] = {
					"–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[155917] = {
					"–ê–∑—à'–∞—Ä–∏-–±—É—Ä–µ–≤–µ—Å—Ç–Ω–∏—Ü–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[69017] = {
					"–ò–∑–Ω–∞—á–∞–ª–∏–π", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[138514] = {
					"–ê—Ç–∏–æ–Ω–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139026] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –ó–∞—Ç–º–µ–Ω–∏—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[26668] = {
					"–°–≤–∞–ª–∞ –í–µ—á–Ω–æ—Å–∫–æ—Ä–±—è—â–∞—è", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[91796] = {
					"–°–∫—Ä–æ–≥-–≤–æ–ª–Ω–æ–ª–æ–º", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[26796] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ü–∏–≤–æ–±–æ—Ä–æ–¥", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[146885] = {
					"–ì–Ω–∏–ª–æ–≤—Ä–∞–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[58108] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[158478] = {
					"–ó–∞—Ä–∞–∑–Ω–∞—è –æ–ø—É—Ö–æ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[79511] = {
					"–ü—ã–ª–∞—é—â–∏–π –ø–ª—É—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[58319] = {
					"–ú–∞–ª—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[155919] = {
					"–ë—É—Ä–µ–≤–∏–∫", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[97171] = {
					"–ö–æ–ª–¥—É–Ω—å—è –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ–ª–µ—Ü –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[58959] = {
					"–ì—É–∑'—Ç—É–ª–æ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132885] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[126092] = {
					"–ì–ª–∞–¥–∏–∞—Ç–æ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[161217] = {
					"–ê–∫–∏—Ä-–±—ã—Å—Ç—Ä–æ–Ω–æ–≥", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[134796] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[5139] = {
					"–ö—É—Ä–¥—Ä—É–º –Ø—á–º–µ–Ω–æ–±–æ—Ä–æ–¥", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[155920] = {
					"–ê–∑—à'–∞—Ä–∏ - —à—Ç–æ—Ä–º–æ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[61389] = {
					"–í–µ–ª–∏–∫–∏–π —Å—Ç—Ä–∞–∂ –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[65402] = {
					"–ú–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –∫–ª–∏–Ω–æ–∫ –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[150467] = {
					"–ù–µ–≤–∏–¥–∏–º–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[91797] = {
					"–ö–æ—Ä–æ–ª—å –í–æ–ª–Ω–æ–±–æ—Ä–æ–¥", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[75417] = {
					"–•–ª–∞–¥–Ω–æ—Ä—ã–ª—ã–π –ø–æ—Ä–æ—Å–µ–Ω–æ–∫", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[128652] = {
					"–í–∏–∫'–ì–æ—Ç", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[39892] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –≥–æ—Ä—è—â–∏–π —É–≥–æ–ª—å", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[3527] = {
					"–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[131863] = {
					"–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[136470] = {
					"–ü—Ä–æ–¥–∞–≤—â–∏—Ü–∞ –∑–∞–∫—É—Å–æ–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[97172] = {
					"–ß–∞—Å—Ç–∏—Ü–∞ –º–æ—Ä—Å–∫–æ–π –≤–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[8876] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[36565] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[134423] = {
					"–û–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[24557] = {
					"–ö–∞–≥–∞–Ω–∏ –ù–æ—á–Ω–æ–π –£–¥–∞—Ä", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[11471] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∞—è —Ç–µ–Ω—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[24685] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[140341] = {
					"–û–±–ª–∞—á–Ω—ã–π –†–µ–∑–≤—É–Ω", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[133912] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[10393] = {
					"–ß–µ—Ä–µ–ø", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[10425] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –±–æ–µ–≤–æ–π –º–∞–≥", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20910] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–∞–∞—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[146883] = {
					"–ü—Å–∞—Ä—å –ê–Ω–≥–≤–æ–ª—å–¥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[7309] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-–∫–æ–º–µ–Ω–¥–∞–Ω—Ç", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[21102] = {
					"Can del N√∫cleo", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[152852] = {
					"–ü–∞—à–º–∞—Ä –§–∞–Ω–∞—Ç–∏—á–Ω–∞—è", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[97173] = {
					"–ù–µ—É—Ç–æ–º–∏–º–∞—è –≤–æ–ª–Ω–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[76954] = {
					"–ü–∞–±—É-—Ä–∞", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[150293] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[7405] = {
					"–°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π –ø–µ—â–µ—Ä–Ω—ã–π —Å–∫–æ—Ä–ø–∏–¥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[139032] = {
					"–°—Ç—Ä–∞–∂ –≤–æ–ª–Ω –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[17455] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –∑–≤–µ—Ä–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ—Å—Ç–µ–≥–ª–æ–¥–æ–≤", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[135961] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[152853] = {
					"–°–∏–ª–∏–≤–∞–∑ –†–µ–≤–Ω–æ—Å—Ç–Ω—ã–π", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[39381] = {
					"–ë–∞–≥—Ä–æ–≤—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[126094] = {
					"–í–æ–ª–Ω–æ–≥–æ–Ω –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[136984] = {
					"–†–µ–±–∞–Ω", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[17839] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[139033] = {
					"–í–ª–∞–¥—ã–∫–∞ –≤–æ–¥ –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135963] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[59771] = {
					"–ó–æ–º–±–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä—É–ø", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[156949] = {
					"–ú–∞—Å—Ç–µ—Ä –∫–ª–∏–Ω–∫–∞ –¢–µ—Ä–µ–Ω—Å–æ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[157461] = {
					"–ú–∏—Ü–µ–ª–∏–∞–ª—å–Ω–∞—è –∫–∏—Å—Ç–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[126095] = {
					"–í—É–ª–∏—Å—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150295] = {
					"\"–¢–∞–Ω–∫–æ–±–æ—Ä–µ—Ü-1\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134427] = {
					"–°–µ—Ç—Ä–∞–∫ - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –Ω–µ–±–µ—Å", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[139034] = {
					"–ü—Ä–æ–Ω–∑–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[26669] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –¥–∏–∫–∞—Ä—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[45268] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–∏–∞–º–∞—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[30892] = {
					"–°—Ç—Ä–∞–∂ –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[26861] = {
					"–ö–æ—Ä–æ–ª—å –ò–º–∏—Ä–æ–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[7789] = {
					"–ì–ª—É–ø–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[3887] = {
					"–ë–∞—Ä–æ–Ω –°–∏–ª—å–≤–µ—Ä–ª–µ–π–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[134428] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –∫–ª–∏–Ω–∫—É –≥—Ä–µ–º—É—á–Ω–∏–∫", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[159510] = {
					"–û–∫–æ –≥–ª—É–±–∏–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132892] = {
					"–í–µ—Ç—Ä–æ–ª–∏—Å—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[75416] = {
					"–•–ª–∞–¥–Ω–æ—Ä—ã–ª—ã–π –≤–µ–ø—Ä—å", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[76444] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[50857] = {
					"–û–¥–æ –°–ª–µ–ø–æ–π –°—Ç—Ä–∞–∂", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[11673] = {
					"–î–µ–π–º–æ—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[150297] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134429] = {
					"–ì—Ä–µ–º—É—á–Ω–∏–∫ - –≤–µ—Å—Ç–Ω–∏–∫ –≤–æ–π–Ω—ã", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[134941] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø–∞—É–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[151833] = {
					"–ë–µ—Å–ø—Ä–∏—é—Ç–Ω–∞—è –¥—É—à–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134600] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130275] = {
					"–°–µ—Å—Ç—Ä–∞ –ö–µ–ª–µ–±—Ä–∞—Å–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[136989] = {
					"–û–ø–æ–ª—á–µ–Ω–∫–∞ –∏–∑ –ù–æ–≤–æ–∑–µ–º—å—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[27949] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[28419] = {
					"–ë–µ—Å–Ω–æ–≤–∞—Ç—ã–π —É–ø—ã—Ä—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[46264] = {
					"–õ–æ—Ä–¥ –ü–µ—Ä–µ–∂–∞—Ä", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139037] = {
					"–¶–∑–∏–Ω—å-—é–π –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[3246] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π —Ä–∞–≤–Ω–∏–Ω–Ω—ã–π –¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[96664] = {
					"–í–∞–ª–∞—Ä—å—è—Ä - —Ä–µ–∑—á–∏–∫ —Ä—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[56658] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[10997] = {
					"–í–∏–ª–ª–∏ –†–∞–∑–±–∏–≤–∞—é—â–∏–π –ù–∞–¥–µ–∂–¥—ã", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[46262] = {
					"–ì—Ä–µ–º—è—â–∏–π –≥–ª–∏–Ω—è–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–¢—é—Ä—å–º–∞ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[12217] = {
					"–ë–µ—Å-–æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[134431] = {
					"–¢—Ä–æ–ª–ª—å –∫—Ä–æ–≤–∏", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[24558] = {
					"–≠–ª–ª—Ä–∏—Å–∞ –ü–æ—á–∏—Ç–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¢–µ–Ω–∏", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[155930] = {
					"–ò–∑–±—Ä–∞–Ω–Ω—ã–π –∏–∑ –ì–ª—É–±–∏–Ω–Ω–æ–≥–æ —É–ª—å—è", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[45269] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–∏–∞–º–∞—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[146881] = {
					"–í–µ–¥—É–Ω –ë—Ä–∏–Ω–≤—É–ª—å—Ñ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135167] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[134944] = {
					"–î–≤–æ—Ä—Ñ-—Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[61946] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä–∏ –∏–∑ –∫–ª–∞–Ω–∞ –•–∞—Ä—Ç–∞–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[134432] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[100248] = {
					"–†–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞ –õ–∏—à–∞", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[74480] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π-–∫–æ—Å—Ç–µ—â–µ–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[159514] = {
					"–ö—Ä–æ–≤—å –ù–∏–∞–ª–æ—Ç—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[76446] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[161562] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –®–∞—Ä'–∞–∑", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[38487] = {
					"–ü–∞–≤—à–∏–π –≤–æ–∏–Ω", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[17264] = {
					"–°—Ç–µ—Ä–≤—è—Ç–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ—Å—Ç–µ–≥–ª–æ–¥–æ–≤", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[134433] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫—Ä–æ–≥", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[151325] = {
					"–¢—Ä–µ–≤–æ–≥–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[69792] = {
					"√Ñmiyaa-KhazModan", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[26690] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[61434] = {
					"–°–∏–∫'—Ç–∏–∫ - –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[59789] = {
					"–¢–∞–ª–Ω–æ—Å –í–æ–∑–¥–∞—è—Ç–µ–ª—å –î—É—à", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[9156] = {
					"–ü–æ—Å–æ–ª –û–≥–Ω–µ—Ö–ª—ã—Å—Ç", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[152331] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –õ–µ–Ω—Å–∏ –†–µ–≤—à–æ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139041] = {
					"–ê–∫–≤–∞–º–∞–Ω—Ç –õ—É—à—É", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[100249] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –í–∞—Ä–∏—Å", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[40319] = {
					"–î—Ä–∞–≥—Ö –ì–æ—Ä—è—á–∏–π –ú—Ä–∞–∫", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[144160] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –ö—Ä–∞—Å–Ω–æ–∫—Ä—é–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[13145] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –ì—Ä—É–º–º", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[104856] = {
					"–õ–µ–¥–∏ –ó–∏—Ç—Ä–∏–Ω", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[56915] = {
					"–°–æ–ª–Ω—Ü–µ", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[151839] = {
					"–ù–µ—É–ø–æ–∫–æ–µ–Ω–Ω–∞—è –¥—É—à–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[9178] = {
					"–ü—ã–ª–∞—é—â–∏–π –¥—É—Ö", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[30893] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[26670] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –ø–ª–æ—Ç–æ–µ–¥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[26734] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[136483] = {
					"–ú–∞—Ç—Ä–æ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[145185] = {
					"\"–ì–Ω–æ–º–æ–≥–µ–¥–¥-0–ù\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[11790] = {
					"–°–∞—Ç–∏—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –¢–ª–µ—Ç–≤–æ—Ä–Ω—ã—Ö", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[138019] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[75247] = {
					"–ì—Ä–æ–π–∞—Ç –°–ª–µ–ø–æ–π –û—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[139043] = {
					"–í–æ–ª–Ω–æ—Ä–µ–∑ –û—á–æ", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151840] = {
					"–ì–Ω—É—Å–Ω–∞—è –¥—É—à–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140067] = {
					"–†—ã–∂–µ—à–∫—É—Ä-–∞–ª—å—Ñ–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140058] = {
					"–°–µ—Ä–æ—à–∫—É—Ä-–ø–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[132901] = {
					"–ì—É–ª–∞–Ω—Å–∫–∏–π —è—É–Ω–≥–æ–ª", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[126100] = {
					"–¢–µ–º–Ω–æ—à–∫—É—Ä—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[100250] = {
					"–ü–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ê—à–∏–æ–π", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[134437] = {
					"–†–æ–±–æ—Ç-–ª–µ–∫–∞—Ä—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[139044] = {
					"–ú–∞—Å—Ç–µ—Ä –≤–æ–ª–Ω –ê—à–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151841] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –ë—É—Ä–≥—Ç–æ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[140068] = {
					"–†—ã–∂–µ—à–∫—É—Ä-—Ä—ã—á—É–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134139] = {
					"–•—Ä–∞–º–æ–≤–Ω–∏—Ü–∞ –∏–∑ –°–≤—è—Ç–∏–ª–∏—â–∞ –®—Ç–æ—Ä–º–æ–≤", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[153377] = {
					"–ñ–∏–∂–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[61444] = {
					"–ú–∏–Ω –ö–æ–≤–∞—Ä–Ω—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[4958] = {
					"–ë–ª—É–∂–¥–∞—é—â–∏–π –¥—É—Ö", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[134945] = {
					"–ì–Ω–æ–º–∫–∞-–≥–∏—Ä–æ–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134950] = {
					"–£–∂–∞—Å–Ω—ã–π –ø–∞—É–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[159309] = {
					"–ü–æ—Ö–∏—â–∞—é—â–∏–π –∂–∏–∑–Ω—å –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[140069] = {
					"–í–æ–ª–∫-—Ä—ã–∂–µ—à–∫—É—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[152866] = {
					"–ó–∞—Ç–≤–µ—Ä–¥–µ–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç ‚Äì –°–µ—Ä–¥—Ü–µ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[20208] = {
					"–ò—Å—Ü–µ–ª—è—é—â–∏–π –∏–¥–æ–ª –ú–µ–Ω–Ω—É", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[134951] = {
					"–ì–Ω–æ–º–∫–∞-–≥–∏—Ä–æ–∏–Ω–∂–µ–Ω–µ—Ä", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[140070] = {
					"–ö—Ä–æ–≤–æ–Ω—é—Ö –°–ª–µ–¥–æ–ø—ã—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[65362] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[24559] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –°–∞–ª–∞—Ä–∏—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[5134] = {
					"–î–∂–æ–Ω–∏–≤–µ—Ä–∞ –î–∞–ª—å–Ω–æ–≥–æ—Ä", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[24687] = {
					"–í—Ä–∞—á –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[16523] = {
					"–î–∏–∫–∞—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[24815] = {
					"–ë–µ—Å –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[137511] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[10426] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20912] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –°–∫–∞–π—Ä–∏—Å—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[11058] = {
					"–§—Ä–∞—Å –°–∏–∞–±–∏", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[140071] = {
					"–°—Ç–∞—Ä–∏–Ω–∞ –û–¥–Ω–æ–∑—É–±", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[21104] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[24686] = {
					"–ß–µ—Ä–Ω–æ–∫–Ω–∏–∂–Ω–∏–∫ –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[157475] = {
					"–ê–Ω–∞–±–æ–ª–∏—á–µ—Å–∫–∏–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[59293] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[122263] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59220] = {
					"–î–∂–∞–Ω–¥–∏—Å –ë–∞—Ä–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[83798] = {
					"–†–∞—Å–∫–∞–ª–µ–Ω–Ω—ã–π —É–≥–æ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[29742] = {
					"–ö–ª—É–±–æ–∫ –∑–º–µ–π", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[123287] = {
					"–°–æ—Ä–≤–∏–≥–æ–ª–æ–≤–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[70308] = {
					"–ü–æ–∂–∏—Ä–∞—é—â–µ–µ –¥—É—à–∏ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[161571] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[75643] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[154555] = {
					"–ê–º–∞—Ç–µ—Ç-–º–µ—Ö–∞–Ω–æ–ª–æ–≥", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[134332] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ó–µ–ª–µ–Ω–æ–±—Ä—é—à–∫–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[153531] = {
					"–ê–∫–∏—Ä-–∫–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[75852] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π —Ç–æ—Ç–µ–º –∏—Å—Ü–µ–ª–µ–Ω–∏—è", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[69133] = {
					"–í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–∞—è —Å–∏–ª–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[147225] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[11445] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[83754] = {
					"–ù—é—Ö–∞—á –∑–≤–µ–∑–¥–æ–∫–æ—Ä–Ω—è", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[122264] = {
					"–°—Ç–∞—Ä–∞—è —Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[48338] = {
					"–†–∞–∑–Ω–æ—Å—á–∏—Ü–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[7273] = {
					"–ì–∞–∑'—Ä–∏–ª–ª–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[11450] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[26735] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —á–µ—à—É–µ–ø–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[45912] = {
					"–î–∏–∫–æ–µ –∑–∞–≤–∏—Ö—Ä–µ–Ω–∏–µ", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[161573] = {
					"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Ä–æ–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[5710] = {
					"–î–∂–∞–º–º–∞–ª'–∞–Ω –ü—Ä–æ—Ä–æ–∫", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[75172] = {
					"–£–∂–∞—Å –∏–∑ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[91808] = {
					"–ó–º–µ–∏–∫—Å", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[74834] = {
					"–ö–æ–∫–æ–Ω", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[59193] = {
					"–¢–∫–∞—á–∏—Ö–∞ –°–º–µ—Ä—Ç–∏", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[140075] = {
					"–õ—é–ø—É—Å", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[75149] = {
					"–ê–≥–≥–µ–º –¢–µ—Ä–Ω–æ–≤–æ–µ –ü—Ä–æ–∫–ª—è—Ç–∏–µ", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[140981] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π –∑—É–±–æ—Ä–µ–∑", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137516] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[122265] = {
					"–î—Ä–æ–±–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ—à–∫—É—Ä–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138349] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[155432] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[27969] = {
					"–í–µ–ª–∏–∫–∞–Ω –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[123289] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Å–º–µ—Ä—Ç–æ—Ö–≤–∞—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[151785] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π —É–±–∏–π—Ü–∞ –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[132910] = {
					"–í–∏–∑–≥—É–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[137517] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[10955] = {
					"–ü—Ä–∏–∑–≤–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[75429] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–ø–æ–≤–∞—Ä", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[155433] = {
					"–ú–µ—á–µ–Ω–Ω–∞—è –ë–µ–∑–¥–Ω–æ–π –ø–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[135470] = {
					"–ê–∫–∞'–∞–ª–∏ –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140077] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[152874] = {
					"–í–µ–∑'–æ–∫–∫ –ë–µ—Å–ø—Ä–æ—Å–≤–µ—Ç–Ω—ã–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[74583] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –ø–∞—É—á–æ–∫", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[12218] = {
					"–ú–µ—Ä–∑–∫–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[133935] = {
					"–û–∂–∏–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[155434] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞ –≥–ª—É–±–∏–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[24560] = {
					"–ñ—Ä–∏—Ü–∞ –î–µ–ª—Ä–∏—Å—Å–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[140078] = {
					"–ì–æ—Ä–∏–ª–ª–∞-–∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[24688] = {
					"–¢–∏—Ö–∏–π –ø—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[137007] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[6206] = {
					"–ó–µ–º–ª–µ–≥–ª–æ—Ç –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[6222] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[75286] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[58198] = {
					"–ü–æ—Å–ª—É—à–Ω–∏–∫ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[20977] = {
					"–ú–∏–ª–ª—Ö–∞—É—Å –ú–∞–Ω–∞—à—Ç–æ—Ä–º", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[135472] = {
					"–ó–∞–Ω–∞–∑–∞–ª –ú—É–¥—Ä—ã–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[152364] = {
					"–í–µ–ª–∏–∫–æ–ª–µ–ø–∏–µ –ê–∑—à–∞—Ä—ã", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[84644] = {
					"–†–∏–ª–∞–∫-–≥–Ω—É—Å–Ω–æ–∫—Ä—ã–ª", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[132913] = {
					"–û—Å—Ç—Ä–æ–≤–Ω–æ–π —ç—Ç—Ç–∏–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[122973] = {
					"–î–∞–∑–∞—Ä'–∞–π—Å–∫–∏–π –¥—É—Ö–æ–≤–Ω–∏–∫", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[151144] = {
					"Hati", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[14326] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –ú–æ–ª'–¥–∞—Ä", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[77734] = {
					"–¢–µ—Ä–æ–Ω'–∫—Ä–æ–≤", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[60849] = {
					"–°—Ç–∞—Ç—É—è –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[123291] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[13139] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –†–µ–Ω–¥–æ–ª—å—Ñ", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[7786] = {
					"–°–∫–µ–ª–µ—Ç –ó—É–º'—Ä–∞—Ö–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[137521] = {
					"–§—É–∑–∏–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[31104] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –ê–Ω'–∫–∞—Ö–∞—Ä–∞", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[138839] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - –ø–µ–≤–µ—Ü —Å–º–µ—Ä—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[145337] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[135474] = {
					"–í–µ–¥—å–º–∞-–ø–æ—Å–ª—É—à–Ω–∏—Ü–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[30319] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—Ä–Ω—ã–π –º–∞–≥", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[144825] = {
					"–Ø–¥–æ–±—Ä—é—Ö–∏–π –∫–≤–∞–∫—É–Ω", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[9019] = {
					"–ò–º–ø–µ—Ä–∞—Ç–æ—Ä –î–∞–≥—Ä–∞–Ω –¢–∞—É—Ä–∏—Å—Å–∞–Ω", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[40923] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[139194] = {
					"–ì–Ω–∏–ª–æ–∂–æ—Ä", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[44924] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –º–∏—Ä–º–∏–¥–æ–Ω", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[61398] = {
					"–°–∏–Ω—å –ú–∞—Å—Ç–µ—Ä –ë–æ—è", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[26672] = {
					"–ö—Ä–æ–≤–æ–∂–∞–¥–Ω—ã–π —Ç—É–Ω–¥—Ä–æ–≤—ã–π –≤–æ–ª–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[123292] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö–≤–∞—Ç–∞—Ç–µ–ª—å", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[26800] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[61910] = {
					"–°–∫–æ–ø–ª–µ–Ω–∏–µ —Å–º–æ–ª—ã", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[26928] = {
					"–í–µ–ª–∏–∫–∞—è –≤–µ–¥—É–Ω—å—è –¢–µ–ª–µ—Å—Ç—Ä–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[22897] = {
					"–ü—Ä–∏–∑–≤–∞–Ω–Ω—ã–π –¢–æ—Ç–µ–º –Ω–µ–∏—Å—Ç–æ–≤—Å—Ç–≤–∞ –≤–µ—Ç—Ä–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[135475] = {
					"–ö—É–ª–∞ –ñ–∏–≤–æ–¥–µ—Ä–∫–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[124316] = {
					"–°–≤–∏–Ω—å—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[18994] = {
					"–ü–∞–ª–∞—á –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[14351] = {
					"–î—É–±–∏–ª—å—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[144824] = {
					"–°–∫–ª–∏–∑–∫–∞—è –∂–∞–±–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137012] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ù–æ–≤–æ–∑–µ–º—å—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[155952] = {
					"–°–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[123293] = {
					"–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π –ø–µ—Å—á–∞–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59223] = {
					"–ë—Ä–∞—Ç –ö–æ—Ä–ª–æ—Ñ—Ñ", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[6910] = {
					"–†–µ–≤–µ–ª–æ—à", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[59479] = {
					"–Ø–Ω—å-–ß–∂—É –í—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[140084] = {
					"–ó—É–±–æ—Ç—ã–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[75590] = {
					"–û–≥—Ä–æ–º–Ω–∞—è –ª—è–≥—É—à–∫–∞-–±—ã–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[132918] = {
					"–ù–∞–ª–µ—Ç—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[133430] = {
					"–ì–µ–Ω–∏–π –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[83689] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä—ã—Ö –ö–æ–≥—Ç–µ–π", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[7022] = {
					"–Ø–¥–æ–Ω–æ—Å–Ω—ã–π —Å–∫–æ—Ä–ø–∏–¥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[39900] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[155953] = {
					"–ö'–¢–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140085] = {
					"–ë–æ–ª—å—à–æ–π –µ–ª–µ–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[56792] = {
					"–§—Ä–∞–≥–º–µ–Ω—Ç —Å–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[132919] = {
					"–ì–∏–≥–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ó–ª–æ–±–Ω–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[21137] = {
					"–£–±–∏–π—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[133943] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫ –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140086] = {
					"–ï–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[61399] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[151859] = {
					"–ú–æ–≥–∏–ª—å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[24689] = {
					"–ü—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π-–∫–æ—Å—Ç–æ–ª–æ–º", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[7246] = {
					"–¢–µ–º–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[132920] = {
					"–¢–µ–º–Ω—ã–π –∑–º–µ–π", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[133432] = {
					"–ê–ª—Ö–∏–º–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[133944] = {
					"–ê—Å–ø–∏–¥–∏—Å", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[45915] = {
					"–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∏—Å—Ç—Ä–∞–ª—å", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[144311] = {
					"–°—Ç—Ä–∞–∂ —Å—Ñ–µ—Ä—ã", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[139045] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –Æ—á–∏", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[96677] = {
					"–ó—É–±–∞—Å—Ç—ã–π –≥—Ä–∏–∑–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[145064] = {
					"–û–≥–æ–Ω–µ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[17395] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[81065] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[158515] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –•–∞–≥–≥–µ—Ä–¥–∏–Ω", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[74411] = {
					"–ù–µ–∫—Ä–æ–ª–∏—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú–µ—Ä—Ç–≤–æ–π –ì–æ–ª–æ–≤—ã", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[29680] = {
					"–°–ª–∞–¥'—Ä–∞–Ω—Å–∫–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[59480] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[70060] = {
					"–¢–µ–º–Ω—ã–π –¥—É—Ö –≤—É–¥—É", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[156980] = {
					"–°—É—â–Ω–æ—Å—Ç—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132922] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[43612] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –ø—Ä–æ—Ä–æ–∫ –ë–∞—Ä–∏–º", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[135699] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[70557] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –ø—Ä–æ—Ä–æ–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[144822] = {
					"–ó–æ–ª–æ—Ç–∞—è –æ–≥–Ω–µ—è–∑—ã—á–∫–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[151862] = {
					"–î—É—Ö–æ—Å—Ç—Ä–∞–Ω–Ω–∏–∫ –§–µ'—Å–∞–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[135322] = {
					"–ó–æ–ª–æ—Ç–æ–π –ó–º–µ–π", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[96934] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–∑–≤–µ—Ä–æ–ª–æ–≤", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[8900] = {
					"–ö—É–∑–Ω–µ—Ü-–≤–æ–ª—à–µ–±–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ö—É–∑–Ω–∏ –†–æ–∫–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[105636] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[24675] = {
					"–Ø–π—Ü–æ —Ñ–µ–Ω–∏–∫—Å–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[29120] = {
					"–ê–Ω—É–±'–∞—Ä–∞–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[40925] = {
					"–û–ø–æ—Ä–æ—á–µ–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[61528] = {
					"–õ–∞–≤–æ–≤—ã–π —Å—Ç—Ä–∞–∂ –ì–æ—Ä–¥–æ—Ç", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[26737] = {
					"–ë–µ–∑—É–º–Ω—ã–π –º–∞–Ω–∞–ø–ª–µ—Å–∫", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[74412] = {
					"–ê–∞—Ä—É–∫—Å", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[135248] = {
					"–ë—Ä–∏–æ–Ω–∞ –ö—Ä–æ–≤–æ–∂–∞–¥–Ω–∞—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133436] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[11451] = {
					"–°–∞—Ç–∏—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11483] = {
					"–ö–ª–æ—á–æ–∫ –º–∞–Ω—ã", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[36830] = {
					"–ì—Ä–æ–∑–Ω—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[14325] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∞–≤–∏–≥—Ä–æ–º", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[416] = {
					"Quztip", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[42333] = {
					"–í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞ –ê–∑–∏–ª", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[123286] = {
					"–®—É–ª–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[14370] = {
					"–¢—Ä—É–ø–Ω—ã–π —á–µ—Ä–≤—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[42717] = {
					"Chund", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[42845] = {
					"–ö–∞–º–Ω–µ—Ç–æ—á–µ—Ü", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[27633] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[162534] = {
					"–ê–Ω—É–±–∏—Å–∞—Ç-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[130439] = {
					"Cendre-Crin", -- [1]
					"–•—Ä–∞–º –ö–æ—Ç–º–æ–≥—É", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[74669] = {
					"–¢–æ—Ç–µ–º –•—Ä—É—Å—Ç–∞–ª—å–Ω–æ–≥–æ –æ–≥–Ω—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[158367] = {
					"–ú–æ–ª–æ—Ç—è—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138489] = {
					"–¢–µ–Ω—å –ó—É–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[138557] = {
					"–ñ–∏–≤–∞—è —Å–∫–≤–µ—Ä–Ω–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130655] = {
					"–ë–æ–±–±–∏ –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[70238] = {
					"–ù–µ–º–∏–≥–∞—é—â–∏–π –≥–ª–∞–∑", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[138845] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –î–∂–æ'–≤–∞–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140353] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[83687] = {
					"–û–≥—Ä–æ–Ω-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[150250] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[12219] = {
					"–ö–æ–ª—é—á–∏–π —Ö–ª—ã—Å—Ç–æ–ª–∞–ø", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[138558] = {
					"–ë–µ–∑–ª–∏–∫–∏–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[138556] = {
					"–ù–µ—á–∏—Å—Ç—ã–π —Å–ª–∏–∑–Ω—é–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140094] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[24690] = {
					"–ü—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π-–ø–æ–ª—É—Ç—Ä—É–ø", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[157486] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –æ–ø—É—Ö–æ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[11475] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∏–π —Ñ–∞–Ω—Ç–∞–∑–º", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[3636] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[45917] = {
					"–ü—Ä–∏–Ω—Ü –æ–±–ª–∞–∫–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[138559] = {
					"–ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[70240] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –≤–∞—è—Ç–µ–ª—å –®–∞–Ω—å'—Ü–∑—ç", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140095] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[4255] = {
					"–ë—Ä–µ–≥—É—Å –ì—Ä–æ–º–æ–≤–∞—Ä", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[148797] = {
					"–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[58842] = {
					"–°–∫–µ–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[140294] = {
					"–í–æ–ª–∫-—Å–Ω–µ–≥–æ—à–∫—É—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146238] = {
					"–ß–µ—Ä–Ω–æ–µ –ñ–∞–ª–æ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[75410] = {
					"–°—Ç—Ä–∞–∂ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[9040] = {
					"–†–∞–¥–æ'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[135231] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[140096] = {
					"–í–µ–ø—Ä—å-–≥—Ä—è–∑–Ω–æ—Ä—ã–ª", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[132879] = {
					"–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[75436] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–ø–∞—Å—Ç—É—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[43614] = {
					"–ó—É–±–æ—Ö–ª–æ–ø", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[17420] = {
					"–Ø–∑—ã—á–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[138561] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –±–∏—á–µ–≤–∞—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[146678] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–µ –¥—Ä–µ–≤–æ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[133556] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[157614] = {
					"–®—É–ø–∞–ª—å—Ü–µ –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137026] = {
					"–ì–æ–Ω—á–∞—è –∏–∑ –ù–æ–≤–æ–∑–µ–º—å—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[132755] = {
					"–ü–∞–¥–∞–ª—å—â–∏–∫-–ª–æ–º–æ–∫–ª—é–≤", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[30385] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥–æ–±—Ä–æ–≤–æ–ª–µ—Ü", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[122532] = {
					"–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞", -- [1]
					"–ê–Ω—Ç–æ—Ä—É—Å, –ü—ã–ª–∞—é—â–∏–π –¢—Ä–æ–Ω", -- [2]
				},
				[30961] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[26674] = {
					"–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –¥–µ—Ç–µ–Ω—ã—à", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[61658] = {
					"–í–∑—Ä–æ—Å–ª–∞—è –≥–æ–Ω—á–∞—è –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[26802] = {
					"–°–ª–µ–¥–æ–ø—ã—Ç –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[149312] = {
					"–Ø—Ä–æ—Å—Ç–Ω–∞—è –∫—Ä–æ–º—Å–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[26930] = {
					"–í–µ–ª–∏–∫–∞—è –≤–µ–¥—É–Ω—å—è –¢–µ–ª–µ—Å—Ç—Ä–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[75440] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–∫–∞–º–Ω–µ–≥–ª—è–¥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[37728] = {
					"–ì—Ä–æ–∑–Ω—ã–π –≤–æ–ª—à–µ–±–Ω–∏–∫", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[44922] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π –º–∞—Å—Ç–µ—Ä —Ç–æ–ø–æ—Ä–æ–≤", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[69427] = {
					"–¢–µ–º–Ω—ã–π –ê–Ω–∏–º—É—Å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140099] = {
					"–ì—Ä–æ–º–æ—Ö—Ä—é–∫ –ì–æ–ª–æ—Å–∏—Å—Ç—ã–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[129699] = {
					"–õ—é–¥–≤–∏–≥ —Ñ–æ–Ω –¢–æ—Ä—Ç–æ–ª–ª–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[36476] = {
					"–ò–∫", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[131727] = {
					"–§–µ–Ω—Ä–∞ –ö–æ–≤–∞—Ä–Ω–∞—è", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[77232] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[4847] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ —Ä–µ–ª–∏–∫–≤–∏—è–º–∏", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[4863] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[48505] = {
					"–°—Ç—Ä–∞–∂ –¢—å–º—ã –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[136005] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[140100] = {
					"–ë–æ–µ–≤–æ–π –•—Ä—é–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[137029] = {
					"–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[92387] = {
					"–ë–∞—Ä–∞–±–∞–Ω—ã –≤–æ–π–Ω—ã", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[131812] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[124581] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫—Ä–µ–ø–∫–æ—Ö–≤–∞—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[11476] = {
					"–°–∫–µ–ª–µ—Ç –≤—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[8899] = {
					"–î—Ä–∞–≥—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ö—É–∑–Ω–∏ –†–æ–∫–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[136006] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[10076] = {
					"–í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞ –¢–∞—É—Ä–∏—Å—Å–∞–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[5055] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –ø–ª–µ—Ç–æ—á–Ω–∏–∫", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[56924] = {
					"–†–∞—Å—Å–≤–∏—Ä–µ–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[146244] = {
					"–ß—É–¥–æ–≤–∏—â–Ω–æ–µ –ñ–∞–ª–æ", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[44895] = {
					"–ê—É–≥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[78001] = {
					"–¢–æ—Ç–µ–º —Ä–∞–∑—Ä–∞–∑–∏–≤—à–µ–≥–æ—Å—è –ª–∏–≤–Ω—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[5135] = {
					"–°–≤–∞–ª—å–±—Ä–∞–¥ –î–∞–ª—å–Ω–æ–≥–æ—Ä", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[134163] = {
					"–ú–∞–≥-–∫–æ–º–∞–Ω–¥–∏—Ä –õ–∏—Ä–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[85280] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –î–∞–º–∞—Ä–∫—É—Å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[47140] = {
					"–°–∫–µ–ª–µ—Ç –∫–æ–ª–¥—É–Ω–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[132904] = {
					"–¢—Ä–æ–ª–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[45919] = {
					"–ú–æ–ª–æ–¥–æ–π –≥—Ä–æ–∑–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[124582] = {
					"–£—â–µ–ª—å–Ω–∏–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[69352] = {
					"–ü–µ—â–µ—Ä–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[151876] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∏–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[21108] = {
					"Core Hound", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[140615] = {
					"–ú—è—Å–æ—Ä—É–±–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[97197] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-–æ—á–∏—Å—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[59100] = {
					"–°—Ç–∞—Ä—ã–π –æ–±—ä–µ–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[17269] = {
					"–ß–µ—Ä–Ω—ã–π –º–∞–≥ –∏–∑ –∫–ª–∞–Ω–∞ –ö—Ä–æ–≤–∞–≤–æ–π –ì–ª–∞–∑–Ω–∏—Ü—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[75285] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ª–µ–∫–∞—Ä—å –±—É—Ä—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[17397] = {
					"–ê–¥–µ–ø—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[131402] = {
					"–ö–ª–µ—â –∏–∑ –ü–æ–¥–≥–Ω–∏–ª—å—è", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[17653] = {
					"–ß–∞—Ä–æ—Ç–≤–æ—Ä–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[29874] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[145223] = {
					"–ú–æ–ª–æ–¥–æ–π –¥—Ä–∞–∫–æ–Ω –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[69700] = {
					"–ë–æ–ª—å—à–æ–π –≥–æ–ª–µ–º –∞–Ω–∏–º—ã", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[59153] = {
					"–ì—Ä–æ–º–æ–∫–ª–∏–Ω", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[138569] = {
					"–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –í–æ—Ä'–∑—É–∫—Å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[16593] = {
					"–ë—É—è–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[152390] = {
					"–í—ã—à–µ–¥—à–∏–π –∏–∑-–ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[48351] = {
					"–†–∞–∑–Ω–æ—Å—á–∏—Ü–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[42975] = {
					"–ß—É–º–Ω–æ–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[145224] = {
					"–î—Ä–∞–∫–æ–Ω –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[44896] = {
					"–ü–∏–≥–º–µ–π-–¥–∏–∫–∞—Ä—å", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[133963] = {
					"–ü–æ–¥–æ–ø—ã—Ç–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[138570] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –†–∞–∑–∑–∞–∫–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139036] = {
					"–ö–æ–ø–µ–π—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[13323] = {
					"–ü–æ–¥–∑–µ–º–Ω—ã–π –¥–µ–º–µ—Ç—Ä–æ–¥–æ–Ω", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[140106] = {
					"–°–º–µ—Ä—Ç–µ–∂–∞–ª - —Å—Ç—Ä–∞–∂ –∫–ª–∞–¥–∫–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[147958] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–µ–ª–æ–º–∏—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[5775] = {
					"–í–µ—Ä–¥–∞–Ω –í–µ—á–Ω–æ–∂–∏–≤—É—â–∏–π", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[5711] = {
					"–û–≥–æ–º –ü—Ä–µ–∑—Ä–µ–Ω–Ω—ã–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[11452] = {
					"–†–∞–∑–±–æ–π–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[138571] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∞—è –≤–µ—Å—Ç–Ω–∏—Ü–∞ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[132429] = {
					"–ö–æ–±–æ–ª—å–¥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ—É—Å–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[100526] = {
					"–ò—Å—Ç–µ—Ä–∑–∞–Ω–Ω—ã–π –∫—Ä–æ–≤–æ–ø–∏–π—Ü–∞", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[136012] = {
					"–ì–æ—Ä—É—Å –ù–µ—Å–¥–≤–∏–≥–∞–µ–º—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[83790] = {
					"–ü–ª–∞–º–µ–≤–µ—Ä–∂–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[12258] = {
					"–ë—Ä–∏—Ç–≤–æ—Ö–ª–µ—Å—Ç", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[147892] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –¥–æ–º–∞ –ü—Ä–∞—É–¥–º—É—Ä–æ–≤", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[140337] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ç–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç–æ–≥–æ –∫—Ä—ã–ª–∞—Ç–æ–≥–æ –∑–º–µ—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[27635] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π —á–∞—Ä–æ–ø–ª–µ—Ç", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[151881] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –≥–ª—É–±–∏–Ω –°–∏–≤–∞—Ä–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[59613] = {
					"–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –°–ª–µ–π—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[140620] = {
					"–•–∞—Ä–∏–±–¥–∏–¥–∞ –Æ–∂–Ω–æ–≥–æ –º–æ—Ä—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[43873] = {
					"–ê–ª—å—Ç–∞–∏—Ä–∏–π", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[100527] = {
					"–ë–µ—Å —É–∂–∞—Å–∞—é—â–µ–≥–æ –æ–≥–Ω—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[138061] = {
					"–î–æ–∫–µ—Ä –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[95920] = {
					"–û–∂–∏–≤—à–∞—è –±—É—Ä—è", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[134990] = {
					"–ó–∞—Ä—è–∂–µ–Ω–Ω–∞—è –ø–µ—Å—á–∞–Ω–∞—è –¥—å—è–≤–æ–ª–∏—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[131407] = {
					"–ì—Ä–æ–º–∏–ª–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[70232] = {
					"–ì—Ä—è–∑–µ–º—ã—à—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[132431] = {
					"–ó–µ–º–ª–µ–º–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ—É—Å–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[145228] = {
					"–í–∞–ª—å—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[11484] = {
					"–†—É–¥–∏–º–µ–Ω—Ç–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[48418] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[44897] = {
					"–ü–∏–≥–º–µ–π-—Ä–∞–∑–≤–µ–¥—á–∏–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[134991] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[131408] = {
					"–î—É–±–æ–ª–æ–º –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[102831] = {
					"–ó–∏—Ç—Ä–µ–Ω–∞–π—Å–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[139425] = {
					"–ë–µ—à–µ–Ω–∞—è –Ω–∞—Å–µ–¥–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[6207] = {
					"–î—É—à–∏—Ç–µ–ª—å –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[6223] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[138063] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139022] = {
					"–®–∏–ø–æ—à–∫—É—Ä –ó–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[132741] = {
					"–û–≥–Ω–µ–Ω–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[59893] = {
					"–ú–æ–≥—É—á–∏–π –¥—É—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[152396] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ê–∑–µ—Ä–æ—Ç", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[104879] = {
					"–ò–ª–ª—é–∑–æ—Ä–Ω—ã–π –∑–º–µ–µ–Ω—ã—à", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[74565] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å –ö–æ—Ä'—É–ª", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[17462] = {
					"–†–µ–≤–Ω–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[17270] = {
					"–õ—É—á–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ö—Ä–æ–≤–∞–≤–æ–π –ì–ª–∞–∑–Ω–∏—Ü—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[138576] = {
					"–ë–µ–∑–ª–∏–∫–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[134993] = {
					"–ú—á–∏–º–±–∞ –ë–∞–ª—å–∑–∞–º–∏—Ä–æ–≤—â–∏–∫", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[131410] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∞—è —è–¥–æ–≤–∏—Ç–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59614] = {
					"–°–∫—É—á–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[103344] = {
					"–î—É–±–æ—Å–µ—Ä–¥", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[119724] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π –≤–æ–ª–Ω–æ–ø–ª–µ—Å–∫", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[151886] = {
					"–û—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–∞—è –º—ã—Å–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[8893] = {
					"–°–æ–ª–¥–∞—Ç –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[138577] = {
					"–°–æ–∫—Ä—É—à–∞—é—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[134994] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[100529] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –Ω–µ–Ω–∞–≤–∏—Å—Ç—å—é —Å–ª–∏–∑–µ–Ω—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[97202] = {
					"–û–ª–º–∏—Ä –ü—Ä–æ—Å–≤–µ—â–µ–Ω–Ω—ã–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[152910] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ê–∑—à–∞—Ä–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[145232] = {
					"–°–∫–∞–ª–ª–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[56927] = {
					"–û–∑–≤–µ—Ä–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-—Ç—É—Å–æ–≤—â–∏–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[122284] = {
					"–ö—Ä—É–ø–Ω—ã–π —Ö–∏—â–Ω–∏–∫ –¥–∂—É–Ω–≥–ª–µ–π", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[13276] = {
					"–î–∏–∫–∏–π –±–µ—Å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[140369] = {
					"–°–∫–ª–µ–ø–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[155634] = {
					"–ü–æ–¥—á–∏–Ω–µ–Ω–Ω–∞—è –±—É—Ä—è", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140114] = {
					"–ö–ª–µ—à–Ω–µ—Å—Ç—É–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140076] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-–≤–æ–∂–∞–∫", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[144298] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç II\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[146769] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[133972] = {
					"–¢—è–∂–µ–ª–æ–µ –æ—Ä—É–¥–∏–µ", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[138579] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–æ–µ –∫–æ–≥—Ç–µ—â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[8317] = {
					"–î—É—Ö –º–µ—Ä—Ç–≤–æ–±—Ä–æ–¥–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ê—Ç–∞–ª'–∞–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[129064] = {
					"–ú–∞–≥-—Ñ–µ–Ω–∏–∫—Å –†–∏–¥—Ä–∞—Å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134060] = {
					"–õ–æ—Ä–¥ –®—Ç–æ—Ä–º—Å–æ–Ω–≥", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[140297] = {
					"–ù–æ–∫-–∞—Ä–∞–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[27636] = {
					"–î–µ—Ç–µ–Ω—ã—à –ª–∞–∑—É—Ä–Ω–æ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[133461] = {
					"–ñ—Ä–µ—Ü –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[138068] = {
					"–ü–∞—Ñ–æ—Å–Ω—ã–π –∫—É—Ä–æ—Ä—Ç–Ω–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146770] = {
					"–î—Ä—É–∏–¥-—Ö–∏—â–Ω–∏–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[59359] = {
					"–£–∂–∞—Å –≤–æ –ø–ª–æ—Ç–∏", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[59487] = {
					"–©–∏—Ç-–ø—É–∑—ã—Ä—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[36788] = {
					"–ù–µ–∫—Ä–æ–ª–∏—Ç –∏–∑ —Å–≤–∏—Ç—ã –õ–µ–¥–∏", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[74900] = {
					"–í–∞—è—Ç–µ–ª—å –ª–∞–±–∏—Ä–∏–Ω—Ç–æ–≤ –¢—É–∫–∞–∞—Ä", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[70586] = {
					"–í–µ—á–Ω—ã–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[47714] = {
					"–ü–∞—Ä", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[26687] = {
					"–ì–æ—Ä—Ç–æ–∫ –ë–ª–µ–¥–Ω–æ–µ –ö–æ–ø—ã—Ç–æ", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[43875] = {
					"–ê—Å–∞–∞–¥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[40953] = {
					"–•–∞–∞—Ñ–æ–º", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[100531] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫—Ä–æ–≤—å—é —è—Ä–æ—Å—Ç—å", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[28276] = {
					"–°—Ç–∞—Ä—à–∏–π –¥–µ—Ç–µ–Ω—ã—à –¥—Ä–∞–∫–æ–Ω–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[28340] = {
					"–ù–µ–ø—Ä–∏—è—Ç–µ–ª—å –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[133463] = {
					"–ë–æ–µ–≤–∞—è –º–∞—à–∏–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[132835] = {
					"–ó–º–µ—è-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[157483] = {
					"–ò–∑–µ–¥—Ä–∞ –û–º—Ä–∞—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[60561] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"–û–∫–æ –ë—É—Ä–∏ (—Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–µ)", -- [2]
				},
				[157605] = {
					"–ü–æ–¥–∑–µ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[14396] = {
					"–û–∫–æ –ë–µ—Å—Å–º–µ—Ä'—Ç–µ—Ä–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[140630] = {
					"–ù–∞—Ä—è–¥–Ω—ã–π –∏–≥–ª–æ–±—Ä—é—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[70587] = {
					"–°–ª–∞–Ω—Ü–µ–≤—ã–π –ª–æ–≤–µ—Ü", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[7247] = {
					"–ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[135496] = {
					"–ö–∞–º–∏ –®–µ—Å—Ç–µ—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[3640] = {
					"–ò–∑–º–µ–Ω—á–∏–≤–∞—è —ç–∫—Ç–æ–ø–ª–∞–∑–º–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[76259] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[104627] = {
					"–†–∞–∑–≥–Ω–µ–≤–∞–Ω–Ω—ã–π –æ–≥–Ω–µ–∑–æ–ª", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[152486] = {
					"–≠–ª–∏—Ç–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –ø–æ–¥–∑–µ–º–Ω–æ–π –∫—Ä–µ–ø–æ—Å—Ç–∏", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[7343] = {
					"–°–∫–µ–ª–µ—Ç-–∫–æ—Å—Ç–µ—â–µ–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[3680] = {
					"–ó–º–µ–µ—Ü–≤–µ—Ç–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[158035] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –£–º–±—Ä–∏–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[17271] = {
					"–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ—Å—Ç–µ–≥–ª–æ–¥–æ–≤", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[59360] = {
					"–¢—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[17399] = {
					"–°–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[10813] = {
					"–ë–∞–ª—å–Ω–∞–∑–∞—Ä", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[132442] = {
					"–ö–æ–ø–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ—É—Å–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[139015] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144973] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π-—á–∞—Å–æ–≤–æ–π", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[135718] = {
					"–î–µ—Ç–µ–Ω—ã—à –Ω–æ—á–Ω–æ–≥–æ —Å–∞–±–ª–µ–∑—É–±–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[75451] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[39909] = {
					"–†–æ–∂–¥–µ–Ω–Ω—ã–π –≤ –ª–∞–∑—É—Ä–∏ –ø–æ–ª–∫–æ–≤–æ–¥–µ—Ü", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[59764] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[44260] = {
					"–Ø–¥–æ–∫–ª—ã–∫–∏–π –∫—Ä–æ–∫–æ–ª–∏—Å–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[29822] = {
					"–û–≥–Ω–µ–ø—Ä—è–¥ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[149335] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[56929] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[127106] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26805] = {
					"–°–≤—è—â–µ–Ω–Ω–∏–∫ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[3840] = {
					"–î—Ä—É–∏–¥-–∑–º–µ—è", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[69821] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≥—Ä–æ–∑—ã", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[75452] = {
					"–ö–æ—Å—Ç–µ–±—Ä—é—Ö", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[3864] = {
					"–ö–æ–Ω—å —Å–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[3872] = {
					"–ö–∞–ø–∏—Ç–∞–Ω —Å–ª—É–∂–∏—Ç–µ–ª–µ–π –°–º–µ—Ä—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[153943] = {
					"–î–µ—Ü–∏–º–∞—Ç–æ—Ä –®–∏–∫'–≤–æ—Ç", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[11453] = {
					"–ü–ª—É—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[45924] = {
					"–í–∏—Ö—Ä–µ–≤–æ–π —à–∫–≤–∞–ª", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[126422] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –±–µ–≥—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[150292] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –∫–∞–≤–∞–ª–µ—Ä–∏—Å—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[76220] = {
					"–ü—ã–ª–∞—é—â–∏–π –ø–ª—É—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[6234] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[3560] = {
					"–ò—Å—Ü–µ–ª—è—é—â–∏–π –∏–¥–æ–ª", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[29310] = {
					"–î–∂–µ–¥–æ–≥–∞ –ò—Å–∫–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¢–µ–Ω–µ–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[159764] = {
					"–î–∂–µ—à'—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[139035] = {
					"–ê–∫–≤–∞–ª–∏—Ç –∏–∑ –∫–ª–∞–Ω–∞ –û—Å—Ç—Ä–æ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[146853] = {
					"–ö–µ—Ñ–æ–ª–∫–∏—Å –≠–∫—Å–≥—É–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[34919] = {
					"–°–æ–ª–¥–∞—Ç 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[99804] = {
					"–í–∞–ª–∞—Ä—å—è—Ä-—Å–æ–∫–æ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[132446] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì—Ä—è–∑–Ω–æ—É—Å–æ–≤", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[59873] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∂–∏–≤–∞—è –≤–æ–¥–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[139009] = {
					"–î–∏–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[162647] = {
					"–£–∂–∞—Å–Ω–æ–µ —á—É–¥–∏—â–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[75453] = {
					"–ù–∞—á–∏–Ω–∞—é—â–∏–π –≥–µ–æ–º–∞–≥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[157602] = {
					"–î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[62795] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[8095] = {
					"–°—É–ª'–ª–∏—Ç—É–∑-–ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[28341] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏—Ü–∞ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[149339] = {
					"–†–∞–∑—Ä–æ—Å—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[158041] = {
					"–ù'–ó–æ—Ç –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[97720] = {
					"–ü–æ–ª–∑—É–Ω –∏–∑ —á—É–º–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[129553] = {
					"–î–∏–Ω–æ–º–∞–Ω—Ç –ö–∏—à'–æ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[135007] = {
					"–°—Ç—Ä–∞–∂ —Å—Ñ–µ—Ä—ã", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[28734] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Ä—ã—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[102839] = {
					"–ö—Ä–∞'–ª–∏—Å—Å", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[138440] = {
					"–õ–µ–¥–∏ –ê—Å—Å–∞–Ω–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[24555] = {
					"–ì–∞—Ä–∞–∫—Å–∞—Å", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[21702] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –∂–∏–∑–Ω–∏ –∏–∑ –≠—Ñ–∏—Ä–∏—É–º–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[140632] = {
					"–ß–µ—à—É–π—á–∞—Ç–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[47135] = {
					"–°–º—Ä–∞–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[159578] = {
					"–û—Ç–∫—Ä—ã—Ç—ã–π —Å–∏–Ω–∞–ø—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[75966] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[70589] = {
					"–ü–µ—â–µ—Ä–Ω—ã–π –±—É—Ä–∏—Ç–µ–ª—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[58722] = {
					"–õ–∏–ª–∏–∞–Ω –í–æ—Å—Å", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[149341] = {
					"–°–ø–µ–∫—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[26625] = {
					"–¢–µ–º–Ω–æ–ø—É—Ç—ã–π –ø–∞—É–∫-–æ—Ç—à–µ–ª—å–Ω–∏–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[135642] = {
					"–¢–µ–º–Ω–æ—à–∫—É—Ä—ã–π —Ç–∏–≥—Ä–µ–Ω–æ–∫", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[151901] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω—ã–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[17400] = {
					"–°—Ç—Ä–∞–∂ –°–∫–≤–µ—Ä–Ω—ã - —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[17464] = {
					"–ì–ª–∞–¥–∏–∞—Ç–æ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[48279] = {
					"–ì–æ–±–ª–∏–Ω-–Ω–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[132450] = {
					"–í–æ–Ω—é—á–µ–Ω–æ–≥", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[8894] = {
					"–ú–µ–¥–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[43878] = {
					"–í–µ–ª–∏–∫–∏–π –≤–∏–∑–∏—Ä—å –≠—Ä—Ç–∞–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[95674] = {
					"–§–µ–Ω—Ä–∏—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[13021] = {
					"–ö—Ä–∏–≤–æ–¥—Ä–µ–≤ –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[137474] = {
					"–ö–æ—Ä–æ–ª—å –¢–∏–º–∞–ª–¥–∂–∏", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[151902] = {
					"–ó–ª–æ–π –¥—É—Ö", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[69791] = {
					"√Ñmiyaa-KhazModan", -- [1]
					"–î–≤–∞ –ü–∏–∫–∞", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137058] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–∞–≥–æ–¥–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[139811] = {
					"–ü–æ–º–æ—â–Ω–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139007] = {
					"–î–∏–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[26550] = {
					"–°–º–µ—Ä—Ç–µ–ª—é–± –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[36840] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –∑–ª–∞", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[4850] = {
					"–°–∫—Ä—ã—Ç–µ–Ω—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[61666] = {
					"–ü–∞–¥—à–∏–π –ø—Å–∞—Ä—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[89] = {
					"–ò–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[40935] = {
					"–ñ–∞–±–ª–∏–Ω-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[128435] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π —Å–∞—É—Ä–∏–¥", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[95675] = {
					"–ö–æ—Ä–æ–ª—å-–±–æ–≥ –°–∫–æ–≤–∞–ª—å–¥", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[45926] = {
					"–°–ª—É–≥–∞ –ê—Å–∞–∞–¥–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[135894] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[132005] = {
					"–ì—Ä–µ–π—Å–æ–Ω –ë–µ–ª–ª", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[84190] = {
					"–ö–æ—Å—Ç–µ–ª–∞–ø—ã–π –ø–∞—É–∫", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[140643] = {
					"–õ—é—Ç—ã–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[137060] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—é–Ω –ú—É'–Ω–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[81087] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä'–≤–æ—à", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[34793] = {
					"–ö–∞—Ç–∞–ø—É–ª—å—Ç–∞", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[4848] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π –º–∞–≥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[27638] = {
					"–°—Ç—Ä–∞–∂ –ª–∞–∑—É—Ä–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[156000] = {
					"–õ–∏–∞–Ω–∏ –ö—Ä–∞–¥—É—â–∞—è—Å—è –¢–µ–Ω—å", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[138659] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136549] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[70594] = {
					"–¢—É–º–∞–Ω–Ω—ã–π —Å–∫—Ä—ã—Ç–µ–Ω—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[119990] = {
					"Fenryr", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[95676] = {
					"–û–¥–∏–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[151659] = {
					"–†–∞–∫–µ—Ç–Ω—ã–π —Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[75713] = {
					"–ü–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å –∫–æ—Å—Ç–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[100539] = {
					"–°–∫–≤–µ—Ä–Ω–æ—Å–µ—Ä–¥-—Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[64446] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[13138] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –°–ø–µ–Ω—Å–µ—Ä", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[5056] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —Å—Ç—Ä–∞—Ö–æ–∑—É–±", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[8127] = {
					"–ê–Ω—Ç—É'—Å—É–ª", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[123290] = {
					"–ë–ª–µ—Å—Ç–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ç—Ä–µ—â–æ—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[26686] = {
					"–Ø—Ä–æ—Å—Ç–Ω—ã–π –ª—é—Ç–æ—Ä–æ–≥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[36841] = {
					"–ü–∞–≤—à–∏–π –≤–æ–∏–Ω", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[139110] = {
					"–ò—Å–∫—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[14397] = {
					"–°–≥—É—Å—Ç–æ–∫ –º–∞–Ω—ã", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[74434] = {
					"–ê–º–Ω–µ–Ω–Ω–∞—Ä –•–ª–∞–¥–æ–≤–µ–π", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[135204] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –∂—Ä–µ—Ü-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[10398] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ —Å–µ–∫—Ç—ã –¢—É–∑–∞–¥–∏–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[10990] = {
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∏–π –±–∞—Ä–∞–Ω", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[149343] = {
					"–û–¥–µ—Ä–∂–∏–º—ã–π –±—É–π—Å—Ç–≤–æ–º –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140082] = {
					"–ì–∏–±–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[92350] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[10558] = {
					"–ü–µ–≤—á–∏–π –§–æ—Ä—Ä–µ—Å—Ç–µ–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[48447] = {
					"–°—Ç—Ä–∞—à–Ω—ã–π –ø–æ–ø—É–≥–∞–π", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[137064] = {
					"–°—Ç—Ä–µ–ª–æ–∫ —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134943] = {
					"–≠–∫–∑–æ–¥–∞—Ä—Å–∫–∞—è –º–∏—Ä–æ—Ç–≤–æ—Ä–∏—Ü–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[130485] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[145211] = {
					"–î—Ä–∞–∫–æ–Ω—á–∏–∫ –∏–∑ —Å—Ç–∞–∏ –ì—Ä–æ–º–æ–≤–æ–π –ß–µ—à—É–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[48230] = {
					"–û–≥—Ä-–Ω–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[17465] = {
					"–¶–µ–Ω—Ç—É—Ä–∏–æ–Ω –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[144231] = {
					"–ë—É–π–Ω—ã–π –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[74435] = {
					"–ú—è–≥–∫–æ–Ω–æ–≥", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[74947] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–∂–∏–≤–æ–¥–µ—Ä", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[17721] = {
					"–ò–Ω–∂–µ–Ω–µ—Ä —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[8898] = {
					"–ú–∞—Ä—à–∞–ª –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[75459] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[75715] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–µ —Ä–∏—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[131411] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144232] = {
					"–ë—É–π–Ω–∞—è –≥—É–ª—è–∫–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[161124] = {
					"–£—Ä–≥'—Ä–æ—Ç –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –ì–µ—Ä–æ–µ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[39415] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –ø–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[44648] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[158565] = {
					"–ù–∞—Ä–æ—Å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[134507] = {
					"–û—Å–∞–¥–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[36842] = {
					"–ì—Ä–æ–∑–Ω—ã–π —Ö–ª–∞–¥–Ω—ã–π –¥—É—Ö", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[139626] = {
					"–£—Ç–æ–ø—à–∏–π –º–∞—Ç—Ä–æ—Å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[45928] = {
					"–ü–∞–ª–∞—á –∫–∞–ª–∏—Ñ–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[70341] = {
					"–°—Ç—Ä–∞–¥–∞—é—â–∞—è –¥—É—à–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[137067] = {
					"–ó–∞—â–∏—Ç–Ω–∏—Ü–∞ –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[74948] = {
					"–†—É–≥—É–≥", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[11454] = {
					"–ü—Ä–µ–¥–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11486] = {
					"–ü—Ä–∏–Ω—Ü –¢–æ—Ä—Ç–µ–ª–¥—Ä–∏–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[6220] = {
					"–û–±–ª—É—á–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[131123] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∞—Å–∫–∞ —Ç–∏–∫–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[136044] = {
					"–Ø–¥–æ–∑—ã–±—å", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[129719] = {
					"–ß–µ—Ä—Ç—ã—Ö–∞–ª–æ—á–∫–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137068] = {
					"–ö–∞–≤–∞–ª–µ—Ä–∏—Å—Ç —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[27447] = {
					"–í–∞—Ä–æ—Å –ó–∞–æ–±–ª–∞—á–Ω—ã–π –°—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[158567] = {
					"–ò–∑–º—É—á–µ–Ω–Ω—ã–π –∫–æ—Ä'–∫—Ä–æ–Ω—Å–∫–∏–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[161813] = {
					"–ö'—Ç–∏—Ä-–∞—Å—Å–∞—Å–∏–Ω", -- [1]
					"–ó–∞–ª –°–µ—Ä–¥—Ü–∞ ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[27639] = {
					"–ö–æ–ª–¥—É–Ω—å—è-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[138495] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∫–æ–º–∞–Ω–¥–∏—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[154524] = {
					"–ö'—Ç–∏—Ä —Ä–µ–∑—á–∏–∫ —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[13442] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –¥—Ä—É–∏–¥ –î–∏–∫–∞—è –õ–∞–Ω—å", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[149354] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[47720] = {
					"–í–µ—Ä–±–ª—é–¥", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[134916] = {
					"–ü–æ–¥–≤–∞–ª—å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130302] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –ó–∞—Ä'—Ä–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[144286] = {
					"–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–∫—Ç–∏–≤–∞–º–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[129208] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –õ–æ–∫–≤—É–¥", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[126973] = {
					"–ö—É—Å–∞–ª–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[56678] = {
					"–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –ü–æ—Å–æ—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[123274] = {
					"–ë—É—è–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ—à–∫—É—Ä–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[61029] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –æ–≥–Ω—è", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[162664] = {
					"–ê–∫–∏—Ä-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[29117] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[29637] = {
					"–ö–æ–≤–∞—Ä–Ω—ã–π –∑–º–µ–π", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[138837] = {
					"–ó–∞—Ä–∞'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –≤–∞—è—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[24696] = {
					"–í–µ–¥—å–º–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ó–º–µ–∏–Ω—ã—Ö –ö–æ–ª–µ—Ü", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[152939] = {
					"–ë–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[8319] = {
					"–î—Ä–∞–∫–æ–Ω—á–∏–∫ –∫–æ—à–º–∞—Ä–∞", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[74950] = {
					"–ó–∞–≥—É—Å—Ç–µ–≤—à–∞—è —á—É–º–Ω–∞—è —Å–ª–∏–∑—å", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[20857] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ê—Ä–∫–∞—Ç—Ä–∞—Ü–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[157594] = {
					"–ú–∞–ª—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[78557] = {
					"–î–µ—Ç–µ–Ω—ã—à –≥–æ—Ä–µ–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[153942] = {
					"–ê–Ω–Ω–∏–≥–∏–ª—è—Ç–æ—Ä –õ–∞–∫'—Ö–∞–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[92610] = {
					"–ë–∞—Ä–∞–±–∞–Ω—â–∏–∫ –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[5650] = {
					"–ó–Ω–∞—Ö–∞—Ä–∫–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[132743] = {
					"–û–≥–Ω–µ—á–µ—à—É–π—á–∞—Ç—ã–π –≤–æ–ª–Ω–æ–ª–æ–º", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138654] = {
					"–í–µ—Å—Ç–∞—Ä –†–≤–∞–Ω—ã–π –ü–∞—Ä—É—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155872] = {
					"–ó–∞–ø–µ—Ä—Ç—ã–π —Å–∞—É—Ä–æ–∫", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[74722] = {
					"–ë—Ä–∏—Ç–≤–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[163690] = {
					"–ù–∞—á–µ—Ä—Ç–∞—Ç–µ–ª—å —à–∞—Ç'—è—Ä", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[34924] = {
					"–ì–ª–∞–≤–Ω–æ–∫–æ–º–∞–Ω–¥—É—é—â–∏–π –•–∞–ª—Ñ–æ—Ä–¥ –ó–º–µ–µ–≤–µ—Ä–∂–µ—Ü", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[136049] = {
					"–°–∞—Ä–≥–∞—Å—Å–∏–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134200] = {
					"–ì–µ–Ω–Ω –°–µ–¥–æ–≥—Ä–∏–≤", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[13022] = {
					"–ö–Ω—É—Ç–æ—Ö–ª–µ—Å—Ç", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[137585] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[8895] = {
					"–û—Ñ–∏—Ü–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –Ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä–Ω–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[75463] = {
					"–£–∂–∞—Å –∏–∑ –ø—É—á–∏–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[137880] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –°–µ–≤–µ—Ä–Ω–æ–≥–æ —É–¥–µ–ª–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[84165] = {
					"–°–≤—è—Ç–æ–π —Ä—ã—Ü–∞—Ä—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[21138] = {
					"–ü–∞–ª–∞—á –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[140657] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –π–µ—Ç–∏-–∫—Ä–µ–ø–∫–æ—Ä–æ–≥", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[69351] = {
					"–ë–æ–ª—å—à–∞—è –ø–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[122605] = {
					"–û–∫–∞–º–µ–Ω–µ–≤—à–∏–π –≤—Ä–∞–≥", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[156523] = {
					"–ú–∞—É—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[16032] = {
					"–§–∞–ª—Ä–∏–Ω –°–∞–¥–æ–≤–Ω–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[131383] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å–ø–æ—Ä –ó–∞–Ω—á–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[136051] = {
					"–ü—É—á–∏–Ω–∏–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[61670] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[146860] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[13438] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∑–≤–µ–Ω–∞ –ú–∞–∫–∞—Ä—á", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[91332] = {
					"–ö–∞–º–Ω–µ—Ä—É–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[3977] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –í–∞–π—Ç–º–µ–π–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[45930] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[27645] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π —Ç—É—á–µ—Å–∫—Ä–µ–±", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[131445] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –±–ª–æ–∫–∞", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[48417] = {
					"–ö—Ä–æ–≤–∞–≤–∞—è –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[61412] = {
					"–¢–µ–º–Ω—ã–π —à–∞–º–∞–Ω –ö–æ—Ä–∞–Ω—Ç–∞–ª", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[97219] = {
					"–°–æ–ª—Å—Ç–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[122266] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∞—è —á–µ—Ä–µ–ø–∞—Ö–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138100] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[42859] = {
					"–î–∏–∫–∏–π –≤–∑—Ä–æ—Å–ª—ã–π –∫–∞–±–∞–Ω", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[27640] = {
					"–ö—É–¥–µ—Å–Ω–∏–∫-–∫–æ–ª—å—Ü–µ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[69834] = {
					"–°—Ç—Ä–∞–∂ –º–æ–ª–Ω–∏–π", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[145035] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –ª–∏—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59751] = {
					"–°—Ç—Ä–∞–∂ –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[95939] = {
					"–°–∫—Ä–æ–≥-–≤–æ–ª–Ω–æ–¥–∞–≤", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27960] = {
					"–í–æ–∏–Ω –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[138101] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[95940] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[123275] = {
					"–•–æ–∑–µ–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ—à–∫—É—Ä–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[84166] = {
					"–†—ã—Ü–∞—Ä—å-—Å—Ç—Ä–∞–∂", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[144244] = {
					"\"–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π –ª—É–ø—Ü–µ–≤–∞—Ç–æ—Ä\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[140661] = {
					"–î–æ–ª–∏–Ω–Ω—ã–π –ì—Ä–æ–º", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[134514] = {
					"–ì–ª—É–±–∏–Ω–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[16507] = {
					"–ö–∞—Ä–∞—É–ª—å–Ω—ã–π –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[138102] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∂—Ä–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[14398] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∏–π —Ö–∞–º–µ–ª–µ–æ–Ω", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[145269] = {
					"–ë–ª–µ—Å–∫–æ—à–∏–ø", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[145305] = {
					"–î–∏–∫–∏–π –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[24697] = {
					"–°–µ—Å—Ç—Ä–∞ –ú—É—á–µ–Ω–∏–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[144757] = {
					"–≠–¥–≥–∞—Ä–¥ –¢–µ–º–Ω—ã–π –ö–æ–≥–æ—Ç—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[28920] = {
					"–í–µ–ª–∏–∫–∞–Ω –∏–∑ –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[16699] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[138103] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∞—è –∞—Ä–±–∞–ª–µ—Ç—á–∏—Ü–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[10463] = {
					"–í–∏–∑–∂–∞—â–∞—è –±–∞–Ω—à–∏", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[3865] = {
					"–°–∫–∞–∫—É–Ω —Ç–µ–Ω–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[29240] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –∫–ª–∞–Ω–∞ –ó–∞–∫–∞–ª–µ–Ω–Ω—ã—Ö –ë—É—Ä–µ–π", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[29304] = {
					"–°–ª–∞–¥'—Ä–∞–Ω", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[17083] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –æ—Ä–∫ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[58856] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[59752] = {
					"–î—É—à–∏—Ç–µ–ª—å –®–∞–¥–æ-–ü–∞–Ω", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[18495] = {
					"–ê—É–∫–µ–Ω–∞–π—Å–∫–∏–π –≤–æ–∑–¥–∞—è—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[59240] = {
					"–°—Ç—Ä–∞–∂ –∑–∞–ª–∞ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59368] = {
					"–¢–µ—Ä–∑–∞—Ç–µ–ª—å –ö—Ä–∞—Å—Ç–∏–Ω–æ–≤–∞", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[26621] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–º—É—á–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[140152] = {
					"–ì–Ω–∏–ª–æ–∫–æ–≥–æ—Ç—å-—Ç–µ—Ä–∑–∞—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[144759] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –î–∞–≥–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[39405] = {
					"–ë–∞–≥—Ä–æ–≤—ã–π –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[21818] = {
					"–î—Ä–∞–∫–æ–Ω—á–∏–∫ –∏–∑ —Ä–æ–¥–∞ –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[138105] = {
					"–°—Ç—Ä–æ–º–≥–∞—Ä–¥—Å–∫–∏–π –≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[75467] = {
					"–ü–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[129470] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[75979] = {
					"–≠–∫—Å–≥—É–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[144248] = {
					"–ì–ª–∞–≤–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ò—Å–∫—Ä–æ—Ç–æ—á–µ—Ü", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[161140] = {
					"–ë–≤–µ–º–±–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[24761] = {
					"–Ø—Ä–∫–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[135999] = {
					"–ì–µ–ª–∏–æ–¥–æ—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[62091] = {
					"–°–∏–∫'—Ç–∏–∫-–±—ã—Å—Ç—Ä–æ–ª–µ—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[26553] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[44404] = {
					"–í–µ–¥—å–º–∞ –±—É—Ä—å –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[140154] = {
					"–ì–Ω–∏–ª–æ–∫–æ–≥–æ—Ç—å-–ø–∞—Ç—Ä–∏–∞—Ä—Ö", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[144249] = {
					"\"–û–º–µ–≥–∞-–∫—Ä—É—à–∏—Ç–µ–ª—å\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[137591] = {
					"–¢–æ—Ç–µ–º —Ü–µ–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–≤–∞", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[61928] = {
					"–°–∏–∫'—Ç–∏–∫-—Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[74462] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –ó–ª–æ–∫–ª—ã–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[11455] = {
					"–°–∫–≤–µ—Ä–Ω–æ–ø–æ–¥–¥–∞–Ω–Ω—ã–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[45932] = {
					"–£–ø–∞–≤—à–∞—è –∑–≤–µ–∑–¥–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[9039] = {
					"–†–æ–∫'—Ä–µ–ª", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[75980] = {
					"–û—Å—Ç—Ä–æ–∑—É–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[129471] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129214] = {
					"–ü–ª–∞—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–Ω—è—Ç–µ–ª—å —Ç–æ–ª–ø—ã", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[137625] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[140153] = {
					"–ú–µ–¥–≤–µ–¥—å-–≥–Ω–∏–ª–æ–∫–æ–≥–æ—Ç—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[50923] = {
					"–ü—Ä–∏–∑—Ä–∞–∫ –≤–æ–ª–∫–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[59241] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–æ–∫—Ä–æ–≤–∏—â –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[27641] = {
					"–¶–µ–Ω—Ç—Ä–∏—Ñ—É–∂–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[140696] = {
					"–î–∞'–∑—É –£—Å—Ç—Ä–∞—à–∞—é—â–∏–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[134005] = {
					"–°–ª–∞–Ω—Ü–µ–µ–¥", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[3873] = {
					"–ó–∞–º—É—á–µ–Ω–Ω—ã–π –æ—Ñ–∏—Ü–µ—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[61445] = {
					"–•–∞–π–∞–Ω –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–π", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[27961] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[46963] = {
					"–õ–æ—Ä–¥ –í–∞–ª—å–¥–µ–Ω", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[13296] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –õ–∞—Ä–∂–µ–Ω—Ç", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[28153] = {
					"–°–Ω–µ–∂–∏–Ω–∫–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[60447] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—Å–∞–±–æ—Ç–∞–∂–Ω–∏–∫", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[140157] = {
					"–ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å –º–µ–¥–≤–µ–∂–∞—Ç-–≥–Ω–∏–ª–æ–∫–æ–≥—Ç–µ–π", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[140669] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[12159] = {
					"–ö–æ—Ä—Ä–∞–∫ –ö—Ä–æ–≤–æ–ø—É—Å–∫", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[74953] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∞—è—Å—è –∫–∞–ø–ª—è", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[140695] = {
					"–õ—é—Ç–æ–∫–ª—ã–∫-–∞–ª—å–±–∏–Ω–æ—Å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[100820] = {
					"–î—É—Ö –≤–æ–ª–∫–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[20923] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π —Å—Ç—Ä–∞–∂ –ü–æ—Ä—É–Ω–≥", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[28729] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ù–∞—Ä–¥–∂–∏–ª", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[24698] = {
					"–ö–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∏—Å—Ç –≠—Ñ–∏—Ä–∏—É–º–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[24762] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ö–ª–∏–Ω–∫–∞", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[28921] = {
					"–•–∞–¥—Ä–æ–Ω–æ–∫—Å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[16700] = {
					"–õ–µ–≥–∏–æ–Ω–µ—Ä –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[150396] = {
					"–í–æ–∑–¥—É—à–Ω–æ–µ —Å—É–¥–Ω–æ R-21/X", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138623] = {
					"–ê–º–∞—Ç–µ—Ç-–ª—É—á–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[33776] = {
					"Casper", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[135552] = {
					"–ú–µ—á–µ–Ω–Ω—ã–π —Å–º–µ—Ä—Ç—å—é –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[29305] = {
					"–ú—É—Ä–∞–±–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[132481] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[59242] = {
					"–ö–æ—Å—Ç—è–Ω–æ–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[77006] = {
					"–¢—Ä—É–ø–Ω—ã–π –ø–∞—É—á–æ–Ω–æ–∫", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[150397] = {
					"–ö–æ—Ä–æ–ª—å –ú–µ—Ö–∞–≥–æ–Ω", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[138624] = {
					"–ê–º–∞—Ç–µ—Ç-–∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[131009] = {
					"–î—É—Ö –∑–æ–ª–æ—Ç–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[134333] = {
					"–¢—É–ø–µ–Ω—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132803] = {
					"–ö–∞–º–Ω–µ–≥—Ä–∏–≤—ã–π –≤–µ–Ω–¥–∏–≥–æ", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[55659] = {
					"–î–∏–∫–∏–π –±–µ—Å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[160904] = {
					"–û–±—Ä–∞–∑ –æ—Ç–ø—É—â–µ–Ω–∏—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[8896] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[158588] = {
					"–ì–∞–º–æ–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[138625] = {
					"–ê–º–∞—Ç–µ—Ç-–∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[128921] = {
					"–¢–µ–º–Ω–æ—à–∫—É—Ä—ã–π —Ç–∏–≥—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[24723] = {
					"–°–µ–ª–∏–Ω –û–≥–Ω–µ–Ω–Ω–æ–µ –°–µ—Ä–¥—Ü–µ", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[30329] = {
					"–î–∏–∫–∏–π –ø–µ—â–µ—Ä–Ω—ã–π –∑–≤–µ—Ä—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[9056] = {
					"–§–∏–Ω–∏–π –¢–µ–º–Ω–æ—Å—Ç—Ä–æ–π", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[14368] = {
					"–°–∫–∞–∑–∏—Ç–µ–ª—å –õ–∏–¥—Ä–æ—Å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[26554] = {
					"–Ø—Å–Ω–æ–≤–∏–¥–∏—Ü–∞ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[146816] = {
					"–°—ç—Ä –ë–∞—Ä—Ç–æ–Ω –ë—Ä–∏–≥—Ö–µ–º", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[138626] = {
					"–ê–º–∞—Ç–µ—Ç-–ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–µ—Ü", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[163708] = {
					"–¢–µ–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –≤—Ä–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[18556] = {
					"–ë–µ—Å–ø–ª–æ—Ç–Ω—ã–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[26746] = {
					"–ë–µ–∑—É–º–Ω—ã–π –ø—Ä–∏–∑—Ä–∞–∫ –º–∞–Ω—ã", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[144765] = {
					"–ê—Å–∏—Ç—Ä–∞ –ñ—É—Ç–∫–∞—è –ü–µ—Å–Ω—å", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[137091] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –∏–∑ –ì–Ω–µ–∑–¥–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[60033] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –¥—É—Ö", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[101075] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω—ã–π —á–µ—Ä–≤–µ–ø–æ–∫–ª–æ–Ω–Ω–∏–∫", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[95947] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫ –ú–∞–∫'—Ä–∞–Ω—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[135044] = {
					"–ö—Ä–æ–º—Å–∞—Ç–µ–ª—å –ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[13599] = {
					"–í—è–ª—ã–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[20864] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –∫–æ—à–º–∞—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[137092] = {
					"–°–≤—è—â–µ–Ω–Ω–∏—Ü–∞ —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[27386] = {
					"–ú—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π –¥—É—Ö", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[159632] = {
					"–°–µ–∫—Ç–∞–Ω—Ç–∫–∞ - —Ç–µ–Ω–µ–≤–æ–π –∫–ª–∏–Ω–æ–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[146835] = {
					"–í—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138628] = {
					"–ê–º–∞—Ç–µ—Ç-–∂—Ä–µ—Ü", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[27642] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –º–∞–º–æ–Ω—Ç", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[135045] = {
					"–°–ø–∏–Ω–æ—Ö–≤–∞—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131974] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –í–∞–ª–µ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[140359] = {
					"–ì—Ä–æ–∑–æ–≤–æ–π –∑–º–µ–π - –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[27962] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å —Å—Ç–∏—Ö–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[133510] = {
					"–ü–∞–ª–∞–¥–∏–Ω –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[124350] = {
					"–õ–æ–º–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö—É–Ω—å—Ü–∑—ç–Ω—å", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[138629] = {
					"–í–∏–∫–∞—Ä–∏–π –î–∂–æ—Å–∞", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[134012] = {
					"–ù–∞–¥—Å–º–æ—Ç—Ä—â–∏–∫ –ê—Å–∫–∞—Ä–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144772] = {
					"–õ–µ–¥–∏ –¢–∞–º–∞–∫–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[10080] = {
					"–°–∞–Ω–¥–∞—Ä—Ä –†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –ë–∞—Ä—Ö–∞–Ω–æ–≤", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[28410] = {
					"–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[133511] = {
					"–ü–∞–ª–∞–¥–∏–Ω –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[46962] = {
					"–ë–∞—Ä–æ–Ω –≠—à–±–µ—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[14303] = {
					"–û–¥–µ—Ä–µ–≤–µ–Ω–µ–≤—à–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[163712] = {
					"–£–º–∏—Ä–∞—é—â–µ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[28730] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –ì–∞—à—Ä–∞", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[14399] = {
					"–í–æ–ª—à–µ–±–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[144951] = {
					"–ë–ª–µ–¥–Ω–æ—à–∫—É—Ä—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[28922] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[75096] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –∞–±–µ—Ä—Ä–∞—Ü–∏—è", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[134024] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[45935] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å —Ö—Ä–∞–º–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[135048] = {
					"–ó–∞–ø–∞—á–∫–∞–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –ø–æ—Ä–æ—Å–µ–Ω–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[26685] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –π–æ—Ä–º—É–Ω–≥–∞—Ä", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29306] = {
					"–ì–∞–ª'–¥–∞—Ä–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[140691] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[105419] = {
					"–£–∂–∞—Å–Ω—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[155951] = {
					"–†–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[158056] = {
					"–ö—Ä—ã—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[34802] = {
					"–ì–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[126918] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138643] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–±–µ—Ä—Å–µ—Ä–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[160291] = {
					"–ü–µ–ø–µ–ª—å–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[152089] = {
					"–¢—Ä–∞–ª–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[137097] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Å –¥–æ—Ä–æ–≥–∏ –•—Ä–∞–±—Ä–æ–≥–ª–∞—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[17917] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[140690] = {
					"–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61678] = {
					"–ü–∞–¥—à–∏–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[135050] = {
					"–ñ—É—Ç–∫–∏–π –∫–∞–ø–∏—Ç–∞–Ω –í–∞–Ω–¥–µ–≥—Ä–∏–º", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[135562] = {
					"–Ø–¥–æ–≤–∏—Ç—ã–π –∑–º–µ–π", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[18558] = {
					"–ë–µ—Å–ø–ª–æ—Ç–Ω—ã–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[144776] = {
					"–ê–π—Ä–∏–Ω –ë—ã—Å—Ç—Ä–æ–Ω–æ–≥–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131018] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ö–∞—Ä–∞-–Ω–∞", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[146832] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26683] = {
					"–ë–µ—Å–Ω–æ–≤–∞—Ç—ã–π –≤–æ—Ä–≥–µ–Ω", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[138634] = {
					"–ü—Ä–æ—Ä–æ–∫ –õ–∞–ø–∏—Å–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[18429] = {
					"–í–æ–ª—à–µ–±–Ω–æ–µ –∏—Å—á–∞–¥–∏–µ", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[5649] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[44658] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –º—É—Ä–ª–æ–∫ - –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[144246] = {
					"–ö–£-–î–ñ0", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[68313] = {
					"–ë–ª—É–∂–¥–∞—é—â–∏–π —Ç—É–º–∞–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[128455] = {
					"–¢'–ª–æ–Ω–¥–∂–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[11456] = {
					"–¢–µ–Ω–µ–ª–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11488] = {
					"–ò–ª–ª–∏–∞–Ω–∞ –í–æ—Ä–æ–Ω—å—è –û–ª—å—Ö–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[128967] = {
					"–°–Ω–∞–π–ø–µ—Ä –¥–æ–º–∞ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[58605] = {
					"–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[140171] = {
					"–¢—É–º–∞–Ω–æ—à–∫—É—Ä", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[4257] = {
					"–õ–∞–Ω–∞ –ì—Ä–æ–º–æ–≤–∞—Ä", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[101326] = {
					"–ü—Ä–æ—Å–ª–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–æ–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[139670] = {
					"–ú–æ—Ä–≥–æ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[69078] = {
					"–°—É–ª –ü–µ—Å–∫–æ—Ä—ã—Å–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[136888] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –≥—Ä—è–∑–∏ –ë–∞—Ä—Ä—É–ª", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59373] = {
					"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59501] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —Ç—Ä—É–ø", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[136076] = {
					"–ë–µ—Å–ø–æ–∫–æ–π–Ω–æ–µ –æ–±–ª–∞–∫–æ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[18493] = {
					"–ê—É–∫–µ–Ω–∞–π—Å–∫–∏–π –∂—Ä–µ—Ü –¥—É—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[132491] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[27963] = {
					"–ß—É–¥–æ—Ç–≤–æ—Ä–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[146838] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146827] = {
					"–î–∏–∫–∞—è —Å–æ–±–∞–∫–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[6017] = {
					"–¢–æ—Ç–µ–º –ª–∞–≤—ã", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[13280] = {
					"–ì–∏–¥—Ä–æ—Ç–≤–∞—Ä—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[12096] = {
					"–ò–Ω—Ç–µ–Ω–¥–∞–Ω—Ç –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[40306] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –º–µ—á–Ω–∏–∫", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[133007] = {
					"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–¥–æ–≤–∏—â–µ", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[137614] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[4849] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π –∞—Ä—Ö–µ–æ–ª–æ–≥", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[146828] = {
					"–î–∏–∫–∏–π —â–µ–Ω–æ–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[12127] = {
					"–û—Ö—Ä–∞–Ω–Ω–∏–∫ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[28731] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –°–∏–ª—Ç–∏–∫", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[5761] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω—ã–π —à–∞—Ä–∫—É–Ω", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[28923] = {
					"–õ–æ–∫–µ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[137103] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –æ–±—Ä–∞–∑", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[6225] = {
					"–ú–µ—Ö–∞–Ω–æ—Ç–∞–Ω–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[29051] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[144784] = {
					"–ß–∞—Ä–≥ \"–ì—Ä–æ–º–æ–≥–ª–∞—Å–Ω—ã–π\"", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[128969] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –∏–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[144782] = {
					"–ë—Ä–∞—Ç –ë—Ä—é–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[29307] = {
					"–ö–æ–ª–æ—Å—Å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[136592] = {
					"–§–ª–∏–Ω–Ω –§—ç–π—Ä–≤–∏–Ω–¥", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[135052] = {
					"–ß—É–º–Ω–∞—è –∂–∞–±–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[135049] = {
					"–ì—Ä–æ–∑–Ω–æ–∫—Ä—ã–ª—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140693] = {
					"–•–∏—Å—Å–∫–∞—Ä–∞—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[126919] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26620] = {
					"–°—Ç—Ä–∞–∂ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26555] = {
					"–£–≤–∞–ª–µ–Ω—å –∏–∑ –ü–ª–µ—Ç–∏", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[29819] = {
					"–ü–∏–∫–µ–π—â–∏–∫ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[74989] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[63508] = {
					"–°—é—ç–Ω—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[158092] = {
					"–ü–∞–¥—à–∞—è –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Å–µ—Ä–¥–µ—Ü", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[8897] = {
					"–†–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ö—É–∑–Ω–∏ –†–æ–∫–∞", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[138641] = {
					"–ö–≤–∞–ª–¥–∏—Ä-—É–∂–∞—Å–µ–Ω—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[41073] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –º–µ—á–Ω–∏–∫", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[3273] = {
					"–ë—É—Ä–µ–≤–µ—Å—Ç–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–æ–ª–∫–∞—Ä", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[138635] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –•—É—Å–∞–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[140689] = {
					"–ü–æ–ª–∑—É–Ω-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61644] = {
					"–¢–µ–º–Ω–∞—è —à–∞–º–∞–Ω–∫–∞ - –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[13216] = {
					"–ì–∞–µ–ª–¥–µ–Ω –ö—É–∑–Ω–µ—á–Ω—ã–π –ú–æ–ª–æ—Ç", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[146834] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç–∫–∞-–º–∞–≥–∏—Å—Ç—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[138642] = {
					"–ö–≤–∞–ª–¥–∏—Ä-—Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[18430] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-—É—á–µ–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[26684] = {
					"–ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π —Ñ—É—Ä–±–æ–ª–≥", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[136083] = {
					"–ó–∞–±—ã—Ç—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[144785] = {
					"–ù–∞–≥—Ç–∞—Ä –í–æ–ª–∫–æ–¥–∞–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[135366] = {
					"–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[59884] = {
					"–ü–∞–≤—à–∏–π —Ä—ã—Ü–∞—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[140677] = {
					"–°–Ω–µ–≥–æ–±–æ—Ä–æ–¥—ã–π —Å–∏–ª–∞—á", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[146833] = {
					"–ù–µ–∫—Ä–æ–º–∞–Ω—Ç-–∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59372] = {
					"–ö–Ω–∏–∂–Ω–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[129227] = {
					"–ê–∑–µ—Ä–æ–∫–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[100818] = {
					"–†–µ–≤—É—â–∏–π –∏–¥–æ–ª", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[101074] = {
					"–ü–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –Ω–µ–Ω–∞–≤–∏—Å—Ç—å—é –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[138631] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –ö–≤–∞–¥–∏–º", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[48229] = {
					"–ö–æ–±–æ–ª—å–¥-–∑–µ–º–ª–µ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[138644] = {
					"–ö–≤–∞–ª–¥–∏—Ä-–ø—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[27644] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–ª–∫", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[59503] = {
					"–ö—Ä–æ—à–∞—â–∏–π—Å—è —Å–∫–µ–ª–µ—Ç", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[140180] = {
					"–ò–∑–¥–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[47162] = {
					"–ì–ª—É–±—Ç–æ–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[123853] = {
					"–í–æ–ª—à–µ–±–Ω–∏—Ü–∞ –ê–ª—å—è–Ω—Å–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[27964] = {
					"–£—á–µ–Ω—ã–π –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[20885] = {
					"–î–∞–ª–ª–∏—è –ì–ª–∞—à–∞—Ç–∞–π –°—É–¥—å–±—ã", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[138645] = {
					"–ö–≤–∞–ª–¥–∏—Ä - —Ä–∞–∑–¥–∏—Ä–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[104402] = {
					"–û—Ç–º–µ—á–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[157441] = {
					"–î—É—Ö –ë–µ–∑–¥–Ω—ã", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[127000] = {
					"dinogeci", -- [1]
					"–û–∫–æ –ë—É—Ä–∏ (—Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–µ)", -- [2]
				},
				[10081] = {
					"–ü—ã–ª—å–Ω—ã–π –ø—Ä–∏–∑—Ä–∞–∫", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[84174] = {
					"–°—Ç—Ä–∞–∂ –ü—Ä–µ–≥—Ä–∞–¥—ã –í–µ—Ç—Ä–æ–≤", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[20859] = {
					"–¢—é—Ä–µ–º—â–∏–∫ –ê—Ä–∫–∞—Ç—Ä–∞—Ü–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[157467] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138646] = {
					"–ö–≤–∞–ª–¥–∏—Ä - –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[159633] = {
					"–°–µ–∫—Ç–∞–Ω—Ç–∫–∞-–ø–∞–ª–∞—á", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[28732] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏–Ω", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[14400] = {
					"–í–æ–ª—à–µ–±–Ω–æ–µ –∏—Å–∫–∞–∂–µ–Ω–∏–µ", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[144789] = {
					"–†–∞–Ω–Ω–∞ –°—Ç–∞–ª—å–Ω–æ–π –ö–æ–≥–æ—Ç—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[28924] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –≤–æ–∏—Ç–µ–ª—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[156575] = {
					"–¢–µ–º–Ω—ã–π –∏–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –ó–∞–Ω–µ—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[24830] = {
					"–ü–æ–≥—Ä–æ–º—â–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[129065] = {
					"–ú–∞–≥-—Ñ–µ–Ω–∏–∫—Å –†–∏–ª–µ—è", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127019] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[61929] = {
					"–°–∏–∫'—Ç–∏–∫ - —è–Ω—Ç–∞—Ä–Ω—ã–π –ø—Ä—è–¥–∏–ª—å—â–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[29308] = {
					"–ü—Ä–∏–Ω—Ü –¢–∞–ª–¥–∞—Ä–∞–º", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[3673] = {
					"–õ–æ—Ä–¥ –°–µ—Ä–ø–µ–Ω—Ç–∏—Å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[74446] = {
					"–ì—Ö–∞–º—É-—Ä–∞", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[137765] = {
					"–û–ø—ã—Ç–Ω—ã–π –∂—Ä–µ—Ü", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[134041] = {
					"–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[130765] = {
					"–î–µ—Ç–µ–Ω—ã—à —Ö–∏—â–Ω–∏–∫–∞ –¥–∂—É–Ω–≥–ª–µ–π", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[47141] = {
					"–ñ—É—Ç–∫–∏–π –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[29820] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –±–æ–≥–∞ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[21694] = {
					"–í–ª–∞—Å—Ç–∏—Ç–µ–ª—å –±–æ–ª–æ—Ç", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[145303] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[99541] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[138499] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127497] = {
					"–°—Ç—Ä–∞–∂–Ω–∏–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[11487] = {
					"–ú–∞–≥–∏—Å—Ç—Ä –ö–∞–ª–µ–Ω–¥—Ä–∏—Å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[129469] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[61672] = {
					"–£—á–µ–Ω–∏—Ü–∞ —Ç–µ–º–Ω–æ–≥–æ —à–∞–º–∞–Ω–∞", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[140697] = {
					"–ì–Ω—É—Å–Ω—ã–π –∞—Å–ø–∏–¥", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145304] = {
					"–î–∏–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[137626] = {
					"–ö—Ä—É—à–∞—â–∏–π —É–∂–∞—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[13298] = {
					"–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç –°–µ—Ä–æ–∂–µ–∑–ª–ª", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[146840] = {
					"–°–∫–µ–ª–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[18431] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª—å–Ω—ã–π –º–∞—è–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[49267] = {
					"–û—Å–∫–æ–ª–æ–∫ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[18559] = {
					"–ë–µ—Å–ø–ª–æ—Ç–Ω—ã–π –ª–æ–≤–µ—Ü", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[161173] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –¥–æ–∑–æ—Ä–Ω—ã–π", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[74716] = {
					"–í–æ–¥—è–Ω–æ–π —Å—Ç—Ä–∞–∂", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[75466] = {
					"–ó–ª–æ–±–Ω—ã–π –Ω–µ—Ç–æ–ø—ã—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[11457] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –æ–≥–Ω—è –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ë—É–π–Ω–æ–≥–æ –ù—Ä–∞–≤–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11489] = {
					"–¢–µ–Ω–¥—Ä–∏—Å –ö—Ä–∏–≤–æ–¥—Ä–µ–≤", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[8324] = {
					"–°–∫–µ–ª–µ—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ê—Ç–∞–ª'–∞–π", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[129231] = {
					"–†–∏–∫—Å–∞ –û–≥–Ω–µ–≤–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[151613] = {
					"–ü—Ä–æ—Ç–∏–≤–æ–ø–µ—Ö–æ—Ç–Ω–∞—è –±–µ–ª–∫–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[76088] = {
					"–ò—Å–∫—É—Å–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[27389] = {
					"–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[75437] = {
					"–°–≤–∏–Ω–æ–±—Ä–∞–∑-–≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[61242] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∫—Ä–µ–ø–∫–æ—à–∫—É—Ä", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[46964] = {
					"–õ–æ—Ä–¥ –ì–æ–¥—Ñ—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[126928] = {
					"–ö–æ—Ä—Å–∞—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[131486] = {
					"–í–µ—Ä—Ö–æ–≤–Ω—ã–π —ç–∫–∑–∞—Ä—Ö –¢—É—Ä–∞–ª–∏–æ–Ω", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[13598] = {
					"–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–∑—Ä—ã–≤—á–∞—Ç—ã–º –≤–µ—â–µ—Å—Ç–≤–∞–º –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[142336] = {
					"–û—Å—å–º–∏–Ω–æ–∂–µ–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[39414] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –≤–µ—Ç—Ä–æ—Å—Ç—É–ø", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[27965] = {
					"–†–µ–∑—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[144849] = {
					"–†–∞–∑–≤–µ–¥—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[146843] = {
					"–®–∏–ø–∞—Å—Ç—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139012] = {
					"–î–∏–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129232] = {
					"–®–µ—Ñ –†–∞–∑–¥–∞–Ω–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[68036] = {
					"–î—É—Ä—É–º—É –ü–æ–∑–∞–±—ã—Ç—ã–π", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[17722] = {
					"–ö–æ–ª–¥—É–Ω—å—è –∏–∑ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[123271] = {
					"–ú–µ—Ç–∞—Ç–µ–ª—å –ø–∞–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°–æ–ª–µ—à–∫—É—Ä–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59494] = {
					"–ü—É–∑—ã—Ä–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[134940] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ø—Ä–æ–Ω–∑–∞—Ç–µ–ª—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[146844] = {
					"–û–ª—å—Ñ–∫—Ä–∏–≥ –ü–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[3654] = {
					"–ú—É—Ç–∞–Ω—É—Å –ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[28733] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π —Ç–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[36658] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –ü–ª–µ—Ç–∏ –¢–∏—Ä–∞–Ω–∏–π", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[152987] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –≤–æ–ª–∏", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[28925] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[16704] = {
					"–ú–µ—Ç–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[84327] = {
					"–°–∫–µ–ª–µ—Ç-–≤–æ–∏–Ω", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[146845] = {
					"–†–≤–∞–Ω—ã–π –î–∂–∞—Ä–µ–¥", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[130488] = {
					"–ú–µ—Ö–∞–Ω–æ–∂–æ–∫–µ–π", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[159811] = {
					"–°–µ—Ä–∂–∞–Ω—Ç –î–∞—Ä–≥–µ–Ω –ì—Ä–æ–∑–æ–≤–∞—è –í–µ—Ä—à–∏–Ω–∞", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[29309] = {
					"–°—Ç–∞—Ä–µ–π—à–∏–Ω–∞ –ù–∞–¥–æ–∫—Å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[152988] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Ç–µ–Ω–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[140385] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä–æ—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[13282] = {
					"–ù–æ–∫—Å–∏–æ–Ω", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[17280] = {
					"–ë–æ–π—Ü–æ–≤—ã–π –ø–µ—Å –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[131436] = {
					"–ò–∑–±—Ä–∞–Ω–Ω–∞—è –∫—Ä–æ–≤–∞–≤–∞—è –º–∞—Ç—Ä–æ–Ω–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[61463] = {
					"–ë—Ä—é—Ö–æ—à–ª–∞–∫", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[149353] = {
					"–°–≤–µ—Ä–∫–∞—é—â–∏–π –∞–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª—å–Ω–∏–∫", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[131864] = {
					"–ì–æ—Ä–∞–∫ –¢—É–ª", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[21695] = {
					"–ü—Ä–∏–ª–∏–≤–Ω—ã–π –≤–æ–ª–Ω–æ–ø–ª–µ—Å–∫", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[74719] = {
					"–ì–Ω–∏–ª–æ—Ä–æ—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[5648] = {
					"–¢–µ–º–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[162715] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω–∞—è —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146847] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –õ–∞–Ω–∏–µ–ª–ª–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[133482] = {
					"–ü–æ–ª–∑—É—á–∞—è –º–∏–Ω–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[74652] = {
					"–ú–µ—Ç–∫–æ—Å—Ç—Ä–µ–ª –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[129548] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[128434] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –Ω–µ–±–µ—Å–Ω—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[5280] = {
					"–£–∂–∞—Å–Ω–∞—è –¥—Ä–∞–∫–æ–Ω–∏–¥–∞", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[131849] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[162716] = {
					"–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∏—Ç—É–∞–ª–∏—Å—Ç–∫–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146848] = {
					"–ñ—É—Ç–∫–æ–µ —Å–æ—á–ª–µ–Ω–µ–Ω–∏–µ", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26622] = {
					"–ù–µ—Ç–æ–ø—ã—Ä—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[131492] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω–∞—è –∂—Ä–∏—Ü–∞ –∫—Ä–æ–≤–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[152479] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –ë–µ–∑–¥–Ω–æ–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[134764] = {
					"–ì—Ä–æ–º–æ–ª–µ—Ç", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[74720] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[13356] = {
					"–ú–∏–Ω–æ—É–∫–ª–∞–¥—á–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[162717] = {
					"–ó–ª–æ–≤–µ—â–∏–π —Ä–µ–∑—á–∏–∫ –¥—É—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146849] = {
					"–í–ª–∞–¥—ã—á–∏—Ü–∞ –¥—É—Ö–æ–≤ –†–æ–≤–µ–Ω–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[152324] = {
					"–ê–ª—å–¥–≤–∏–Ω –õ–∞—Ñ–ª–∏–Ω", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[13601] = {
					"–†–µ–º–æ–Ω—Ç–Ω–∏–∫ –ì–∏–∑–ª–æ–∫", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[136100] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[44261] = {
					"–û—Å—Ç—Ä–æ–∫–ª—é–≤—ã–π –æ—Ä–µ–ª", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[13533] = {
					"–ò–∑–≤–µ—Ä–≥–Ω—É—Ç–∞—è –ª–∏—á–∏–Ω–∫–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[124583] = {
					"–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π —á–µ—Ä–≤—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[162718] = {
					"–ù–µ–ø—Ä–µ–∫–ª–æ–Ω–Ω—ã–π –∫–∞—Ä–∞—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[138660] = {
					"–¢—É–º–∞–Ω–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140038] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π —É–≥–æ—Ä—å", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[48278] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[135931] = {
					"–ö–∞–º–Ω–µ–≥–∞—Ä—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[140976] = {
					"–ß–µ—Ä–≤—å-–±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[74721] = {
					"–ñ–µ–ª—á–Ω—ã–π –ø–ª–∞–≤–Ω–∏–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[27966] = {
					"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω—ã—Ö –†—É–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[162719] = {
					"–ü–µ—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π —Å–ª—É–∂–∏—Ç–µ–ª—å –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[59746] = {
					"–¶–µ–Ω—Ç—É—Ä–∏–æ–Ω –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[136541] = {
					"–ñ–µ–ª—á–Ω—ã–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[122963] = {
					"–†–µ–∑–∞–Ω", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[156577] = {
					"–¢–µ—Ä—É–º –ü–æ–¥–∑–µ–º–Ω–∞—è –ö—É–∑–Ω—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[48502] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[146872] = {
					"–ò–∑–≥–æ–π –ö–∞—á–æ—Ç–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[61408] = {
					"–ê–¥–∞—Ä–æ–≥–≥", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[135975] = {
					"–û—Ç–¥—ã—Ö–∞—é—â–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[146852] = {
					"–ö–æ–Ω—Ä–∞–¥ –ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[65522] = {
					"–©–∏—Ç-–ø—É–∑—ã—Ä—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[14369] = {
					"–®–µ–Ω'–¥—Ä–∞–ª–∞—Ä—Å–∫–∏–π —Ä–µ–≤–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[144293] = {
					"–ü–µ—Ä–µ—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Ö–æ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[133389] = {
					"–ì–∞–ª—å–≤–∞–∑–∑—Ç", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[28926] = {
					"–ò—Å–∫—Ä–∞ –ò–æ–Ω–∞—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[159416] = {
					"–®–∏–ø–∞—Å—Ç–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[134056] = {
					"–ê–∫–≤–∞'—Å–∏—Ä—Ä", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[29118] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[149338] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[139097] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[144294] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –±–æ–µ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[44898] = {
					"–û–≥–Ω–µ–¥—ã—â–∞—â–∏–π –ø–∏–≥–º–µ–π", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[157603] = {
					"–ö–∞–ø–ª—è –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[130644] = {
					"–ù–æ–∂–µ–∑—É–±", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[17281] = {
					"–ü–æ—Ç—Ä–æ—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ—Å—Ç–µ–≥–ª–æ–¥–æ–≤", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[29630] = {
					"–ö–ª—ã–∫–∞—Å—Ç–∞—è –≥–ª—É–±–∏–Ω–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[163746] = {
					"\"–®–æ–∫–æ—Ç—Ä–æ–Ω X1\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[7608] = {
					"–ú—É—Ä—Ç–∞ –ú—Ä–∞—á–Ω–æ–±—Ä—é—Ö", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[144295] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[21696] = {
					"–ü–∞—Ä–æ–≤–æ–π –≤–æ–ª–Ω–æ–ø–ª–µ—Å–∫", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[157604] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[20875] = {
					"–ö—Ä–∏–∫—É–Ω –ù–µ–≥–∞—Ç–æ–Ω–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[134058] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à—Ç–æ—Ä–º–æ–≤ –§—ç–π", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[83681] = {
					"–ñ—É–∂–∂–∞—â–∏–π —è–¥–æ–≤–∏—Ç—ã–π —Å–≤–µ—Ç–ª—è–∫", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[16809] = {
					"–û'–º—Ä–æ–≥–≥ –ó–∞–≤–æ–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[144296] = {
					"–¢–∞–Ω–∫-–ø–∞—É–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[24561] = {
					"–Ø–∑–∑–∞–π", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[18177] = {
					"–ù–µ—á–∏—Å—Ç—ã–π —Ç–æ—Ç–µ–º –∫–∞–º–µ–Ω–Ω–æ–π –∫–æ–∂–∏", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[75439] = {
					"–Æ–Ω—ã–π —Å–≤–∏–Ω–æ–±—Ä–∞–∑", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[126423] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[136846] = {
					"–ö—Ä–æ–≤–æ–ø–∏–π—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[26623] = {
					"–ì—Ä–æ–º–∏–ª–∞ –ü–ª–µ—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[18497] = {
					"–ê—É–∫–µ–Ω–∞–π—Å–∫–∏–π –º–æ–Ω–∞—Ö", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[7023] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π —á–∞—Å–æ–≤–æ–π", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[142000] = {
					"–ó–ª–æ–≤–µ—â–µ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[59551] = {
					"–ü–æ–ø—Ä—ã–≥—É–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[74980] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ª–µ–∫–∞—Ä—å –±—É—Ä—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[11458] = {
					"–û–¥–µ—Ä–µ–≤–µ–Ω–µ–≤—à–∏–π –¥—Ä–µ–≤–µ–Ω—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11490] = {
					"–ó–µ–≤—Ä–∏–º –¢–µ—Ä–Ω–æ–≤–æ–µ –ö–æ–ø—ã—Ç–æ", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[5762] = {
					"–ó–∞–≥–∞–¥–æ—á–Ω–∞—è –±–æ–ª–æ—Ç–Ω–∞—è –≥–∞–¥—é–∫–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[45922] = {
					"–ù–µ–±–µ—Å–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[76260] = {
					"–•–∏—Ö–∏–∫–∞—é—â–∏–π –ø–∏—Ä–æ–º–∞–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[153401] = {
					"–ö'—Ç–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[157607] = {
					"–ë–µ–∑–ª–∏–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —Ç–µ–Ω–µ–π", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[131585] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[126424] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –ø—Ä–∏–ª–∏–≤–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[40291] = {
					"–†–æ–∂–¥–µ–Ω–Ω—ã–π –≤ –ª–∞–∑—É—Ä–∏ –ø—Ä–æ–≤–∏–¥–µ—Ü", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[27647] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–≥—Ä", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[17398] = {
					"–ù–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–Ω—ã–π –æ—Ä–∫ –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[144299] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134797] = {
					"–ì–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∑–∞—Ç–≤–æ—Ä–Ω–∏–∫", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[157608] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Å–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –≤–æ–ª–∏", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[58590] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[59800] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-—è—Ä–æ—Å—Ç–µ–Ω—å", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[150859] = {
					"–ó–∞'–∫—É–ª", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[59605] = {
					"–û—Ç—É–ø–µ–≤—à–∏–π —Ö–æ–∑–µ–Ω-–±—É—è–Ω", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[144300] = {
					"–ñ–∏—Ç–µ–ª—å –ú–µ—Ö–∞–≥–æ–Ω–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[6066] = {
					"–¢–æ—Ç–µ–º —Ö–≤–∞—Ç–∫–∏ –∑–µ–º–ª–∏", -- [1]
					"–ó–∞—Ç–æ–Ω—É–≤—à–∏–π —Ö—Ä–∞–º", -- [2]
				},
				[157609] = {
					"–ö'—Ç–∏—Ä —Ä–µ–∑—á–∏–∫ —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[136881] = {
					"–ó–µ–º–ª–µ–ø—Ä–æ—Ö–æ–¥–µ—Ü –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä–æ–≥—Ä–∏–≤–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134063] = {
					"–ë—Ä–∞—Ç –ê–π—Ä–æ–Ω—Ö–∞–ª–ª", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[142765] = {
					"–ú–∞'–¥–∞ –†–µ–Ω–∫–∞–ª–∞", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[131670] = {
					"–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[140107] = {
					"–†–∞–∑—è—â–∏–π —Å–º–µ—Ä—Ç–µ–∂–∞–ª", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144301] = {
					"–ñ–∏–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134144] = {
					"–ñ–∏–≤–æ–π –ø–æ—Ç–æ–∫", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[157610] = {
					"–ö'—Ç–∏—Ä-–ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[6226] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –æ–≥–Ω–µ–º–µ—Ç", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[20865] = {
					"–ê–º–µ–±–æ–≤–∏–¥–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[29119] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[56541] = {
					"–ú–∞—Å—Ç–µ—Ä –°–Ω–µ–∂–Ω—ã–π –í–∏—Ö—Ä—å", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[84196] = {
					"–û–±–µ–∑–¥–≤–∏–∂–µ–Ω–Ω—ã–π –≤–æ–∏–Ω", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[29311] = {
					"–ì–ª–∞—à–∞—Ç–∞–π –í–æ–ª–∞–∂", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[76518] = {
					"–ö–æ—Å—Ç—è–Ω–æ–π —Ä–∏—Ç—É–∞–ª", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[151798] = {
					"–í–µ–∫—Å–∏–æ–Ω–∞", -- [1]
					"–í–æ—Å—Ç–æ—á–Ω—ã–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ ‚Äì –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –†–µ–¥—É—Ç ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π –°–µ—Ä–¥—Ü–∞ –ê–∑–µ—Ä–æ—Ç", -- [2]
				},
				[58998] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –∏–∑ –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[130521] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146862] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[37729] = {
					"–ì—Ä–æ–∑–Ω—ã–π —Ä–∞–∑–æ—Ä–∏—Ç–µ–ª—å", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[131246] = {
					"–ê–ª–∞–Ω–∞–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[144303] = {
					"–°–¢–†–ê–ñ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[132530] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –±–æ–µ—Ü –∞–≤–∞–Ω–≥–∞—Ä–¥–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[157612] = {
					"–û–∫–æ –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[74983] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[138161] = {
					"–≠–ª–∏—Ç–Ω—ã–π –º–∞–≥-—Å—Ç—Ä–∞–∂", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[61657] = {
					"–Æ–Ω–∞—è –≥–æ–Ω—á–∞—è –ø–ª–∞–º–µ–Ω–∏", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[56439] = {
					"–®–∞ –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[76263] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –º–∞–≥", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[13154] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –õ—É–∏ –§–∏–ª–∏–ø—Å", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[157613] = {
					"–ü–∞—Å—Ç—å –î–µ—Å—Ç'–∞–≥–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[122076] = {
					"–°–Ω–µ–∂–Ω–∞—è —Å—Ñ–µ—Ä–∞", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130522] = {
					"–ú–æ—Ä—è—á–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[26624] = {
					"–ì–Ω—É—Å–Ω—ã–π –∏–∑—Ä—ã–≥–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[18498] = {
					"–ù–µ–∂–∏–≤–æ–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[160061] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[132532] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[74728] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –≤–ª–∞–¥—ã–∫–∞ –ë–∞–ª—Ç–∏—ç–ª—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[74984] = {
					"–ú—É—Ä–ª–æ–∫ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú—É—Ç–Ω–æ–π –í–æ–¥—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[149311] = {
					"–®–∞–Ω–¥—Ä–∏—Å–∞ –û–ø–µ—Ä–µ–Ω–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138485] = {
					"–ù—É–∑–æ—Ä–∏–∞–∫ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞—Ç–æ—Ä", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[131666] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[43778] = {
					"–í—Ä–∞–≥–æ—Ä–µ–∑-5000", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[13797] = {
					"–ì–æ—Ä–Ω—ã–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü –ì—É–ª–∫–∏–π –ö—Ä–∏–∫", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[161198] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –î—É—à–∞—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[130011] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[133557] = {
					"–†–∞–∑–∞–∫ –°–∫–æ–≤–æ—Ä–æ–¥–∫–µ—Ä", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[134069] = {
					"–í–æ–ª'–∑–∏—Ç –®–µ–ø—á—É—â–∞—è", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[27648] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω–∞—è –Ω–∞–≥–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[137969] = {
					"–ü–æ–≥—Ä–µ–±–∞–ª—å–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[151029] = {
					"–¢–µ—Ä–Ω–æ–º–∞–Ω—Ç –¢—ç–π–≤–µ—Ä–∏", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[70212] = {
					"–ü—ã–ª–∞—é—â–∞—è –≥–æ–ª–æ–≤–∞", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[74729] = {
					"–ü—Ä–∏—Å–ª—É–∂–Ω–∏–∫-–¥–µ–º–æ–Ω –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[134939] = {
					"–©–µ—Ç–∏–Ω–∏—Å—Ç—ã–π –ª—é–¥–æ–µ–¥", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[153755] = {
					"–ù–∞–Ω–æ –ú–µ–≥–∞–±—É–º", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[32191] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –ª–æ–≤–µ—Ü", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[69390] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –±—É—Ä—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[147891] = {
					"–ü–µ—Ö–æ—Ç–∏–Ω–µ—Ü –¥–æ–º–∞ –ü—Ä–∞—É–¥–º—É—Ä–æ–≤", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[152498] = {
					"–¢–µ–º–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[69944] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[130012] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[26929] = {
					"–í–µ–ª–∏–∫–∞—è –≤–µ–¥—É–Ω—å—è –¢–µ–ª–µ—Å—Ç—Ä–∞", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[57080] = {
					"–ü—Ä–æ–∫–ª—è—Ç—ã–π —Å–≤–∏—Ç–æ–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[39390] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[140982] = {
					"–õ–µ–¥–æ–ª–æ–º", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[28736] = {
					"–ë—ã—Å—Ç—Ä–æ–ª–∞–ø—ã–π –∑–∞—Ä–∞–∑–µ–Ω—å", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[131726] = {
					"–ì—É–Ω–Ω–æ–ª—å—Ñ –Ø—Ä–æ—Å—Ç–Ω—ã–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[129367] = {
					"–í–æ–∏–Ω –±—É—Ä–∏ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[20882] = {
					"–¢–∞—è—â–∞—è—Å—è –≤–µ–¥—å–º–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[140768] = {
					"–ì—É—É—Ä—É –†–∞–∑–±–∏–≤–∞—Ç–µ–ª—å –ì–æ—Ä", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[20866] = {
					"–ü–æ–∂–∏—Ä–∞—Ç–µ–ª—å –¥—É—à", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[146869] = {
					"–ì—é—Ä—É–º –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151476] = {
					"\"–í–∑—Ä—ã–≤–æ—Ç—Ä–æ–Ω –•-80\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[147893] = {
					"–î–æ–∑–æ—Ä–Ω–∞—è –¥–æ–º–∞ –ü—Ä–∞—É–¥–º—É—Ä–æ–≤", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –¢–æ–ª –î–∞–≥–æ—Ä–∞", -- [2]
				},
				[134938] = {
					"–ß–∞—Å–æ–≤–æ–π –∏–∑ –¢–µ–ª—å–¥—Ä–∞—Å—Å–∏–ª–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[121567] = {
					"–î—É—Ö", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[7267] = {
					"–í–æ–∂–¥—å –£–∫–æ—Ä–∑ –ü–µ—Å—á–∞–Ω—ã–π –ß–µ—Ä–µ–ø", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[10811] = {
					"–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ì–∞–ª—Ñ–æ—Ä–¥", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[61392] = {
					"–•–∞—Ä—Ç–∞–∫ –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[7787] = {
					"–†–∞–± –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[140087] = {
					"–ú–æ–ª–æ–¥–∞—è –µ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[78314] = {
					"–ú–æ—Ä–æ–∑–Ω—ã–π –ª–µ–¥–æ—á—Ä–µ–≤", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[53006] = {
					"–¢–æ—Ç–µ–º –¥—É—Ö–æ–≤–Ω–æ–π —Å–≤—è–∑–∏", -- [1]
					"–û–∫–æ –ë—É—Ä–∏ (—Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–µ)", -- [2]
				},
				[157620] = {
					"–ü—Ä–æ—Ä–æ–∫ –°–∫–∏—Ç—Ä–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[47739] = {
					"\"–ö–∞–ø–∏—Ç–∞–Ω\" –ü–∏—Ä–æ–∂–æ–∫", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[48419] = {
					"–®–∞—Ö—Ç–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[146871] = {
					"–ú–∞—Ç—Ä–∏–∞—Ä—Ö –ù–∞—Å'–Ω–∞–π—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[126963] = {
					"–ì–≤–∏–Ω–¥—Ä–∞ –ì—Ä–æ–º–æ–≤–æ–π –ú–æ–ª–æ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[11043] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –º–æ–Ω–∞—Ö", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[135989] = {
					"–©–∏—Ç–æ–Ω–æ—Å–µ—Ü –∏–∑ –∞—Ä–º–∏–∏ –ó—É–ª–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[129758] = {
					"–ì—Ä–µ–Ω–∞–¥–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[153526] = {
					"–ê–∫–∏—Ä-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[26693] = {
					"–°–∫–∞–¥–∏ –ë–µ–∑–∂–∞–ª–æ—Å—Ç–Ω—ã–π", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[154550] = {
					"–ê–º–∞—Ç–µ—Ç - –∂—Ä–µ—Ü –°–æ–ª–Ω—Ü–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[18371] = {
					"–®–∏—Ä—Ä–∞–∫ –°—Ç—Ä–∞–∂ –ú–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[61432] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–ø–æ–≥—Ä–æ–º—â–∏–∫", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[18499] = {
					"–ù–µ–∂–∏–≤–æ–π –∫–æ–ª–¥—É–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[156406] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –ø–æ—á–µ—Ç–Ω–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[1933] = {
					"–û–≤—Ü–∞", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[153527] = {
					"–ê–∫–∏—Ä - –≤–æ–∂–∞–∫ —Ä–æ—è", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[74988] = {
					"–ü–∞–ª–∞—á –ú—è—Å–æ–¥–µ–ª", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[11459] = {
					"–ñ–µ–ª–µ–∑–Ω–∞—è –ö–æ—Ä–∞ - –∑–∞—Å—Ç—É–ø–Ω–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[83690] = {
					"–ü–∞–Ω—Ç–∞—Ä—Å–∫–∏–π –∑–Ω–∞—Ö–∞—Ä—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[145851] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π - –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –≥–∏–ø–ø–æ–≥—Ä–∏—Ñ–µ", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[160182] = {
					"–ü–æ—Å–ª—É—à–Ω–∏—Ü–∞ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[68078] = {
					"–ö–æ–Ω –ñ–µ–ª–µ–∑–Ω—ã–π", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[148921] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∏–π –≥–ª–µ—Ñ–æ–º–µ—Ç", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[144949] = {
					"–¢–µ–Ω–µ–ª—é–±–∏–≤—ã–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[145850] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π —Å–∞–ø–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[154552] = {
					"–ê–º–∞—Ç–µ—Ç-—Ñ–∞–Ω–∞—Ç–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[146874] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–µ—Ç—Ä–æ–≤ –ú–∞—Ä–∞–π—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[27649] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –º—É—Ä–ª–æ–∫", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[160183] = {
					"–§–∞–Ω–∞—Ç–∏–∫ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[23682] = {
					"–í—Å–∞–¥–Ω–∏–∫ –±–µ–∑ –≥–æ–ª–æ–≤—ã", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[69899] = {
					"–ü–µ—Å—á–∞–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –§–∞—Ä—Ä–∞–∫–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[17427] = {
					"–õ—É—á–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[158136] = {
					"–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –¢–µ–º–Ω–æ—Å–ª–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139810] = {
					"–ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–≤–µ–Ω–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[146875] = {
					"–í–∞–ª–∏–º–æ–∫ –ó–ª–æ–≤—Ä–µ–¥–Ω—ã–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[56637] = {
					"–£–∫-–£–∫", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[156089] = {
					"–ê–∫–∏—Ä - –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å —è–¥–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[68079] = {
					"–†–æ'—à–∞–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[162303] = {
					"–ê–∫–∏—Ä - —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä–æ—è", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[123288] = {
					"–ö–∞–Ω–æ–Ω–∏—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130272] = {
					"–£–¥—É—à–∞—é—â–∞—è –ª–æ–∑–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[154554] = {
					"–ê–º–∞—Ç–µ—Ç-—Å—Ç—Ä–∞–∂", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[26637] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[131040] = {
					"–†–∞–∑–¥–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ö–∞–æ-–¢–µ–Ω—å", -- [1]
					"Zandalar Continent Finale", -- [2]
				},
				[157439] = {
					"–Ø—Ä–æ—Å—Ç—å –ù'–ó–æ—Ç–∞", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[69388] = {
					"–ó–∞–Ω–¥–∞–ª–∞—Ä—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä –∫–æ–ø—å—è", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[74478] = {
					"–ú–∞—Å—Ç–µ—Ä —Ç–µ–Ω–µ–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú–µ—Ä—Ç–≤–æ–π –ì–æ–ª–æ–≤—ã", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[61945] = {
					"–°—Ç–∞–ª—å–Ω–∞—è –ø–∞—Å—Ç—å –∫–ª–∞–Ω–∞ –ì—É—Ä—Ç–∞–Ω", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[4861] = {
					"–ö—Ä—ã–ª–∞–Ω-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[20867] = {
					"–î–æ–∑–æ—Ä–Ω—ã–π –°–º–µ—Ä—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[83692] = {
					"–°–∞–±–ª–µ—Ä–æ–Ω –∏–∑ –ø–∞–Ω—Ç–∞—Ä—Å–∫–æ–≥–æ –ø—Ä–∞–π–¥–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[139199] = {
					"–ó–µ–ª–µ–Ω—ã–π –ø–ª–µ–≤–∞—Ç–µ–ª—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129517] = {
					"–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π —è—â–µ—Ä", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[127381] = {
					"–ò–ª—å–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[121571] = {
					"–õ–µ–≤—ã–π", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[153532] = {
					"–ê–∫–∏—Ä - –ø–æ–¥—á–∏–Ω–∏—Ç–µ–ª—å —Ä–∞–∑—É–º–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[130273] = {
					"–°–µ–ª–µ–±—Ä–∏–π—Å–∫–∞—è –¥—Ä–∏–∞–¥–∞", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[118244] = {
					"–ù—è—à", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132903] = {
					"–¢—Ä–æ–ª–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –°—É—Ö–æ–π –í–µ—Ç–≤–∏", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[139200] = {
					"–ó–µ–ª–µ–Ω—ã–π –º—É—Ö–æ–ª–æ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[34944] = {
					"–ö—Ä–µ–ø–æ—Å—Ç–Ω–∞—è –ø—É—à–∫–∞", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[139342] = {
					"–í–æ–∏–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[59309] = {
					"–ü–æ—Å–ª—É—à–Ω—ã–π –ø–µ—Å", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[127124] = {
					"–û—Ñ–∏—Ü–∏–∞–Ω—Ç–∫–∞ –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[158140] = {
					"–ë–µ—à–µ–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[17796] = {
					"–ê–Ω–∂–∏–Ω–µ—Ä –ü–∞—Ä–æ–ø—É—Å–∫", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[11444] = {
					"–ú–∞–≥-–ª–æ—Ä–¥ –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[135971] = {
					"–û—Ç—Å—Ç—É–ø–Ω–∏–∫-–Ω–æ–≤–æ–±—Ä–∞–Ω–µ—Ü", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[140975] = {
					"–ú–ª–∞–¥–æ–∑–æ–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[58822] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[153022] = {
					"–°–Ω–∞–Ω–≥", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[131356] = {
					"–•–∏—â–Ω–∏–∫ –¥–∂—É–Ω–≥–ª–µ–π", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[130274] = {
					"–ü–æ–ª–∑—É—á–∏–π —Å–ª—è–∫–æ—á", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[134083] = {
					"–ö–∞—Ä–∞—Ç–µ–ª—å 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[44926] = {
					"–ü—Ä–∏—Å—è–≥–Ω—É–≤—à–∏–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[26626] = {
					"–í–æ—Å–∫—Ä–µ—Å–∏—Ç–µ–ª—å –∏–∑ –ü–ª–µ—Ç–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[18500] = {
					"–ù–µ–∂–∏–≤–æ–π —Å–≤—è—â–µ–Ω–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[127119] = {
					"–ü–∞–ª—É–±–Ω—ã–π –º–∞—Ç—Ä–æ—Å –∏–∑ –í–æ–ª—å–Ω–æ–π –ì–∞–≤–∞–Ω–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136643] = {
					"–≠–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[13443] = {
					"–õ–µ—Å–Ω–æ–π –¥—Ä—É–∏–¥", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[21140] = {
					"–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–û—Ç–∫—Ä—ã—Ç–∏–µ –¢–µ–º–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞", -- [2]
				},
				[134084] = {
					"–°–Ω–∞–π–ø–µ—Ä 7-–≥–æ –ª–µ–≥–∏–æ–Ω–∞", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[83694] = {
					"–Ø–¥–æ–ø–ª–µ—Ç –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Å—Ç—Ä—ã—Ö –ö–æ–≥—Ç–µ–π", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[139203] = {
					"–ó–µ–ª–µ–Ω—ã–π –¥—Ä–µ–≤–µ–Ω—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[20886] = {
					"–ü—Ä–æ–≤–∏–¥–µ—Ü –ì–Ω–µ–≤–∞ –°–æ–∫–∫–æ—Ä–∞—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[152512] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—É—Ö", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[29064] = {
					"–ê–Ω—É–±'–∞—Ä—Å–∫–∏–π –Ω–µ–∫—Ä–æ–º–∞–Ω—Ç", -- [1]
					"–ê–∑–∂–æ–ª-–ù–µ—Ä—É–±", -- [2]
				},
				[97259] = {
					"–ü—ã–ª–∞—é—â–µ–µ –ø–æ—Ä–æ–∂–¥–µ–Ω–∏–µ –≥–∏–¥—Ä—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[162238] = {
					"–í–µ–¥–æ–º–∞—è –≥–æ–ª–æ—Å–∞–º–∏ —Å–µ–∫—Ç–∞–Ω—Ç–∫–∞", -- [1]
					"–¢–≤–µ—Ä–¥—ã–Ω—è –ö—Ä—ã–ª–∞ –¢—å–º—ã ‚Äì —Å—Ü–µ–Ω–∞—Ä–∏–π", -- [2]
				},
				[29713] = {
					"–°–ª–∞–¥'—Ä–∞–Ω—Å–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[146882] = {
					"–ò—Å–ø–æ–ª–∏–Ω—Å–∫–∞—è —á—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[27650] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑–¥—É—Ö", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[2442] = {
					"–ö–æ—Ä–æ–≤–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[11472] = {
					"–≠–ª–¥—Ä–µ—Ç–∞—Ä—Å–∫–∏–π –¥—É—Ö", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[43391] = {
					"–ú–∏–ª–ª—Ö–∞—É—Å –ú–∞–Ω–∞—à—Ç–æ—Ä–º", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[8138] = {
					"–ú–æ–ª–æ–¥–æ–π —Å—É–ª'–ª–∏—Ç—É–∑", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[27970] = {
					"–ì–Ω–µ–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[7320] = {
					"–ò–∑–≤–µ—Ä–≥ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ö–∞–º–µ–Ω–Ω–æ–≥–æ –°–≤–æ–¥–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[9956] = {
					"–¢–µ–Ω–µ–≥–æ—Ä–Ω—Å–∫–∏–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –æ–≥–Ω—è", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[3671] = {
					"–õ–µ–¥–∏ –ê–Ω–∞–∫–æ–Ω–¥—Ä–∞", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[131527] = {
					"–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[74383] = {
					"–í–æ–∏–Ω-–∫–æ—Å—Ç–µ—â–µ–ø", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[144836] = {
					"–®–∏–ø–∞—á", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[40448] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –≥–æ–ª–æ–≤–æ—Ä–µ–∑", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[122086] = {
					"–°—Ç–∞–ª–µ—à–∫—É—Ä –∏–∑ –∫–ª–∞–Ω–∞ –°–∫–æ–ª—å–∑—è—â–µ–≥–æ –ü–ª–∞–≤–Ω–∏–∫–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[28546] = {
					"–ò–æ–Ω–∞—Ä", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[134599] = {
					"–£—Å–∏–ª–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[155586] = {
					"–ü—Ä–∏–∑—Ä–∞–∫ –ê—Ä–∞—Ç–æ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[14371] = {
					"–®–µ–Ω'–¥—Ä–∞–ª–∞—Ä—Å–∫–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[135715] = {
					"–°–≤–∏—Ä–µ–ø—ã–π –Ω–æ—á–Ω–æ–π —Å–∞–±–ª–µ–∑—É–±", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[144837] = {
					"–û–ª–µ–Ω—å c –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–æ–≤", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[61947] = {
					"–ö—Ä—É—à–∏—Ç–µ–ª—å —Ä–µ–±–µ—Ä –∫–ª–∞–Ω–∞ –ö–∞—Ä–≥–µ—à", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[158146] = {
					"–ü–∞–¥—à–∞—è —Å—Ç—Ä–∞–Ω–Ω–∏—Ü–∞ —Ä–∞–∑–ª–æ–º–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[20868] = {
					"–≠–Ω—Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –≥–ª–∞–∑", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[75506] = {
					"–í–µ—Ä–Ω–∞—è —Å–ª—É–∂–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[58831] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–ù–µ–∫—Ä–æ—Å–∏—Ç–µ—Ç", -- [2]
				},
				[128651] = {
					"–•–∞–¥–∞–ª –ß–µ—Ä–Ω–∞—è –ë–µ–∑–¥–Ω–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[29314] = {
					"–ó—É—Ä–∞–º–∞—Ç –£–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[161218] = {
					"–ê–∫–∏—Ä-–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[58876] = {
					"–ì–æ–ª–æ–¥–Ω–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"–ó–∞–ª—ã –ê–ª–æ–≥–æ –æ—Ä–¥–µ–Ω–∞", -- [2]
				},
				[77042] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[157452] = {
					"–ö–æ—à–º–∞—Ä–Ω—ã–π –∞–Ω—Ç–∏–≥–µ–Ω", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[146886] = {
					"–•—Ä–æ–ª—Å–∫–∞–ª—å–¥ –ì–Ω–∏–ª–æ–π", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[86000] = {
					"–î–æ–±—Ä—ã–π –∫–æ–ø—ã—Ç–µ–Ω—å", -- [1]
					"FW Horde Garrison Level 1", -- [2]
				},
				[17477] = {
					"–ë–µ—Å —Ü–∏—Ç–∞–¥–µ–ª–∏ –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[29826] = {
					"–¶–µ–ª–∏—Ç–µ–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[144839] = {
					"–ë–µ–ª–æ—Ö–≤–æ—Å—Ç–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[17669] = {
					"–ë–µ—à–µ–Ω—ã–π –±–æ–π—Ü–æ–≤—ã–π –ø–µ—Å", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[24556] = {
					"–ó–µ–ª—Ñ–∞–Ω", -- [1]
					"–¢–µ—Ä—Ä–∞—Å–∞ –ú–∞–≥–∏—Å—Ç—Ä–æ–≤", -- [2]
				},
				[17797] = {
					"–ì–∏–¥—Ä–æ–º–∞–Ω—Ç–∫–∞ –¢–µ—Å–ø–∏—è", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[134602] = {
					"–°–∫—Ä—ã—Ç–Ω—ã–π —É–±–∏–π—Ü–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[79508] = {
					"–ê–±–∏—Å—Å–∞–ª –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[11467] = {
					"–¶—É'–∑–∏", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[30338] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –ø–∞—É–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[144840] = {
					"–ü—è—Ç–Ω–∏—Å—Ç—ã–π –æ–ª–µ–Ω–µ–Ω–æ–∫", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[7274] = {
					"–ü–∞–ª–∞—á –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[40577] = {
					"–ß–∞—Å–æ–≤–æ–π –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[18309] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-–ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[18373] = {
					"–≠–∫–∑–∞—Ä—Ö –ú–∞–ª–∞–¥–∞–∞—Ä", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[26627] = {
					"–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π —É–∫—Ä–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[18501] = {
					"–ù–µ–∂–∏–≤–æ–π –±—Ä–æ–¥—è–≥–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[136139] = {
					"–ú–µ—Ö–∞–Ω–æ–º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[153031] = {
					"–ë–æ–µ–≤–æ–π –º–∞–≥-–≤–µ—Ç–µ—Ä–∞–Ω", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[139530] = {
					"–ó–µ–º–ª—è–Ω–æ–π —Å—Ç–µ–Ω–æ–ª–æ–º", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[145865] = {
					"–ì–∏–ª–Ω–µ–∞—Å—Å–∫–∏–π –º—É—à–∫–µ—Ç–µ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[138187] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π —É–∂–∞—Å", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[146889] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–º–µ—Ä—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[5763] = {
					"–≠–∫—Ç–æ–ø–ª–∞–∑–º–∞ –∫–æ—à–º–∞—Ä–æ–≤", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[10808] = {
					"–¢–∏–º–º–∏ –ë–µ—Å–ø–æ—â–∞–¥–Ω—ã–π", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[131850] = {
					"–û–±–µ–∑—É–º–µ–≤—à–∏–π –º–∞—Å—Ç–µ—Ä –≤—ã–∂–∏–≤–∞–Ω–∏—è", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[144842] = {
					"–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[14327] = {
					"–õ–µ—Ñ—Ç–µ–Ω–¥—Ä–∏—Å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[50815] = {
					"Skarr", -- [1]
					"–û—Å—Ç—Ä–æ–≤ –ó–∞–≤–æ–µ–≤–∞–Ω–∏–π", -- [2]
				},
				[138502] = {
					"–í–ª–∞–¥—ã–∫–∞ –∑–º–µ–µ–≤ –ù–∞—Ä–æ–≤–∏–∞–∫", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[146890] = {
					"–†—É–Ω–æ–º–∞–Ω—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[77812] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è —Å—Ç—Ä–∞–∂–Ω–∏—Ü–∞ –¥—É—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[152009] = {
					"–ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–π —Ö–ª–∞–º–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[152521] = {
					"–ì—É–Ω–∞–∑", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[94960] = {
					"–•–∏–º–¥–∞–ª–ª—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[91789] = {
					"–õ–µ–¥–∏ –ö–æ–ª—å—Ü–æ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[27971] = {
					"–ñ–µ—Å—Ç–æ–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[75509] = {
					"–°–∞–¥–∞–Ω–∞ –ö—Ä–æ–≤–∞–≤–æ–µ –ë–µ–∑—É–º–∏–µ", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[129000] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[59555] = {
					"–ù–∞–≤—è–∑—á–∏–≤—ã–π —à–∞", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[8920] = {
					"–û—Ä—É–∂–µ–π–Ω—ã–π —Ç–µ—Ö–Ω–∏–∫", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[138497] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—à—É–µ–∫–ª—è—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[130024] = {
					"–ú–æ–∫—Ä–∞—è –∫–æ—Ä–∞–±–µ–ª—å–Ω–∞—è –∫—Ä—ã—Å–∞", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[126185] = {
					"–¢–µ–º–Ω—ã–π —á–∞—Ä–æ–¥–µ–π –∏–∑ –∫–ª–∞–Ω–∞ –¶–∑—ã–∞–Ω—å-–¢–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[28547] = {
					"–ë—É—à—É—é—â–∏–π –≤–∏—Ö—Ä—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[146892] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[37711] = {
					"–ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[69465] = {
					"–î–∂–∏–Ω'—Ä–æ–∫ –†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[152523] = {
					"–ú—É–∫—É—Ç–∞", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[148940] = {
					"–ö–∞–ª–¥–æ—Ä–∞–π—Å–∫–∞—è —Ö–∏–º–µ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[6211] = {
					"–†–∞–∑–æ—Ä–∏—Ç–µ–ª—å –∏–∑ –ø–µ—â–µ—Ä–Ω—ã—Ö –≥–ª—É–±–∏–Ω", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[140541] = {
					"–®–∞—Ä–∫—É–Ω-–ø–µ–ø–ª–æ—Ç–∫–∞—á", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[20869] = {
					"–ß–∞—Å–æ–≤–æ–π –ê—Ä–∫–∞—Ç—Ä–∞—Ü–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[146893] = {
					"–ú–∏—Å—Ç–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[18331] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-—á–µ—Ä–Ω—ã–π –º–∞–≥", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[62360] = {
					"–û—Å–∫–≤–µ—Ä–Ω–µ–Ω–Ω–∞—è –∫–∞–ø–ª—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[152312] = {
					"–ê–∑—à'–∞—Ä–∏-–≤–µ–¥—å–º–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[8877] = {
					"–†–µ–≤–Ω–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ü–µ—Å—á–∞–Ω–æ–π –ë—É—Ä–∏", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[130025] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[133585] = {
					"–î–∏–Ω–∞ \"–î–∏–∑–∑–∏\" –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∞", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[74380] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ª–µ–∫–∞—Ä—å –±—É—Ä—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[146894] = {
					"–ö–∞–±–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[17414] = {
					"–¢–µ—Ö–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[17478] = {
					"–ü—Ä–æ–≤–∏–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –ö—Ä–æ–≤–∞–≤–æ–π –ì–ª–∞–∑–Ω–∏—Ü—ã", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[132050] = {
					"–ï–≥–µ—Ä—å –¢–µ–æ–¥–æ—Ä", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[7291] = {
					"–ì–∞–ª–≥–∞–Ω–Ω –û–≥–Ω–µ–º–æ–ª–æ—Ç", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[17670] = {
					"–ü—Å–∞—Ä—å –∏–∑ –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[11792] = {
					"–¢–µ–Ω–µ–ª–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –¢–ª–µ—Ç–≤–æ—Ä–Ω—ã—Ö", -- [1]
					"–ú–∞—Ä–æ–¥–æ–Ω", -- [2]
				},
				[17798] = {
					"–ü–æ–ª–∫–æ–≤–æ–¥–µ—Ü –ö–∞–ª–∏—Ç—Ä–µ—à", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[146895] = {
					"–í–∞–Ω–¥–∞–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136840] = {
					"–ó–æ–≥–∞", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[17259] = {
					"–ê–ª—á—É—â–∏–π –∏–∑ –∫–ª–∞–Ω–∞ –ö–æ—Å—Ç–µ–≥–ª–æ–¥–æ–≤", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –±–∞—Å—Ç–∏–æ–Ω—ã", -- [2]
				},
				[132051] = {
					"–ö—Ä–æ–≤–∞–≤—ã–π –∫–ª–µ—â", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[27871] = {
					"–ü–ª–æ—Ç–æ—è–¥–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[130026] = {
					"–ú–æ—Ä—Å–∫–æ–π –∫–æ–ª–¥—É–Ω –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[158157] = {
					"–í–ª–∞–¥—ã–∫–∞ –ú–∞—Ç–∏–∞—Å –®–æ—É", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[162764] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[10408] = {
					"–°–∫–∞–ª–æ–∫—Ä—ã–ª–∞—è –≥–æ—Ä–≥—É–ª—å—è", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[26628] = {
					"–°–º–µ—Ä—Ç–µ—Ö–≤–∞—Ç –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[26692] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –≥–∞—Ä–ø—É–Ω—â–∏–∫", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[135893] = {
					"–ü—ã–ª–∞—é—â–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[161229] = {
					"–ê–∫–∏—Ä - –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å —è–¥–æ–≤", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[11477] = {
					"–ì–Ω–∏—é—â–∏–π –≤—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[158158] = {
					"–°—Ç—Ä–∞–∂ –∫—É–∑–Ω–∏ –•—É—Ä—Ä—É–ª", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[138467] = {
					"–û–±—Å–∏–¥–∏–∞–Ω–æ–≤—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134612] = {
					"–¶–µ–ø–∫–∏–µ —â—É–ø–∞–ª—å—Ü–∞", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[3394] = {
					"–ë–∞—Ä–∞–∫ –ö–æ–¥–æ–±–æ–π", -- [1]
					"–û–≥–Ω–µ–Ω–Ω–∞—è –ü—Ä–æ–ø–∞—Å—Ç—å", -- [2]
				},
				[17370] = {
					"–ì–æ–ª–æ–≤–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –í–µ—Å–µ–ª–æ–≥–æ –ß–µ—Ä–µ–ø–∞", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[30695] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—Ç–∞–ª–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[144850] = {
					"–°–∏—Ä–µ–Ω–∞ –∏–∑ –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[130027] = {
					"–ú–æ—Ä–ø–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –≠—à–≤–µ–π–Ω–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[23953] = {
					"–ü—Ä–∏–Ω—Ü –ö–µ–ª–µ—Å–µ—Ç", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[84097] = {
					"–ö–æ—Å—Ç–µ–ª–∞–ø—ã–π –ø–∞—É–∫", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[98035] = {
					"–ó–ª–æ–≤–µ—â–∏–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[157268] = {
					"–ü–æ–ª–∑—É—á–∞—è –ø–æ—Ä—á–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[59519] = {
					"–¢—É—á–Ω—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[27734] = {
					"–ù–µ–∫—Ä–æ–∞—Ä–∞—Ö–Ω–∏–¥", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[74489] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-—à–∏–ø–æ–µ–¥", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[48441] = {
					"–û–±–µ–∑—å—è–Ω–∞-—Ä—É–¥–æ–∫–æ–ø", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[75001] = {
					"–û—Ö–æ—Ç–Ω–∏–∫ –ö–æ—Å—Ç—è–Ω–æ–π –ë–∏–≤–µ–Ω—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[7011] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-–∫–∞–º–Ω–µ–∫—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[153060] = {
					"–ö–∏—Ä–∞–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[24069] = {
					"–ö–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[56448] = {
					"–ú—É–¥—Ä—ã–π –ú–∞—Ä–∏—Å", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[140262] = {
					"–ú–æ–ª–æ–¥–∞—è —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[157137] = {
					"–©—É–ø–∞–ª—å—Ü–µ —É–∂–∞—Å–∞", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[133079] = {
					"–†–∞–±–æ—Ç–Ω–∏–∫ —Ñ–µ—Ä–º—ã –ù–æ–≤–æ–∑–µ–º—å—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[13036] = {
					"–ì–æ–Ω—á–∞—è –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[2748] = {
					"–ê—Ä–∫–µ–¥–∞—Å", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[155090] = {
					"–ê–Ω–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä—è–¥–Ω–∏–∫–æ–Ω–æ—Å–µ—Ü", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[11466] = {
					"–í—ã—Å–æ–∫–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π-–ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[147924] = {
					"–ì–µ–æ—Å–∫–æ–ª", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[132056] = {
					"–û–≥–Ω–µ–ª–µ—Ç—á–∏—Ü–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[74490] = {
					"–í—É—Ä–¥–∞–ª–∞–∫-–∂–∏–≤–æ–¥–µ—Ä", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[161745] = {
					"–•–µ–ø—Ñ–∏—Å", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[10405] = {
					"–ß—É–º–Ω–æ–π –≤—É—Ä–¥–∞–ª–∞–∫", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[20870] = {
					"–ó–µ—Ä–µ–∫–µ—Ç –ë–µ–∑–¥–æ–Ω–Ω—ã–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[134616] = {
					"–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π –∫—Ä–æ–ª—É—Å–∫", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[26636] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –¥—É—à –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[131545] = {
					"–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[29316] = {
					"–ú–æ—Ä–∞–≥–≥", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[3674] = {
					"–®–∫–∞–º", -- [1]
					"–ü–µ—â–µ—Ä—ã –°—Ç–µ–Ω–∞–Ω–∏–π", -- [2]
				},
				[161746] = {
					"–û—Å—Å–∏—Ä–∞—Ç", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[133593] = {
					"–¢–µ—Ö–Ω–∏–∫-—ç–∫—Å–ø–µ—Ä—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[58807] = {
					"–ö—Ä—É–ø–∏—Ü–∞ –ù–µ–Ω–∞–≤–∏—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[134617] = {
					"–î–µ—Ç–µ–Ω—ã—à –∫—Ä–æ–ª—É—Å–∫–∞", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[98293] = {
					"–ö–∞–ø–ª—è –º–æ—Ä—Å–∫–æ–π –≤–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[59520] = {
					"–®–∏–ø—É—á–∏–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[69702] = {
					"–†–∏—Ç—É–∞–ª–∏—Å—Ç –û–≥—Ä–∏", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[17671] = {
					"–í–æ–∏—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –ò–∑—É–≤–µ—á–µ–Ω–Ω–æ–π –î–ª–∞–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –†–∞–∑—Ä—É—à–µ–Ω–Ω—ã–µ –∑–∞–ª—ã", -- [2]
				},
				[80511] = {
					"–°–∏–ª–æ–≤–∞—è –∂–µ–æ–¥–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[17799] = {
					"–†–∞–± –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –û—Ç—Ä–µ–±—å—è", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[10981] = {
					"–°–µ–≤–µ—Ä–Ω—ã–π –≤–æ–ª–∫", -- [1]
					"–ê–ª—å—Ç–µ—Ä–∞–∫—Å–∫–∞—è –¥–æ–ª–∏–Ω–∞", -- [2]
				},
				[135130] = {
					"–û—Å–∞–¥–Ω–∞—è –±–∞—à–Ω—è", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[30276] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –≤–µ—Ä–µ—Ç–µ–Ω—â–∏–∫", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[140249] = {
					"–°–µ—Ä–æ—à–∫—É—Ä", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[7603] = {
					"–ü—Ä–æ–∫–∞–∂–µ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[17960] = {
					"–í–æ—Ä–æ–∂–µ—è —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[61056] = {
					"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"–ë–∏—Ç–≤–∞ –∑–∞ –ì–∏–ª–Ω–µ–∞—Å", -- [2]
				},
				[18311] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª - –æ—Å–∫–≤–µ—Ä–Ω–∏—Ç–µ–ª—å –≥—Ä–æ–±–Ω–∏—Ü", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[155094] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π —Å–æ–ª–¥–∞—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[140442] = {
					"–ú—É—Å–∫—É—Å–Ω—ã–π —è–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[18503] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω—ã–π –æ–±—É–∑–¥–∞—Ç–µ–ª—å", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[140250] = {
					"–ï–ª–µ–Ω—å", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[74492] = {
					"–ë—É–±–æ–Ω–Ω—ã–π —É–ø—ã—Ä—å", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[45572] = {
					"–í–æ—é—â–∞—è –±—É—Ä—è", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[11441] = {
					"–ì—Ä–æ–º–∏–ª–∞ –∏–∑ –∫–ª–∞–Ω–∞ –ì–æ—Ä–¥–æ–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[11461] = {
					"–°—Ç—Ä–∞–∂-–∫—Ä–∏–≤–æ–¥—Ä–µ–≤", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[7795] = {
					"–ì–∏–¥—Ä–æ–º–∞–Ω—Ç–∫–∞ –í–µ–ª—Ä–∞—Ç–∞", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[96247] = {
					"–ó–ª–æ–±–Ω–æ–∑–µ–º-–ø–æ–ª–∑—É–Ω", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[7209] = {
					"–û—Å–∫–æ–ª–æ–∫ –æ–±—Å–∏–¥–∏–∞–Ω–∞", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[155161] = {
					"–®–∞–Ω–¥—Ä–∏—Å–∞ –û–ø–µ—Ä–µ–Ω–Ω–∞—è –õ—É–Ω–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[30285] = {
					"–ì–ª–∞–∑ –¢–∞–ª–¥–∞—Ä–∞–º–∞", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[6329] = {
					"–û–±–ª—É—á–µ–Ω–Ω—ã–π –ø–æ–≥—Ä–æ–º—â–∏–∫", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[105801] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å –º–∞–≥–∏–∏", -- [1]
					"–•—Ä–∞–Ω–∏–ª–∏—â–µ –ù–µ–∫—Å—É—Å–∞", -- [2]
				},
				[57109] = {
					"–°–ª—É–∂–∏—Ç–µ–ª—å –°–æ–º–Ω–µ–Ω–∏—è", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[7606] = {
					"–û—Ä–æ –í—ã—Ä–≤–∏–≥–ª–∞–∑", -- [1]
					"–ó—É–ª'–§–∞—Ä—Ä–∞–∫", -- [2]
				},
				[27653] = {
					"–ò—Ä—Ä–µ–∞–ª—å–Ω–∞—è –≤–æ–¥–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[135645] = {
					"–°—Ç–∞—Ä—à–∞—è –º–∞—Ç—å –ø—Ä–∞–π–¥–∞", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[28236] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –ª–∞–∑—É—Ä–Ω–æ–≥–æ –∫–æ–ª—å—Ü–∞", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[74549] = {
					"–ö–∞–º–Ω–µ–ø–µ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[74620] = {
					"–ë–æ–µ–≤–æ–π –≤–µ–ø—Ä—å", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[158168] = {
					"–¢–µ–º–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[8035] = {
					"–ú–∏–Ω–∞ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[30114] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[28579] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –∏–∑ –∑–∞–∫–∞–ª–µ–Ω–Ω–æ–π —Å—Ç–∞–ª–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ú–æ–ª–Ω–∏–π", -- [2]
				},
				[31007] = {
					"–õ–∞–∑—É—Ä–Ω–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[152538] = {
					"–¢–µ–º–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç –ó–∞–Ω—Ä–∞", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[56706] = {
					"–ö—Ä–∏–∫'—Ç–∏–∫-–±–æ–º–±–∞—Ä–¥–∏—Ä", -- [1]
					"–í—Ä–∞—Ç–∞ –ó–∞—Ö–æ–¥—è—â–µ–≥–æ –°–æ–ª–Ω—Ü–∞", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[158169] = {
					"–ü—Ä–µ–¥–∞–Ω–Ω—ã–π –ø–æ—Å–ª—É—à–Ω–∏–∫", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[126449] = {
					"–ò–ª–æ–ø–ª—é–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155098] = {
					"–†–µ–∫—Å–∞—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[155860] = {
					"–®–∏—Ä–∞–∫–µ—Å—Å-—Ä–∞–∑–≤–æ–ø–ª–æ—Ç–∏—Ç–µ–ª—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[155657] = {
					"–•–∞—Ñ—Ñ–µ—Ä", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[161241] = {
					"–ú–∞–ª'—Ç–∏—Ä - –º–∞–≥ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[61247] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-–∑–µ–ª–µ–Ω–æ—Ä–æ–≥", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[4857] = {
					"–ö–∞–º–µ–Ω–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[59545] = {
					"–ó–æ–ª–æ—Ç–æ–π –∂—É–∫", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[134624] = {
					"–ì–æ—Ä–æ–¥—Å–∫–æ–π –≥–ª–∞—à–∞—Ç–∞–π", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[59544] = {
					"–ö–∏–≤–∞—é—â–∏–π —Ç–∏–≥—Ä", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[136160] = {
					"–ö–æ—Ä–æ–ª—å –î–∞–∑–∞—Ä", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[133663] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –≥–æ–ª–æ–≤–∞–º–∏", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[139415] = {
					"–°–ª–∏–∑–µ—à–∫—É—Ä", -- [1]
					"Molten Cay (Islands 6)", -- [2]
				},
				[158171] = {
					"–ë–µ–∑–ª–∏–∫–∏–π —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –°–æ–∑–∏–¥–∞–Ω–∏—è", -- [2]
				},
				[29573] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[146910] = {
					"–ß—É–º–Ω–æ–π –≤–æ—Ä–æ–Ω –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[43014] = {
					"–ë–µ—Å", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[59522] = {
					"–ü–µ–Ω–∏—Å—Ç—ã–π –±—Ä–∞–∂–Ω—ã–π —Ö–º–µ–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–•–º–µ–ª–µ–≤–∞—Ä–Ω—è –ë—É–π–Ω—ã—Ö –ü–æ—Ä—Ç–µ—Ä–æ–≤", -- [2]
				},
				[29829] = {
					"–ó–µ–º–ª–µ—Ç—Ä—è—Å –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ì—É–Ω–¥—Ä–∞–∫", -- [2]
				},
				[161243] = {
					"–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[74751] = {
					"–¢–æ—Ç–µ–º —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤", -- [1]
					"–õ–∞–±–∏—Ä–∏–Ω—Ç—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[59553] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ–≤—á–∏—Ö –ø—Ç–∏—Ü", -- [1]
					"–•—Ä–∞–º –ù–µ—Ñ—Ä–∏—Ç–æ–≤–æ–π –ó–º–µ–∏", -- [2]
				},
				[17800] = {
					"–ú–∏—Ä–º–∏–¥–æ–Ω –†–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[146911] = {
					"–ß—É–º–Ω–∞—è –≥–æ–Ω—á–∞—è –∫–ª–∞–Ω–∞ –ì–Ω–∏–ª–æ–π –ü–ª–æ—Ç–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[54303] = {
					"–°—Ç—Ä–∞–∂ —É–∂–∞—Å–∞", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[30277] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –∏–∑–º–µ–ª—å—á–∏—Ç–µ–ª—å", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[97054] = {
					"–ë—É—Ä–µ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –∏–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–í–æ–¥–æ–≤–æ—Ä–æ—Ç", -- [2]
				},
				[140769] = {
					"–ó–æ–ª–æ—Ç–∞—è –ñ–∏–ª–∞", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[145041] = {
					"–ü—Ä–æ–≤–æ—Ä–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[105720] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ü–æ–¥–∫–∞–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–º–∞", -- [1]
					"–õ–æ–≥–æ–≤–æ –ù–µ–ª—Ç–∞—Ä–∏–æ–Ω–∞", -- [2]
				},
				[18312] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-—á–∞—Ä–æ–ø–ª–µ—Ç", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[30661] = {
					"–õ–∞–∑—É—Ä–Ω—ã–π –∑–∞—Ö–≤–∞—Ç—á–∏–∫", -- [1]
					"–ê–º–µ—Ç–∏—Å—Ç–æ–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å", -- [2]
				},
				[26630] = {
					"–ö—Ä–æ–≤–æ—Ç—Ä–æ–ª–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[147936] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –∫–∞–º–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[160420] = {
					"–†–∞—Å—Å–µ—Ä–∂–µ–Ω–Ω—ã–π –¥—É—Ö –∫–Ω–∏–≥–∏", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[139343] = {
					"–†–∞–±–æ—á–∏–π –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –õ–µ–¥–æ–∫–ª—ã–∫–æ–≤", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[141282] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π –ø–µ—Ö–æ—Ç–∏–Ω–µ—Ü", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[24085] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[146401] = {
					"–†–∞–± –∫–ª–∞–Ω–∞ –¢–µ–º–Ω–æ–π –ß–µ—à—É–∏", -- [1]
					"–§—Ä–æ–Ω—Ç—ã –Ω–∞ –¢–µ–º–Ω—ã—Ö –±–µ—Ä–µ–≥–∞—Ö (–û—Ä–¥–∞)", -- [2]
				},
				[13197] = {
					"–•–ª–µ—Å—Ç—É–Ω –°–∫–≤–µ—Ä–Ω—ã", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[61240] = {
					"–ì–ª–∏–Ω—Ç—Ä–æ–∫-—Ç–∏—Ö–æ—Å—Ç—É–ø", -- [1]
					"–î–≤–æ—Ä–µ—Ü –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[19016] = {
					"–§–∞–º–∏–ª–∏–∞—Ä —Ü–∏—Ç–∞–¥–µ–ª–∏ –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏", -- [1]
					"–¶–∏—Ç–∞–¥–µ–ª—å –ê–¥—Å–∫–æ–≥–æ –ü–ª–∞–º–µ–Ω–∏: –ö—É–∑–Ω—è –ö—Ä–æ–≤–∏", -- [2]
				},
				[140259] = {
					"–ö—Ä—É–ø–Ω—ã–π —Ä—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140429] = {
					"–ü–æ—Å–∫–∞–∫—É–Ω –®—É—Å—Ç—Ä—ã–π", -- [1]
					"Skittering Hollow (Islands 5)", -- [2]
				},
				[141283] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–∞–∂–Ω–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[63106] = {
					"–°–∏–∫'—Ç–∏–∫-—Ä–æ–µ–≤–∏–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[61485] = {
					"–ì–µ–Ω–µ—Ä–∞–ª –ü–∞'–≤–∞–ª–∞–∫", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[134629] = {
					"–ß–µ—à—É–π—á–∞—Ç—ã–π –Ω–∞–µ–∑–¥–Ω–∏–∫ –Ω–∞ –∫—Ä–æ–ª—É—Å–∫–µ", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[27654] = {
					"–î—Ä–∞–∫–æ—Å –î–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[47238] = {
					"–•–ª–µ—Å—Ç–∫–∏–π –≤–µ—Ç–µ—Ä", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[140260] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω–∞—è –æ–ª–µ–Ω–∏—Ö–∞", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[28878] = {
					"–°–∫–µ–ª–µ—Ç-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[141284] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∞—è —Å–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–≤–æ–≤", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[31260] = {
					"–ò–º–∏—Ä—å—è—Ä—Å–∫–∏–π –Ω–µ–±–æ—Å—Ç—É–ø", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[155791] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ä–µ–≤—É–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[83711] = {
					"–†—ã—Ü–∞—Ä—å –≤–æ–∑–¥–∞—è–Ω–∏—è", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[24071] = {
					"–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –£—Ç–≥–∞—Ä–¥", -- [2]
				},
				[48262] = {
					"–û–≥—Ä-—Ç–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[156641] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è –æ—Ä—É–∂–µ–π–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[152236] = {
					"–õ–µ–¥–∏ –≠—à–≤–µ–π–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[141285] = {
					"–ö—É–ª-—Ç–∏—Ä–∞—Å—Å–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫", -- [1]
					"–û—Å–∞–¥–∞ –ë–æ—Ä–∞–ª—É—Å–∞", -- [2]
				},
				[40584] = {
					"–ó–∞—Ö–≤–∞—Ç—á–∏–∫ –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[97788] = {
					"–®—Ç–æ—Ä–º–æ–≤–æ–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[65414] = {
					"–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π —à–∞", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[155618] = {
					"–ó–∞–Ω—à'–∏—Ä-–æ—Ö–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[156130] = {
					"–ú–∞–ª—ã–π –∑–æ–∞—Ç—Ä–æ–∏–¥", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[156642] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[153059] = {
					"–ê–π—Ç–∞–Ω–µ–ª—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[56719] = {
					"–®–∞ –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç–∏", -- [1]
					"–ú–æ–Ω–∞—Å—Ç—ã—Ä—å –®–∞–¥–æ-–ü–∞–Ω", -- [2]
				},
				[154083] = {
					"–î—Ä–µ—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–æ–ª–∫", -- [1]
					"–û—Å–∞–¥–∞ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞ ‚Äì –°—Ü–µ–Ω–∞—Ä–∏–π \"–ü–µ—Ä–µ–≤–æ—Ä–æ—Ç\"", -- [2]
				},
				[158690] = {
					"–°–µ–∫—Ç–∞–Ω—Ç-–º—É—á–∏—Ç–µ–ª—å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[75522] = {
					"–ö—Ä–æ–≤–æ—Ö–≤–æ—Å—Ç—ã–π –æ–∫—É–Ω—å", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[155619] = {
					"–ó–∞–Ω—à'–∏—Ä-–≥–≤–∞—Ä–¥–µ–µ—Ü", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[156131] = {
					"–ó–∞–Ω—à'–∏—Ä-–º–∏—Ä–º–∏–¥–æ–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[140263] = {
					"–†—É–Ω–æ–∫–æ–ø—ã—Ç–Ω—ã–π –æ–ª–µ–Ω—å", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[140775] = {
					"–†–µ–∑–æ–Ω–∏—Ä—É—é—â–∞—è –≥–ª—ã–±–∞", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[129062] = {
					"–í–µ—Å—Ç–Ω–∏–∫ —Å–æ–ª–Ω—Ü–∞ –§–∏—Ä–∞—Å–∏", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[159812] = {
					"–©—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–°—Ü–µ–Ω–∞—Ä–∏–π –ú–æ–≥—É'—à–∞–Ω", -- [2]
				},
				[140993] = {
					"–¢–µ–º–Ω–æ–ø–æ–ª–∑-–æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[155158] = {
					"–ü–µ—Ä–≤–∞—è —á–∞—Ä–æ–¥–µ–π–∫–∞ –¢–∞–ª–∏—Å—Ä–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[158863] = {
					"–°–º–æ—Ç—Ä–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —Å—Ç–æ–π–ª –∏–∑ –∫–ª–∞–Ω–∞ –ì—Ä–æ–∑–æ–≤–æ–π –í–µ—Ä—à–∏–Ω—ã", -- [1]
					"–ú–µ—Å—Ç—å –ö–æ—Ä—Ä–∞–∫–∞", -- [2]
				},
				[156132] = {
					"–ê–∑—à'–∞—Ä–∏-–≤–µ–¥—å–º–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[132074] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –ö—Ä–∏–∫—Å", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[161251] = {
					"–°–µ–∫—Ç–∞–Ω—Ç-–ø—Ä–∏—Å–ª—É–∂–Ω–∏–∫", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[62348] = {
					"–°–∏–∫'—Ç–∏–∫-—Å–æ–ª–¥–∞—Ç", -- [1]
					"–û—Å–∞–¥–∞ —Ö—Ä–∞–º–∞ –ù—é—Ü–∑–∞–æ", -- [2]
				},
				[36896] = {
					"–ì–æ—Ä–≥—É–ª—å—è —Å –∫–∞–º–µ–Ω–Ω—ã–º —Ö—Ä–µ–±—Ç–æ–º", -- [1]
					"–Ø–º–∞ –°–∞—Ä–æ–Ω–∞", -- [2]
				},
				[17801] = {
					"–°–∏—Ä–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[140979] = {
					"–î–ª–∏–Ω–Ω–æ–∑—É–±", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[41139] = {
					"–í—Ä–∞—á–µ–≤–∞—Ç–µ–ª—å –¥—É—à –õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[30278] = {
					"–ê–Ω'–∫–∞—Ö–∞—Ä—Å–∫–∏–π –º–µ—Ç–∞—Ç–µ–ª—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[129526] = {
					"–ú–æ—Ä—è—á–æ–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140777] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"Whispering Reef (Islands 10)", -- [2]
				},
				[11142] = {
					"–ù–µ–∂–∏—Ç—å-–ø–æ—á—Ç–∞–ª—å–æ–Ω", -- [1]
					"–°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º", -- [2]
				},
				[97081] = {
					"–ö–æ—Ä–æ–ª—å –ë—å–æ—Ä–Ω", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –î–æ–±–ª–µ—Å—Ç–∏", -- [2]
				},
				[18313] = {
					"–≠—Ñ–∏—Ä–∏–∞–ª-–∫–æ–ª–¥—É–Ω", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[95769] = {
					"–ë–µ—à–µ–Ω–∞—è –≤–∏–∑–≥—É–Ω—å—è", -- [1]
					"–ß–∞—â–∞ –¢–µ–º–Ω–æ–≥–æ –°–µ—Ä–¥—Ü–∞", -- [2]
				},
				[26631] = {
					"–ù–æ–≤–æ—Å –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[140987] = {
					"–ö–∏—Å–ª–æ—Ç–Ω–∏–∫ –ù–µ–Ω–∞—Å—ã—Ç–Ω—ã–π", -- [1]
					"Havenswood (Islands 2)", -- [2]
				},
				[127479] = {
					"–ö–æ—Ä–æ–ª–µ–≤–∞ –ø–µ—Å–∫–æ–≤", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[157158] = {
					"–°–µ–∫—Ç–∞–Ω—Ç - –ø–æ–≥–æ–Ω—â–∏–∫ —Ä–∞–±–æ–≤", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –®—Ç–æ—Ä–º–≥—Ä–∞–¥–∞", -- [2]
				},
				[69699] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –≥–æ–ª–µ–º –∞–Ω–∏–º—ã", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[45704] = {
					"–ó–∞—Ç–∞–∏–≤—à–∞—è—Å—è –±—É—Ä—è", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
				[11462] = {
					"–î—Ä–µ–≤–µ–Ω—å-–∫—Ä–∏–≤–æ–¥—Ä–µ–≤", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[40765] = {
					"–ö–æ–º–∞–Ω–¥–∏—Ä –£–ª—Ç–æ–∫", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[129015] = {
					"–¢—Ä–µ—Ç–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –Æ–∂–Ω—ã—Ö –ú–æ—Ä–µ–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[76036] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –±–æ–µ—Ü –∏–∑ —Ç–µ–Ω–∏", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[129527] = {
					"–ë—É–∫–∞–Ω—å–µ—Ä –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –¢—Ä—é–º–Ω—ã—Ö –ö—Ä—ã—Å", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[153064] = {
					"–ò—Å—Å—Ç—É–ø–ª–µ–Ω–Ω—ã–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[83729] = {
					"–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –ú–æ–ª–æ—Ç–∞ –ê—à—Ä–∞–Ω–∞", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[13160] = {
					"–ß–ª–µ–Ω–∏—Å—Ç–æ–Ω–æ–≥-–ø–∞–¥–∞–ª—å—â–∏–∫", -- [1]
					"–ó–∞–±—ã—Ç—ã–π –≥–æ—Ä–æ–¥", -- [2]
				},
				[99629] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ì–æ—Ä—å–∫–æ–π –í–æ–¥—ã", -- [1]
					"–û–∫–æ –ê–∑—à–∞—Ä—ã", -- [2]
				},
				[69382] = {
					"–ë–æ–ª–µ–∑–Ω–µ—Ç–≤–æ—Ä–Ω—ã–π —Å–ª–∏–∑–Ω—é–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[27655] = {
					"–ú–∞–≥-–ª–æ—Ä–¥ –£—Ä–æ–º", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[139756] = {
					"–ë–∞–Ω–¥–∏—Ç–∫–∞ –®–µ–π–ª–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[127480] = {
					"–ñ–∞–ª—è—â–∏–π –ø–∞—Ä–∞–∑–∏—Ç", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[153065] = {
					"–°–ª—É–≥–∞ –ë–µ–∑–¥–Ω—ã - –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å–Ω–∏—Ü–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[133666] = {
					"–û—Ç–≤–ª–µ–∫–∞—Ç–æ—Ä –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–∏–ª–∫–∏", -- [1]
					"Un'gol Ruins (Islands 1)", -- [2]
				},
				[27975] = {
					"–î–µ–≤–∞ –°–∫–æ—Ä–±–∏", -- [1]
					"–ß–µ—Ä—Ç–æ–≥–∏ –ö–∞–º–Ω—è", -- [2]
				},
				[70245] = {
					"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –º–∞–Ω–µ–∫–µ–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[43430] = {
					"–ë–µ—Ä—Å–µ—Ä–∫ –ö–∞–º–µ–Ω–Ω—ã—Ö –ù–µ–¥—Ä", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[28167] = {
					"–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∑–æ–º–±–∏", -- [1]
					"–û—á–∏—â–µ–Ω–∏–µ –°—Ç—Ä–∞—Ç—Ö–æ–ª—å–º–∞", -- [2]
				},
				[28231] = {
					"–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è –≥—Ä–∞—Ü–∏—è", -- [1]
					"–ù–µ–∫—Å—É—Å", -- [2]
				},
				[84483] = {
					"–ú–∞–ª—ã–π –≥—Ä–æ–Ω–Ω-—Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[154240] = {
					"–í–µ—Ä–Ω—ã–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ê–∑—à–∞—Ä—ã", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[44982] = {
					"–ß–µ—Ä–Ω—ã–π –º–∞–≥ –ù–µ—Ñ–µ—Ä—Å–µ—Ç–∞", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[40586] = {
					"–õ–µ–¥–∏ –ù–∞–∑'–∂–∞—Ä", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[105027] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω—ã–π –≥–ª—É–±–æ–∫–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–±", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[69383] = {
					"–î—Ä–æ–∂–∞—â–∞—è –∫–∞–ø–ª—è", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[126969] = {
					"–¢—Ä–æ—Ç–∞–∫", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[156650] = {
					"–í–æ–ø–ª–æ—â–µ–Ω–∏–µ —Ç—å–º—ã", -- [1]
					"–ù–∏'–∞–ª–æ—Ç–∞, –ü—Ä–æ–±—É–∂–¥–∞—é—â–∏–π—Å—è –ì–æ—Ä–æ–¥", -- [2]
				},
				[132644] = {
					"–í–æ–ª—á–æ–Ω–æ–∫", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[6212] = {
					"–ü–æ—Å–ª–∞–Ω–Ω–∏–∫ –∫–ª–∞–Ω–∞ –ß–µ—Ä–Ω–æ–≥–æ –ñ–µ–ª–µ–∑–∞", -- [1]
					"–ì–Ω–æ–º—Ä–µ–≥–∞–Ω", -- [2]
				},
				[141806] = {
					"–ù–µ–∏—Å–ø—Ä–∞–≤–Ω—ã–π –≥–æ–ª–µ–º", -- [1]
					"–ì—Ä–æ–±–Ω–∏—Ü–∞ –∫–æ—Ä–æ–ª–µ–π", -- [2]
				},
				[20873] = {
					"–ú–∞—Å—Ç–µ—Ä –∏—Å–∫–∞–∂–µ–Ω–∏—è –ù–µ–≥–∞—Ç–æ–Ω–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –ë—É—Ä—å: –ê—Ä–∫–∞—Ç—Ä–∞—Ü", -- [2]
				},
				[155764] = {
					"–†–∞–∫'—à–∞ –°—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω—ã–π", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[43927] = {
					"–í–µ—Å—Ç–Ω–∏–∫ –¢—å–º—ã", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[76038] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —Ç–µ–º–Ω—ã–π –º–∞–≥", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[129529] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –ß–µ—Ä–Ω–æ–∑—É–±—ã—Ö", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[136688] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[78437] = {
					"–ì—É–ª'–∫–æ—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[17940] = {
					"–¢–µ—Ö–Ω–∏–∫ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –£–∑–∏–ª–∏—â–µ", -- [2]
				},
				[138224] = {
					"–°—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–∏–π –≤–µ—Å—Ç–Ω–∏–∫ –°–≤–µ—Ç–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[45467] = {
					"–ü–µ—â–µ—Ä–Ω—ã–π —Ç—Ä–æ–≥–≥", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[155628] = {
					"–ê–∑—à'–∞—Ä–∏-–æ—Ä–∞–∫—É–ª", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[139760] = {
					"–°—Ç–∞—Ä—à–∏–π —à—Ç—É—Ä–º–∞–Ω –§—Ä–∞–Ω–∫–ª–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[127482] = {
					"–°—Ç–æ—á–Ω—ã–π –∑–ª–æ–±–Ω–æ–∫—É—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[43917] = {
					"–ö–∞–º–Ω–µ—Ç–æ—á–µ—Ü", -- [1]
					"–ö–∞–º–µ–Ω–Ω—ã–µ –ù–µ–¥—Ä–∞", -- [2]
				},
				[75331] = {
					"–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å –¥—É—Ö–æ–≤ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ú–µ—Ä—Ç–≤–æ–π –ì–æ–ª–æ–≤—ã", -- [1]
					"–ö—É—Ä–≥–∞–Ω—ã –ò–≥–ª–æ—à–∫—É—Ä—ã—Ö", -- [2]
				},
				[137713] = {
					"–ö—Ä–∞–±-–º–∞–≥–Ω–∞—Ç", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[17802] = {
					"–í–æ–∏–Ω —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞ –ö—Ä–∏–≤–æ–≥–æ –ö–ª—ã–∫–∞", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[155814] = {
					"–ñ—É—Ç–∫–∞—è –ø–æ–¥–º–µ–Ω—â–∏—Ü–∞", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[155629] = {
					"–ê–∑—à'–∞—Ä–∏ - –≤–ª–∞–¥—ã—á–∏—Ü–∞ –±—É—Ä—å", -- [1]
					"–í–µ—á–Ω—ã–π –¥–≤–æ—Ä–µ—Ü", -- [2]
				},
				[30279] = {
					"–ì–ª—É–±–∏–Ω–Ω—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"–ê–Ω'–∫–∞—Ö–µ—Ç: –°—Ç–∞—Ä–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ", -- [2]
				},
				[156653] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è —É–∂–∞—Å", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[48521] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —à—Ç–æ—Ä–º–æ–≤ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[135717] = {
					"–î–∏–∫–∏–π –Ω–æ—á–Ω–æ–π —Å–∞–±–ª–µ–∑—É–±", -- [1]
					"The Dread Chain (Islands 4)", -- [2]
				},
				[130298] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –≤–æ–¥—ã", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[18314] = {
					"–õ–æ–≤—á–∏–π –Ω–µ–∫—Å—É—Å–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ì—Ä–æ–±–Ω–∏—Ü—ã –ú–∞–Ω—ã", -- [2]
				},
				[105028] = {
					"–†–∞–∑—ä—è—Ä–µ–Ω–Ω–∞—è –≥–ª—É–±–æ–∫–æ–≤–æ–¥–Ω–∞—è –º–∞–∫—Ä—É—Ä–∞", -- [1]
					"–¢—Ä–æ–Ω –ü—Ä–∏–ª–∏–≤–æ–≤", -- [2]
				},
				[26632] = {
					"–ü—Ä–æ—Ä–æ–∫ –¢–∞—Ä–æ–Ω'–¥–∂–∞", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[18506] = {
					"–ì–Ω–µ–≤–Ω–∞—è –¥—É—à–∞", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω: –ê—É–∫–µ–Ω–∞–π—Å–∫–∏–µ –≥—Ä–æ–±–Ω–∏—Ü—ã", -- [2]
				},
				[70153] = {
					"–ì—Ä–∏–±–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[26824] = {
					"–í–µ—Ä—Ö–æ–≤–æ–π —è—â–µ—Ä –î—Ä–∞–∫–∫–∞—Ä–∏", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –î—Ä–∞–∫'–¢–∞—Ä–æ–Ω", -- [2]
				},
				[75829] = {
					"–ù—Ö–∞–ª–ª–∏—à", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[137784] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –ê—Ä–∞—Ç–æ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[137785] = {
					"–¶–µ–ª–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ê—Ä–∞—Ç–æ—Ä–∞", -- [1]
					"–§—Ä–æ–Ω—Ç –ê—Ä–∞—Ç–∏ (–û—Ä–¥–∞)", -- [2]
				},
				[44819] = {
					"–°–∏–∞–º–∞—Ç", -- [1]
					"–ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –¢–æ–ª'–≤–∏—Ä", -- [2]
				},
				[39450] = {
					"–ü–µ—â–µ—Ä–Ω—ã–π —Ç—Ä–æ–≥–≥", -- [1]
					"–ì—Ä–∏–º –ë–∞—Ç–æ–ª", -- [2]
				},
				[156143] = {
					"–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π –≤ –ë–µ–∑–¥–Ω—É –≥—Ä–æ–º–∏–ª–∞", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[76296] = {
					"–ù–µ—á–µ—Å—Ç–∏–≤—ã–π –º–∞–≥", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[140787] = {
					"–£–≥–æ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å", -- [1]
					"–°–≤–µ—Ä–∫–∞—é—â–∏–µ –∫–æ–ø–∏", -- [2]
				},
				[137204] = {
					"–ü—Ä–æ–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ö—É–¥—É", -- [1]
					"–•—Ä–∞–º –°–µ—Ç—Ä–∞–ª–∏—Å—Å", -- [2]
				},
				[130299] = {
					"–ö–∞–ø–ª—è", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[17951] = {
					"–ú–µ—Ö–∞–Ω–∏–∫ –ø–∞—Ä–æ–≤–æ–π –æ—Å–Ω–∞—Å—Ç–∫–∏", -- [1]
					"–ö—Ä–∏–≤–æ–π –ö–ª—ã–∫: –ü–∞—Ä–æ–≤–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", -- [2]
				},
				[75058] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∞–∫–≤–∞–º–∞–Ω—Ç", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[27656] = {
					"–•—Ä–∞–Ω–∏—Ç–µ–ª—å —ç–Ω–µ—Ä–≥–∏–∏ –≠—Ä–µ–≥–æ—Å", -- [1]
					"–û–∫—É–ª—É—Å", -- [2]
				},
				[76595] = {
					"–°–∞—Ä–≥–µ—Ä–∞–π—Å–∫–∞—è –∂—Ä–∏—Ü–∞ –¥—É—à", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[127484] = {
					"–î–∂–µ—Å –•–∞—É–ª–∏—Å", -- [1]
					"–¢–æ–ª –î–∞–≥–æ—Ä", -- [2]
				},
				[74505] = {
					"–¢—É–∫—Ä", -- [1]
					"–ù–µ–ø—Ä–æ–≥–ª—è–¥–Ω–∞—è –ü—É—á–∏–Ω–∞", -- [2]
				},
				[47626] = {
					"–ê–¥–º–∏—Ä–∞–ª –¢–µ—Ä–∑–∞—é—â–∏–π –†–µ–≤", -- [1]
					"–ú–µ—Ä—Ç–≤—ã–µ –∫–æ–ø–∏", -- [2]
				},
				[77890] = {
					"–î–∞—Ä—É–≥ –í–ª–∞—Å—Ç–Ω–∞—è", -- [1]
					"–ê—É–∫–∏–Ω–¥–æ–Ω", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[83719] = {
					"–î–∏–∫–∏–π –≤–µ–ø—Ä—å", -- [1]
					"–ê—à—Ä–∞–Ω", -- [2]
				},
				[76104] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç—Ä—É–ø–Ω—ã–π –ø–∞—É–∫", -- [1]
					"–ù–µ–∫—Ä–æ–ø–æ–ª—å –ü—Ä–∏–∑—Ä–∞—á–Ω–æ–π –õ—É–Ω—ã", -- [2]
				},
				[156145] = {
					"–ü–æ–¥–∑–µ–º–Ω–æ–µ —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ñ—É—Ç–∫–æ–µ –≤–∏–¥–µ–Ω–∏–µ –û—Ä–≥—Ä–∏–º–º–∞—Ä–∞", -- [2]
				},
				[7076] = {
					"–ó–µ–º–µ–ª—å–Ω–∏–∫-—Å—Ç—Ä–∞–∂", -- [1]
					"–£–ª—å–¥–∞–º–∞–Ω", -- [2]
				},
				[129788] = {
					"–ú—è—Å–Ω–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª—å–Ω—ã—Ö –í–æ–ª–Ω", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[8914] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —Ç–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å", -- [1]
					"–ì–ª—É–±–∏–Ω—ã –ß–µ—Ä–Ω–æ–π –≥–æ—Ä—ã", -- [2]
				},
				[126205] = {
					"–ù–∞–∂–∏–≤-–æ-–º–∞—Ç–∏–∫", -- [1]
					"Crestfall (Islands 11)", -- [2]
				},
				[69131] = {
					"–í–ª–∞—Å—Ç–µ–ª–∏–Ω —Ö–æ–ª–æ–¥–∞ –ú–∞–ª–∞–∫–∫", -- [1]
					"–ü—Ä–µ—Å—Ç–æ–ª –ì—Ä–æ–∑", -- [2]
				},
				[52019] = {
					"–£–ø–∞–≤—à–∞—è –∑–≤–µ–∑–¥–∞", -- [1]
					"–í–µ—Ä—à–∏–Ω–∞ –°–º–µ—Ä—á–∞", -- [2]
				},
			},
			["aura_frame1_anchor"] = {
				["y"] = 12.44999694824219,
				["side"] = 1,
			},
			["aura_cooldown_reverse"] = false,
			["global_offset_y"] = -0.02000045776367188,
			["aura_show_debuffs_personal"] = false,
			["aggro_modifies"] = {
				["border_color"] = true,
			},
			["minor_height_scale"] = 0.949999988079071,
			["auto_toggle_friendly"] = {
				["arena"] = true,
			},
			["aura_consolidate"] = true,
			["health_statusbar_bgtexture"] = "ElvUI Blank",
			["cast_statusbar_bgtexture"] = "Armory",
			["aura_height"] = 19,
			["non_targeted_alpha_enabled"] = true,
			["use_health_animation"] = true,
			["target_highlight_alpha"] = 1,
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["target_indicator"] = "NONE",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 54,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1550151943,
					["PlaterCore"] = 1,
					["Name"] = "Color Automation [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["LastHookEdited"] = "Constructor",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 47,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1571205554,
					["PlaterCore"] = 1,
					["Name"] = "Don't Have Aura [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
					["LastHookEdited"] = "Constructor",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 195,
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"red\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581867385,
					["PlaterCore"] = 1,
					["Name"] = "Extra Border [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133689,
					["LastHookEdited"] = "Constructor",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 60,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581866936,
					["PlaterCore"] = 1,
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LastHookEdited"] = "Constructor",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 234,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Time"] = 1550156266,
					["PlaterCore"] = 1,
					["Name"] = "Jaina Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["LastHookEdited"] = "Constructor",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 94,
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581868409,
					["PlaterCore"] = 1,
					["Name"] = "Execute Range [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "Constructor",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 225,
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1550154976,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["LastHookEdited"] = "Constructor",
				}, -- [8]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 45,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Time"] = 1550155776,
					["PlaterCore"] = 1,
					["Name"] = "M+ Bwonsamdi Reaping",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 2446016,
					["LastHookEdited"] = "Constructor",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 209,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 5, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 0.8,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1571836779,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["Icon"] = 135426,
					["LastHookEdited"] = "Constructor",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 182,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 96,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581866962,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1596741775,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 295,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [14]
				{
					["Enabled"] = false,
					["Revision"] = 22,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Time"] = 1550154977,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 134331,
					["Name"] = "Change All Fonts",
				}, -- [15]
				{
					["Enabled"] = true,
					["Revision"] = 26,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Change the color of the aura timer by it's time left",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Paint Aura Timers",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Time"] = 1572333329,
					["Icon"] = "Interface\\Timer\\Challenges-Logo",
					["LastHookEdited"] = "Constructor",
				}, -- [16]
				{
					["Enabled"] = true,
					["Revision"] = 116,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Name"] = "Cast Icon Anchor",
					["PlaterCore"] = 1,
					["Time"] = 1581867408,
					["LastHookEdited"] = "Constructor",
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [17]
				{
					["Enabled"] = false,
					["Revision"] = 106,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a cross icon into the nameplate of healers. Must have Details! Damage Meter installed.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --options\n    --custom indicator is a custom icon added by this script\n    envTable.ShowCustomIndicator = true\n    --regular indicator is the indicator row within Plater default indicators\n    envTable.ShowRegularIndicator = false\n    \n    --custom indicator options\n    envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.Width = 12\n    envTable.Height = 12\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    envTable.UseClassColor = false\n    envTable.Color = \"white\" --only use this color when use class color is false\n    \n    --private\n    envTable.HealerSpecs = {\n        [105] = true, -->  druid resto\n        [270] = true, --> monk mw\n        [65] = true, --> paladin holy\n        [256] = true,  --> priest disc\n        [257] = true,  --> priest holy\n        [264] = true, --> shaman resto\n    }\n    \n    unitFrame.HealerTexture = unitFrame.HealerTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    \n    unitFrame.HealerTexture.width = envTable.Width\n    unitFrame.HealerTexture.height = envTable.Height\n    unitFrame.HealerTexture.texture = envTable.Texture\n    Plater.SetAnchor (unitFrame.HealerTexture, envTable.Anchor)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    local Details = Details\n    unitFrame.HealerTexture:Hide()\n    \n    if (Details and Details.realversion >= 134) then\n        local spec = Details:GetSpecByGUID (unitFrame.namePlateUnitGUID)\n        if (spec and envTable.HealerSpecs [spec]) then\n            \n            --custom icon indicator\n            if (envTable.ShowCustomIndicator) then\n                unitFrame.HealerTexture:Show()                \n                if (envTable.UseClassColor) then\n                    unitFrame.HealerTexture.vertexcolor = select (2, UnitClass (unitId))\n                else\n                    unitFrame.HealerTexture.vertexcolor = envTable.Color\n                end\n            end\n            \n            --regular indicator from plater\n            if (envTable.ShowRegularIndicator) then\n                Plater.ShowIndicator (unitFrame, envTable.Texture, envTable.Width, envTable.Height) \n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1571208987,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\media\\cross_64",
					["Name"] = "Healer Indicator",
				}, -- [18]
				{
					["Enabled"] = true,
					["Revision"] = 85,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["LastHookEdited"] = "",
					["Desc"] = "",
					["Hooks"] = {
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateUnit(unitId)\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateUnit(unitId)\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- Credit to Aethys for the algorithm: https://github.com/herotc/hero-lib\n    \n    --general settings:\n    envTable.onlyShowOnBoss = false\n    \n    -- text settings:\n    local textColor = \"white\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 7, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 2, --x offset\n        y = 0, --y offset\n    };\n    \n    -- TTD calculation config\n    envTable.config = {\n        historyCount = 100,\n        historyTime = 10,\n        duration = 600,\n        pctHP = 0,\n    }\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the TTD\n    if (not  unitFrame.healthBar.ttdTextFrame) then\n        envTable.ttdTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.ttdTextFrame, anchor);\n        unitFrame.healthBar.ttdTextFrame = envTable.ttdTextFrame\n        envTable.ttdTextFrame:SetText(\"\")\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    envTable.cache = {}\n    envTable.units = {}\n    \n    function envTable.TTDRefresh(unit)\n        local currentTime = GetTime()\n        local historyCount = envTable.config.historyCount\n        local historyTime = envTable.config.historyTime\n        \n        if UnitExists(unit) then\n            local GUID = UnitGUID(unit)\n            local health = UnitHealth(unit)\n            local maxHealth = UnitHealthMax(unit)\n            local healthPercentage = health ~= -1 and maxHealth ~= -1 and health / maxHealth * 100\n            -- Check if it's a valid unit\n            if UnitCanAttack(\"player\", unit) and healthPercentage < 100 then\n                local unitTable = envTable.units[GUID]\n                -- Check if we have seen one time this unit, if we don't then initialize it.\n                if not unitTable or healthPercentage > unitTable[1][1][2] then\n                    unitTable = { {}, currentTime }\n                    envTable.units[GUID] = unitTable\n                end\n                local values = unitTable[1]\n                local time = currentTime - unitTable[2]\n                -- Check if the % HP changed since the last check (or if there were none)\n                if #values == 0 or healthPercentage ~= values[1][2] then\n                    local value\n                    local lastIndex = #envTable.cache\n                    -- Check if we can re-use a table from the cache -- Buds: i have doubt on the value of reusing table, with the high cost of tinsert on 1st index\n                    if lastIndex == 0 then\n                        value = { time, healthPercentage }\n                    else\n                        value = envTable.cache[lastIndex]\n                        envTable.cache[lastIndex] = nil\n                        value[1] = time\n                        value[2] = healthPercentage\n                    end\n                    table.insert(values, 1, value)\n                    local n = #values\n                    -- Delete values that are no longer valid\n                    while (n > historyCount) or (time - values[n][1] > historyTime) do\n                        envTable.cache[#envTable.cache + 1] = values[n]\n                        values[n] = nil\n                        n = n - 1\n                    end\n                end\n            end\n        end\n    end\n    \n    function envTable.TimeToX(guid, percentage, minSamples)\n        local seconds = 8888\n        local unitTable = envTable.units[guid]\n        -- Simple linear regression\n        -- ( E(x^2)  E(x) )  ( a )  ( E(xy) )\n        -- ( E(x)     n  )  ( b ) = ( E(y)  )\n        -- Format of the above: ( 2x2 Matrix ) * ( 2x1 Vector ) = ( 2x1 Vector )\n        -- Solve to find a and b, satisfying y = a + bx\n        -- Matrix arithmetic has been expanded and solved to make the following operation as fast as possible\n        if unitTable then\n            local values = unitTable[1]\n            local n = #values\n            if n > minSamples then\n                local a, b = 0, 0\n                local Ex2, Ex, Exy, Ey = 0, 0, 0, 0\n                \n                local value, x, y\n                for i = 1, n do\n                    value = values[i]\n                    x, y = value[1], value[2]\n                    \n                    Ex2 = Ex2 + x * x\n                    Ex = Ex + x\n                    Exy = Exy + x * y\n                    Ey = Ey + y\n                end\n                -- invariant to find matrix inverse\n                local invariant = 1 / (Ex2 * n - Ex * Ex)\n                -- Solve for a and b\n                a = (-Ex * Exy * invariant) + (Ex2 * Ey * invariant)\n                b = (n * Exy * invariant) - (Ex * Ey * invariant)\n                if b ~= 0 then\n                    -- Use best fit line to calculate estimated time to reach target health\n                    seconds = (percentage - a) / b\n                    -- Subtract current time to obtain \"time remaining\"\n                    seconds = math.min(7777, seconds - (GetTime() - unitTable[2]))\n                    if seconds < 0 then seconds = 9999 end\n                end\n            end\n        end\n        return seconds\n    end\n    \n    function envTable.updateUnit(unitId)\n        if UnitExists(unitId) and (not envTable.onlyShowOnBoss or UnitLevel(unitId) == -1) then\n            envTable.TTDRefresh(unitId)\n            local GUID = UnitGUID(unitId)\n            envTable.TTD = envTable.TimeToX(GUID, envTable.config.pctHP, 3)\n            if envTable.TTD < 7777 and envTable.TTD < envTable.config.duration then\n                envTable.show = true\n                envTable.updateText()\n            end            \n        end\n    end\n    \n    function envTable.updateText ( )\n        local ret = \"\"\n        local number = envTable.TTD\n        if not number  or number == 0 or not envTable.show then\n            unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n            return \n        end\n        local H = floor(number/3600)\n        local M = floor((number - (floor(number/3600) * 3600)) / 60)\n        local S = number - math.floor(number/60)*60\n        if H>0 then\n            ret = (\"%02d:%02d:%02d\"):format(H, M, S)\n        elseif M>0 then\n            ret =  (\"%02d:%02d\"):format(M, S)\n        else\n            ret =  floor(S)\n        end\n        unitFrame.healthBar.ttdTextFrame:SetText(ret)\n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1594833822,
					["PlaterCore"] = 1,
					["Name"] = "Time to Die (TTD)",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2125377,
					["OptionsValues"] = {
					},
				}, -- [19]
				{
					["Enabled"] = true,
					["Revision"] = 335,
					["HooksTemp"] = {
					},
					["Author"] = "Zargan-Quel'dorei",
					["Desc"] = "Sets the nameplate alpha based on range and occlusion.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --This function sets the nameplate alpha based on range and occlusion.\n    \n    if not unitId or unitId == \"\" then return end\n    \n    --get default client nameplate alpha\n    local np =C_NamePlate.GetNamePlateForUnit(unitId)\n    local npAlpha = np:GetAlpha()\n    \n    --set plater unitFrame alpha\n    if envTable.rangeCheckEnabled  then\n        if npAlpha <= envTable.npOccludedAlphaMult then\n            unitFrame:SetAlpha(npAlpha)\n        else\n            if unitFrame.namePlateInRange then\n                unitFrame:SetAlpha(envTable.npMaxAlpha)\n            else\n                unitFrame:SetAlpha(envTable.rangeCheckAlpha)\n            end\n        end    \n    else\n        unitFrame:SetAlpha(npAlpha)\n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --This function sets the nameplate alpha based on range and occlusion.\n    \n    if not unitId or unitId == \"\" then return end\n    \n    --get default client nameplate alpha\n    local np =C_NamePlate.GetNamePlateForUnit(unitId)\n    local npAlpha = np:GetAlpha()\n    \n    --set plater unitFrame alpha\n    if envTable.rangeCheckEnabled  then\n        if npAlpha <= envTable.npOccludedAlphaMult then\n            unitFrame:SetAlpha(npAlpha)\n        else\n            if unitFrame.namePlateInRange then\n                unitFrame:SetAlpha(envTable.npMaxAlpha)\n            else\n                unitFrame:SetAlpha(envTable.rangeCheckAlpha)\n            end\n        end    \n    else\n        unitFrame:SetAlpha(npAlpha)\n    end\n    \nend\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if setCVars is true, the function will set the namplate alpha CVars\n    local setCVars = true\n    \n    --change these values as desired\n    local defaultOccludedAlphaMult = 0.4 -- default = 0.4\n    local defaultMaxAlpha = 1.0 -- default = 1.0\n    local defaultMinAlpha = 0.6 --defulat = 0.6\n    \n    --nameplates with an alpha less than cvar nameplateOccludedAlphaMult are considered to be occluded\n    envTable.npOccludedAlphaMult = tonumber(GetCVar(\"nameplateOccludedAlphaMult\")) \n    if envTable.npOccludedAlphaMult ~= defaultOccludedAlphaMult and setCVars then  \n        Plater.SafeSetCVar (\"nameplateOccludedAlphaMult\", defaultOccludedAlphaMult)\n        envTable.npOccludedAlphaMult = defaultOccludedAlphaMult\n    end\n    \n    --nameplates that are in range will have their alpha set equal to cvar nameplateMaxAlpha\n    envTable.npMaxAlpha =  tonumber(GetCVar(\"nameplateMaxAlpha\"))\n    if envTable.npMaxAlpha ~= defaultMaxAlpha and setCVars then\n        Plater.SafeSetCVar (\"nameplateMaxAlpha\", defaultMaxAlpha)\n        envTable.npMaxAlpha = defaultMaxAlpha\n    end\n    \n    --set cvar nameplateMinAlpha\n    envTable.npMinAlpha =  tonumber(GetCVar(\"nameplateMinAlpha\"))\n    if envTable.npMinAlpha ~=defaultMinAlpha and setCVars then  \n        Plater.SafeSetCVar (\"nameplateMinAlpha\", defaultMinAlpha) \n        envTable.npMinAlpha = defaultMinAlpha\n    end \n    \n    --get plater profile setting for range check enabled\n    envTable.rangeCheckEnabled = Plater.db.profile.range_check_enabled\n    \n    --get plater profile setting for range check alpha (for nameplates that are out of range)\n    envTable.rangeCheckAlpha = Plater.db.profile.range_check_alpha\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581285868,
					["PlaterCore"] = 1,
					["Name"] = "Nameplate Alpha",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\Icons\\trade_engineering",
					["LastHookEdited"] = "Constructor",
				}, -- [20]
				{
					["Enabled"] = false,
					["Revision"] = 58,
					["HooksTemp"] = {
					},
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Hides the name text if the unit is casting.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateName(unitFrame) \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateName(unitFrame, true)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.hideName = true\n    envTable.hideHealthText = false\n    \n    function envTable.UpdateName(unitFrame, forceShow)\n        if not unitFrame or not unitFrame.castBar then\n            return\n        end\n        \n        local plateConfigs = Plater.GetConfig (unitFrame)\n        local castBar = unitFrame.castBar\n        if forceShow then\n            unitFrame.unitName:Show()\n            \n            if (plateConfigs.percent_text_enabled) then\n                unitFrame.healthBar.lifePercent:Show()\n            end\n            return\n        end\n        \n        if not castBar.IsInterrupted then\n            if envTable.hideHealthText then\n                unitFrame.healthBar.lifePercent:Hide()\n            end\n            if envTable.hideName then\n                unitFrame.unitName:Hide()\n            end\n        else\n            unitFrame.unitName:Show()\n            if (plateConfigs.percent_text_enabled) then\n                unitFrame.healthBar.lifePercent:Show()\n            end\n        end\n        \n    end\n    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateName(unitFrame) \nend\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateName(unitFrame, true)\nend\n\n\n\n\n",
					},
					["Time"] = 1572331733,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 413591,
					["Name"] = "Hide Name during Casts",
				}, -- [21]
				{
					["Enabled"] = false,
					["Revision"] = 76,
					["HooksTemp"] = {
					},
					["Author"] = "‰∏ÄÈ¶¨Áï∂ÂÖà-È¨ºÈõæÂ≥∞",
					["Desc"] = "Show Health Text ,both unit and player are in combat Or Only Unit is in combat.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local healthBar = unitFrame.healthBar\n    local actorTypeDBConfig = Plater.db.profile.plate_config [unitFrame.actorType]\n    \n    if actorTypeDBConfig.percent_text_enabled then\n        if actorTypeDBConfig.percent_text_ooc then\n        else\n            if (not unitFrame.IsSelf) then\n                if envTable.unitandplayerCombat then\n                    if (unitFrame.InCombat and Plater.IsInCombat()) then\n                        healthBar.lifePercent:Show()\n                    else\n                        healthBar.lifePercent:Hide()\n                    end\n                else\n                    if (unitFrame.InCombat) then\n                        healthBar.lifePercent:Show()\n                    else\n                        healthBar.lifePercent:Hide()\n                    end   \n                end\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    --Require: Enable Health Information,Disable Health Information->Out of Combat\n    \n    --true :Unit and Player are both in Combat,then show unit's health information\n    --false :Unit is in Combat,then show unit's health information\n    envTable.unitandplayerCombat = true\n    \n    \nend",
					},
					["Time"] = 1572333056,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Updated",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "INTERFACE\\ICONS\\ability_toughness",
					["Name"] = "Health Text In Combat",
				}, -- [22]
				{
					["Enabled"] = true,
					["Revision"] = 277,
					["HooksTemp"] = {
					},
					["Author"] = "Daisukidesu-Moon Guard",
					["Desc"] = "Adds class icons to the top of friendly players nameplates.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    local parent = unitFrame\n    local classIcon = parent.classIcon\n    if (not unitFrame.IsSelf and not unitFrame.namePlateNpcId and unitFrame.namePlateUnitReaction >= 5) then\n        local _,class = UnitClass(unitFrame.unit)\n        classIcon.icon:SetTexCoord(unpack(CLASS_ICON_TCOORDS[class]))\n        classIcon:Show()\n        \n        local icon = parent.classIcon.icon\n        if (parent.healthBar:IsVisible()) then\n            icon:ClearAllPoints()\n            icon:SetPoint ('bottom', parent.healthBar, 'top', 0, 0)\n        else\n            icon:ClearAllPoints()\n            icon:SetPoint ('bottom', parent.ActorNameSpecial, 'top', 0, 0)\n        end\n    else\n        classIcon:Hide()\n    end\nend",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    local classIcon = unitFrame.classIcon\n    if (classIcon) then\n        classIcon:Hide()\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    local parent = unitFrame\n    if (not parent.classIcon) then\n        local classIcon = CreateFrame (\"frame\", nil, unitFrame)\n        classIcon:SetFrameLevel (parent:GetFrameLevel() + 5)\n        classIcon:SetPoint ('topleft', parent, 'topleft', 0, 0)\n        parent.classIcon = classIcon\n        \n        local icon = Plater:CreateImage (classIcon, [[Interface\\TargetingFrame\\UI-Classes-Circles]], 16, 16)\n        classIcon.icon = icon\n    end\nend",
					},
					["Time"] = 1572333227,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Added",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2188585,
					["Name"] = "Class Icons Friendly Players",
				}, -- [23]
				{
					["Enabled"] = true,
					["Revision"] = 36,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border around the current target.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 3\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1572333329,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\CHATFRAME\\UI-ChatInputBorder",
					["Name"] = "Target Border",
				}, -- [24]
				{
					["Enabled"] = true,
					["Revision"] = 120,
					["HooksTemp"] = {
					},
					["Author"] = "????????-Illidan",
					["Desc"] = "Config aura borders",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1581867408,
					["PlaterCore"] = 1,
					["Name"] = "Advanced Debuff Border",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133006,
					["LastHookEdited"] = "Nameplate Updated",
				}, -- [25]
				{
					["Enabled"] = false,
					["Revision"] = 234,
					["HooksTemp"] = {
					},
					["Author"] = "Irashi-Antonidas",
					["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"right\"\n    local anchorRelative = \"left\"\n    local xOffset = -5\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(26, 26);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Icons\\\\ABILITY_SAP\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                \n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'–ì—É–º–∞–Ω–æ–∏–¥', '–ñ–∏–≤–æ—Ç–Ω–æ–µ', '–î–µ–º–æ–Ω', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend\n\n\n\n",
					},
					["Time"] = 1572390955,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["arena"] = true,
							["pvp"] = true,
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 132310,
					["Name"] = "Sappable",
				}, -- [26]
				{
					["Enabled"] = false,
					["Revision"] = 121,
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1581867602,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["Name"] = "Cast Icon Anchor",
				}, -- [27]
				{
					["Enabled"] = false,
					["Revision"] = 643,
					["HooksTemp"] = {
					},
					["Author"] = "Ìò∏Î∂à-ÏïÑÏ¶àÏÉ§Îùº",
					["Desc"] = "Raidmark in the Unitname",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateRaidMark (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --normal Marker\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 2, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    --Name only Marker\n    envTable.SpecialSize = 22\n    envTable.SpecialAnchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    envTable.UpdateRaidMark = function (unitFrame, unitId)\n        local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n        local marker = plateFrame.unitFrame.PlaterRaidTargetFrame\n        if marker then\n            if plateFrame.IsFriendlyPlayerWithoutHealthBar or\n            plateFrame.IsNpcWithoutHealthBar then\n                marker:SetSize (envTable.SpecialSize, envTable.SpecialSize)\n                Plater.SetAnchor (marker, envTable.SpecialAnchor, unitFrame.ActorNameSpecial)\n            else\n                marker:SetSize (envTable.Size, envTable.Size)\n                Plater.SetAnchor (marker, envTable.Anchor, unitFrame.unitName)\n            end\n        end\n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1581869368,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 878218,
					["Name"] = "Raidmark in the Unitname",
				}, -- [28]
				{
					["Enabled"] = true,
					["Revision"] = 32,
					["HooksTemp"] = {
					},
					["Author"] = "Viashi-Antonidas",
					["Desc"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    local noInterruptIndicator = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n    noInterruptIndicator:SetDrawLayer (\"overlay\", 2)\n    \n    noInterruptIndicator:SetTexture (\"Interface\\\\AddOns\\\\Plater\\\\images\\\\overlay_indicator_1\") -- texture to use\n    noInterruptIndicator:SetVertexColor (0, 0, 0, 0.5) -- adjust color: r, g, b, alpha\n    \n    PixelUtil.SetPoint (noInterruptIndicator, \"topleft\", unitFrame.castBar, \"topleft\", 0, 0)\n    PixelUtil.SetPoint (noInterruptIndicator, \"bottomright\",  unitFrame.castBar, \"bottomright\", 0, 0)\n    unitFrame.castBar.noInterruptIndicator = noInterruptIndicator\n    unitFrame.castBar.noInterruptIndicator:Hide()\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if not unitFrame.castBar.canInterrupt then\n        unitFrame.castBar.noInterruptIndicator:Show()\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.castBar.noInterruptIndicator:Hide()\nend",
					},
					["Prio"] = 99,
					["Time"] = 1581870434,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "INTERFACE\\ICONS\\Ability_Warrior_ShieldMastery",
					["Name"] = "Cast-Overlay (not interruptible)",
				}, -- [29]
				{
					["Enabled"] = false,
					["Revision"] = 782,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "",
					["Hooks"] = {
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBarSlices) then\n        for _, sliceSegment in ipairs (unitFrame.healthBarSlices) do\n            sliceSegment:Hide()\n        end\n        \n        unitFrame.healthBar.background:SetAlpha (1)\n        unitFrame.healthBar.barTexture:SetAlpha (1) \n    end\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --override the update frequency to run every tick\n    local tickFrame = unitFrame.PlateFrame.OnTickFrame\n    tickFrame.ThrottleUpdate = -1\n    \n    --update the nameplate color with delay\n    envTable.UpdateNameplateColor (unitFrame)\n    \n    --check if the max value has changed\n    local minHealth, maxHealth = unitFrame.healthBar:GetMinMaxValues()\n    if (maxHealth ~= envTable.MaxValue) then\n        envTable.UpdateAllSegments (unitFrame)\n        return\n    end\n    \n    --check if the nameplate is already animating and update the animation position\n    if (envTable.RunningAnimation) then\n        envTable.UpdateAnimation (unitFrame)\n        return\n    end\n    \n    if (envTable.CurrentValue ~= unitFrame.healthBar:GetValue()) then\n        envTable.StartAnimation (unitFrame, unitFrame.healthBar:GetValue())\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --refresh all the segment parts\n    envTable.UpdateAllSegments (unitFrame)\n    \n    --update the nameplate color with delay\n    envTable.UpdateNameplateColor (unitFrame)\n    \n    \nend\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --lines which starts with a double dash -- are comments and aren't part of the script\n    \n    --you also might want to:\n    --adjust the black nameplate border (General Settings > Border Color)\n    --adjust the background color to zero (General Settings > Health Bar Background Color and Alpha)\n    --disable the target shading at the Target tab\n    --adjust the target overlay at the Target tab to zero\n    \n    --settings:\n    \n    --which texture it should use\n    envTable.Texture = [[Interface\\AddOns\\Plater\\images\\segment_texture_3]]\n    \n    --shear amount (how much the animation texture leans)\n    envTable.Shearing = 0.20\n    \n    --amount of segments the healthbar will have\n    --modifying this value require a /reload\n    envTable.SegmentsAmount = 10\n    \n    --animation speed (movement left <> right)\n    envTable.AnimationSpeed = 0.75\n    \n    --depleted segment animation settings (when a block reaches zero health)\n    --modifying this value require a /reload\n    envTable.AnimationSettings = {\n        speed = 0.4,\n        rotation = 0, \n        x = 7,\n        y = 1,\n        scaleX = 1,\n        scaleY = 1.6\n    }\n    \n    --end of settings\n    \n    envTable.OnStartDepletedAnimation = function (self)\n        local texture = self:GetParent():GetCapsule()\n        local segmentBar = texture:GetParent():GetCapsule()\n        texture:Show()\n        texture.vertexcolor = {segmentBar:GetVertexColor()}\n        texture.texture = envTable.Texture\n    end\n    \n    envTable.OnEndDepletedAnimation = function (self)\n        self:GetParent():Hide()\n    end\n    \n    --declaring a default value for the max value\n    envTable.MaxValue = 0        \n    \n    --cooldown to update the nameplate color\n    envTable.LastColorUpdate = 0        \n    \n    --this function creates the segments part\n    function envTable.InitializeBars()\n        if (not unitFrame.healthBarSlices) then\n            unitFrame.healthBarSlices = {}\n            \n            for i = 1, envTable.SegmentsAmount do\n                local statusBar = Plater:CreateBar (unitFrame)\n                statusBar:EnableMouse (false)\n                tinsert (unitFrame.healthBarSlices, statusBar)\n                \n                statusBar.segmentTexture = statusBar:CreateTexture (nil, \"artwork\")\n                statusBar.segmentTexture:SetTexture (envTable.Texture)\n                statusBar.segmentTexture:SetPoint (\"center\")\n                \n                local textureAnimation = Plater:CreateImage (statusBar)\n                textureAnimation:SetAllPoints()\n                textureAnimation:Hide()\n                textureAnimation:SetTexture (envTable.Texture)\n                statusBar.textureAnimation = textureAnimation\n                \n                statusBar.depletedAnimation = Plater:CreateAnimationHub (textureAnimation, envTable.OnStartDepletedAnimation, envTable.OnEndDepletedAnimation)\n                \n                local speed = envTable.AnimationSettings.speed\n                local rotation = envTable.AnimationSettings.rotation\n                local x = envTable.AnimationSettings.x\n                local y = envTable.AnimationSettings.y\n                local scaleX =envTable.AnimationSettings.scaleX\n                local scaleY = envTable.AnimationSettings.scaleY\n                \n                Plater:CreateAnimation (statusBar.depletedAnimation, \"rotation\", 1, speed, rotation)\n                Plater:CreateAnimation (statusBar.depletedAnimation, \"translation\", 1, speed, x, y)\n                Plater:CreateAnimation (statusBar.depletedAnimation, \"alpha\", 1, speed, 1, 0)\n                Plater:CreateAnimation (statusBar.depletedAnimation, \"scale\", 1, speed, 1, 1, scaleX, scaleY)\n                \n                local textureBackground = Plater:CreateImage (statusBar)\n                textureBackground:SetAllPoints()\n                textureBackground:SetDrawLayer (\"background\")                \n                statusBar.textureBackground = textureBackground\n            end\n        end\n    end\n    \n    envTable.InitializeBars()\n    \n    function envTable.SetSegmentPercent (segmentSlice, currentValue)\n        \n        segmentSlice:SetValue (currentValue)\n        \n        local percent = DetailsFramework:GetRangePercent (segmentSlice.minValue, segmentSlice.maxValue, currentValue) \n        percent = DetailsFramework:Clamp (0, 1, percent)\n        \n        local texture = segmentSlice.segmentTexture\n        local width = segmentSlice:GetWidth()\n        local shear\n        if (percent > 0.98) then\n            shear = 0\n        else\n            shear = envTable.Shearing\n        end\n        \n        local shearingPercent = DetailsFramework:Clamp (0, 1, percent - shear)\n        \n        texture:SetVertexOffset (UPPER_LEFT_VERTEX, 0, 0);\n        texture:SetVertexOffset (LOWER_LEFT_VERTEX, 0, 0);\n        texture:SetVertexOffset (UPPER_RIGHT_VERTEX, -width * (1 - percent), 0);\n        texture:SetVertexOffset (LOWER_RIGHT_VERTEX, -width * (1 - shearingPercent), 0);\n        \n        texture:SetTexCoord (\n            0, 0, --topleft\n            0, 1, --bottomleft\n            percent, 0, --topright\n            shearingPercent, 1 --bottomright\n        )\n    end\n    \n    function envTable.UpdateAllSegments (unitFrame)\n        \n        local sliceWidth = unitFrame.healthBar:GetWidth() / envTable.SegmentsAmount\n        local sliceHeight = unitFrame.healthBar:GetHeight()\n        local minHealth, maxHealth = unitFrame.healthBar:GetMinMaxValues()\n        local healthPerSlice = maxHealth / envTable.SegmentsAmount\n        local currentValue = unitFrame.healthBar:GetValue()        \n        \n        envTable.MaxValue = maxHealth\n        \n        for i = 1, envTable.SegmentsAmount do\n            \n            local slice = unitFrame.healthBarSlices [i]\n            slice.texture = \"\"\n            slice.textureBackground.texture = envTable.Texture\n            slice.textureBackground.vertexcolor = {.1, .1, .1, .5}\n            slice:Show()\n            \n            slice.segmentTexture:SetSize (sliceWidth, sliceHeight)\n            slice.segmentTexture:SetTexture (envTable.Texture)\n            \n            slice:SetSize (sliceWidth, sliceHeight)\n            slice:SetPoint (\"left\", unitFrame.healthBar, \"left\", (i - 1) * sliceWidth, 0)            \n            slice:SetFrameLevel (unitFrame.healthBar:GetFrameLevel() - 1)\n            \n            slice.minValue = (healthPerSlice * (i - 1)) + 0.1\n            slice.maxValue = healthPerSlice * i\n            slice:SetMinMaxValues (slice.minValue, slice.maxValue)\n            \n            slice.animationCooldown = -1\n            \n            --set and save the current value\n            slice.currentValue = currentValue\n            \n            envTable.SetSegmentPercent (slice, currentValue)\n            \n            slice.IsAnimating = false\n        end    \n        \n        --reset the animation\n        envTable.RunningAnimation = false\n        --reset which segment is currently being animated\n        envTable.SegmentBeingAnimated = 0\n        \n        --what is the current value and how much value has each segment\n        envTable.CurrentValue = currentValue\n        envTable.ValuePerSegment = healthPerSlice\n        \n        --cooldown to update the nameplate color\n        envTable.LastColorUpdate = 0\n        \n        \n    end\n    \n    function envTable.StartAnimation (unitFrame, endValue)\n        envTable.RunningAnimation = true\n        \n        --in which segment the value is currently in\n        --        local currentSegment = max (min (ceil (envTable.CurrentValue / envTable.ValuePerSegment), envTable.SegmentsAmount), 1)\n        \n        local currentSegment\n        \n        for i = 1, envTable.SegmentsAmount do\n            local segment = unitFrame.healthBarSlices [i]\n            if (envTable.CurrentValue > segment.minValue and envTable.CurrentValue <= segment.maxValue) then\n                currentSegment = i\n                break\n            end \n        end\n        \n        if (not currentSegment) then\n            currentSegment = max (min (ceil (envTable.CurrentValue / envTable.ValuePerSegment), envTable.SegmentsAmount), 1)\n        end\n        \n        envTable.SegmentBeingAnimated = currentSegment\n        \n        --true with the animation goes down (decreasing) false if goes up (increasing)\n        envTable.AnimationDirection = envTable.CurrentValue > endValue\n        \n        --save the value where the animation ends\n        envTable.EndValue = endValue\n        \n        envTable.UpdateAnimation (unitFrame)\n        \n        unitFrame.healthBar.background:SetAlpha (0)\n        unitFrame.healthBar.barTexture:SetAlpha (0)\n    end\n    \n    function envTable.UpdateAnimation (unitFrame)\n        local deltaSeconds = GetWorldDeltaSeconds()\n        local currentSegment = unitFrame.healthBarSlices [envTable.SegmentBeingAnimated]\n        local currentValue = envTable.CurrentValue\n        local amountToMove = envTable.MaxValue * deltaSeconds * envTable.AnimationSpeed\n        \n        --check if the endValue has been updated\n        if (envTable.EndValue ~= unitFrame.healthBar:GetValue()) then\n            --the end value got changed\n            envTable.EndValue = unitFrame.healthBar:GetValue()\n        end\n        \n        if (envTable.AnimationDirection) then --moving right to left\n            amountToMove = -amountToMove\n        end\n        \n        local newValue = Clamp (currentValue + amountToMove, 0, envTable.MaxValue)\n        --currentSegment:SetValue (newValue)\n        envTable.SetSegmentPercent (currentSegment, newValue)\n        \n        envTable.CurrentValue = newValue\n        \n        --moving right to left        \n        if (envTable.AnimationDirection) then \n            \n            --check if needs to jump to the next segment\n            if (newValue < currentSegment.minValue) then\n                --segment is depleted, jump to the next segment\n                if (currentSegment.animationCooldown < GetTime()) then\n                    currentSegment.depletedAnimation:Play()\n                end\n                \n                currentSegment.animationCooldown = GetTime() + 5\n                envTable.SegmentBeingAnimated = max (envTable.SegmentBeingAnimated - 1, 1)\n            end\n            \n            --check if the animation is over\n            if (newValue <= envTable.EndValue) then\n                envTable.RunningAnimation = false\n                envTable.CurrentValue = unitFrame.healthBar:GetValue()\n                return\n            end\n            \n        else\n            \n            --the animation is growing (left to right)\n            --check if the animation is over\n            \n            --check if needs to jump to the next segment\n            if (newValue > currentSegment.maxValue) then\n                --segment got full, jump to the next segment\n                --currentSegment.depletedAnimation:Play()\n                envTable.SegmentBeingAnimated = min (envTable.SegmentBeingAnimated + 1, envTable.SegmentsAmount)\n                \n            end\n            \n            if (newValue >= envTable.EndValue) then\n                envTable.RunningAnimation = false\n                envTable.CurrentValue = unitFrame.healthBar:GetValue()\n                return\n            end\n            \n        end\n    end\n    \n    function envTable.UpdateNameplateColor (unitFrame)\n        \n        envTable.LastColorUpdate = envTable.LastColorUpdate - GetWorldDeltaSeconds()\n        \n        if (envTable.LastColorUpdate < 0) then\n            envTable.LastColorUpdate = 0.3\n            \n            local r, g, b =unitFrame.healthBar:GetColor()\n            for i = 1, envTable.SegmentsAmount do\n                local slice = unitFrame.healthBarSlices [i]            \n                slice.statusbar:SetStatusBarColor (r ,g ,b, 0)\n                slice.segmentTexture:SetVertexColor (r, g, b, 1)\n            end\n            \n            unitFrame.healthBar.background:SetAlpha (0)\n            unitFrame.healthBar.barTexture:SetAlpha (0) \n        end\n        \n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1583855240,
					["PlaterCore"] = 1,
					["Name"] = "Overwatch Nameplate",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\FriendsFrame\\Battlenet-Overwatchicon",
					["LastHookEdited"] = "Constructor",
				}, -- [30]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Name"] = "Texture Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["version"] = -1,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Time"] = 1596670932,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [31]
			},
			["last_news_time"] = 1571909935,
			["cast_statusbar_color"] = {
				0, -- [1]
				0.3137254901960784, -- [2]
				1, -- [3]
				0.9600000008940697, -- [4]
			},
			["aura_width2"] = 19,
			["cast_statusbar_texture"] = "ElvUI Norm",
			["indicator_raidmark_anchor"] = {
				["x"] = -34.02999877929688,
			},
			["use_color_lerp"] = true,
			["target_shady_alpha"] = 0.5999999642372131,
			["aura_show_enrage"] = true,
			["aura_height_personal"] = 19,
			["aura_width"] = 19,
			["aura_height2"] = 19,
			["target_highlight_height"] = 7,
			["health_statusbar_bgcolor"] = {
				0.2352941176470588, -- [1]
				0.2352941176470588, -- [2]
				0.2352941176470588, -- [3]
				1, -- [4]
			},
			["health_statusbar_texture"] = "ElvUI Norm",
			["update_throttle"] = 0.2499999850988388,
			["login_counter"] = 3642,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				109, -- [1]
			},
			["pet_width_scale"] = 0.8999999761581421,
			["castbar_target_text_size"] = 12,
			["captured_spells"] = {
				[53717] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–¥–∏ –ê–ª–∏—Å—Ç—Ä–∞",
					["npcID"] = 29195,
				},
				[216528] = {
					["source"] = "–ë–∏—à–∞–¥–∂–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53765] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–¥–∏ –ê–ª–∏—Å—Ç—Ä–∞",
					["npcID"] = 29195,
				},
				[51338] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –ü–ª–µ—Ç–∏",
					["npcID"] = 31096,
				},
				[268899] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–æ–≤—É—Ö—ç",
					["npcID"] = 0,
				},
				[52424] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[199603] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280398] = {
					["source"] = "–ò–Ω–Ω–æ–º–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[219788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[275672] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[109128] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[317065] = {
					["source"] = "–ó–∫–æ—Ä—Ä–æ—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[319237] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–≤–∞–Ω—Å–æ–ª—è—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[268904] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[53766] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–µ–¥–∏ –ê–ª–∏—Å—Ç—Ä–∞",
					["npcID"] = 29195,
				},
				[264689] = {
					["source"] = "–≠–ª–µ—É–º",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268905] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[260734] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[23881] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[202225] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[256455] = {
					["source"] = "–ë–ª–µ—Å—Ñ–∏—Å—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77575] = {
					["source"] = "–ü—Ä–∂–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[244894] = {
					["type"] = "BUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["npcID"] = 121975,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–±–ª–æ–Ω—Å–∫–∞—è-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[42780] = {
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23961,
				},
				[80354] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–∞–µ–∏—è-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[49998] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[186258] = {
					["source"] = "–ê—ç—Ä–æ–Ω—ã—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[290372] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[138927] = {
					["source"] = "–ö–æ—Ç—è–≥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[44457] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[248473] = {
					["source"] = "–ö–æ—Å—Å–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[262652] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[190411] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[774] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∏–∏–ª–Ω–∞—Ä–∞",
					["npcID"] = 0,
				},
				[2580] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ç–∏–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[157644] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[201846] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[54965] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 23960,
				},
				[279902] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[310690] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[11366] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[43308] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–∞–¥–∂–∞",
					["npcID"] = 0,
				},
				[55077] = {
					["source"] = "–í–∑–±–µ—à–µ–Ω–Ω—ã–π –≤–æ—Ä–≥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 29735,
				},
				[194310] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[273006] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[275689] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[118905] = {
					["source"] = "–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 61245,
				},
				[199804] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[243431] = {
					["npcID"] = 121975,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
				},
				[111400] = {
					["source"] = "–ú–µ–ª–æ—Ä–∏–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108366] = {
					["source"] = "–ö—É–ª—ë–∫—Å–ø—É—Å–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2098] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[171253] = {
					["source"] = "–ó–∫–æ—Ä—Ä–æ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[244901] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["npcID"] = 121985,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[295367] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[202425] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞—Ç—Ä–µ—Å–∫–∞–ª–∞—Å—å",
					["npcID"] = 0,
				},
				[108271] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297412] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ã—Ñ–æ",
					["npcID"] = 0,
				},
				[55078] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[51533] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[12544] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 49573,
				},
				[1064] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[47541] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[245990] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["npcID"] = 121975,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[53721] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–¥–∏ –ê–ª–∏—Å—Ç—Ä–∞",
					["npcID"] = 29195,
				},
				[85948] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[217694] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297034] = {
					["source"] = "–õ—É—á–µ–∑–∞—Ä–∏–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2645] = {
					["source"] = "–ì–µ—Ä—Ñ–æ–Ω–ª–∏—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193358] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[58448] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏—Ç—Ä–æ–Ω—è—à–∫–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[297035] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–∞–¥–∂–∞",
					["npcID"] = 0,
				},
				[286305] = {
					["source"] = "–í–∞—Ä–æ–∫ –°–∞—É—Ä—Ñ–∞–Ω–≥",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 146011,
				},
				[326419] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43757] = {
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24079,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[272126] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[5308] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[79849] = {
					["source"] = "–ú–æ—Ä–∞–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 46718,
				},
				[38232] = {
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24085,
				},
				[295378] = {
					["source"] = "–†–µ–π–≤–µ—Ä—à–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297039] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ç—Ç–≤–∏—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[100] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[61882] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279028] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[188443] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279029] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[158486] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–æ—Ä–æ—Ä–∞",
					["npcID"] = 0,
				},
				[13750] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 2026,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[101568] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[24450] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 15651,
				},
				[1856] = {
					["encounterID"] = 2025,
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8676] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[165961] = {
					["source"] = "–†–∞—Ç–∞–ø—É–ø—Å–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279033] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[3714] = {
					["source"] = "–î—ç–¥—Ä–∞–π–∑–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1604] = {
					["type"] = "DEBUFF",
					["source"] = "–í—Ä–∞–π–∫—É–ª-—Å–∫–µ–ª–µ—Ç",
					["encounterID"] = 2026,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 23970,
				},
				[171391] = {
					["source"] = "–ö–∞—Å–∞—Ç–∏—Ä–µ—Å—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[185763] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ç—Ç–≤–∏—è-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[244912] = {
					["npcID"] = 122532,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–£–≥–æ–ª–µ–∫ –¢–∞–π—à–∞–ª–∞–∫–∞",
					["encounterID"] = 2063,
				},
				[298837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[260881] = {
					["source"] = "–ì–µ—Ä—Ñ–æ–Ω–ª–∏—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281209] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[11327] = {
					["type"] = "BUFF",
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["encounterID"] = 2025,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[319919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ç—Ä–≤–∏-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["npcID"] = 0,
				},
				[284277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–æ—Ö–∞–æ—Ö–∞–æ—Ö–∞–æ",
					["npcID"] = 0,
				},
				[42705] = {
					["type"] = "BUFF",
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["encounterID"] = 2025,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 23954,
				},
				[298841] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[242551] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–∞–¥–∂–∞",
					["npcID"] = 0,
				},
				[50977] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[184362] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[43935] = {
					["source"] = "–ö–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24069,
				},
				[47528] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[131474] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•—ã–±—ã–¥—ã—â—å",
					["npcID"] = 0,
				},
				[108853] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞—Ç—Ä–µ—Å–∫–∞–ª–∞—Å—å",
					["npcID"] = 0,
				},
				[131347] = {
					["source"] = "–°–∏—Ä—à–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268953] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[188196] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[170950] = {
					["source"] = "–ü—Ä–∂–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268954] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[43664] = {
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24082,
				},
				[61070] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∞—Ä–∂–∏–Ω–æ–∫—Å",
					["npcID"] = 45681,
				},
				[54954] = {
					["source"] = "–¢–∏–∫–∞—é—â–∞—è –±–æ–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 29684,
				},
				[131476] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ã–±—ã–¥—ã—â—å",
					["npcID"] = 0,
				},
				[268956] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[8936] = {
					["source"] = "–ì–æ–º–æ—Ç—Ä–æ–ª—å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[53549] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Å–ª—É—à–Ω–∏–∫ –ª—å–¥–∞",
					["npcID"] = 28490,
				},
				[245686] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏—Ä–∏–æ—Å—Ç—Ä–∞–∑",
					["npcID"] = 0,
				},
				[43936] = {
					["source"] = "–ö–æ—Å—Ç–µ–∫—Ä—É—à–∏—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24069,
				},
				[48583] = {
					["encounterID"] = 2024,
					["source"] = "–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24200,
				},
				[188838] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[184367] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[182387] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304603] = {
					["source"] = "–¢–∏–ª–Ω–∞—Ä–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43649] = {
					["encounterID"] = 2024,
					["source"] = "–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24201,
				},
				[43665] = {
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24071,
				},
				[53390] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[40120] = {
					["source"] = "–¢–µ–æ–Ω–∏–∫–æ—Ç–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42723] = {
					["encounterID"] = 2025,
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23954,
				},
				[42771] = {
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 23961,
				},
				[191587] = {
					["source"] = "–ü—Ä–∂–Ω–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[289277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–µ–Ω–¥–∞–ª–¥",
					["npcID"] = 0,
				},
				[195292] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[166740] = {
					["source"] = "–ú–∞–≥'—Ö–∞—Ä-–≤—Å–∞–¥–Ω–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 144323,
				},
				[206662] = {
					["source"] = "–ù–æ–±—ç—Ç–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61295] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116011] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8613] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[57846] = {
					["source"] = "–ñ–µ–ª–µ–∑–æ–≥–æ–ª–æ–≤ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23961,
				},
				[154797] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–µ–ª–Ω—É–∞—Ä-–ì—Ä–æ–º",
					["npcID"] = 0,
				},
				[60960] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ì–∞—Ä–∂–∏–Ω–æ–∫—Å",
					["npcID"] = 45681,
				},
				[53822] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[308189] = {
					["source"] = "–ù–∏—Ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–∞—Å–≥—É–ª",
					["npcID"] = 0,
				},
				[48265] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[234514] = {
					["source"] = "–ú–µ–ª–æ—Ä–∏–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203407] = {
					["source"] = "Dratu-Turalyon",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[85288] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[42724] = {
					["source"] = "–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24080,
				},
				[42740] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å —Ä—É–Ω –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23960,
				},
				[298823] = {
					["source"] = "–•—Ä—É—Å—Ç–æ–ø—Ä–∞–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[156779] = {
					["source"] = "–î–µ–∫—É–≤–∞—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267560] = {
					["source"] = "–•—Ä—É—Å—Ç–æ–ø—Ä–∞–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256456] = {
					["source"] = "–ê–∞–∑–º–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121557] = {
					["source"] = "–ö—Ä–µ–≤–µ—Ç—É–Ω—å–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193316] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[228128] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ—é—Ç—ã–π–¥—ç–º–¥–∂",
					["npcID"] = 0,
				},
				[306715] = {
					["source"] = "–ù–æ–±—ç—Ç–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2825] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[244736] = {
					["type"] = "DEBUFF",
					["source"] = "–ü–ª–∞–º–µ–Ω–Ω—ã–π —Å–ª–µ–¥",
					["npcID"] = 122581,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[1766] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[42708] = {
					["encounterID"] = 2025,
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23954,
				},
				[199600] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–æ–≤—É—Ö—ç",
					["npcID"] = 0,
				},
				[51586] = {
					["source"] = "–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 28410,
				},
				[245631] = {
					["type"] = "BUFF",
					["source"] = "–ü–ª–∞–º—è –¢–∞–π—à–∞–ª–∞–∫–∞",
					["npcID"] = 121985,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[194084] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[335151] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ç–∏–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—Ä—É–∫—Å—É—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[274598] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203538] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏—Ä–∏–æ—Å—Ç—Ä–∞–∑",
					["npcID"] = 0,
				},
				[48400] = {
					["type"] = "DEBUFF",
					["source"] = "–õ–µ–¥—è–Ω–∞—è –º–æ–≥–∏–ª–∞",
					["encounterID"] = 2026,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 23965,
				},
				[51587] = {
					["source"] = "–°–ø–∏—Ä–∏—Ç—É–∞–ª–∏—Å—Ç –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 28410,
				},
				[5672] = {
					["source"] = "–¢–æ—Ç–µ–º –∏—Å—Ü–µ–ª—è—é—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 3527,
				},
				[73920] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[13446] = {
					["source"] = "–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π –≤—É—Ä–¥–∞–ª–∞–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24084,
				},
				[43651] = {
					["encounterID"] = 2024,
					["source"] = "–°–∫–∞—Ä–≤–∞–ª—å–¥ –°—Ç—Ä–æ–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24200,
				},
				[26297] = {
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["encounterID"] = 2025,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∏—Ä–∏–æ—Å—Ç—Ä–∞–∑",
					["npcID"] = 0,
				},
				[273323] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[264764] = {
					["source"] = "Mifosdream-Outland",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22427] = {
					["source"] = "–û—Ä—É–∂–µ–π–Ω–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24080,
				},
				[51460] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[192106] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
				},
				[53536] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–æ—Å–ª—É—à–Ω–∏–∫ –ª—å–¥–∞",
					["npcID"] = 28490,
				},
				[216251] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[60211] = {
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24079,
				},
				[205648] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢—Ä–∏–æ–≤–µ—Ä–∞-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[42702] = {
					["encounterID"] = 2026,
					["source"] = "–í—Ä–∞–π–∫—É–ª-—Å–∫–µ–ª–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23970,
				},
				[231390] = {
					["source"] = "–õ–æ–ª–∏—Ç–∞–Ω–µ—á–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51490] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49576] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[54962] = {
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23956,
				},
				[193359] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190319] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48107] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108199] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[48707] = {
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["encounterID"] = 2026,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[974] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[421] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[43265] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[52174] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ—à–Ω",
					["npcID"] = 0,
				},
				[31551] = {
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24071,
				},
				[292364] = {
					["source"] = "–î–µ–∫–∫–∏—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33943] = {
					["source"] = "–ì–æ–º–æ—Ç—Ä–æ–ª—å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22888] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42972] = {
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23956,
				},
				[85739] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[403] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[35570] = {
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24085,
				},
				[180612] = {
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["encounterID"] = 2026,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[328136] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ç–∏–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[51505] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[285979] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[77762] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[255909] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54983] = {
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24082,
				},
				[193357] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50653] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24083,
				},
				[195457] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1784] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[197214] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[206930] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[81141] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[57724] = {
					["type"] = "DEBUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[185311] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–∞–Ω–µ—Ä–∏—Ç-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[48108] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5784] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•—ã–±—ã–¥—ã—â—å",
					["npcID"] = 0,
				},
				[3408] = {
					["source"] = "–¢–µ–º–Ω–∞—è–±–µ–∑–¥–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43930] = {
					["source"] = "–í—ã–ø–ª–∞–≤—â–∏–∫ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24079,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞—Ç–∏–Ω—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[42669] = {
					["encounterID"] = 2025,
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23954,
				},
				[193356] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[96312] = {
					["source"] = "–†–∞—Ç–∞–ø—É–ø—Å–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273465] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[188389] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295248] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[16244] = {
					["source"] = "–ù–∞–¥–∑–∏—Ä–∞—Ç–µ–ª—å –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24085,
				},
				[48792] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210126] = {
					["source"] = "–†–µ—Å—Ç–º–∏–º–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186257] = {
					["source"] = "–ê—ç—Ä–æ–Ω—ã—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288158] = {
					["source"] = "–¢–µ–º–Ω–∞—è–±–µ–∑–¥–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42729] = {
					["encounterID"] = 2025,
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23954,
				},
				[33082] = {
					["source"] = "–î—ç–¥—Ä–∞–π–∑–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[195627] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[236060] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[79865] = {
					["source"] = "–§–ª–µ–∫–∫–∏ –ù–æ–∫—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 62196,
				},
				[12654] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53570] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ—Å–ª—É—à–Ω–∏–∫ –ª—å–¥–∞",
					["npcID"] = 28490,
				},
				[8599] = {
					["source"] = "–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24078,
				},
				[253595] = {
					["source"] = "–û–ª–∏—Ä–∏–æ–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6343] = {
					["source"] = "–†–µ–π–≤–µ—Ä—à–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[139546] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195181] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[288800] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15572] = {
					["source"] = "–ú–µ—Ç–∞–ª–ª–æ—Ä–µ–∑ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24078,
				},
				[13877] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251839] = {
					["source"] = "–ù–∏—Ç—Ç–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210320] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–Ø–±–ª–æ–Ω—Å–∫–∞—è-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[58361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∏–º–ª—É—Å-–ì–æ—Ä–¥—É–Ω–Ω–∏",
					["npcID"] = 0,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–æ—Ö–∞–æ—Ö–∞–æ—Ö–∞–æ",
					["npcID"] = 0,
				},
				[277943] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[244813] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[49722] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24083,
				},
				[193315] = {
					["source"] = "–°–∞—Å–Ω—ã–µ–∫–æ–ª–µ–Ω–∏-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5394] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187837] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[207400] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[9672] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 45691,
				},
				[91800] = {
					["source"] = "–ó–µ–º–ª–µ—Ö—Ä–∞–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 26125,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–∞–¥–∂–∞",
					["npcID"] = 0,
				},
				[143625] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–∞–Ω–µ—Ä–∏—Ç-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[118000] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["encounterID"] = 2063,
				},
				[57547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–∞–ª—å'–∫–∏—Ä–∞-–≤–æ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞",
					["npcID"] = 31095,
				},
				[288146] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–∞–µ–∏—è-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[299664] = {
					["source"] = "–•–∏—Ç–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[221562] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[34189] = {
					["source"] = "–¢–µ–º–Ω—ã–π —Å–ª–µ–¥–æ–ø—ã—Ç –ú–∞—Ä—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 24137,
				},
				[104395] = {
					["source"] = "–ô—É–∫—Ü–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2948] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[17364] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[28103] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–∏—Ç–∞–º–∏—Ä–µ—Å",
					["npcID"] = 0,
				},
				[98008] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[77472] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[57723] = {
					["source"] = "–õ—É—á–µ–∑–∞—Ä–∏–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196782] = {
					["source"] = "–ü—Ä–∂–Ω–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[56222] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[16870] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–≤–æ",
					["npcID"] = 0,
				},
				[783] = {
					["source"] = "–ì–æ–º–æ—Ç—Ä–æ–ª—å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102351] = {
					["source"] = "–ì–æ–º–æ—Ç—Ä–æ–ª—å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193796] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[294047] = {
					["source"] = "–î—É–∫–∏–≤—É–∫–∏",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51399] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[292361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
				},
				[268998] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207311] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[288091] = {
					["type"] = "DEBUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[195182] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[32908] = {
					["source"] = "–†–∞–∑—Ä—ã–≤–∞—Ç–µ–ª—å —Å–µ—Ä–¥–µ—Ü –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24071,
				},
				[17] = {
					["source"] = "–ë–ª–µ—Å—Ñ–∏—Å—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[77505] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1719] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[287790] = {
					["source"] = "–¢–µ–æ–Ω–∏–∫–æ—Ç–∏–∫",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32367] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–≥–æ–∑–ª–æ–±-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[60103] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[308742] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–û–ª–æ–ª–æ–ø—â–ø—â-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–°–∏—Ä—à–µ—Ä",
					["npcID"] = 0,
				},
				[192058] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[304612] = {
					["source"] = "–¢–∏–ª–Ω–∞—Ä–∏",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[53769] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–µ–¥–∏ –ê–ª–∏—Å—Ç—Ä–∞",
					["npcID"] = 29195,
				},
				[48778] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ–¥–∞—Ç-–ê–∑—É—Ä–µ–≥–æ—Å",
					["npcID"] = 0,
				},
				[269279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
				},
				[188290] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[292360] = {
					["source"] = "–ö–æ—Ç—è–≥–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8004] = {
					["source"] = "–ì–∞–º—É–ª—ã-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313088] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[295842] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268887] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[43931] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24083,
				},
				[55233] = {
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185736] = {
					["source"] = "–ö—Ä–µ–≤–µ—Ç—É–Ω—å–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269239] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[38621] = {
					["source"] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –ø—Ä–æ—Ç–æ–¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24082,
				},
				[244693] = {
					["npcID"] = 121975,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–≥–≥—Ä–∞–º–∞—Ä",
					["encounterID"] = 2063,
				},
				[194679] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[116014] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[42772] = {
					["source"] = "–°—Ç—Ä–∞—Ç–µ–≥ –∏–∑ –∫–ª–∞–Ω–∞ –£–∫—Ä–æ—Ç–∏—Ç–µ–ª–µ–π –¥—Ä–∞–∫–æ–Ω–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23956,
				},
				[12471] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–Ω–∏",
					["npcID"] = 29231,
				},
				[224126] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 100820,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[53365] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[43667] = {
					["encounterID"] = 2026,
					["source"] = "–ü—Ä–∏–Ω—Ü –ö–µ–ª–µ—Å–µ—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23953,
				},
				[50842] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[8042] = {
					["source"] = "–ó–∏–ø–ª–æ—Å-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193786] = {
					["npcID"] = 0,
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–ª—è–º",
					["encounterID"] = 2063,
				},
				[296003] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—ã—Ñ–æ",
					["npcID"] = 0,
				},
				[42730] = {
					["encounterID"] = 2025,
					["source"] = "–ò–Ω–≥–≤–∞—Ä –†–∞—Å—Ö–∏—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 23954,
				},
				[224127] = {
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 100820,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[50246] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[81340] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ—Ä–≥–∏–ª–∏–∞–Ω—Ç–µ—Ä-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[235313] = {
					["source"] = "–§–∞—Ä–æ—ç–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43650] = {
					["encounterID"] = 2024,
					["source"] = "–î–∞–ª—Ä–æ–Ω–Ω –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24201,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–£—Ä—É–∫—Å—É—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[160597] = {
					["source"] = "–ô—É–∫—Ü–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[202602] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268894] = {
					["source"] = "–õ—É—á–µ–∑–∞—Ä–∏–æ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[294966] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó—É–ª—Ç–∞–º–∏–Ω–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[32216] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–≤–∞–Ω—Å–æ–ª—è—Ä–∞-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[768] = {
					["source"] = "–ù–∞—á—É—Ä–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280776] = {
					["type"] = "BUFF",
					["source"] = "–†–µ–∑–µ—Ä–≤–∞—Ä",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
				[273947] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—É—Å–≤–∫–æ–Ω—É—Å",
					["npcID"] = 0,
				},
				[292463] = {
					["type"] = "BUFF",
					["source"] = "–≠–ª—è–º",
					["npcID"] = 0,
					["event"] = "SPELL_AURA_APPLIED",
					["encounterID"] = 2063,
				},
			},
			["extra_icon_height"] = 17,
			["castbar_target_font"] = "Accidental Presidency",
			["quick_hide"] = true,
			["extra_icon_anchor"] = {
				["y"] = 0,
			},
			["aura_stack_font"] = "Accidental Presidency",
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Unit - Important"] = 5,
				["Aura - Buff Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Explosion Affix M+"] = 3,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Color Change"] = 1,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["target_highlight_color"] = {
				0.9803921568627451, -- [1]
				1, -- [2]
				0.9294117647058824, -- [3]
			},
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 10,
			["extra_icon_wide_icon"] = false,
			["aura2_x_offset"] = 0,
			["number_region_first_run"] = true,
			["patch_version"] = 12,
			["cvar_default_cache"] = {
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateMaxAlpha"] = "0.85",
			},
			["resources"] = {
				["scale"] = 0.7999999523162842,
				["y_offset_target"] = 17.79999542236328,
				["y_offset_target_withauras"] = 36,
			},
			["cast_statusbar_color_interrupted"] = {
				nil, -- [1]
				0.05490196078431373, -- [2]
				0, -- [3]
			},
			["extra_icon_auras"] = {
				"–ú–µ–¥–ª–µ–Ω–Ω—ã–π —è–¥", -- [1]
			},
			["aura2_grow_direction"] = 1,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.001250863075256,
				},
			},
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["nameplateShowSelf"] = "0",
				["nameplateShowEnemyMinus"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplateMotionSpeed"] = "0.025",
				["nameplateGlobalScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateOtherTopInset"] = "0.08",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "0.4",
				["nameplateMinScale"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplatePersonalShowAlways"] = "1",
				["NamePlateVerticalScale"] = "1",
			},
			["hover_highlight_alpha"] = 0.5,
			["healthbar_framelevel"] = 0,
			["transparency_behavior_use_division"] = true,
			["aura_timer_text_font"] = "Accidental Presidency",
			["aura_frame2_anchor"] = {
				["y"] = -37.5,
				["side"] = 5,
			},
			["extra_icon_show_enrage"] = true,
			["health_selection_overlay_alpha"] = 0.2999999821186066,
			["aura_alpha"] = 1,
			["cast_statusbar_fadeout_time"] = 0.4999999701976776,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["aura_border_colors_by_type"] = true,
			["aura_grow_direction"] = 3,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator1",
		},
		["MyNewProfile"] = {
			["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1548349245,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 387,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1541263726,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Enabled"] = true,
					["Revision"] = 108,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["Name"] = "Aura - Invalidate Unit [Plater]",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1551467254,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 432,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["NpcNames"] = {
					},
					["Desc"] = "Add the buff name in the trigger box.",
					["Name"] = "Aura - Buff Alert [Plater]",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1548349245,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 399,
					["Author"] = "Bombad£o-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Very Important [Plater]",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1551466091,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 247,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Add the debuff name in the trigger box.",
					["Name"] = "Aura - Debuff Alert [Plater]",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1548349245,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 192,
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1550595071,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 197,
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Name"] = "Fixate [Plater]",
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["NpcNames"] = {
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1547158828,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 135,
					["Author"] = "Celian-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Desc"] = "Show the energy amount above the nameplate",
					["Name"] = "UnitPower [Plater]",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1548957216,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Enabled"] = true,
					["Revision"] = 162,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Important [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
					["Icon"] = 135996,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1551892410,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 581,
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
						72286, -- [38]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        \n        [288038] = \"Marked Target\", --marine jaina encounter on battle of dazar'alor\n        [282209] = \"Mark of Prey\", --ravenous stalker conclave encounter on battle of dazar'alor\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n146753: Kul Tiran Marine from jaina encounter on battle of dazar'alor\n144807: Ravenous Stalker conclave encounter on battle of dazar'alor\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1548105751,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        \n        [288038] = \"Marked Target\", --marine jaina encounter\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n146753: kul tiran marine from jaina encounter\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
						"146753", -- [10]
						"144807", -- [11]
					},
					["Enabled"] = true,
					["Revision"] = 208,
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
						"136461", -- [10]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Icon"] = 841383,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "Fixate On You [Plater]",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
					["Time"] = 1541606626,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
					["Icon"] = "INTERFACE\\ICONS\\Achievement_PVP_P_01",
					["Enabled"] = false,
					["Revision"] = 45,
					["Author"] = "Êäπ‰∫ÜÊ≤πÁöÑÂ§ßÂèî-ÁôΩÈì∂‰πãÊâã",
					["Desc"] = "NameplaterColor with Special Buff ID",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
					["SpellIds"] = {
						277242, -- [1]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Name"] = "NameplaterColor with Special Buff ID",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3 --increases the size of the healthBar\n    envTable.GlowAlpha = 0.45 --from zero to one, is the percent of transparency of the glowing border\n    envTable.ShowArrow = true --or 'false' to hide the arrow above the healthBar\n    envTable.ArrowAlpha = 0.45 --transparent of the arrow above the healthBar\n    envTable.HealthBarColor = \"orange\" --color of the healthBar\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1550589212,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3 --increases the size of the healthBar\n    envTable.GlowAlpha = 0.45 --from zero to one, is the percent of transparency of the glowing border\n    envTable.ShowArrow = true --or 'false' to hide the arrow above the healthBar\n    envTable.ArrowAlpha = 0.45 --transparent of the arrow above the healthBar\n    envTable.HealthBarColor = \"orange\" --color of the healthBar\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 335,
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["Icon"] = 2175503,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1548349253,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Enabled"] = true,
					["Revision"] = 67,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Icon"] = 135024,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Color Change [Plater]",
				}, -- [14]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1547158827,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Enabled"] = false,
					["Revision"] = 46,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1549120808,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 164,
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1550589160,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["NpcNames"] = {
						"surf darter", -- [1]
					},
					["Enabled"] = false,
					["Revision"] = 5,
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "New Script",
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1548957952,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["Icon"] = "INTERFACE\\ICONS\\Spell_Fire_FelFlameStrike",
					["Enabled"] = false,
					["Revision"] = 1382,
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						274569, -- [3]
						278020, -- [4]
						261635, -- [5]
						272700, -- [6]
						268030, -- [7]
						265368, -- [8]
						264520, -- [9]
						265407, -- [10]
						278567, -- [11]
						278602, -- [12]
						258128, -- [13]
						257791, -- [14]
						258938, -- [15]
						265089, -- [16]
						272183, -- [17]
						256060, -- [18]
						257397, -- [19]
						269972, -- [20]
						270901, -- [21]
						270492, -- [22]
						263215, -- [23]
						268797, -- [24]
						262554, -- [25]
						253517, -- [26]
						255041, -- [27]
						252781, -- [28]
						250368, -- [29]
						258777, -- [30]
						278504, -- [31]
						266106, -- [32]
						257732, -- [33]
						268309, -- [34]
						269302, -- [35]
						263202, -- [36]
						257784, -- [37]
						278755, -- [38]
						272180, -- [39]
						263066, -- [40]
						267273, -- [41]
						265912, -- [42]
						274438, -- [43]
						268317, -- [44]
						268375, -- [45]
						276767, -- [46]
						264105, -- [47]
						265876, -- [48]
						270464, -- [49]
						278961, -- [50]
						265468, -- [51]
						256897, -- [52]
						280604, -- [53]
						268702, -- [54]
						255824, -- [55]
						253583, -- [56]
						250096, -- [57]
						278456, -- [58]
						262092, -- [59]
						257270, -- [60]
						267818, -- [61]
						265091, -- [62]
						262540, -- [63]
						263318, -- [64]
						263959, -- [65]
						257069, -- [66]
						256849, -- [67]
						267459, -- [68]
						253544, -- [69]
						268008, -- [70]
						267981, -- [71]
						272659, -- [72]
						264396, -- [73]
						257736, -- [74]
						264390, -- [75]
						255952, -- [76]
						257426, -- [77]
						274400, -- [78]
						272609, -- [79]
						269843, -- [80]
						269029, -- [81]
						272827, -- [82]
						269266, -- [83]
						263912, -- [84]
						264923, -- [85]
						258864, -- [86]
						256955, -- [87]
						265540, -- [88]
						260793, -- [89]
						270003, -- [90]
						270507, -- [91]
						257337, -- [92]
						268415, -- [93]
						275907, -- [94]
						268865, -- [95]
						260669, -- [96]
						260280, -- [97]
						253239, -- [98]
						265541, -- [99]
						250258, -- [100]
						256709, -- [101]
						277596, -- [102]
						276268, -- [103]
						265372, -- [104]
						263905, -- [105]
						265781, -- [106]
						257170, -- [107]
						268846, -- [108]
						270514, -- [109]
						258622, -- [110]
						258199, -- [111]
						256627, -- [112]
						257870, -- [113]
						259711, -- [114]
						258917, -- [115]
						263891, -- [116]
						268027, -- [117]
						268348, -- [118]
						269313, -- [119]
						272711, -- [120]
						271174, -- [121]
						268260, -- [122]
						269399, -- [123]
						268239, -- [124]
						264574, -- [125]
						261563, -- [126]
						257288, -- [127]
						257757, -- [128]
						267899, -- [129]
						255741, -- [130]
						264757, -- [131]
						260894, -- [132]
						263365, -- [133]
						260292, -- [134]
						263583, -- [135]
						276292, -- [136]
						272874, -- [137]
						264101, -- [138]
						264407, -- [139]
						271456, -- [140]
						262515, -- [141]
						275192, -- [142]
						256405, -- [143]
						270084, -- [144]
						257785, -- [145]
						267237, -- [146]
						266951, -- [147]
						267433, -- [148]
						255577, -- [149]
						255371, -- [150]
						270891, -- [151]
						267357, -- [152]
						258338, -- [153]
						257169, -- [154]
						270927, -- [155]
						273995, -- [156]
						260926, -- [157]
						264027, -- [158]
						267257, -- [159]
						253721, -- [160]
						265019, -- [161]
						260924, -- [162]
						263309, -- [163]
						266206, -- [164]
						268187, -- [165]
						260067, -- [166]
						274507, -- [167]
						276068, -- [168]
						263278, -- [169]
						258317, -- [170]
						256594, -- [171]
						268391, -- [172]
						268230, -- [173]
						260852, -- [174]
						267763, -- [175]
						268706, -- [176]
						264734, -- [177]
						288693, -- [178]
						288694, -- [179]
						270590, -- [180]
						290787, -- [181]
						72286, -- [182]
					},
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
					["Name"] = "M+ Important Spells [Plater]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
					["Time"] = 1550596124,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 33,
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Alert when the unit has the Fire Shield to be broken.",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
					["SpellIds"] = {
						286425, -- [1]
					},
					["PlaterCore"] = 1,
					["Icon"] = 132221,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
					["Name"] = "Jadefire [BOD] - Fire Shield",
				}, -- [19]
				{
					["ConstructorCode"] = "\nfunction (self, unitId, unitFrame, envTable)\n    \n    self.Latent = self.Latent or Plater.CreateIconGlow (self)\n    envTable.Latent = self.Latent\nend\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Latent:Hide()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    for i = 1,40 do\n        local name,_ , count = UnitDebuff(unitId,i , \"player\")\n        \n        \n        if name == \"Latent Poison\" then\n            local Lat  = 10 \n            if count >= Lat  then\n                envTable.Latent:Show()\n            else\n                envTable.Latent:Hide()\n            end\n            break\n            end\n        end\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n",
					["Time"] = 1581190272,
					["Temp_ConstructorCode"] = "\nfunction (self, unitId, unitFrame, envTable)\n    \n    self.Latent = self.Latent or Plater.CreateIconGlow (self)\n    envTable.Latent = self.Latent\nend\n\n\n\n",
					["Icon"] = 1033905,
					["Enabled"] = true,
					["Revision"] = 320,
					["Author"] = "Ludw√¨g-Blackmoore",
					["Desc"] = "",
					["NpcNames"] = {
					},
					["Prio"] = 99,
					["SpellIds"] = {
						273286, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Latent Poison Glow",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.Latent:Hide()\nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    for i = 1,40 do\n        local name,_ , count = UnitDebuff(unitId,i , \"player\")\n        \n        \n        if name == \"Latent Poison\" then\n            local Lat  = 10 \n            if count >= Lat  then\n                envTable.Latent:Show()\n            else\n                envTable.Latent:Hide()\n            end\n            break\n            end\n        end\n    end\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n",
				}, -- [20]
			},
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = -49,
			["first_run3"] = true,
			["extra_icon_show_purge"] = true,
			["ui_parent_scale_tune"] = 1.059999942779541,
			["cast_statusbar_fadein_time"] = 0.0208119247108698,
			["indicator_raidmark_scale"] = 0.699999988079071,
			["cast_statusbar_spark_alpha"] = 0.7199999690055847,
			["healthbar_framelevel"] = 0,
			["aura2_y_offset"] = 3,
			["aura_timer_text_anchor"] = {
				["y"] = -7,
				["x"] = -1,
				["side"] = 1,
			},
			["castbar_framelevel"] = 0,
			["buffs_on_aura2"] = true,
			["plate_config"] = {
				["player"] = {
					["actorname_text_font"] = "Accidental Presidency",
					["percent_text_font"] = "Accidental Presidency",
					["spellpercent_text_font"] = "Accidental Presidency",
					["power_percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["big_actortitle_text_font"] = "Accidental Presidency",
					["click_through"] = true,
					["big_actorname_text_font"] = "Accidental Presidency",
					["power_percent_text_font"] = "Accidental Presidency",
					["level_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Accidental Presidency",
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["only_thename"] = true,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						120, -- [1]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["level_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						120, -- [1]
					},
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_outline"] = "NONE",
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_font"] = "Accidental Presidency",
					["actorname_text_font"] = "Accidental Presidency",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["all_names"] = true,
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_enabled"] = true,
					["spellpercent_text_size"] = 9,
					["level_text_alpha"] = 0.299999982118607,
					["percent_show_health"] = true,
					["big_actortitle_text_outline"] = "OUTLINE",
					["spellpercent_text_enabled"] = true,
					["health_incombat"] = {
						120, -- [1]
						12, -- [2]
					},
					["percent_text_font"] = "Accidental Presidency",
					["buff_frame_y_offset"] = 0,
					["quest_enabled"] = true,
					["percent_text_outline"] = "NONE",
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_size"] = 8,
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["spellname_text_size"] = 9,
					["health"] = {
						120, -- [1]
						12, -- [2]
					},
					["actorname_text_size"] = 11,
					["spellname_text_color"] = {
						0.952941176470588, -- [1]
						[3] = 0.992156862745098,
					},
					["spellname_text_font"] = "Accidental Presidency",
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_enabled"] = true,
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						120, -- [1]
						8, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["level_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["spellpercent_text_outline"] = "NONE",
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_font"] = "Accidental Presidency",
					["spellname_text_color"] = {
						0.952941176470588, -- [1]
						[3] = 0.992156862745098,
					},
					["only_names"] = false,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["actorname_text_size"] = 11,
					["big_actorname_text_font"] = "Accidental Presidency",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellpercent_text_enabled"] = true,
					["level_text_alpha"] = 0.299999982118607,
					["percent_text_font"] = "Accidental Presidency",
					["percent_text_size"] = 8,
					["percent_show_health"] = true,
					["percent_text_outline"] = "NONE",
					["actorname_text_font"] = "Accidental Presidency",
					["percent_text_enabled"] = true,
					["health_incombat"] = {
						nil, -- [1]
						12, -- [2]
					},
					["spellname_text_size"] = 9,
					["health"] = {
						120, -- [1]
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["percent_text_ooc"] = true,
					["spellname_text_font"] = "Accidental Presidency",
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_enabled"] = true,
				},
				["enemyplayer"] = {
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
					},
					["spellpercent_text_font"] = "Accidental Presidency",
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						120, -- [1]
						8, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["level_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["spellpercent_text_outline"] = "NONE",
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_font"] = "Accidental Presidency",
					["spellname_text_color"] = {
						0.952941176470588, -- [1]
						[3] = 0.992156862745098,
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
					},
					["mana_incombat"] = {
						120, -- [1]
						1, -- [2]
					},
					["big_actorname_text_font"] = "Accidental Presidency",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 0.299999982118607,
					["percent_text_size"] = 8,
					["actorname_text_spacing"] = 10,
					["percent_text_font"] = "Accidental Presidency",
					["mana"] = {
						120, -- [1]
						1, -- [2]
					},
					["percent_text_outline"] = "NONE",
					["quest_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["power_percent_text_font"] = "Accidental Presidency",
					["health_incombat"] = {
						nil, -- [1]
						12, -- [2]
					},
					["spellname_text_size"] = 9,
					["health"] = {
						120, -- [1]
					},
					["big_actorname_text_size"] = 10,
					["actorname_text_size"] = 11,
					["actorname_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Accidental Presidency",
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
				},
				["enemynpc"] = {
					["spellname_text_color"] = {
						0.952941176470588, -- [1]
						[3] = 0.992156862745098,
					},
					["spellpercent_text_font"] = "Accidental Presidency",
					["actorname_text_size"] = 12,
					["big_actortitle_text_font"] = "Accidental Presidency",
					["cast"] = {
						120, -- [1]
						8, -- [2]
					},
					["spellpercent_text_size"] = 9,
					["actorname_text_font"] = "Expressway",
					["level_text_alpha"] = 0.299999982118607,
					["actorname_text_spacing"] = 11,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = -3,
						["x"] = -1,
						["side"] = 1,
					},
					["spellpercent_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["percent_text_size"] = 8,
					["level_text_anchor"] = {
						["side"] = 5,
						["x"] = 1,
					},
					["percent_text_font"] = "Accidental Presidency",
					["spellname_text_font"] = "Homespun",
					["spellpercent_text_outline"] = "NONE",
					["cast_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["spellname_text_outline"] = "NONE",
					["big_actorname_text_font"] = "Accidental Presidency",
					["health_incombat"] = {
						129, -- [1]
						17, -- [2]
					},
					["spellname_text_size"] = 10,
					["health"] = {
						109, -- [1]
						14, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["percent_text_outline"] = "NONE",
					["percent_text_anchor"] = {
						["y"] = 1,
						["side"] = 3,
					},
					["level_text_font"] = "Accidental Presidency",
					["power_percent_text_font"] = "Accidental Presidency",
				},
			},
			["health_selection_overlay"] = "Armory",
			["aura_y_offset"] = 3,
			["extra_icon_width"] = 26.32524681091309,
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[280001] = true,
				},
				["debuff"] = {
					224991, -- [1]
					277950, -- [2]
				},
			},
			["hook_auto_imported"] = {
				["Execute Range"] = 1,
				["Targetting Alpha"] = 3,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Bwonsamdi Reaping"] = 1,
				["Attacking Specific Unit"] = 1,
				["Blockade Encounter"] = 1,
				["Jaina Encounter"] = 6,
				["Hide Neutral Units"] = 1,
				["Combo Points"] = 3,
				["Extra Border"] = 2,
				["Reorder Nameplate"] = 3,
				["Target Color"] = 3,
				["Aura Reorder"] = 1,
				["Monk Statue"] = 2,
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color_nointerrupt"] = {
				0.494117647058824, -- [1]
				0.498039215686275, -- [2]
				0.501960784313726, -- [3]
				0.96000000089407, -- [4]
			},
			["first_run2"] = true,
			["color_override_colors"] = {
				[3] = {
					nil, -- [1]
					0.2784313, -- [2]
					0.2078431, -- [3]
				},
				[4] = {
					1, -- [1]
					0.83921568627451, -- [2]
					0, -- [3]
				},
				[5] = {
					0.290196078431373, -- [1]
					1, -- [2]
					0.196078431372549, -- [3]
				},
			},
			["health_animation_time_dilatation"] = 2.869999885559082,
			["npc_cache"] = {
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[144286] = {
					"Asset Manager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
				},
				[130653] = {
					"Wanton Sapper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130334] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∑–æ—Ä–µ–Ω—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[146140] = {
					"–ú–µ–≥–∞–±—Ä–∞–∑", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139626] = {
					"Dredged Sailor", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134069] = {
					"Vol'zith the Whisperer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[136688] = {
					"–§–∞–Ω–∞—Ç–∏—á–Ω—ã–π –±—É—Ä–∏–ª—å—â–∏–∫", -- [1]
					"–ó–û–õ–û–¢–ê–Ø –ñ–ò–õ–ê!!!", -- [2]
				},
				[139818] = {
					"–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ö—Ä–∞–Ω—ã –î–∏—Ä–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135475] = {
					"Kula the Butcher", -- [1]
					"Kings' Rest", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[140777] = {
					"–°–∞–º–æ—Ü–≤–µ—Ç–Ω—ã–π –∏—Å–ø–æ–ª–∏–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129601] = {
					"–ì–∞—Ä–ø—É–Ω—â–∏–∫ –∏–∑ –±—Ä–∞—Ç—Å—Ç–≤–∞ –í–æ–ª–Ω–æ—Ä–µ–∑–æ–≤", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[140458] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[133943] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[147932] = {
					"–ü–æ—Ç—Ä–µ–≤–æ–∂–µ–Ω–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[44616] = {
					"–ú–µ—Ö–∞–Ω–∏–∑–º", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
				},
				[130400] = {
					"Irontide Crusher", -- [1]
					"Freehold", -- [2]
				},
				[145372] = {
					"–î–∏–∫–∞—è –ø—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –ª—É–Ω—ã", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126919] = {
					"Irontide Stormcaller", -- [1]
					"Freehold", -- [2]
				},
				[36296] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[145058] = {
					"–¢–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144293] = {
					"–ü–µ—Ä–µ—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Ö–æ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[130333] = {
					"–ü–ª–∞—Å—Ç–∏–Ω—á–∞—Ç—ã–π –≤–∞—Å–∏–ª–∏—Å–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140077] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-—Ç–æ–ø–æ—Ç—É–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[145060] = {
					"–ß—É–¥–æ–≤–∏—â–Ω—ã–π —Ç–µ–Ω–µ–ø–µ—Ä—ã–π –≤–æ—Ä–æ–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[26125] = {
					"Earthbender", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[144294] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –±–æ–µ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[137204] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140334] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∑—É–±–∞—á", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[147933] = {
					"–ì–µ–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140454] = {
					"–í–æ–∂–∞–∫ –ü–ª–µ—Ç–µ–Ω—ã–µ –ö–æ—Å—ã", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				[144231] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[144295] = {
					"–ú–µ—Ö–∞–≥–æ–Ω—Å–∫–∏–π –º–µ—Ö–∞–Ω–∏–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[137716] = {
					"Bottom Feeder", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[140335] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä–∏–∫—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[140457] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä–∞—è –∫–æ—Ä–æ–≤–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137458] = {
					"–ì–Ω–∏—é—â–∞—è —Å–ø–æ—Ä–∞", -- [1]
					"–ü–æ–¥–≥–Ω–∏–ª—å–µ", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[144296] = {
					"–¢–∞–Ω–∫-–ø–∞—É–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140336] = {
					"–¢–µ–º–Ω–æ—á–µ—à—É–π—á–∞—Ç—ã–π –∫—Ä—ã–ª–∞—Ç—ã–π –∑–º–µ–π", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[161408] = {
					"–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134063] = {
					"Brother Ironhull", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[137969] = {
					"Interment Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[138740] = {
					"Musashitake", -- [1]
					"The Underrot", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[145064] = {
					"–û–≥–æ–Ω–µ–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[132864] = {
					"–ú–æ–ª–æ–¥–æ–π –∫—Ä–µ–ø–∫–æ—Ä—É–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136250] = {
					"Hoodoo Hexer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[144298] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç II\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[128551] = {
					"Irontide Mastiff", -- [1]
					"Freehold", -- [2]
				},
				[132742] = {
					"–û–≥–Ω–µ—á–µ—à—É–π—á–∞—Ç—ã–π —Å–∫–∏—Ç–∞–ª–µ—Ü", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[142324] = {
					"–î–µ–ª—å—Ñ–∏–Ω-—Å–∏–Ω–µ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[151325] = {
					"–¢—Ä–µ–≤–æ–≥–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[128652] = {
					"Viq'Goth", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144299] = {
					"–ó–∞—â–∏—Ç–Ω–∏–∫ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[134828] = {
					"Aqualing", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[130404] = {
					"Vermin Trapper", -- [1]
					"Freehold", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146855] = {
					"–ê–∫–∏–Ω–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
				},
				[132741] = {
					"–û–≥–Ω–µ–Ω–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151649] = {
					"\"–û–±–æ—Ä–æ–Ω–æ–±–æ—Ç I\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[146863] = {
					"–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[152033] = {
					"–ù–µ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[144301] = {
					"–ñ–∏–≤—ã–µ –æ—Ç—Ö–æ–¥—ã", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[135231] = {
					"Spectral Brute", -- [1]
					"Kings' Rest", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140447] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[144944] = {
					"–ê–ª—á–Ω—ã–π –∫—Ä–æ–≤–æ—Å–æ—Å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[137473] = {
					"Guard Captain Atu", -- [1]
					"Kings' Rest", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[128649] = {
					"Sergeant Bainbridge", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134060] = {
					"Lord Stormsong", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[144303] = {
					"–°–¢–†–ê–ñ", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[134786] = {
					"–ü–µ—Å—á–∞–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[137405] = {
					"Gripping Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146859] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –∫–∞–º–Ω—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[162764] = {
					"–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[135234] = {
					"Diseased Mastiff", -- [1]
					"Waycrest Manor", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
				},
				[129640] = {
					"Snarling Dockhound", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[129372] = {
					"Blacktar Bomber", -- [1]
					"Siege of Boralus", -- [2]
				},
				[146860] = {
					"–ú–∞—Ä–æ–¥–µ—Ä –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[134788] = {
					"–ò–≥–ª–æ—Ö–≤–∞—Ç-—Ç–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[141495] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[146864] = {
					"–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∑–µ–º–ª–∏ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[144948] = {
					"–ö–æ–∂–µ–∫—Ä—ã–ª—ã–π –æ—Ö–æ—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[130024] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[150250] = {
					"–°—Ç—Ä–µ–ª–æ–∫ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[132745] = {
					"–õ–µ–¥–æ—á–µ—à—É–π—á–∞—Ç—ã–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[76946] = {
					"–†–∞–∑–ª–æ–º", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[128651] = {
					"Hadal Darkfathom", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135975] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[142199] = {
					"Alpine Hawk", -- [1]
					"Freehold", -- [2]
				},
				[146862] = {
					"–ü–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[147948] = {
					"–°–≥—É—Å—Ç–∏–≤—à–∏–π—Å—è –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
				},
				[133963] = {
					"Test Subject", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138495] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –∫–æ–º–∞–Ω–¥–∏—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138048] = {
					"Training Dummy", -- [1]
					"Waycrest Manor", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
				},
				[139011] = {
					"–î–∏–∫–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139007] = {
					"–î–∏–∫–∏–π —Ö–∏—â–Ω–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136005] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129227] = {
					"Azerokk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[129802] = {
					"Earthrager", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[138369] = {
					"Footbomb Hooligan", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[126832] = {
					"–ù–µ–±–µ—Å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω –ö—Ä–∞–≥–≥", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[138497] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π —á–µ—à—É–µ–∫–ª—è—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136006] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129547] = {
					"Blacktooth Knuckleduster", -- [1]
					"Freehold", -- [2]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134793] = {
					"–•—Ä–µ–±—Ç–æ—Å–≤–µ—Ç", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[138498] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[137029] = {
					"Ordnance Specialist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135049] = {
					"Dreadwing Raven", -- [1]
					"Waycrest Manor", -- [2]
				},
				[146866] = {
					"–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—å–¥–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[151657] = {
					"–ë–æ–º–±–æ—Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[138499] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–æ—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[144248] = {
					"–ì–ª–∞–≤–Ω—ã–π –º–∞—à–∏–Ω–∏—Å—Ç –ò—Å–∫—Ä–æ—Ç–æ—á–µ—Ü", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[146867] = {
					"–ó–∞–¥–∏—Ä–∞ –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –ó–ª—ã—Ö –¢—É–º–∞–Ω–æ–≤", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[136264] = {
					"Half-Finished Mummy", -- [1]
					"Kings' Rest", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[141566] = {
					"Scrimshaw Gutter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[151978] = {
					"–í–æ–¥–Ω—ã–π –¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[151659] = {
					"–†–∞–∫–µ—Ç–Ω—ã–π —Ç–∞–Ω–∫", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[139012] = {
					"–î–∏–∫–∏–π —Å—Ç—Ä–∞–∂", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140609] = {
					"–ñ–µ—Å—Ç–æ–∫–∏–π –º–∞–∫–æ", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135052] = {
					"Blight Toad", -- [1]
					"Waycrest Manor", -- [2]
				},
				[146869] = {
					"–ì—é—Ä—É–º –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161241] = {
					"–ú–∞–ª'—Ç–∏—Ä - –º–∞–≥ –ë–µ–∑–¥–Ω—ã", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136330] = {
					"Soul Thorns", -- [1]
					"Waycrest Manor", -- [2]
				},
				[140838] = {
					"–ó–ª–æ–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139013] = {
					"–ë–µ—à–µ–Ω—ã–π –ª—É–Ω–Ω—ã–π —Å–æ–≤—É—Ö", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[150249] = {
					"–î–µ–º–æ–Ω—Ç–∞–∂–Ω–∏—Ü–∞ –∏–∑ –±–∞–Ω–¥—ã –ü–æ—Ä—à–Ω–µ–≥–æ–ª–æ–≤—ã—Ö", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[130635] = {
					"Stonefury", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146870] = {
					"–ß–∞—Ä–æ–¥–µ–π–∫–∞ –û–Ω–∞–∑–∞–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139269] = {
					"Gloom Horror", -- [1]
					"Waycrest Manor", -- [2]
				},
				[135245] = {
					"Bilge Rat Demolisher", -- [1]
					"Siege of Boralus", -- [2]
				},
				[151579] = {
					"–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞—â–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[144249] = {
					"\"–û–º–µ–≥–∞-–∫—Ä—É—à–∏—Ç–µ–ª—å\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[139014] = {
					"–î–∏–∫–∏–π –ª—É–Ω–Ω—ã–π –∏—Å–∫–∞—Ç–µ–ª—å", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[145402] = {
					"–û–¥–∏—á–∞–≤—à–∞—è –±–µ–∑—É–º–∏—Ü–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161243] = {
					"–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131669] = {
					"Jagged Hound", -- [1]
					"Waycrest Manor", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[151773] = {
					"–°—Ç–æ—Ä–æ–∂–µ–≤–æ–π –±–æ—Ç –º–æ–¥–µ–ª–∏ \"–ü–ï–°\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[144246] = {
					"–ö–£-–î–ñ0", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134991] = {
					"Sandfury Stonefist", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[129231] = {
					"Rixxa Fluxflame", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146872] = {
					"–ò–∑–≥–æ–π –ö–∞—á–æ—Ç–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[161244] = {
					"–ö—Ä–æ–≤—å –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[134056] = {
					"Aqu'sirr", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[138507] = {
					"–í–æ–µ–≤–æ–¥–∞ –£–ª—å—Ç—Ä–∏—Å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[136100] = {
					"–£—Ç–æ–Ω—É–≤—à–∏–π –æ–±–∏—Ç–∞—Ç–µ–ª—å –≥–ª—É–±–∏–Ω", -- [1]
					"–°–≤—è—Ç–∏–ª–∏—â–µ –®—Ç–æ—Ä–º–æ–≤", -- [2]
				},
				[146873] = {
					"–£–±–∏–π—Å—Ç–≤–µ–Ω–Ω–∞—è –±—É—Ä—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[146874] = {
					"–ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –≤–µ—Ç—Ä–æ–≤ –ú–∞—Ä–∞–π—è", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[161437] = {
					"–í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–π —Å–∫–∞—Ä–∞–±–µ–π", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
				},
				[134993] = {
					"Mchimba the Embalmer", -- [1]
					"Kings' Rest", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
				},
				[137485] = {
					"Bloodsworn Agent", -- [1]
					"Kings' Rest", -- [2]
				},
				[132056] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[146876] = {
					"–ú–∞—á–∏—Ç—É –ñ–µ—Å—Ç–æ–∫–∏–π", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[161502] = {
					"–ì–æ–ª–æ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ø–ª–æ—Ç–∏", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[133463] = {
					"Venture Co. War Machine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
				},
				[134739] = {
					"Purification Construct", -- [1]
					"Kings' Rest", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[36272] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[139019] = {
					"–ò–≥–ª–æ–≥—Ä–∏–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138061] = {
					"Venture Co. Longshoreman", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[137614] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134612] = {
					"Grasping Tentacles", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[151028] = {
					"–¢–µ—Ä–Ω–æ–≤–∞—è –æ—Ö–æ—Ç–Ω–∏—Ü–∞ –ù–∏–¥–æ—Ä–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[416] = {
					"Jaknik", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[151029] = {
					"–¢–µ—Ä–Ω–æ–º–∞–Ω—Ç –¢—ç–π–≤–µ—Ä–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135971] = {
					"Faithless Conscript", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[136976] = {
					"T'zala", -- [1]
					"Kings' Rest", -- [2]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
				},
				[126423] = {
					"–ö–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[151476] = {
					"\"–í–∑—Ä—ã–≤–æ—Ç—Ä–æ–Ω –•-80\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[130575] = {
					"Wandering Axebeak", -- [1]
					"Atal'Dazar", -- [2]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
				},
				[144244] = {
					"\"–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π –ª—É–ø—Ü–µ–≤–∞—Ç–æ—Ä\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[151658] = {
					"–¢–∞–Ω–∫-–¥–æ–ª–≥–æ–Ω–æ–≥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[144232] = {
					"Rowdy Reveler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138063] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136083] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[1863] = {
					"Betrida", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[149555] = {
					"–ü–æ–≥–∞–Ω–∏—â–µ", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[140619] = {
					"–ë–µ—Ä–µ–≥–æ–≤–æ–π —è—Ä–¥–æ–∑—É–±", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135765] = {
					"Torrent Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[147965] = {
					"–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150254] = {
					"–£—Ç–∏–ª—å—Ö–∞—É–Ω–¥", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[161124] = {
					"–£—Ä–≥'—Ä–æ—Ç –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –ì–µ—Ä–æ–µ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[89] = {
					"–ò–Ω—Ñ–µ—Ä–Ω–∞–ª", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[144772] = {
					"–õ–µ–¥–∏ –¢–∞–º–∞–∫–∏–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134616] = {
					"Krolusk Pup", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[126023] = {
					"Harbor Saurid", -- [1]
					"The Underrot", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
				},
				[126928] = {
					"Irontide Corsair", -- [1]
					"Freehold", -- [2]
				},
				[135958] = {
					"–ú–∞–ª–∞—Ö–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[148797] = {
					"–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[135192] = {
					"Honored Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[134617] = {
					"Krolusk Hatchling", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[138514] = {
					"–ê—Ç–∏–æ–Ω–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133379] = {
					"Adderis", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[146116] = {
					"–ò–≥–ª–æ—Å–ø–∏–Ω-–¥–æ–±—ã—Ç—á–∏–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[147968] = {
					"–ê–∫—Ç–∏–≤–Ω—ã–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[147202] = {
					"–û–∂–∏–≤—à–∏–π –∞–∑–µ—Ä–∏—Ç–æ–≤—ã–π –æ—Å–∫–æ–ª—ã—à", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[137940] = {
					"Safety Shark", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[161510] = {
					"–†–∞–∑–¥–∏—Ä–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ", -- [1]
					"–ê—Ç–∞–ª'–î–∞–∑–∞—Ä", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150396] = {
					"–í–æ–∑–¥—É—à–Ω–æ–µ —Å—É–¥–Ω–æ R-21/X", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[126969] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
				},
				[151674] = {
					"–¢—É—Ö–ª–æ–º–µ—Ö-–ø—Ä—ã–≥—É–Ω–æ–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135258] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135322] = {
					"The Golden Serpent", -- [1]
					"Kings' Rest", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[141565] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144776] = {
					"–ê–π—Ä–∏–Ω –ë—ã—Å—Ç—Ä–æ–Ω–æ–≥–∞—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[150397] = {
					"–ö–æ—Ä–æ–ª—å –ú–µ—Ö–∞–≥–æ–Ω", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[147935] = {
					"–ê–∑–µ—Ä—Ü–≤–µ—Ç–æ–≤—ã–π –ø–æ–ª–∑—É–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[134173] = {
					"Animated Droplet", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[150142] = {
					"–•–ª–∞–º–æ–º–µ—Ç–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[146118] = {
					"–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136984] = {
					"Reban", -- [1]
					"Kings' Rest", -- [2]
				},
				[137487] = {
					"Skeletal Hunting Raptor", -- [1]
					"Kings' Rest", -- [2]
				},
				[140689] = {
					"–ü–æ–ª–∑—É–Ω-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[150143] = {
					"–ü–µ—Ä–µ–º–∞–ª—ã–≤–∞—Ç–µ–ª—å –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[151676] = {
					"–¢—É—Ö–ª–æ–º–µ—Ö-—Ö—É–ª–∏–≥–∞–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[146119] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Å–ø–∏–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135963] = {
					"–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –∑–µ–º–ª–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129208] = {
					"Dread Captain Lockwood", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140690] = {
					"–ì–∞–¥—é–∫–∞-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135761] = {
					"Thundering Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[134686] = {
					"Mature Krolusk", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[151613] = {
					"–ü—Ä–æ—Ç–∏–≤–æ–ø–µ—Ö–æ—Ç–Ω–∞—è –±–µ–ª–∫–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136347] = {
					"Tidesage Initiate", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[131812] = {
					"–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü", -- [1]
					"–£—Å–∞–¥—å–±–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤", -- [2]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[138247] = {
					"Irontide Marauder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[137625] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[132835] = {
					"–ó–º–µ—è-–ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134005] = {
					"Shalebiter", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[137626] = {
					"Demolishing Terror", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150146] = {
					"–®–∞–º–∞–Ω –∏–∑ –ø–ª–µ–º–µ–Ω–∏ –•–ª–∞–º–æ–µ–¥–æ–≤", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[136541] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[151679] = {
					"–¢—É—Ö–ª–æ–º–µ—Ö-–≥—Ä–æ—Ö–æ—Ç—É–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131431] = {
					"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[126429] = {
					"–¢–≤–µ—Ä–¥–æ–ø–∞–Ω—Ü–∏—Ä–Ω—ã–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π –∫—Ä–∞–±", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[138493] = {
					"Minion of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[140691] = {
					"–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ª—é—Ç–æ–∫–ª—ã–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[135903] = {
					"Manifestation of the Deep", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[139097] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[144782] = {
					"–ë—Ä–∞—Ç –ë—Ä—é–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[126845] = {
					"–ö–∞–ø–∏—Ç–∞–Ω –î–∂–æ–ª–ª–∏", -- [1]
					"–í–æ–ª—å–Ω–∞—è –ì–∞–≤–∞–Ω—å", -- [2]
				},
				[61245] = {
					"–¢–æ—Ç–µ–º –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[140631] = {
					"–°–∫–∞—Ç –Æ–∂–Ω—ã—Ö –º–æ—Ä–µ–π", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[136160] = {
					"King Dazar", -- [1]
					"Kings' Rest", -- [2]
				},
				[134691] = {
					"Static-charged Dervish", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
				},
				[134423] = {
					"Abyss Dweller", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[135562] = {
					"Venomous Ophidian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[140760] = {
					"–ó–µ–º–ª—è–Ω–æ–π –≤–µ–ª–∏–∫–∞–Ω", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
				},
				[138064] = {
					"Posh Vacationer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[137233] = {
					"Plague Toad", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[132713] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
				},
				[151812] = {
					"–î–µ—Ç–µ–∫—Ç–æ–±–æ—Ç", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[134789] = {
					"–û–≥—Ä–æ–º–Ω—ã–π –∏–≥–ª–æ—Ö–≤–∞—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[151027] = {
					"–¢–µ—Ä–Ω–æ–≤—ã–π —Å—Ç—Ä–∞–∂ –ë–∞—Ä—Ç–æ–Ω", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
				},
				[136483] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[145298] = {
					"–î–∏–∫–∏–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139017] = {
					"–ë—É–π–Ω–æ–≥—Ä–∏–≤", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[139805] = {
					"–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –≥–æ–Ω—á–∞—è", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[140038] = {
					"Abyssal Eel", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[138464] = {
					"Ashvane Deckhand", -- [1]
					"Siege of Boralus", -- [2]
				},
				[131408] = {
					"–î—É–±–æ–ª–æ–º –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[132051] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				[138501] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω—á–∏–∫", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[139806] = {
					"–í–∑—Ä—ã–≤–æ—Ç–µ—Ö–Ω–∏–∫ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[129371] = {
					"Riptide Shredder", -- [1]
					"Siege of Boralus", -- [2]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
				},
				[137989] = {
					"Embalming Fluid", -- [1]
					"Kings' Rest", -- [2]
				},
				[130489] = {
					"Dazarian Stalker", -- [1]
					"Freehold", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
				},
				[131311] = {
					"–ë—É—à—É—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[139807] = {
					"–ì–µ–æ–¥–µ–∑–∏—Å—Ç–∫–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[138500] = {
					"–°—É–º–µ—Ä–µ—á–Ω–∞—è —á–µ—à—É–π—á–∞—Ç–∞—è —Å–µ—Å—Ç—Ä–∞", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[36565] = {
					"–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä", -- [1]
					"–ö—Ä–µ–ø–æ—Å—Ç—å –¢–µ–º–Ω–æ–≥–æ –ö–ª—ã–∫–∞", -- [2]
				},
				[131407] = {
					"–ì—Ä–æ–º–∏–ª–∞ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[24207] = {
					"–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö", -- [1]
					"–£—â–µ–ª—å–µ –ü–µ—Å–Ω–∏ –í–æ–π–Ω—ã", -- [2]
				},
				[139808] = {
					"–î—É–±–æ–ª–æ–º –∏–∑ –¢–æ—Ä–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
				},
				[138496] = {
					"–°—É–º–µ—Ä–µ—á–Ω—ã–π –¥—Ä–∞–∫–æ–Ω–∞–∞—Ä", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[1860] = {
					"Graz'krast", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
				},
				[133384] = {
					"Merektha", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[142454] = {
					"Ashtail Bandicoon", -- [1]
					"Freehold", -- [2]
				},
				[132744] = {
					"–õ–µ–¥—è–Ω–∞—è –≥–∏–¥—Ä–∞", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[151690] = {
					"–£–≥–ª–µ–∑—É–±", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
				},
				[137474] = {
					"King Timalji", -- [1]
					"Kings' Rest", -- [2]
				},
				[136552] = {
					"Kao-Tien Marauder", -- [1]
					"Atal'Dazar", -- [2]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[132868] = {
					"–°–≥—É—Å—Ç–æ–∫ –∞–∑–µ—Ä–∏—Ç–∞", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[136297] = {
					"Forgotten Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[129373] = {
					"Dockhound Packmaster", -- [1]
					"Siege of Boralus", -- [2]
				},
				[125828] = {
					"Zetapally", -- [1]
					"Atal'Dazar", -- [2]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144300] = {
					"–ñ–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –ú–µ—Ö–∞–≥–æ–Ω–∞", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
				[145304] = {
					"–î–∏–∫–∏–π –¥—É—à–∏—Ç–µ–ª—å", -- [1]
					"Jorundall (Islands 7)", -- [2]
				},
				[138489] = {
					"Shadow of Zul", -- [1]
					"Kings' Rest", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[122986] = {
					"Wild Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[127106] = {
					"Irontide Officer", -- [1]
					"Freehold", -- [2]
				},
				[133935] = {
					"Animated Guardian", -- [1]
					"Kings' Rest", -- [2]
				},
				[129214] = {
					"Coin-Operated Crowd Pummeler", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[140455] = {
					"–ö–æ–ª—é—á–µ—à–∫—É—Ä—ã–π –±—ã—á–æ–∫", -- [1]
					"Snowblossom Village (Islands 3)", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133944] = {
					"Aspix", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[133361] = {
					"Wasting Servant", -- [1]
					"Waycrest Manor", -- [2]
				},
				[135472] = {
					"Zanazal the Wise", -- [1]
					"Kings' Rest", -- [2]
				},
				[139110] = {
					"Spark Channeler", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[140076] = {
					"–ö—Ä–µ–ø–∫–æ—Ä—É–∫-–≤–æ–∂–∞–∫", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[141282] = {
					"Kul Tiran Footman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[139813] = {
					"–°—Ç–∞—Ä—à–∏–π –ø—Ä–æ–¥—é—Å–µ—Ä –ì–∏–∫—Å–∏", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[135406] = {
					"Animated Gold", -- [1]
					"Kings' Rest", -- [2]
				},
				[135470] = {
					"Aka'ali the Conqueror", -- [1]
					"Kings' Rest", -- [2]
				},
				[149331] = {
					"–°–∏—è—é—â–∏–π –∞–∑–µ—Ä–∏—Ç", -- [1]
					"Verdant Wilds (Islands 8)", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[145185] = {
					"\"–ì–Ω–æ–º–æ–≥–µ–¥–¥-0–ù\"", -- [1]
					"–û–ø–µ—Ä–∞—Ü–∏—è \"–ú–µ—Ö–∞–≥–æ–Ω\"", -- [2]
				},
			},
			["cast_statusbar_spark_offset"] = -13,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator4",
			["health_selection_overlay_alpha"] = 0.3499999940395355,
			["aura_timer_text_font"] = "Accidental Presidency",
			["aura_grow_direction"] = 3,
			["minor_height_scale"] = 0.9999999403953552,
			["health_statusbar_bgtexture"] = "ElvUI Norm",
			["not_affecting_combat_alpha"] = 0.799999,
			["npc_colors"] = {
				[136005] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136006] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[132126] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137484] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[129227] = {
					false, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[138061] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[135258] = {
					false, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[131817] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[137716] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[128435] = {
					false, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[126928] = {
					false, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[138063] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"olivedrab", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"lightskyblue", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[138064] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
			},
			["cast_statusbar_texture"] = "ElvUI Norm",
			["ui_parent_buff_strata"] = "LOW",
			["aura2_x_offset"] = 48,
			["aura_height"] = 14,
			["cast_statusbar_spark_half"] = true,
			["aura_padding"] = 2,
			["cast_statusbar_bgtexture"] = "PlaterBackground",
			["news_frame"] = {
				["PlaterNewsFrame"] = {
					["scale"] = 1,
				},
			},
			["target_indicator"] = "NONE",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 274,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the color if a unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1551825291,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 95,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1553450458,
					["PlaterCore"] = 1,
					["Name"] = "Hide Neutral Units [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 1990989,
					["LastHookEdited"] = "Constructor",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 185,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1551825362,
					["PlaterCore"] = 1,
					["Name"] = "Players Targeting a Target [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 1966587,
					["LastHookEdited"] = "Constructor",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 190,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1551825317,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 135426,
					["Name"] = "Combo Points [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 192,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Author"] = "Tecno-Azralon",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1551825335,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 90,
					["HooksTemp"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
					},
					["Time"] = 1551825364,
					["PlaterCore"] = 1,
					["Name"] = "Reorder Nameplate [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 574574,
					["LastHookEdited"] = "Nameplate Added",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 107,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1551825317,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 139,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ahwa-Azralon",
					["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1551825289,
					["PlaterCore"] = 1,
					["Name"] = "Advanced Execute Range",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = 135358,
					["LastHookEdited"] = "Constructor",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 273,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
					},
					["Time"] = 1559665989,
					["PlaterCore"] = 1,
					["Name"] = "Aura Reorder [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["LastHookEdited"] = "Constructor",
				}, -- [10]
				{
					["Enabled"] = true,
					["Revision"] = 236,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
					},
					["Time"] = 1551894760,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2281, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
					["Name"] = "Jaina Encounter [Plater]",
				}, -- [11]
				{
					["Enabled"] = true,
					["Revision"] = 81,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1551887545,
					["PlaterCore"] = 1,
					["Name"] = "Stormwall Encounter [Plater]",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
							2280, -- [1]
							["Enabled"] = true,
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
					["LastHookEdited"] = "Constructor",
				}, -- [12]
				{
					["Enabled"] = false,
					["Revision"] = 58,
					["HooksTemp"] = {
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
					},
					["Author"] = "HerithÎgue-Proudmoore",
					["Desc"] = "Change the border of the focus target.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
					},
					["Name"] = "Focus Target Border",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1552962607,
					["Icon"] = 133006,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
				}, -- [13]
				{
					["Enabled"] = false,
					["Revision"] = 47,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
					},
					["Time"] = 1551825334,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [14]
				{
					["Enabled"] = true,
					["Revision"] = 55,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1579030189,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
							["Enabled"] = true,
							["party"] = true,
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
							[117] = true,
							["Enabled"] = true,
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 2446016,
					["Name"] = "M+ Bwonsamdi Reaping",
				}, -- [15]
				{
					["Enabled"] = false,
					["Revision"] = 35,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Show the name of the unit current target ",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
					},
					["Time"] = 1553450703,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 413580,
					["Name"] = "Cast Target",
				}, -- [16]
				{
					["Enabled"] = false,
					["Revision"] = 43,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Only show nameplates while in combat, see the constructor for more options.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Only in Combat",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1551825361,
					["Icon"] = 135473,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
				}, -- [17]
				{
					["Enabled"] = false,
					["Revision"] = 35,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add an exclamation icon on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Npc Colors Icon",
					["PlaterCore"] = 1,
					["Time"] = 1553450716,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\media\\exclamation_64",
					["LastHookEdited"] = "Constructor",
				}, -- [18]
				{
					["Enabled"] = false,
					["Revision"] = 68,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a color tag on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Npc Colors Tag",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\media\\radio_64",
					["Time"] = 1553450705,
				}, -- [19]
				{
					["Enabled"] = true,
					["Revision"] = 42,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Change the color of the aura timer by it's time left",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1579030177,
					["PlaterCore"] = 1,
					["Name"] = "Paint Aura Timers",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\Timer\\Challenges-Logo",
					["LastHookEdited"] = "Constructor",
				}, -- [20]
				{
					["Enabled"] = true,
					["Revision"] = 125,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Author"] = "????????-Illidan",
					["Desc"] = "Config aura borders",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Name"] = "Advanced Debuff Border",
					["PlaterCore"] = 1,
					["Time"] = 1553450719,
					["LastHookEdited"] = "Nameplate Updated",
					["Icon"] = 133006,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [21]
				{
					["Enabled"] = false,
					["Revision"] = 35,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Author"] = "÷rÔˆne-Kel'thuzad",
					["Desc"] = "Show yellow star for elite; Silver star for rares",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Name"] = "Rarity in the Name",
					["PlaterCore"] = 1,
					["Time"] = 1551825364,
					["LastHookEdited"] = "Constructor",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\star_full_64",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [22]
				{
					["Enabled"] = true,
					["Revision"] = 65,
					["HooksTemp"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
					},
					["Author"] = "Cyclopes-Turalyon",
					["Desc"] = "Add an icon to indicate an unit has Aggro on you. By default only show for units using a custom color from Npc Colors.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
					},
					["Prio"] = 99,
					["Name"] = "Aggro Indicator",
					["PlaterCore"] = 1,
					["Time"] = 1579030500,
					["LastHookEdited"] = "Constructor",
					["Icon"] = 132344,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [23]
				{
					["Enabled"] = false,
					["Revision"] = 20,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
					},
					["Time"] = 1551825316,
					["PlaterCore"] = 1,
					["Name"] = "Change All Fonts",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 134331,
					["LastHookEdited"] = "Constructor",
				}, -- [24]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the power bar for specific units",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Power Bar",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["Time"] = 1553450521,
					["Icon"] = 1375677,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
				}, -- [25]
				{
					["Enabled"] = true,
					["Revision"] = 131,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
					},
					["Prio"] = 99,
					["Time"] = 1579035896,
					["PlaterCore"] = 1,
					["Name"] = "Cast Icon Anchor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
					["LastHookEdited"] = "Constructor",
				}, -- [26]
				{
					["Enabled"] = true,
					["Revision"] = 62,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1579031533,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133004,
					["Name"] = "Cast Icon Border",
				}, -- [27]
				{
					["Enabled"] = true,
					["Revision"] = 85,
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1579035954,
					["PlaterCore"] = 1,
					["Name"] = "Cast Bar Border",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 133004,
					["LastHookEdited"] = "Constructor",
				}, -- [28]
				{
					["Enabled"] = true,
					["Revision"] = 42,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
					},
					["Author"] = "????????-Illidan",
					["Desc"] = "Debuff timer show decimal values",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
					},
					["Time"] = 1551894761,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 609811,
					["Name"] = "Decimal Debuff Timer",
				}, -- [29]
				{
					["Enabled"] = true,
					["Revision"] = 81,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \nend\n\n\n",
					},
					["Author"] = "?????-Illidan",
					["Desc"] = "Format Buff Special icons like the regular aura icons.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
					},
					["Name"] = "Buff Special Mod",
					["PlaterCore"] = 1,
					["Time"] = 1552962644,
					["LastHookEdited"] = "Nameplate Updated",
					["Icon"] = 136139,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
				}, -- [30]
				{
					["Enabled"] = true,
					["Revision"] = 29,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds two arrows into the target indicators options.",
					["Hooks"] = {
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
					},
					["Time"] = 1551887544,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Player Talent Update",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
					["Name"] = "Arrow Target Indicators",
				}, -- [31]
				{
					["Enabled"] = true,
					["Revision"] = 11,
					["HooksTemp"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Set the unit name to be above the target shading texture.",
					["Hooks"] = {
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Unit Name Over Target Shading",
					["PlaterCore"] = 1,
					["Time"] = 1551894756,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = 237377,
					["LastHookEdited"] = "Target Changed",
				}, -- [32]
				{
					["Enabled"] = true,
					["Revision"] = 22,
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Set the spark height to the same size of the cast bar.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Adjust Spark Size",
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "Cast Update",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\spark6",
					["Time"] = 1579035959,
				}, -- [33]
				{
					["Enabled"] = true,
					["Revision"] = 69,
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show power bar for some units.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1579030177,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Constructor",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "Interface/Addons/Plater/Media/fire_64",
					["Name"] = "Power Bar",
				}, -- [34]
				{
					["Enabled"] = true,
					["Revision"] = 103,
					["HooksTemp"] = {
						["Nameplate Updated"] = "\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.unitName:GetText()\n    \n    local  FirstName  = { [144747] = true, -- pakus-aspect\n        [144767]  = true, -- gonks-aspect\n        [144963]  = true, -- kimbuls-aspect \n        [144941] = true } -- akundas-aspect    \n    \n    \n    \n    \n    if (text) then\n        local  a ,b, c ,d ,e ,f=  strsplit(\" \",text,5)   \n        if not FirstName [unitFrame.namePlateNpcId] then \n            unitFrame.healthBar.unitName:SetText (f or e or d or c or b or a)  \n        else\n            unitFrame.healthBar.unitName:SetText (a) \n        end\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show Last Name only.",
					["Hooks"] = {
						["Nameplate Updated"] = "\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    local text = unitFrame.healthBar.unitName:GetText()\n    \n    local  FirstName  = { [144747] = true, -- pakus-aspect\n        [144767]  = true, -- gonks-aspect\n        [144963]  = true, -- kimbuls-aspect \n        [144941] = true } -- akundas-aspect    \n    \n    \n    \n    \n    if (text) then\n        local  a ,b, c ,d ,e ,f=  strsplit(\" \",text,5)   \n        if not FirstName [unitFrame.namePlateNpcId] then \n            unitFrame.healthBar.unitName:SetText (f or e or d or c or b or a)  \n        else\n            unitFrame.healthBar.unitName:SetText (a) \n        end\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1581164951,
					["PlaterCore"] = 1,
					["LastHookEdited"] = "Nameplate Updated",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Icon"] = 134331,
					["Name"] = "Last Name Only",
				}, -- [35]
			},
			["last_news_time"] = 1551553489,
			["cast_statusbar_color"] = {
				nil, -- [1]
				0.858823529411765, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["cast_statusbar_fadeout_time"] = 0.4899999797344208,
			["health_statusbar_texture"] = "ElvUI Norm",
			["indicator_raidmark_anchor"] = {
				["x"] = -40,
			},
			["castbar_target_text_size"] = 8,
			["target_shady_alpha"] = 0.5999999642372131,
			["use_health_animation"] = true,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1",
				["nameplateShowSelf"] = "0",
				["nameplateShowEnemyMinus"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.0959808826447",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateSelfTopInset"] = "0.5",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateResourceOnTarget"] = "0",
				["nameplateMotion"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["NamePlateHorizontalScale"] = "1.3999999761581",
				["nameplateOtherTopInset"] = "0.085",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["NamePlateVerticalScale"] = "2.7000000476837",
			},
			["aura_width"] = 22,
			["health_statusbar_bgcolor"] = {
				0.0431372, -- [1]
				0.0431372, -- [2]
				0.0431372, -- [3]
				1, -- [4]
			},
			["castbar_target_font"] = "Accidental Presidency",
			["target_highlight_height"] = 18,
			["update_throttle"] = 0.09999999403953552,
			["minor_width_scale"] = 0.9999999403953552,
			["login_counter"] = 76,
			["extra_icon_caster_name"] = false,
			["aura_cooldown_show_swipe"] = false,
			["pet_width_scale"] = 0.9999999403953552,
			["range_check_alpha"] = 0.5,
			["indicator_rare"] = false,
			["patch_version"] = 9,
			["ui_parent_cast_strata"] = "DIALOG",
			["extra_icon_auras_mine"] = {
				[224991] = true,
			},
			["target_highlight_color"] = {
				1, -- [1]
				0.5529411764705883, -- [2]
				0.6862745098039216, -- [3]
			},
			["aura_stack_font"] = "Accidental Presidency",
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Color Change"] = 1,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Aura - Blink Time Left"] = 1,
				["Explosion Affix M+"] = 3,
				["Unit Power"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Unit - Important"] = 5,
				["Blink by Time Left"] = 1,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["no_spellname_length_limit"] = true,
			["aura_timer_text_size"] = 10,
			["extra_icon_anchor"] = {
				["y"] = 0,
				["x"] = -2.670860290527344,
				["side"] = 2,
			},
			["extra_icon_show_timer"] = false,
			["captured_spells"] = {
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–∞–º—Å–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268278] = {
					["encounterID"] = 2116,
					["source"] = "–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131545,
				},
				[228128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[300761] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278767] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300762] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275699] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279793] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[45524] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272122] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2094] = {
					["encounterID"] = 2113,
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273657] = {
					["source"] = "–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139269,
				},
				[5215] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[273658] = {
					["source"] = "–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139269,
				},
				[207289] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260741] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131825,
				},
				[68607] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª",
					["npcID"] = 36296,
				},
				[68799] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π",
					["npcID"] = 36272,
				},
				[68927] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[308188] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[190411] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–∏–≥–±–æ—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[308189] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269571] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[264712] = {
					["encounterID"] = 2115,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[231843] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[271107] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314585] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[136] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[33697] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246807] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[110744] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[265741] = {
					["source"] = "–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135329,
				},
				[200389] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272903] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[215479] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[279810] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[214968] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[54861] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[184662] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313571] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313060] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[8936] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260365] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–Ø—â–µ—Ä —Å –†–µ—á–Ω—ã—Ö —Ç–æ–ø–µ–π",
					["npcID"] = 120587,
				},
				[279302] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[274443] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[289277] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268306] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç",
					["encounterID"] = 2116,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131545,
				},
				[260366] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–Ø—â–µ—Ä —Å –†–µ—á–Ω—ã—Ö —Ç–æ–ø–µ–π",
					["npcID"] = 120587,
				},
				[263959] = {
					["source"] = "–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131812,
				},
				[51505] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[263961] = {
					["source"] = "–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131812,
				},
				[286979] = {
					["type"] = "BUFF",
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[194384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[266008] = {
					["source"] = "–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134041,
				},
				[256148] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[42650] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256916] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–ª—å–Ω–æ–π —Å–∞—É—Ä–∏–¥",
					["npcID"] = 127000,
				},
				[266266] = {
					["encounterID"] = 2117,
					["source"] = "–ì–æ—Ä–∞–∫ –¢—É–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131864,
				},
				[185562] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[33763] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[199373] = {
					["source"] = "–í–æ–π—Å–∫–æ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 24207,
				},
				[260881] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–µ–π–∑—ç–ª",
					["npcID"] = 0,
				},
				[34914] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[261265] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131825,
				},
				[206151] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3355] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2115,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317420] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[301308] = {
					["encounterID"] = 2113,
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265759] = {
					["source"] = "–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135329,
				},
				[265760] = {
					["source"] = "–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 135329,
				},
				[185565] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265761] = {
					["source"] = "–ú–∞—Ç—Ä–æ–Ω–∞ –ë—Ä–∏–Ω–¥–ª",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 135329,
				},
				[106785] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[279572] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[253595] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256920] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–ª—å–Ω–æ–π —Å–∞—É—Ä–∏–¥",
					["npcID"] = 127000,
				},
				[119381] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü–∞–Ω–¥–¥–æ—Ä—É–º-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[292361] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏–≥–±–æ—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[300801] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278551] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131666,
				},
				[292362] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[185311] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[292363] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–±—Ä—É—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[264487] = {
					["encounterID"] = 2113,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[292364] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–æ—Ö—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[48438] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268836] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115546] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267558] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏–≥–±–æ—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[257946] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265002] = {
					["encounterID"] = 2115,
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131863,
				},
				[81340] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265770] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–≤–∏—Ö–Ω—É–≤—à–∏–π—Å—è –¥—É—Ö",
					["npcID"] = 135054,
				},
				[27576] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[108194] = {
					["encounterID"] = 2113,
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[300809] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[285976] = {
					["source"] = "–ö–µ–ª–ª–∏–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274979] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É–≥—Ç—É—Ç",
					["npcID"] = 128584,
				},
				[265005] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["encounterID"] = 2115,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131863,
				},
				[63560] = {
					["encounterID"] = 2113,
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[272678] = {
					["encounterID"] = 2113,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[45242] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[59628] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285979] = {
					["source"] = "–ü–∞—Ä–∞–±–æ–ª–∫–∞-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[137619] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[50613] = {
					["encounterID"] = 2113,
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115804] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ö–æ–ª—á–∞–Ω–æ–≤",
					["npcID"] = 129337,
				},
				[296211] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260508] = {
					["encounterID"] = 2114,
					["source"] = "–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131667,
				},
				[8921] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268080] = {
					["encounterID"] = 2113,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272940] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∏–Ω–æ–±–±–∏",
					["npcID"] = 0,
				},
				[266035] = {
					["source"] = "–í–µ–¥—å–º–∞-–ø–æ—Å–ª—É—à–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135474,
				},
				[278567] = {
					["source"] = "–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131858,
				},
				[205523] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[100780] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[116189] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318211] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313352] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264761] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288546] = {
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148797,
				},
				[191587] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303380] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[48792] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260512] = {
					["type"] = "BUFF",
					["source"] = "–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ",
					["encounterID"] = 2114,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131667,
				},
				[55090] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264764] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[293664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[85948] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[179057] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[11327] = {
					["type"] = "BUFF",
					["source"] = "–ò–º–±–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[18562] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318219] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[124503] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[275765] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267327] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[90361] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 110340,
				},
				[260900] = {
					["type"] = "DEBUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[294694] = {
					["source"] = "–®–∫—É–ª—å–¥–∞–º–∞–≥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314387] = {
					["source"] = "–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161408,
				},
				[289324] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[287790] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–æ—É–¥–∂–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[53365] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[105771] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[35079] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121308] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131666,
				},
				[318227] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1329] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1330] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[119582] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264265] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 110340,
				},
				[116705] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[245686] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193641] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[315161] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[32645] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124506] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[8690] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[271174] = {
					["source"] = "–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137830,
				},
				[273988] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[271175] = {
					["source"] = "–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137830,
				},
				[314397] = {
					["source"] = "–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161243,
				},
				[45182] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[208605] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[279362] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–ª—á–∞–Ω–æ–≤",
					["npcID"] = 129337,
				},
				[260907] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131824,
				},
				[273481] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[68946] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä",
					["npcID"] = 36565,
				},
				[315681] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[294966] = {
					["source"] = "–ú–∞–ª–∞—Å–∞—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[226510] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[61391] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[96312] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ï–∂–∏–∫–ª—é–¥–æ–µ–¥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[68947] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä",
					["npcID"] = 36565,
				},
				[34026] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[43265] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[348] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[264024] = {
					["source"] = "–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131812,
				},
				[226512] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[252215] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ä–æ–≤–∞–≤—ã–π —Å–µ–∫—Ç–∞–Ω—Ç",
					["npcID"] = 138274,
				},
				[204262] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ñ–æ–¥–∏–π—à–∞–º–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[315176] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[17253] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–ª—á–∞–Ω–æ–≤",
					["npcID"] = 129337,
				},
				[264027] = {
					["source"] = "–ò—Å–∫–∞–∑–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ –¥—É—à –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131812,
				},
				[703] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268887] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257971] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–∞–¥–∂–∏–∞—Ç–∞",
					["npcID"] = 126142,
				},
				[314411] = {
					["encounterID"] = 2117,
					["source"] = "–ú–∞–ª'—Ç–∏—Ä - –º–∞–≥ –ë–µ–∑–¥–Ω—ã",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161241,
				},
				[49020] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[2818] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[202602] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268122] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131825,
				},
				[268125] = {
					["encounterID"] = 2113,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268893] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[251836] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[296003] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ï–∂–∏–∫–ª—é–¥–æ–µ–¥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[290121] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ñ–æ–¥–∏–π—à–∞–º–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[55095] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[184575] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[16870] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31224] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264038] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131666,
				},
				[246851] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271711] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[180612] = {
					["type"] = "BUFF",
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268899] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264040] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[246852] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[210152] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–≥—É—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[290640] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1464] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[85256] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[302917] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[297035] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[121253] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[193530] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264556] = {
					["source"] = "–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131858,
				},
				[268904] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297037] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∞–æ—Ö—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[279902] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268905] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[740] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295248] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288343] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[297039] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313663] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[256958] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞—Ç–∞'–≤–æ—Ä—Å–∫–∏–π –∫–∞–Ω–Ω–∏–±–∞–ª",
					["npcID"] = 124688,
				},
				[115308] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[187650] = {
					["encounterID"] = 2115,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[120679] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[188290] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264050] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131666,
				},
				[288091] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[34477] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115181] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[255937] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[32216] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[298836] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[116844] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290141] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[255299] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–∞—Ç–∞'–≤–æ—Ä—Å–∫–∏–π –∫–∞–Ω–Ω–∏–±–∞–ª",
					["npcID"] = 124688,
				},
				[298837] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260926] = {
					["type"] = "DEBUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[236502] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ—Ñ–æ–¥–∏–π—à–∞–º–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[295258] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261438] = {
					["encounterID"] = 2116,
					["source"] = "–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131527,
				},
				[298839] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[132157] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[265337] = {
					["source"] = "–ó–∞–ø–∞—á–∫–∞–Ω–Ω—ã–π –∫—Ä–æ–≤—å—é –ø–æ—Ä–æ—Å–µ–Ω–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135048,
				},
				[261439] = {
					["encounterID"] = 2116,
					["source"] = "–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131527,
				},
				[298841] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[768] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261440] = {
					["encounterID"] = 2116,
					["source"] = "–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131527,
				},
				[20484] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[49184] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[196608] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[774] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[61684] = {
					["source"] = "–ú–µ—Ö–∞–Ω–∏–∑–º",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 44616,
				},
				[264831] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[281711] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[280177] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–≥—É—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[300893] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[275063] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É–≥—Ç—É—Ç",
					["npcID"] = 128584,
				},
				[157736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[116847] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[781] = {
					["encounterID"] = 2114,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[119085] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[291944] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[145205] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[317265] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260805] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[186254] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[217200] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[5277] = {
					["type"] = "BUFF",
					["source"] = "–ò–º–±–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267907] = {
					["encounterID"] = 2114,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298343] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109304] = {
					["encounterID"] = 2113,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260551] = {
					["encounterID"] = 2114,
					["source"] = "–û–∂–∏–≤–ª–µ–Ω–Ω—ã–π –≥–æ–ª–∏–∞—Ñ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131667,
				},
				[286835] = {
					["type"] = "BUFF",
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304482] = {
					["type"] = "DEBUFF",
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["encounterID"] = 2117,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312922] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[68704] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π",
					["npcID"] = 36272,
				},
				[312411] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[101568] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[261447] = {
					["encounterID"] = 2116,
					["source"] = "–õ–æ—Ä–¥ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131527,
				},
				[286581] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–º–±–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[100] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[186257] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1604] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–î—Ä–µ–≤–Ω–∏–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑",
					["npcID"] = 126723,
				},
				[186258] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19574] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[317020] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19750] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[48707] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[408] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[313445] = {
					["source"] = "–≠–Ω—Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —à–ø–∏–ª—å –ù–∏'–∞–ª–æ—Ç—ã",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161168,
				},
				[273294] = {
					["encounterID"] = 2113,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[112042] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 58960,
				},
				[294697] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278296] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–æ–Ω—è–≥–∞",
					["npcID"] = 0,
				},
				[221886] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267799] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57755] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[267798] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[265368] = {
					["source"] = "–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131587,
				},
				[1044] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[256851] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ü—Ä–æ–∫–ª—è—Ç–∞—è —Å–ª—É–∂–∏—Ç–µ–ª—å–Ω–∏—Ü–∞",
					["npcID"] = 126090,
				},
				[198222] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[198097] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[245389] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267330] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264091] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†—É–Ω–∏–º–∞—Ä–∞-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[268439] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267329] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115191] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[70243] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[265371] = {
					["source"] = "–ó–∞–∫–æ–ª–¥–æ–≤–∞–Ω–Ω—ã–π –∫–∞–ø–∏—Ç–∞–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131587,
				},
				[264694] = {
					["encounterID"] = 2115,
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131863,
				},
				[280205] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[118922] = {
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2114,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265372] = {
					["source"] = "–ü–æ—Ä–∞–±–æ—â–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞–∂–Ω–∏–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131585,
				},
				[115750] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[208772] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[242627] = {
					["source"] = "–¢—Ä–∞–π–Ω–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268854] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[272790] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268954] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[297034] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[163505] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115192] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268955] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[284277] = {
					["source"] = "–î–∂–∞—Ä–∞–¥–º–∞–π—è-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288548] = {
					["source"] = "–ß–∞—Ä–æ–¥–µ–π –≤–æ–π—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 148797,
				},
				[57724] = {
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[421] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[45181] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281744] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51714] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[281209] = {
					["source"] = "–î–∞—Ä–∫–≤–µ—Å—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271178] = {
					["source"] = "–ë–ª–µ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 137830,
				},
				[262308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—Ä–æ–ª–ª—å –∫—Ä–æ–≤–∏ - —Ä–∞—Å—Å–µ–∫–∞—Ç–µ–ª—å",
					["npcID"] = 134869,
				},
				[207317] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[268271] = {
					["encounterID"] = 2116,
					["source"] = "–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131545,
				},
				[266225] = {
					["encounterID"] = 2117,
					["source"] = "–ì–æ—Ä–∞–∫ –¢—É–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131864,
				},
				[292463] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–Ω–∏–Ω–∑–∞–º–∏—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[279956] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–†–∞–π–∫–∏—Ä–æ",
					["npcID"] = 0,
				},
				[231390] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†—É–Ω–∏–º–∞—Ä–∞-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[314483] = {
					["source"] = "–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161243,
				},
				[267325] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–∫—Å–∞–∏–ª–ª–∏—Ä–∏—è-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[203277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–≥—É—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[68641] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª",
					["npcID"] = 36296,
				},
				[102342] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2379] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285472] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[2383] = {
					["source"] = "–î–∞—Ä–∫–≤–µ—Å—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[3408] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[285981] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–µ—á–ª–∞–≤",
					["npcID"] = 0,
				},
				[298703] = {
					["source"] = "–ù–µ—Ñ–∏–¥–∞-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[124273] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[275043] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É–≥—Ç—É—Ç",
					["npcID"] = 128584,
				},
				[6788] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[294027] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[118455] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[264105] = {
					["source"] = "–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131818,
				},
				[303731] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∏–ª—É—Ä–µ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[288146] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ó–∞–∫–∏–ª—è–æ-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[275103] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í—É–≥—Ç—É—Ç",
					["npcID"] = 128584,
				},
				[251839] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–∞–Ω—Ç–∞—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[259161] = {
					["source"] = "–ú–∞–ª–∞—Å–∞—Ä–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[88423] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[20271] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[294935] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–±–±–∏–≥–∞–π–ª—å",
					["npcID"] = 0,
				},
				[260696] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131823,
				},
				[1725] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[113746] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[260057] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ì–æ–Ω–∫–∞",
					["npcID"] = 131809,
				},
				[313643] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[295310] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5308] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[278431] = {
					["source"] = "–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134024,
				},
				[260697] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131825,
				},
				[289362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ú–µ—Ñ–æ–¥–∏–π—à–∞–º–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[257951] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–∞–¥–∂–∏–∞—Ç–∞",
					["npcID"] = 126142,
				},
				[264110] = {
					["source"] = "–ú–µ—á–µ–Ω–∞—è —Å–µ—Å—Ç—Ä–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131818,
				},
				[116858] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[68841] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –§—Ä–∞–π",
					["npcID"] = 36272,
				},
				[268088] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131823,
				},
				[260698] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131824,
				},
				[124275] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51460] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[43308] = {
					["source"] = "–ö–µ–ª–ª–∏–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[257970] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–∞–¥–∂–∏–∞—Ç–∞",
					["npcID"] = 126142,
				},
				[265391] = {
					["source"] = "–†–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—å –±–∞–Ω–∫–µ—Ç–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131586,
				},
				[52437] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[47528] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[261264] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[260699] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131824,
				},
				[203539] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[35395] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[24858] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–±—Ä—É—Ö-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[77762] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[281178] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[299664] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[198069] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[102793] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[85288] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[275113] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í—É–≥—Ç—É—Ç",
					["npcID"] = 128584,
				},
				[16827] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 110340,
				},
				[297108] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[157982] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297162] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[313923] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260701] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ë—Ä–∞–π–∞—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131825,
				},
				[273836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[17962] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[272276] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[204263] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[203538] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[101643] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[57934] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[589] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[23881] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[267685] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[281000] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[300693] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[232698] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[210320] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–π–∑–∏—Ä–æ–Ω-–ì–æ–ª–¥—Ä–∏–Ω–Ω",
					["npcID"] = 0,
				},
				[585] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[260703] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131823,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[118779] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[184362] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[264378] = {
					["source"] = "–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131819,
				},
				[126664] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[188838] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[265364] = {
					["source"] = "–ß—É–º–Ω–∞—è –∂–∞–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135052,
				},
				[53385] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[47540] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[24394] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 110340,
				},
				[201754] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 110340,
				},
				[266258] = {
					["encounterID"] = 2117,
					["source"] = "Drust Slaver Summoning Portal",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 133435,
				},
				[130736] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[319919] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–∞–≤–æ–∫–∞–º–∏-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[262316] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–¢—Ä–æ–ª–ª—å –∫—Ä–æ–≤–∏ - —Ä–∞—Å—Å–µ–∫–∞—Ç–µ–ª—å",
					["npcID"] = 134869,
				},
				[90328] = {
					["source"] = "–ú–∏–æ–Ω–∏–∫—Å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 110340,
				},
				[68589] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –•–∞–º–º–µ–ª",
					["npcID"] = 36296,
				},
				[48265] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[281517] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[120954] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[154953] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[19577] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115008] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[115072] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162243] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[114250] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[125439] = {
					["encounterID"] = 2113,
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264384] = {
					["source"] = "–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131819,
				},
				[65081] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[49576] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[295842] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164545] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—É–≥–µ–Ω",
					["npcID"] = 0,
				},
				[316814] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª—å–≥—É—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[265410] = {
					["source"] = "–ì—É–ª—è–∫–∞ –∏–∑ –¥–æ–º–∞ –£—ç–π–∫—Ä–µ—Å—Ç–æ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131847,
				},
				[155722] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[196770] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[275895] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[79140] = {
					["encounterID"] = 2113,
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[198817] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[298146] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[207640] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1822] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260069] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ì–æ–Ω–∫–∞",
					["npcID"] = 131809,
				},
				[91800] = {
					["source"] = "–¢—Ä—É–ø–æ–ø–æ–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 26125,
				},
				[260070] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–µ—Ü –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[1833] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[127797] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164547] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—É–≥–µ–Ω",
					["npcID"] = 0,
				},
				[266181] = {
					["encounterID"] = 2117,
					["source"] = "–ì–æ—Ä–∞–∫ –¢—É–ª",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131864,
				},
				[307128] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[51271] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[297126] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2641] = {
					["encounterID"] = 2113,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2643] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[2645] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–µ–π–∑—ç–ª",
					["npcID"] = 0,
				},
				[206491] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[2649] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ö–æ–ª—á–∞–Ω–æ–≤",
					["npcID"] = 129337,
				},
				[183218] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[148564] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[258920] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[921] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[123725] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199203] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[281404] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–º–∏—á–∏–ª—å",
					["npcID"] = 0,
				},
				[295339] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[277181] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[24331] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ë–æ–ª—å–Ω–æ–π —Å–∞—É—Ä–∏–¥",
					["npcID"] = 126689,
				},
				[7384] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[316823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[1850] = {
					["type"] = "BUFF",
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["encounterID"] = 2114,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[147362] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[111400] = {
					["source"] = "–ö–µ–ª–ª–∏–∏–π-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[267824] = {
					["source"] = "–°—É–±—Å—Ç–∞–Ω—Ü–∏—è –¥—É—à–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135240,
				},
				[115203] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264140] = {
					["source"] = "–®–∏–ø–∞—Å—Ç–∞—è –≥–æ–Ω—á–∞—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131669,
				},
				[1856] = {
					["encounterID"] = 2113,
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[257260] = {
					["source"] = "–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131858,
				},
				[265931] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[3716] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 1860,
				},
				[105421] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[316826] = {
					["source"] = "–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 162764,
				},
				[277185] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268234] = {
					["encounterID"] = 2115,
					["source"] = "–ñ–µ–ª—á–Ω—ã–π —Å–ª–∏–∑–Ω—é—á–µ–Ω—ã—à",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 136541,
				},
				[268077] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[271115] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[303017] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[274373] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[304056] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264655] = {
					["source"] = "–ó–∞—Ä–∞–∂–µ–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç—å—è–Ω–∏–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134041,
				},
				[29166] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–∞—Å—Ç–∞—Å–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[273264] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[2908] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[227723] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164815] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[212040] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[1079] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[102417] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—É–≥–µ–Ω",
					["npcID"] = 0,
				},
				[124274] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[93402] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[263891] = {
					["source"] = "–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131670,
				},
				[108238] = {
					["encounterID"] = 2113,
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[47541] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[262577] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä–µ–≤–Ω–∏–π —Ö—Ä—É—Å—Ç–æ–≥—Ä—ã–∑",
					["npcID"] = 126723,
				},
				[289467] = {
					["type"] = "BUFF",
					["source"] = "–ò–º–±–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[165961] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ï–∂–∏–∫–ª—é–¥–æ–µ–¥-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[314531] = {
					["source"] = "–ì–æ–ª–æ–¥–Ω—ã–π –ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å –ø–ª–æ—Ç–∏",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161502,
				},
				[247677] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[2580] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[152279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[84963] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö–æ—Å—Ç–µ–∏–ª–ª",
					["npcID"] = 0,
				},
				[193455] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264150] = {
					["source"] = "–®–∏–ø–∞—Å—Ç—ã–π —Å—Ç—Ä–∞–∂",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131858,
				},
				[261446] = {
					["encounterID"] = 2116,
					["source"] = "–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131545,
				},
				[316835] = {
					["source"] = "–ò—Å–∫–∞–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä–æ—Å—Ç–æ–∫",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 162764,
				},
				[266198] = {
					["encounterID"] = 2117,
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[203814] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[115078] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[195630] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[164812] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[278474] = {
					["source"] = "–ó–∞–∫–ª–∏–Ω–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —à–∏–ø–æ–≤ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131666,
				},
				[186265] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[5176] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[194310] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264153] = {
					["source"] = "–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134024,
				},
				[36554] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[288158] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[310690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[117828] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[196782] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[193456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[263899] = {
					["source"] = "–ü—Ä—è–¥–∏–ª—å—â–∏—Ü–∞ –ª–æ–∑ –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131670,
				},
				[275054] = {
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[280773] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[264667] = {
					["type"] = "BUFF",
					["source"] = "–†–∞–∑–ª–æ–º",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 76946,
				},
				[264923] = {
					["encounterID"] = 2115,
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131863,
				},
				[280772] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[280780] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–æ–±–æ—à-–†–∞–∑—É–≤–∏–π",
					["npcID"] = 0,
				},
				[281036] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[240447] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–û—Ä–∫–¥–∞–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2823] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–¥—Å–∫–∏–π–∫—Ä–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[22568] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[273653] = {
					["source"] = "–°—É–º—Ä–∞—á–Ω—ã–π —É–∂–∞—Å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 139269,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[261266] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131823,
				},
				[5221] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[318378] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268877] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295343] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[22812] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300714] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[199854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[298431] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[263905] = {
					["source"] = "–ü–ª–µ—Ç–µ–ª—å—â–∏—Ü–∞ —Ä—É–Ω –∏–∑ –∫–æ–≤–µ–Ω–∞ –ú–µ—Ä—Ç–≤—ã—Ö –°–µ—Ä–¥–µ—Ü",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131677,
				},
				[77575] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[215711] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[109128] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[24870] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–∏–∫—Å–∞–∏–ª–ª–∏—Ä–∏—è-–¢–∫–∞—á–°–º–µ—Ä—Ç–∏",
					["npcID"] = 0,
				},
				[1943] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264390] = {
					["source"] = "–†—É–Ω–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª—É—à–Ω–∏—Ü–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131685,
				},
				[278456] = {
					["source"] = "–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 134024,
				},
				[260923] = {
					["type"] = "BUFF",
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131824,
				},
				[184367] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[264387] = {
					["source"] = "–ü—Ä–æ—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ –∏–∑ –∫–æ–≤–µ–Ω–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131819,
				},
				[260852] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –°–æ–ª–µ–Ω–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131824,
				},
				[264931] = {
					["encounterID"] = 2115,
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131863,
				},
				[269279] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[268898] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[297412] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[15407] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[116670] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[290819] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–õ–æ–Ω–≥—á–∏–∫–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[295367] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271071] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[269239] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[186401] = {
					["source"] = "–ö—Ä–æ–Ω–º–µ—Ä-–¢–µ—Ä–º–æ—à—Ç–µ–ø—Å–µ–ª—å",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295368] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[127230] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú—Å—Ç–∏–∫—É—Å—å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[303041] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[278444] = {
					["source"] = "–ü—Ä–æ–∂–æ—Ä–ª–∏–≤–∞—è –ª–∏—á–∏–Ω–∫–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 134024,
				},
				[197277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[1966] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[298197] = {
					["source"] = "–ë–ª–∞–¥–¥—Ñ–æ–ª–µ–Ω",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[203233] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["npcID"] = 0,
				},
				[192106] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
					["npcID"] = 0,
				},
				[285496] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[160029] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[300691] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[51723] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[260569] = {
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[1766] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[34428] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä–≥—Ä–æ–Ω–¥-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[883] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[162264] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[260700] = {
					["encounterID"] = 2113,
					["source"] = "–°–µ—Å—Ç—Ä–∞ –ú–∞–ª–∞–¥–∏—è",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131823,
				},
				[279204] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[295373] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[267560] = {
					["source"] = "–≠–∑–µ–¥—Ä–∞–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[318391] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–í–µ–ª–∏–∫–∏–π –ø–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —á–µ—Ä–≤—å",
					["npcID"] = 152550,
				},
				[198837] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–í–æ—Å—Å—Ç–∞–≤—à–∏–π —Ç–∏—Ö–æ—Å—Ç—É–ø",
					["npcID"] = 99541,
				},
				[255366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–¢—Ä–æ–ª–ª—å –∫—Ä–æ–≤–∏ - –ª–æ–≤—á–∏–π",
					["npcID"] = 134868,
				},
				[3409] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[31884] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[271590] = {
					["type"] = "BUFF",
					["source"] = "–õ–µ–¥–∏ –£—ç–π–∫—Ä–µ—Å—Ç",
					["encounterID"] = 2116,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 131545,
				},
				[268202] = {
					["encounterID"] = 2117,
					["source"] = "–ú–µ—á–µ–Ω–Ω—ã–π —Å–º–µ—Ä—Ç—å—é –ø–æ—Ä–∞–±–æ—Ç–∏—Ç–µ–ª—å",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135552,
				},
				[298700] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†—É–Ω–∏–º–∞—Ä–∞-–ë–æ—Ä–µ–π—Å–∫–∞—è—Ç—É–Ω–¥—Ä–∞",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ì–µ–ª–ª–æ–∫—Å-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[287062] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í—Å–µ–ª–µ–Ω–Ω—Å–∫–∞—è-–í–µ—á–Ω–∞—è–ü–µ—Å–Ω—è",
					["npcID"] = 0,
				},
				[314392] = {
					["source"] = "–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞—Ä–æ—Å—Ç",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161408,
				},
				[246152] = {
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[265352] = {
					["source"] = "–ß—É–º–Ω–∞—è –∂–∞–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 135052,
				},
				[290337] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–æ–Ω—è–≥–∞",
					["npcID"] = 0,
				},
				[318187] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ü–æ–¥–∫–æ–≤—ã—Ä—è—Ç–æ—Ä-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[223819] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–µ–ø–∞–≤–º—Å",
					["npcID"] = 0,
				},
				[260567] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ò–∑–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω–∏—Ü–∞ —Ç–æ—Ç–µ–º–æ–≤ –î–∂–∞—à'–≥–∞",
					["npcID"] = 126056,
				},
				[297168] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[295378] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[47536] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–æ—Ä—á–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[47568] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[2983] = {
					["source"] = "–ò–º–±–∞",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[264689] = {
					["type"] = "DEBUFF",
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["encounterID"] = 2113,
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[200166] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[59052] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[268086] = {
					["encounterID"] = 2113,
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[190784] = {
					["source"] = "–ì–æ—Ä–Ω–æ–ª–∞–ø-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[83244] = {
					["encounterID"] = 2113,
					["source"] = "–ò–¥–æ–ª–º–∞—Å—Ç–µ—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[81262] = {
					["source"] = "–ü–µ—Ä–∏–æ–¥ —Ü–≤–µ—Ç–µ–Ω–∏—è",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 47649,
				},
				[270657] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314478] = {
					["source"] = "–°–∞–º'—Ä–µ–∫ –ü—Ä–∏–∑—ã–≤–∞—Ç–µ–ª—å –•–∞–æ—Å–∞",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161243,
				},
				[49966] = {
					["encounterID"] = 2113,
					["source"] = "–†–∞–∑–ª–æ–º",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 76946,
				},
				[49998] = {
					["source"] = "–õ–æ—Ä–¥—Å–∞–π—Ä",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[68948] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–ø—Ç–µ–∫–∞—Ä—å –ë–∞–∫—Å—Ç–µ—Ä",
					["npcID"] = 36565,
				},
				[783] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê—Ä—á–∏–Ω–∞—Ä–¥-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[256456] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–∞–π–∫–∏—Ä–æ",
					["npcID"] = 0,
				},
				[314308] = {
					["source"] = "–£—Ä–≥'—Ä–æ—Ç –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –ì–µ—Ä–æ–µ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161124,
				},
				[245388] = {
					["source"] = "–ò–º–±–∞",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 0,
				},
				[264693] = {
					["encounterID"] = 2115,
					["source"] = "–†–∞–∞–ª –ü—Ä–æ–∂–æ—Ä–ª–∏–≤—ã–π",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 131863,
				},
				[318216] = {
					["source"] = "–¢—Ä–∞–ª–∏–Ω–Ω—ã–π",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[314309] = {
					["source"] = "–£—Ä–≥'—Ä–æ—Ç –°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å –ì–µ—Ä–æ–µ–≤",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161124,
				},
				[314565] = {
					["source"] = "–ö—Ä–æ–≤—å –ó–∞—Ä–∞–∑–∏—Ç–µ–ª—è",
					["type"] = "DEBUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 161244,
				},
				[295384] = {
					["source"] = "–ê–ª–∞—Ç—Ä–∏—Å–¥—Ä—É",
					["type"] = "BUFF",
					["event"] = "SPELL_AURA_APPLIED",
					["npcID"] = 0,
				},
				[40120] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–æ—Ä–¥–∂–∞–¥–∏",
					["npcID"] = 0,
				},
				[303953] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[212653] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–∏—á–∏–ª—å",
					["npcID"] = 0,
				},
				[198013] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[314592] = {
					["source"] = "–†–∞–∑–¥–∏—Ä–∞—é—â–µ–µ —Ä–∞–∑—É–º —â—É–ø–∞–ª—å—Ü–µ",
					["event"] = "SPELL_CAST_SUCCESS",
					["npcID"] = 161510,
				},
				[29722] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–§–ª–æ–æ–∫–∏–∏",
					["npcID"] = 0,
				},
				[258883] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[85739] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–•–æ–¥–∏—Ä–∞–Ω",
					["npcID"] = 0,
				},
				[201427] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–ê–Ω–≥–µ–ª–º–µ—Ä—Å–∏-–ö–æ—Ä–æ–ª—å–ª–∏—á",
					["npcID"] = 0,
				},
				[51124] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–Ω—Ç–∏–¥–∫",
					["npcID"] = 0,
				},
				[68934] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "[DND] Valentine Boss - Vial Bunny",
					["npcID"] = 36530,
				},
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
			},
			["number_region_first_run"] = true,
			["quick_hide"] = true,
			["castbar_target_anchor"] = {
				["side"] = 11,
			},
			["resources"] = {
				["scale"] = 0.7999999523162842,
				["y_offset"] = 1,
				["y_offset_target"] = 9,
			},
			["click_space"] = {
				115, -- [1]
			},
			["extra_icon_auras"] = {
				277242, -- [1]
			},
			["aura2_grow_direction"] = 1,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["castbar_target_outline"] = "NONE",
			["target_highlight_alpha"] = 1,
			["tank"] = {
				["colors"] = {
					["pulling"] = {
						nil, -- [1]
						0.913725490196078, -- [2]
						0.996078431372549, -- [3]
						1, -- [4]
					},
				},
			},
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						nil, -- [1]
						0.0470588235294118, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["pulling"] = {
						nil, -- [1]
						0.96078431372549, -- [2]
						0.952941176470588, -- [3]
						1, -- [4]
					},
				},
			},
			["hover_highlight_alpha"] = 0.2999999821186066,
			["aura_consolidate"] = true,
			["extra_icon_show_enrage"] = true,
			["aura_cooldown_reverse"] = false,
			["aura_alpha"] = 0.8499999642372131,
			["debuff_show_cc_border"] = {
				0.3019607843137255, -- [1]
			},
			["extra_icon_height"] = 26.32530403137207,
			["cast_statusbar_bgcolor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.79781, -- [4]
			},
			["cast_statusbar_spark_width"] = 25,
			["cast_statusbar_spark_color"] = {
				0.988235294117647, -- [1]
				[3] = 0.941176470588235,
			},
		},
		["Hunter"] = {
			["captured_spells"] = {
				[195072] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[21562] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[319237] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–æ–ª–Ω–∞–∫—Ä–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2823] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[280398] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[269279] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ—á–∏–∫–ø–æ—Ç–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268854] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–∑–º–æ–Ω–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[781] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[227723] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[2383] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–π—Ñ–æ—Ç–µ—á-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[2580] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∏–∫–∏–π–∫–µ–∫—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[264761] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª–∏–æ–º–æ—Ä–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[210320] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–ª–∏–∞—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[317020] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[259161] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–ª–µ–º–µ–Ω—Ç–∞–ª–ª-–ì–∞–ª–∞–∫—Ä–æ–Ω–¥",
					["npcID"] = 0,
				},
				[118922] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[6673] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∏–∫–∏–π–∫–µ–∫—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[312107] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–æ–ª–Ω–∞–∫—Ä–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[285978] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—é—é—É—Ä–∏",
					["npcID"] = 0,
				},
				[40120] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–∞–Ω–∫—É–Ω–∏–∞–Ω",
					["npcID"] = 0,
				},
				[108366] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—Ä–∑—É–º–∑–æ—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[20066] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Thabo-BurningLegion",
					["npcID"] = 0,
				},
				[62574] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—é—é—É—Ä–∏",
					["npcID"] = 0,
				},
				[304056] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∞–∑–º–æ–Ω–∫–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[202636] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏–∑–æ–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[1490] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[308188] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–æ—á–∏–∫–ø–æ—Ç–∏–∫-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[281240] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë—É—Ä–∑—É–º–∑–æ—Ç-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[768] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ë–∏–∑–æ–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[294935] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–≥—Ä–æ–≥–∞—Ä—Ä–æ—à",
					["npcID"] = 0,
				},
				[8690] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "–î–µ–∑—Ö–∞–ª–µ–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[278736] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[108211] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[3408] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ò–∑—É—Ä–∞—Ç",
					["npcID"] = 0,
				},
				[295842] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ô–æ–ª–Ω–∞–∫—Ä–∏–Ω-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[317420] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–æ–∫–≥–∞–ª–ª",
					["npcID"] = 0,
				},
				[264689] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–ì—Ä–∏–∑–µ—Ä",
					["npcID"] = 0,
				},
				[72968] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–¥–µ—Ä–∏—è-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[268776] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê–º–∞–Ω–∏–π—Å–∫–∏–π –±–æ–µ–≤–æ–π –º–µ–¥–≤–µ–¥—å",
					["npcID"] = 130257,
				},
				[43308] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä–æ–∫–æ—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[298836] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[167898] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä–æ–∫–æ—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[295378] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ê—Ç–µ—Ä–∞—à–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[294966] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–†–æ–∫–≥–∞–ª–ª",
					["npcID"] = 0,
				},
				[298837] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–¢–∞–π–ª–∞–≥–∞–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[326419] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î–∏–∫–∏–π–∫–µ–∫—Å-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
				[297039] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[270661] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[148563] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–í–µ—á–Ω–æ–º–∏–ª–∞—è",
					["npcID"] = 0,
				},
				[1459] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ö—Ö–∞–ª–ª–∏—à–∞-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[270987] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–°–ª—É–∂–∏—Ç–µ–ª—å –ù–∞–ª–æ—Ä–∞–∫–∫–∞",
					["npcID"] = 120949,
				},
				[203277] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–î—Ä–æ–∫–æ—Ç–∞–Ω-–ß–µ—Ä–Ω—ã–π–®—Ä–∞–º",
					["npcID"] = 0,
				},
				[186401] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–≠—Ä–æ–≥–æ–Ω-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[131347] = {
					["event"] = "SPELL_CAST_SUCCESS",
					["source"] = "Ox√≤√≥xo-TwistingNether",
					["npcID"] = 0,
				},
				[57724] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "DEBUFF",
					["source"] = "–≠–∫—Å–º–∏—Ç-–Ø—Å–µ–Ω–µ–≤—ã–π–ª–µ—Å",
					["npcID"] = 0,
				},
				[260072] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ñ—Ä–∏—Ü–∞ –ü–∞'–∫—É",
					["npcID"] = 131834,
				},
				[297412] = {
					["event"] = "SPELL_AURA_APPLIED",
					["type"] = "BUFF",
					["source"] = "–ú–µ–ª–∏–∞—Å–∞-–°–≤–µ–∂–µ–≤–∞—Ç–µ–ª—å–î—É—à",
					["npcID"] = 0,
				},
			},
			["use_ui_parent"] = true,
			["ui_parent_scale_tune"] = 1,
			["script_auto_imported"] = {
				["Cast - Small Alert"] = 4,
				["Aura - Invalidate Unit"] = 1,
				["Aura - Buff Alert"] = 4,
				["Unit - Important"] = 5,
				["Explosion Affix M+"] = 3,
				["Cast - Very Important"] = 2,
				["Aura Border Color"] = 1,
				["Color Change"] = 1,
				["Unit Power"] = 1,
				["Cast - Frontal Cone"] = 2,
				["Fixate"] = 3,
				["Aura - Blink Time Left"] = 1,
				["Aura - Debuff Alert"] = 3,
				["Cast - Big Alert"] = 5,
				["Fixate On You"] = 2,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1537884697,
					["url"] = "",
					["Icon"] = 135996,
					["Enabled"] = true,
					["Revision"] = 156,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"135029", -- [1]
						"134388", -- [2]
						"134612", -- [3]
						"133361", -- [4]
						"136330", -- [5]
						"130896", -- [6]
						"129758", -- [7]
						"Healing Tide Totem", -- [8]
						"131009", -- [9]
					},
					["Name"] = "Unit - Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1539013601,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 399,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the buff name in the trigger box.",
					["SpellIds"] = {
						275826, -- [1]
						272888, -- [2]
						272659, -- [3]
						267901, -- [4]
						267830, -- [5]
						265393, -- [6]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561923707,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 391,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						257785, -- [1]
						267237, -- [2]
						266951, -- [3]
						267273, -- [4]
						267433, -- [5]
						263066, -- [6]
						255577, -- [7]
						255371, -- [8]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3\n    envTable.GlowAlpha = .45\n    envTable.ShowArrow = true\n    envTable.ArrowAlpha = .45    \n    envTable.HealthBarColor = \"orange\"\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
					["Time"] = 1540663131,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 324,
					["semver"] = "",
					["Author"] = "Bombad£o-Azralon",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["SpellIds"] = {
						240446, -- [1]
						273577, -- [2]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1538429739,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 232,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1561924439,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 574,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						258153, -- [1]
						258313, -- [2]
						257069, -- [3]
						274569, -- [4]
						278020, -- [5]
						261635, -- [6]
						272700, -- [7]
						280404, -- [8]
						268030, -- [9]
						265368, -- [10]
						263891, -- [11]
						264520, -- [12]
						265407, -- [13]
						278567, -- [14]
						278602, -- [15]
						258128, -- [16]
						257791, -- [17]
						258938, -- [18]
						265089, -- [19]
						272183, -- [20]
						256060, -- [21]
						257397, -- [22]
						257899, -- [23]
						269972, -- [24]
						270901, -- [25]
						270492, -- [26]
						268129, -- [27]
						268709, -- [28]
						263215, -- [29]
						268797, -- [30]
						262540, -- [31]
						262554, -- [32]
						253517, -- [33]
						255041, -- [34]
						252781, -- [35]
						250368, -- [36]
						258777, -- [37]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1539201768,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 376,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						275192, -- [1]
						265912, -- [2]
						274438, -- [3]
						268317, -- [4]
						268375, -- [5]
						276767, -- [6]
						264105, -- [7]
						265876, -- [8]
						270464, -- [9]
						266106, -- [10]
						272180, -- [11]
						278961, -- [12]
						278755, -- [13]
						265468, -- [14]
						256405, -- [15]
						256897, -- [16]
						264101, -- [17]
						280604, -- [18]
						268702, -- [19]
						281621, -- [20]
						262515, -- [21]
						255824, -- [22]
						253583, -- [23]
						250096, -- [24]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1538256464,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1543253273,
					["url"] = "",
					["Icon"] = 135024,
					["Enabled"] = true,
					["Revision"] = 59,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"141851", -- [1]
					},
					["Name"] = "Color Change [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1547991413,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 157,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1543680853,
					["url"] = "",
					["Icon"] = 133006,
					["Enabled"] = false,
					["Revision"] = 45,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Aura - Border Color [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1539015649,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 131,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show the energy amount above the nameplate",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"Guardian of Yogg-Saron", -- [1]
					},
					["Name"] = "UnitPower [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
					["Time"] = 1539201849,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 171,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						255952, -- [1]
						257426, -- [2]
						274400, -- [3]
						272609, -- [4]
						269843, -- [5]
						269029, -- [6]
						272827, -- [7]
						269266, -- [8]
						263912, -- [9]
						264923, -- [10]
						258864, -- [11]
						256955, -- [12]
						265540, -- [13]
						260793, -- [14]
						270003, -- [15]
						270507, -- [16]
						257337, -- [17]
						268415, -- [18]
						275907, -- [19]
						268865, -- [20]
						260669, -- [21]
						260280, -- [22]
						253239, -- [23]
						265541, -- [24]
						250258, -- [25]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
					["Time"] = 1539187387,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 190,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
						272584, -- [1]
						244653, -- [2]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
					},
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1543250950,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 194,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["NpcNames"] = {
						"smuggled crawg", -- [1]
						"sergeant bainbridge", -- [2]
						"blacktooth scrapper", -- [3]
						"irontide grenadier", -- [4]
						"feral bloodswarmer", -- [5]
						"earthrager", -- [6]
						"crawler mine", -- [7]
						"rezan", -- [8]
						"136461", -- [9]
					},
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [15]
			},
			["aura2_x_offset"] = 0,
			["aura2_y_offset"] = 5,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Color Automation [Plater]",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Time"] = 1547392935,
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Hide Neutral Units [Plater]",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["Time"] = 1541606242,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 250,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\\\GROUPFRAME\\\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture height",
							["Min"] = 1,
							["Key"] = "textureHeight",
							["Value"] = 12,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["Name"] = "Cast Bar Icon Settings [P]",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1596670932,
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", -1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -modTable.config.iconPadding, 0)\n                end\n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                else\n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", 1, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, 0)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            noInterruptTexture:SetTexture (modTable.config.iconTexturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            noInterruptTexture:SetVertexColor (1, 1, 1, 1)            \n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, modTable.config.textureHeight)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["semver"] = "",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Time"] = 1554138845,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Name"] = "Execute Range [Plater]",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["Time"] = 1547406548,
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Reorder Nameplate [Plater]",
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1596791840,
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 574574,
					["semver"] = "",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Time"] = 1547993111,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Name"] = "Extra Border [Plater]",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["Time"] = 1547409079,
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 189,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							[103] = true,
							["Enabled"] = true,
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135426,
					["Time"] = 1548354524,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Players Targeting a Target [Plater]",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["Time"] = 1548278227,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Current Target Color [Plater]",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["Time"] = 1552354619,
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 295,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Aura Reorder [Plater]",
					["Author"] = "Ditador-Azralon",
					["Time"] = 1596741775,
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["semver"] = "",
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Attacking Specific Unit"] = 1,
				["Cast Bar Icon Config"] = 1,
				["Execute Range"] = 1,
				["Extra Border"] = 2,
				["Combo Points"] = 3,
				["Target Color"] = 3,
				["Aura Reorder"] = 2,
				["Hide Neutral Units"] = 1,
			},
			["patch_version"] = 12,
			["aura_y_offset"] = 5,
		},
	},
}
